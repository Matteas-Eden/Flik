ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	displaystring
  95 0001 000000   		.align	2
  96              		.type	displaystring, %object
  97              		.size	displaystring, 64
  98              	displaystring:
  99 0004 43533330 		.ascii	"CS301 2020\012\000"
  99      31203230 
  99      32300A00 
 100 0010 00000000 		.space	52
 100      00000000 
 100      00000000 
 100      00000000 
 100      00000000 
 101              		.comm	line,64,4
 102              		.comm	entry,64,4
 103              		.comm	usbBuffer,64,4
 104              		.comm	system_state,32,4
 105              		.global	adc_flag
 106              		.bss
 107 0012 0000     		.align	2
 108              		.type	adc_flag, %object
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 3


 109              		.size	adc_flag, 4
 110              	adc_flag:
 111 0014 00000000 		.space	4
 112              		.global	sensor_readings
 113              		.align	2
 114              		.type	sensor_readings, %object
 115              		.size	sensor_readings, 6
 116              	sensor_readings:
 117 0018 00000000 		.space	6
 117      0000
 118              		.global	adc_readings
 119 001e 0000     		.align	2
 120              		.type	adc_readings, %object
 121              		.size	adc_readings, 24
 122              	adc_readings:
 123 0020 00000000 		.space	24
 123      00000000 
 123      00000000 
 123      00000000 
 123      00000000 
 124              		.global	sample_count
 125              		.align	2
 126              		.type	sample_count, %object
 127              		.size	sample_count, 4
 128              	sample_count:
 129 0038 00000000 		.space	4
 130              		.global	timer_flag
 131              		.align	2
 132              		.type	timer_flag, %object
 133              		.size	timer_flag, 4
 134              	timer_flag:
 135 003c 00000000 		.space	4
 136              		.global	countM1
 137              		.align	2
 138              		.type	countM1, %object
 139              		.size	countM1, 4
 140              	countM1:
 141 0040 00000000 		.space	4
 142              		.global	countM2
 143              		.align	2
 144              		.type	countM2, %object
 145              		.size	countM2, 4
 146              	countM2:
 147 0044 00000000 		.space	4
 148              		.global	prevCountM1
 149              		.align	2
 150              		.type	prevCountM1, %object
 151              		.size	prevCountM1, 4
 152              	prevCountM1:
 153 0048 00000000 		.space	4
 154              		.global	prevCountM2
 155              		.align	2
 156              		.type	prevCountM2, %object
 157              		.size	prevCountM2, 4
 158              	prevCountM2:
 159 004c 00000000 		.space	4
 160              		.section	.text.ENCODER_ISR,"ax",%progbits
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 4


 161              		.align	2
 162              		.global	ENCODER_ISR
 163              		.thumb
 164              		.thumb_func
 165              		.type	ENCODER_ISR, %function
 166              	ENCODER_ISR:
 167              	.LFB63:
 168              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  * Copyright Univ of Auckland, 2016
   3:.\main.c      ****  * All Rights Reserved
   4:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   5:.\main.c      ****  *
   6:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   7:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
   8:.\main.c      ****  *
   9:.\main.c      ****  * ================== INCLUDE ======================
  10:.\main.c      **** */
  11:.\main.c      **** #include <stdio.h>
  12:.\main.c      **** #include <string.h>
  13:.\main.c      **** #include <stdlib.h>
  14:.\main.c      **** #include <project.h>
  15:.\main.c      **** 
  16:.\main.c      **** #include "defines.h"
  17:.\main.c      **** #include "vars.h"
  18:.\main.c      **** //* =================== MACROS =====================
  19:.\main.c      **** // SENSOR MAPPINGS
  20:.\main.c      **** #define TOP_LEFT_SENSOR 0
  21:.\main.c      **** #define TOP_MID_SENSOR 1
  22:.\main.c      **** #define TOP_RIGHT_SENSOR 2
  23:.\main.c      **** #define BOTTOM_LEFT_SENSOR 3
  24:.\main.c      **** #define BOTTOM_MID_SENSOR 4
  25:.\main.c      **** #define BOTTOM_RIGHT_SENSOR 5
  26:.\main.c      **** 
  27:.\main.c      **** // LIGHT SENSORS
  28:.\main.c      **** #define NUM_SENSORS 6
  29:.\main.c      **** #define LIGHT_LEVEL 300
  30:.\main.c      **** 
  31:.\main.c      **** // ADC
  32:.\main.c      **** #define ADC_READINGS_SIZE 90
  33:.\main.c      **** 
  34:.\main.c      **** // Speed calculations
  35:.\main.c      **** #define LINEAR_DISTANCE_PER_REV 20.42035225
  36:.\main.c      **** #define TICKS_PER_REV 228
  37:.\main.c      **** #define TIMER_PERIOD 0.03
  38:.\main.c      **** 
  39:.\main.c      **** // Speed control
  40:.\main.c      **** #define DESIRED_COUNT 8
  41:.\main.c      **** #define TURN_SPEED 450
  42:.\main.c      **** 
  43:.\main.c      **** // Distances
  44:.\main.c      **** #define GRID_SIZE 12
  45:.\main.c      **** #define HALF_ROBOT_LENGTH 10
  46:.\main.c      **** #define SMALL_FORWARD_DISTANCE 8
  47:.\main.c      **** 
  48:.\main.c      **** // Line following macros - require calibration
  49:.\main.c      **** #define ADJUST_SPEED_LARGE 3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 5


  50:.\main.c      **** #define ADJUST_SPEED_SMALL 1
  51:.\main.c      **** #define MAX_SPEED 9
  52:.\main.c      **** #define MIN_SPEED 4
  53:.\main.c      **** #define SLOW_DOWN_SPEED 1
  54:.\main.c      **** 
  55:.\main.c      **** // Debug flag - uncomment when debugging
  56:.\main.c      **** //#define PUTTY
  57:.\main.c      **** //* ================= FUNCTIONS =======================
  58:.\main.c      **** void usbPutString(char *s);
  59:.\main.c      **** 
  60:.\main.c      **** // sensors
  61:.\main.c      **** int32 getValForChannel(int16 n);
  62:.\main.c      **** void updateSensorValues();
  63:.\main.c      **** 
  64:.\main.c      **** // general
  65:.\main.c      **** void changeRightWheelSpeed(int amount);
  66:.\main.c      **** void changeLeftWheelSpeed(int amount);
  67:.\main.c      **** void invertWheels();
  68:.\main.c      **** void setWheelDirection(int isLeftForward, int isRightForward);
  69:.\main.c      **** void correctSpeed(int prevCount, int count, int desired_count, int isLeftWheel);
  70:.\main.c      **** float getDistance(int prevCountM1, int prevCountM2);
  71:.\main.c      **** 
  72:.\main.c      **** // straight
  73:.\main.c      **** void turnRight();
  74:.\main.c      **** void turnLeft();
  75:.\main.c      **** void goStraight(int desired_distance, int *right_speed_count, int *left_wheel_count);
  76:.\main.c      **** 
  77:.\main.c      **** // turning
  78:.\main.c      **** void turnForDegrees(int degrees);
  79:.\main.c      **** void sharpTurnRight();
  80:.\main.c      **** void sharpTurnLeft();
  81:.\main.c      **** void uTurn(int *left_wheel_count, int *right_wheel_count);
  82:.\main.c      **** //* ================= GLOBAL VARIABLES =======================
  83:.\main.c      **** // ADC
  84:.\main.c      **** volatile int adc_flag = FALSE;
  85:.\main.c      **** int8 sensor_readings[NUM_SENSORS] = { 0 };
  86:.\main.c      **** int adc_readings[NUM_SENSORS] = { 0 };
  87:.\main.c      **** int sample_count = 0;
  88:.\main.c      **** // Encoder
  89:.\main.c      **** volatile int timer_flag = FALSE;
  90:.\main.c      **** volatile int countM1 = 0;
  91:.\main.c      **** volatile int countM2 = 0;
  92:.\main.c      **** int prevCountM1 = 0;
  93:.\main.c      **** int prevCountM2 = 0;
  94:.\main.c      **** //* ================== ISR ======================
  95:.\main.c      **** CY_ISR(ENCODER_ISR) {
 169              		.loc 1 95 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 1, uses_anonymous_args = 0
 173 0000 80B5     		push	{r7, lr}
 174              		.cfi_def_cfa_offset 8
 175              		.cfi_offset 7, -8
 176              		.cfi_offset 14, -4
 177 0002 00AF     		add	r7, sp, #0
 178              		.cfi_def_cfa_register 7
  96:.\main.c      ****     countM1 = QuadDec_M1_GetCounter();
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 6


 179              		.loc 1 96 0
 180 0004 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 181 0008 0346     		mov	r3, r0
 182 000a 1A46     		mov	r2, r3
 183 000c 054B     		ldr	r3, .L2
 184 000e 1A60     		str	r2, [r3]
  97:.\main.c      ****     countM2 = QuadDec_M2_GetCounter();
 185              		.loc 1 97 0
 186 0010 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 187 0014 0346     		mov	r3, r0
 188 0016 1A46     		mov	r2, r3
 189 0018 034B     		ldr	r3, .L2+4
 190 001a 1A60     		str	r2, [r3]
  98:.\main.c      ****     timer_flag = TRUE;
 191              		.loc 1 98 0
 192 001c 034B     		ldr	r3, .L2+8
 193 001e 0122     		movs	r2, #1
 194 0020 1A60     		str	r2, [r3]
  99:.\main.c      **** }
 195              		.loc 1 99 0
 196 0022 80BD     		pop	{r7, pc}
 197              	.L3:
 198              		.align	2
 199              	.L2:
 200 0024 00000000 		.word	countM1
 201 0028 00000000 		.word	countM2
 202 002c 00000000 		.word	timer_flag
 203              		.cfi_endproc
 204              	.LFE63:
 205              		.size	ENCODER_ISR, .-ENCODER_ISR
 206              		.section	.text.ADC_ISR,"ax",%progbits
 207              		.align	2
 208              		.global	ADC_ISR
 209              		.thumb
 210              		.thumb_func
 211              		.type	ADC_ISR, %function
 212              	ADC_ISR:
 213              	.LFB64:
 100:.\main.c      **** 
 101:.\main.c      **** /* ### Retrieve and Store Measurements ### */
 102:.\main.c      **** CY_ISR(ADC_ISR) {
 214              		.loc 1 102 0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 1, uses_anonymous_args = 0
 218              		@ link register save eliminated.
 219 0000 80B4     		push	{r7}
 220              		.cfi_def_cfa_offset 4
 221              		.cfi_offset 7, -4
 222 0002 00AF     		add	r7, sp, #0
 223              		.cfi_def_cfa_register 7
 103:.\main.c      ****     adc_flag = TRUE;
 224              		.loc 1 103 0
 225 0004 034B     		ldr	r3, .L5
 226 0006 0122     		movs	r2, #1
 227 0008 1A60     		str	r2, [r3]
 104:.\main.c      **** }
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 7


 228              		.loc 1 104 0
 229 000a BD46     		mov	sp, r7
 230              		.cfi_def_cfa_register 13
 231              		@ sp needed
 232 000c 5DF8047B 		ldr	r7, [sp], #4
 233              		.cfi_restore 7
 234              		.cfi_def_cfa_offset 0
 235 0010 7047     		bx	lr
 236              	.L6:
 237 0012 00BF     		.align	2
 238              	.L5:
 239 0014 00000000 		.word	adc_flag
 240              		.cfi_endproc
 241              	.LFE64:
 242              		.size	ADC_ISR, .-ADC_ISR
 243              		.section	.text.main,"ax",%progbits
 244              		.align	2
 245              		.global	main
 246              		.thumb
 247              		.thumb_func
 248              		.type	main, %function
 249              	main:
 250              	.LFB65:
 105:.\main.c      **** 
 106:.\main.c      **** /** ## Notes
 107:.\main.c      ****     
 108:.\main.c      ****     Ratio of linear distance to quad decoder ticks
 109:.\main.c      ****     One revolution gives a linear distance (in cm)
 110:.\main.c      ****     Each revolution is 57 ticks (228 for 4x mode)
 111:.\main.c      ****     Centimetres per tick = linear distance / countM(1|2)
 112:.\main.c      ****     
 113:.\main.c      ****     Decoder use a 4x count, so each revolution gives 4 counts
 114:.\main.c      ****     Sampling rate is determined by our 100ms timer (might be a little slow)
 115:.\main.c      ****     
 116:.\main.c      ****     ## Algorithm Control Flow
 117:.\main.c      ****     - Get ADC value for each channel
 118:.\main.c      ****     - Get decoder val for M1 & M2
 119:.\main.c      ****     - Use these values to drive the movement of the robot
 120:.\main.c      ****     
 121:.\main.c      **** */
 122:.\main.c      **** 
 123:.\main.c      **** int main()
 124:.\main.c      **** {
 251              		.loc 1 124 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 16
 254              		@ frame_needed = 1, uses_anonymous_args = 0
 255 0000 80B5     		push	{r7, lr}
 256              		.cfi_def_cfa_offset 8
 257              		.cfi_offset 7, -8
 258              		.cfi_offset 14, -4
 259 0002 84B0     		sub	sp, sp, #16
 260              		.cfi_def_cfa_offset 24
 261 0004 00AF     		add	r7, sp, #0
 262              		.cfi_def_cfa_register 7
 125:.\main.c      ****     // delay
 126:.\main.c      ****     CyDelay(2000);
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 8


 263              		.loc 1 126 0
 264 0006 4FF4FA60 		mov	r0, #2000
 265 000a FFF7FEFF 		bl	CyDelay
 127:.\main.c      ****     
 128:.\main.c      ****     // --------------------------------
 129:.\main.c      ****     // ----- INITIALIZATIONS ----------
 130:.\main.c      ****     // ========================================
 131:.\main.c      ****     CYGlobalIntEnable;
 266              		.loc 1 131 0
 267              	@ 131 ".\main.c" 1
 268 000e 62B6     		CPSIE   i
 269              	@ 0 "" 2
 132:.\main.c      ****     
 133:.\main.c      ****     // PWMs
 134:.\main.c      ****     PWM_1_Start();
 270              		.loc 1 134 0
 271              		.thumb
 272 0010 FFF7FEFF 		bl	PWM_1_Start
 135:.\main.c      ****     PWM_2_Start();
 273              		.loc 1 135 0
 274 0014 FFF7FEFF 		bl	PWM_2_Start
 136:.\main.c      ****     
 137:.\main.c      ****     // Timer for encoder
 138:.\main.c      ****     Timer_TS_Start();
 275              		.loc 1 138 0
 276 0018 FFF7FEFF 		bl	Timer_TS_Start
 139:.\main.c      ****     isr_TS_Start(); // Timer interrupts need to be started independently
 277              		.loc 1 139 0
 278 001c FFF7FEFF 		bl	isr_TS_Start
 140:.\main.c      ****     isr_TS_StartEx(ENCODER_ISR);
 279              		.loc 1 140 0
 280 0020 1448     		ldr	r0, .L8
 281 0022 FFF7FEFF 		bl	isr_TS_StartEx
 141:.\main.c      ****     
 142:.\main.c      ****     // Quad Decoders
 143:.\main.c      ****     QuadDec_M1_Start();
 282              		.loc 1 143 0
 283 0026 FFF7FEFF 		bl	QuadDec_M1_Start
 144:.\main.c      ****     QuadDec_M2_Start();
 284              		.loc 1 144 0
 285 002a FFF7FEFF 		bl	QuadDec_M2_Start
 145:.\main.c      ****     
 146:.\main.c      ****     // ADC
 147:.\main.c      ****     ADC_Start(); // Start ADC
 286              		.loc 1 147 0
 287 002e FFF7FEFF 		bl	ADC_Start
 148:.\main.c      ****     ADC_IRQ_Enable(); // Enable ADC interrupts
 288              		.loc 1 148 0
 289 0032 FFF7FEFF 		bl	ADC_IRQ_Enable
 149:.\main.c      ****     ADC_StartConvert(); // Start conversions
 290              		.loc 1 149 0
 291 0036 FFF7FEFF 		bl	ADC_StartConvert
 150:.\main.c      ****     isr_eoc_StartEx(ADC_ISR); // link interrupt for ADC
 292              		.loc 1 150 0
 293 003a 0F48     		ldr	r0, .L8+4
 294 003c FFF7FEFF 		bl	isr_eoc_StartEx
 151:.\main.c      **** 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 9


 152:.\main.c      ****     // ------------ USB SETUP ------------    
 153:.\main.c      ****     #ifdef USE_USB    
 154:.\main.c      ****         USBUART_Start(0, USBUART_5V_OPERATION);
 295              		.loc 1 154 0
 296 0040 0020     		movs	r0, #0
 297 0042 0121     		movs	r1, #1
 298 0044 FFF7FEFF 		bl	USBUART_Start
 155:.\main.c      ****     #endif            
 156:.\main.c      ****     
 157:.\main.c      ****     // To make sure wheels rotate in the same direction i.e. forward
 158:.\main.c      ****     INV2_Write(1);
 299              		.loc 1 158 0
 300 0048 0120     		movs	r0, #1
 301 004a FFF7FEFF 		bl	INV2_Write
 159:.\main.c      ****     
 160:.\main.c      ****     int right_wheel_count = DESIRED_COUNT;
 302              		.loc 1 160 0
 303 004e 0823     		movs	r3, #8
 304 0050 FB60     		str	r3, [r7, #12]
 161:.\main.c      ****     int left_wheel_count = DESIRED_COUNT;
 305              		.loc 1 161 0
 306 0052 0823     		movs	r3, #8
 307 0054 BB60     		str	r3, [r7, #8]
 162:.\main.c      ****     int polling_count = 0;
 308              		.loc 1 162 0
 309 0056 0023     		movs	r3, #0
 310 0058 7B60     		str	r3, [r7, #4]
 163:.\main.c      ****     
 164:.\main.c      **** //    goStraight(2, &right_wheel_count, &left_wheel_count);
 165:.\main.c      **** //    uTurn(&right_wheel_count, &left_wheel_count);
 166:.\main.c      ****     
 167:.\main.c      **** //    char directions[8] = {'4', 'L', '4', 'R', '2', 'R'};
 168:.\main.c      **** //    //char directions[8] = {'4', 'R', '4'};
 169:.\main.c      **** //    int direction_index = 0;
 170:.\main.c      **** //    
 171:.\main.c      **** //    while (directions[direction_index] != 0) {
 172:.\main.c      **** //        if (directions[direction_index] == 'R') {
 173:.\main.c      **** //            usbPutString("Sharp turn right\r\n");
 174:.\main.c      **** //            sharpTurnRight(&right_wheel_count, &left_wheel_count);
 175:.\main.c      **** //        } else if (directions[direction_index] == 'L') {
 176:.\main.c      **** //            usbPutString("Sharp turn left\r\n");
 177:.\main.c      **** //            sharpTurnLeft(&right_wheel_count, &left_wheel_count);
 178:.\main.c      **** //        } else {
 179:.\main.c      **** //            usbPutString("Straight\r\n");
 180:.\main.c      **** //            int num_coords = directions[direction_index] - '0';
 181:.\main.c      **** //            goStraight(GRID_SIZE * num_coords - HALF_ROBOT_LENGTH, &right_wheel_count, &left_whee
 182:.\main.c      **** //        }
 183:.\main.c      ****         
 184:.\main.c      **** //        int num_coords;
 185:.\main.c      **** //            
 186:.\main.c      **** //        switch(directions[direction_index]) {
 187:.\main.c      **** //            case 'R':
 188:.\main.c      **** //                sharpTurnRight(&right_wheel_count, &left_wheel_count);
 189:.\main.c      **** //                usbPutString("Sharp turn right");
 190:.\main.c      **** //                break;
 191:.\main.c      **** //            case 'L':
 192:.\main.c      **** //                sharpTurnLeft(&right_wheel_count, &left_wheel_count);
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 10


 193:.\main.c      **** //                usbPutString("Sharp turn left");
 194:.\main.c      **** //                break;
 195:.\main.c      **** //            default: 
 196:.\main.c      **** //                usbPutString("Straight");
 197:.\main.c      **** //                num_coords = directions[direction_index] - '0';
 198:.\main.c      **** //                goStraight(GRID_SIZE * num_coords - DESIRED_COUNT, &right_wheel_count, &left_whee
 199:.\main.c      **** //                break;
 200:.\main.c      **** //        }
 201:.\main.c      **** //        direction_index++;
 202:.\main.c      **** //    }
 203:.\main.c      ****     
 204:.\main.c      ****     LED_Write(1);
 311              		.loc 1 204 0
 312 005a 0120     		movs	r0, #1
 313 005c FFF7FEFF 		bl	LED_Write
 205:.\main.c      ****     
 206:.\main.c      ****     PWM_1_WriteCompare(0);
 314              		.loc 1 206 0
 315 0060 0020     		movs	r0, #0
 316 0062 FFF7FEFF 		bl	PWM_1_WriteCompare
 207:.\main.c      ****     PWM_2_WriteCompare(0);
 317              		.loc 1 207 0
 318 0066 0020     		movs	r0, #0
 319 0068 FFF7FEFF 		bl	PWM_2_WriteCompare
 208:.\main.c      **** }
 320              		.loc 1 208 0
 321 006c 1846     		mov	r0, r3
 322 006e 1037     		adds	r7, r7, #16
 323              		.cfi_def_cfa_offset 8
 324 0070 BD46     		mov	sp, r7
 325              		.cfi_def_cfa_register 13
 326              		@ sp needed
 327 0072 80BD     		pop	{r7, pc}
 328              	.L9:
 329              		.align	2
 330              	.L8:
 331 0074 00000000 		.word	ENCODER_ISR
 332 0078 00000000 		.word	ADC_ISR
 333              		.cfi_endproc
 334              	.LFE65:
 335              		.size	main, .-main
 336              		.section	.rodata
 337              		.align	2
 338              	.LC0:
 339 0000 202D2064 		.ascii	" - desired  \000"
 339      65736972 
 339      65642020 
 339      00
 340 000d 000000   		.align	2
 341              	.LC1:
 342 0010 0D0A202D 		.ascii	"\015\012 - distance \000"
 342      20646973 
 342      74616E63 
 342      652000
 343              		.global	__aeabi_f2iz
 344 001f 00       		.align	2
 345              	.LC2:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 11


 346 0020 0D0A00   		.ascii	"\015\012\000"
 347              		.global	__aeabi_fadd
 348 0023 00       		.align	2
 349              	.LC3:
 350 0024 202D2074 		.ascii	" - turn right\015\012\000"
 350      75726E20 
 350      72696768 
 350      740D0A00 
 351              		.align	2
 352              	.LC4:
 353 0034 202D2074 		.ascii	" - turn left\015\012\000"
 353      75726E20 
 353      6C656674 
 353      0D0A00
 354              		.global	__aeabi_i2f
 355              		.global	__aeabi_fcmpgt
 356              		.section	.text.goStraight,"ax",%progbits
 357              		.align	2
 358              		.global	goStraight
 359              		.thumb
 360              		.thumb_func
 361              		.type	goStraight, %function
 362              	goStraight:
 363              	.LFB66:
 209:.\main.c      **** 
 210:.\main.c      **** 
 211:.\main.c      **** void goStraight(int desired_distance, int *right_wheel_count, int *left_wheel_count) {
 364              		.loc 1 211 0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 56
 367              		@ frame_needed = 1, uses_anonymous_args = 0
 368 0000 80B5     		push	{r7, lr}
 369              		.cfi_def_cfa_offset 8
 370              		.cfi_offset 7, -8
 371              		.cfi_offset 14, -4
 372 0002 8EB0     		sub	sp, sp, #56
 373              		.cfi_def_cfa_offset 64
 374 0004 00AF     		add	r7, sp, #0
 375              		.cfi_def_cfa_register 7
 376 0006 F860     		str	r0, [r7, #12]
 377 0008 B960     		str	r1, [r7, #8]
 378 000a 7A60     		str	r2, [r7, #4]
 212:.\main.c      ****     usbPutString(" - desired  ");
 379              		.loc 1 212 0
 380 000c 7048     		ldr	r0, .L23
 381 000e FFF7FEFF 		bl	usbPutString
 213:.\main.c      ****     char buf[32];
 214:.\main.c      ****     itoa(desired_distance, buf, 10);
 382              		.loc 1 214 0
 383 0012 07F11403 		add	r3, r7, #20
 384 0016 F868     		ldr	r0, [r7, #12]
 385 0018 1946     		mov	r1, r3
 386 001a 0A22     		movs	r2, #10
 387 001c FFF7FEFF 		bl	itoa
 215:.\main.c      ****     usbPutString(buf);
 388              		.loc 1 215 0
 389 0020 07F11403 		add	r3, r7, #20
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 12


 390 0024 1846     		mov	r0, r3
 391 0026 FFF7FEFF 		bl	usbPutString
 216:.\main.c      ****     
 217:.\main.c      ****     *right_wheel_count = DESIRED_COUNT;
 392              		.loc 1 217 0
 393 002a BB68     		ldr	r3, [r7, #8]
 394 002c 0822     		movs	r2, #8
 395 002e 1A60     		str	r2, [r3]
 218:.\main.c      ****     *left_wheel_count = DESIRED_COUNT;
 396              		.loc 1 218 0
 397 0030 7B68     		ldr	r3, [r7, #4]
 398 0032 0822     		movs	r2, #8
 399 0034 1A60     		str	r2, [r3]
 219:.\main.c      ****     
 220:.\main.c      ****     float distance = 0;
 400              		.loc 1 220 0
 401 0036 4FF00003 		mov	r3, #0
 402 003a 7B63     		str	r3, [r7, #52]	@ float
 221:.\main.c      ****     
 222:.\main.c      ****     usbPutString("\r\n - distance ");
 403              		.loc 1 222 0
 404 003c 6548     		ldr	r0, .L23+4
 405 003e FFF7FEFF 		bl	usbPutString
 223:.\main.c      ****     itoa(distance, buf, 10);
 406              		.loc 1 223 0
 407 0042 786B     		ldr	r0, [r7, #52]	@ float
 408 0044 FFF7FEFF 		bl	__aeabi_f2iz
 409 0048 0246     		mov	r2, r0
 410 004a 07F11403 		add	r3, r7, #20
 411 004e 1046     		mov	r0, r2
 412 0050 1946     		mov	r1, r3
 413 0052 0A22     		movs	r2, #10
 414 0054 FFF7FEFF 		bl	itoa
 224:.\main.c      ****     usbPutString(buf);
 415              		.loc 1 224 0
 416 0058 07F11403 		add	r3, r7, #20
 417 005c 1846     		mov	r0, r3
 418 005e FFF7FEFF 		bl	usbPutString
 225:.\main.c      ****     usbPutString("\r\n");
 419              		.loc 1 225 0
 420 0062 5D48     		ldr	r0, .L23+8
 421 0064 FFF7FEFF 		bl	usbPutString
 226:.\main.c      ****     
 227:.\main.c      ****     while (distance < desired_distance) {
 422              		.loc 1 227 0
 423 0068 A3E0     		b	.L11
 424              	.L22:
 228:.\main.c      ****         if (adc_flag) {
 425              		.loc 1 228 0
 426 006a 5C4B     		ldr	r3, .L23+12
 427 006c 1B68     		ldr	r3, [r3]
 428 006e 002B     		cmp	r3, #0
 429 0070 04D0     		beq	.L12
 229:.\main.c      ****             updateSensorValues();
 430              		.loc 1 229 0
 431 0072 FFF7FEFF 		bl	updateSensorValues
 230:.\main.c      ****             adc_flag = FALSE;
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 13


 432              		.loc 1 230 0
 433 0076 594B     		ldr	r3, .L23+12
 434 0078 0022     		movs	r2, #0
 435 007a 1A60     		str	r2, [r3]
 436              	.L12:
 231:.\main.c      ****         }
 232:.\main.c      ****         
 233:.\main.c      ****          // New count values from encoder are ready
 234:.\main.c      ****         if (timer_flag){
 437              		.loc 1 234 0
 438 007c 584B     		ldr	r3, .L23+16
 439 007e 1B68     		ldr	r3, [r3]
 440 0080 002B     		cmp	r3, #0
 441 0082 35D0     		beq	.L13
 235:.\main.c      ****             isr_TS_Disable();
 442              		.loc 1 235 0
 443 0084 FFF7FEFF 		bl	isr_TS_Disable
 236:.\main.c      ****             
 237:.\main.c      ****             // update distance
 238:.\main.c      ****             distance += getDistance(prevCountM1, prevCountM2);
 444              		.loc 1 238 0
 445 0088 564B     		ldr	r3, .L23+20
 446 008a 1A68     		ldr	r2, [r3]
 447 008c 564B     		ldr	r3, .L23+24
 448 008e 1B68     		ldr	r3, [r3]
 449 0090 1046     		mov	r0, r2
 450 0092 1946     		mov	r1, r3
 451 0094 FFF7FEFF 		bl	getDistance
 452 0098 0346     		mov	r3, r0
 453 009a 786B     		ldr	r0, [r7, #52]	@ float
 454 009c 1946     		mov	r1, r3
 455 009e FFF7FEFF 		bl	__aeabi_fadd
 456 00a2 0346     		mov	r3, r0
 457 00a4 7B63     		str	r3, [r7, #52]	@ float
 239:.\main.c      ****             
 240:.\main.c      ****             // Correct speed
 241:.\main.c      ****             correctSpeed(prevCountM1,countM1,*left_wheel_count,TRUE);
 458              		.loc 1 241 0
 459 00a6 4F4B     		ldr	r3, .L23+20
 460 00a8 1968     		ldr	r1, [r3]
 461 00aa 504B     		ldr	r3, .L23+28
 462 00ac 1A68     		ldr	r2, [r3]
 463 00ae 7B68     		ldr	r3, [r7, #4]
 464 00b0 1B68     		ldr	r3, [r3]
 465 00b2 0846     		mov	r0, r1
 466 00b4 1146     		mov	r1, r2
 467 00b6 1A46     		mov	r2, r3
 468 00b8 0123     		movs	r3, #1
 469 00ba FFF7FEFF 		bl	correctSpeed
 242:.\main.c      ****             correctSpeed(prevCountM2,countM2,*right_wheel_count,FALSE);
 470              		.loc 1 242 0
 471 00be 4A4B     		ldr	r3, .L23+24
 472 00c0 1968     		ldr	r1, [r3]
 473 00c2 4B4B     		ldr	r3, .L23+32
 474 00c4 1A68     		ldr	r2, [r3]
 475 00c6 BB68     		ldr	r3, [r7, #8]
 476 00c8 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 14


 477 00ca 0846     		mov	r0, r1
 478 00cc 1146     		mov	r1, r2
 479 00ce 1A46     		mov	r2, r3
 480 00d0 0023     		movs	r3, #0
 481 00d2 FFF7FEFF 		bl	correctSpeed
 243:.\main.c      ****             
 244:.\main.c      ****             // Update previous values
 245:.\main.c      ****             prevCountM1 = countM1;
 482              		.loc 1 245 0
 483 00d6 454B     		ldr	r3, .L23+28
 484 00d8 1B68     		ldr	r3, [r3]
 485 00da 424A     		ldr	r2, .L23+20
 486 00dc 1360     		str	r3, [r2]
 246:.\main.c      ****             prevCountM2 = countM2;
 487              		.loc 1 246 0
 488 00de 444B     		ldr	r3, .L23+32
 489 00e0 1B68     		ldr	r3, [r3]
 490 00e2 414A     		ldr	r2, .L23+24
 491 00e4 1360     		str	r3, [r2]
 247:.\main.c      ****             
 248:.\main.c      ****             // Reset flag
 249:.\main.c      ****             timer_flag = FALSE;
 492              		.loc 1 249 0
 493 00e6 3E4B     		ldr	r3, .L23+16
 494 00e8 0022     		movs	r2, #0
 495 00ea 1A60     		str	r2, [r3]
 250:.\main.c      ****             
 251:.\main.c      ****             isr_TS_Enable();
 496              		.loc 1 251 0
 497 00ec FFF7FEFF 		bl	isr_TS_Enable
 498              	.L13:
 252:.\main.c      ****         }
 253:.\main.c      ****         
 254:.\main.c      ****         // follow a line algorithm
 255:.\main.c      ****         if (sensor_readings[TOP_MID_SENSOR]) { // on line
 499              		.loc 1 255 0
 500 00f0 404B     		ldr	r3, .L23+36
 501 00f2 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 502 00f4 002B     		cmp	r3, #0
 503 00f6 25D0     		beq	.L14
 256:.\main.c      ****             if (!sensor_readings[TOP_LEFT_SENSOR] && sensor_readings[TOP_RIGHT_SENSOR]) {// Deviate
 504              		.loc 1 256 0
 505 00f8 3E4B     		ldr	r3, .L23+36
 506 00fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 507 00fc 002B     		cmp	r3, #0
 508 00fe 0ED1     		bne	.L15
 509              		.loc 1 256 0 is_stmt 0 discriminator 1
 510 0100 3C4B     		ldr	r3, .L23+36
 511 0102 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 512 0104 002B     		cmp	r3, #0
 513 0106 0AD0     		beq	.L15
 257:.\main.c      ****                 *right_wheel_count -= ADJUST_SPEED_SMALL;
 514              		.loc 1 257 0 is_stmt 1
 515 0108 BB68     		ldr	r3, [r7, #8]
 516 010a 1B68     		ldr	r3, [r3]
 517 010c 5A1E     		subs	r2, r3, #1
 518 010e BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 15


 519 0110 1A60     		str	r2, [r3]
 258:.\main.c      ****                 *left_wheel_count += ADJUST_SPEED_SMALL;
 520              		.loc 1 258 0
 521 0112 7B68     		ldr	r3, [r7, #4]
 522 0114 1B68     		ldr	r3, [r3]
 523 0116 5A1C     		adds	r2, r3, #1
 524 0118 7B68     		ldr	r3, [r7, #4]
 525 011a 1A60     		str	r2, [r3]
 526 011c 2DE0     		b	.L17
 527              	.L15:
 259:.\main.c      ****             } else if (sensor_readings[TOP_LEFT_SENSOR] && !sensor_readings[TOP_RIGHT_SENSOR]) { //
 528              		.loc 1 259 0
 529 011e 354B     		ldr	r3, .L23+36
 530 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 531 0122 002B     		cmp	r3, #0
 532 0124 29D0     		beq	.L17
 533              		.loc 1 259 0 is_stmt 0 discriminator 1
 534 0126 334B     		ldr	r3, .L23+36
 535 0128 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 536 012a 002B     		cmp	r3, #0
 537 012c 25D1     		bne	.L17
 260:.\main.c      ****                 *right_wheel_count += ADJUST_SPEED_SMALL;
 538              		.loc 1 260 0 is_stmt 1
 539 012e BB68     		ldr	r3, [r7, #8]
 540 0130 1B68     		ldr	r3, [r3]
 541 0132 5A1C     		adds	r2, r3, #1
 542 0134 BB68     		ldr	r3, [r7, #8]
 543 0136 1A60     		str	r2, [r3]
 261:.\main.c      ****                 *left_wheel_count -= ADJUST_SPEED_SMALL;
 544              		.loc 1 261 0
 545 0138 7B68     		ldr	r3, [r7, #4]
 546 013a 1B68     		ldr	r3, [r3]
 547 013c 5A1E     		subs	r2, r3, #1
 548 013e 7B68     		ldr	r3, [r7, #4]
 549 0140 1A60     		str	r2, [r3]
 550 0142 1AE0     		b	.L17
 551              	.L14:
 262:.\main.c      ****             }
 263:.\main.c      ****         } else { // moved off
 264:.\main.c      ****             if (!sensor_readings[TOP_LEFT_SENSOR] && sensor_readings[TOP_RIGHT_SENSOR]) {// Deviate
 552              		.loc 1 264 0
 553 0144 2B4B     		ldr	r3, .L23+36
 554 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 555 0148 002B     		cmp	r3, #0
 556 014a 09D1     		bne	.L18
 557              		.loc 1 264 0 is_stmt 0 discriminator 1
 558 014c 294B     		ldr	r3, .L23+36
 559 014e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 560 0150 002B     		cmp	r3, #0
 561 0152 05D0     		beq	.L18
 265:.\main.c      ****                 usbPutString(" - turn right\r\n");
 562              		.loc 1 265 0 is_stmt 1
 563 0154 2848     		ldr	r0, .L23+40
 564 0156 FFF7FEFF 		bl	usbPutString
 266:.\main.c      ****                 turnRight();
 565              		.loc 1 266 0
 566 015a FFF7FEFF 		bl	turnRight
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 16


 567 015e 0CE0     		b	.L17
 568              	.L18:
 267:.\main.c      ****             } else if (sensor_readings[TOP_LEFT_SENSOR] && !sensor_readings[TOP_RIGHT_SENSOR]) {// 
 569              		.loc 1 267 0
 570 0160 244B     		ldr	r3, .L23+36
 571 0162 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 572 0164 002B     		cmp	r3, #0
 573 0166 08D0     		beq	.L17
 574              		.loc 1 267 0 is_stmt 0 discriminator 1
 575 0168 224B     		ldr	r3, .L23+36
 576 016a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 577 016c 002B     		cmp	r3, #0
 578 016e 04D1     		bne	.L17
 268:.\main.c      ****                 usbPutString(" - turn left\r\n");
 579              		.loc 1 268 0 is_stmt 1
 580 0170 2248     		ldr	r0, .L23+44
 581 0172 FFF7FEFF 		bl	usbPutString
 269:.\main.c      **** 				turnLeft();
 582              		.loc 1 269 0
 583 0176 FFF7FEFF 		bl	turnLeft
 584              	.L17:
 270:.\main.c      ****             }
 271:.\main.c      ****         }
 272:.\main.c      ****         
 273:.\main.c      ****         if (*right_wheel_count > MAX_SPEED) {
 585              		.loc 1 273 0
 586 017a BB68     		ldr	r3, [r7, #8]
 587 017c 1B68     		ldr	r3, [r3]
 588 017e 092B     		cmp	r3, #9
 589 0180 02DD     		ble	.L19
 274:.\main.c      ****             *right_wheel_count = MAX_SPEED;
 590              		.loc 1 274 0
 591 0182 BB68     		ldr	r3, [r7, #8]
 592 0184 0922     		movs	r2, #9
 593 0186 1A60     		str	r2, [r3]
 594              	.L19:
 275:.\main.c      ****         }
 276:.\main.c      ****         if (*left_wheel_count > MAX_SPEED) {
 595              		.loc 1 276 0
 596 0188 7B68     		ldr	r3, [r7, #4]
 597 018a 1B68     		ldr	r3, [r3]
 598 018c 092B     		cmp	r3, #9
 599 018e 02DD     		ble	.L20
 277:.\main.c      ****             *left_wheel_count = MAX_SPEED;
 600              		.loc 1 277 0
 601 0190 7B68     		ldr	r3, [r7, #4]
 602 0192 0922     		movs	r2, #9
 603 0194 1A60     		str	r2, [r3]
 604              	.L20:
 278:.\main.c      ****         }
 279:.\main.c      ****         if (*right_wheel_count < MIN_SPEED) {
 605              		.loc 1 279 0
 606 0196 BB68     		ldr	r3, [r7, #8]
 607 0198 1B68     		ldr	r3, [r3]
 608 019a 032B     		cmp	r3, #3
 609 019c 02DC     		bgt	.L21
 280:.\main.c      ****             *right_wheel_count = MIN_SPEED;
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 17


 610              		.loc 1 280 0
 611 019e BB68     		ldr	r3, [r7, #8]
 612 01a0 0422     		movs	r2, #4
 613 01a2 1A60     		str	r2, [r3]
 614              	.L21:
 281:.\main.c      ****         }
 282:.\main.c      ****         if (*left_wheel_count < MIN_SPEED) {
 615              		.loc 1 282 0
 616 01a4 7B68     		ldr	r3, [r7, #4]
 617 01a6 1B68     		ldr	r3, [r3]
 618 01a8 032B     		cmp	r3, #3
 619 01aa 02DC     		bgt	.L11
 283:.\main.c      ****             *left_wheel_count = MIN_SPEED;
 620              		.loc 1 283 0
 621 01ac 7B68     		ldr	r3, [r7, #4]
 622 01ae 0422     		movs	r2, #4
 623 01b0 1A60     		str	r2, [r3]
 624              	.L11:
 227:.\main.c      ****         if (adc_flag) {
 625              		.loc 1 227 0
 626 01b2 F868     		ldr	r0, [r7, #12]
 627 01b4 FFF7FEFF 		bl	__aeabi_i2f
 628 01b8 0346     		mov	r3, r0
 629 01ba 1846     		mov	r0, r3
 630 01bc 796B     		ldr	r1, [r7, #52]	@ float
 631 01be FFF7FEFF 		bl	__aeabi_fcmpgt
 632 01c2 0346     		mov	r3, r0
 633 01c4 002B     		cmp	r3, #0
 634 01c6 7FF450AF 		bne	.L22
 284:.\main.c      ****         }
 285:.\main.c      ****     }
 286:.\main.c      **** }
 635              		.loc 1 286 0
 636 01ca 3837     		adds	r7, r7, #56
 637              		.cfi_def_cfa_offset 8
 638 01cc BD46     		mov	sp, r7
 639              		.cfi_def_cfa_register 13
 640              		@ sp needed
 641 01ce 80BD     		pop	{r7, pc}
 642              	.L24:
 643              		.align	2
 644              	.L23:
 645 01d0 00000000 		.word	.LC0
 646 01d4 10000000 		.word	.LC1
 647 01d8 20000000 		.word	.LC2
 648 01dc 00000000 		.word	adc_flag
 649 01e0 00000000 		.word	timer_flag
 650 01e4 00000000 		.word	prevCountM1
 651 01e8 00000000 		.word	prevCountM2
 652 01ec 00000000 		.word	countM1
 653 01f0 00000000 		.word	countM2
 654 01f4 00000000 		.word	sensor_readings
 655 01f8 24000000 		.word	.LC3
 656 01fc 34000000 		.word	.LC4
 657              		.cfi_endproc
 658              	.LFE66:
 659              		.size	goStraight, .-goStraight
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 18


 660              		.global	__aeabi_fdiv
 661              		.global	__aeabi_f2d
 662              		.global	__aeabi_dmul
 663              		.global	__aeabi_d2f
 664              		.section	.text.getDistance,"ax",%progbits
 665              		.align	2
 666              		.global	getDistance
 667              		.thumb
 668              		.thumb_func
 669              		.type	getDistance, %function
 670              	getDistance:
 671              	.LFB67:
 287:.\main.c      **** 
 288:.\main.c      **** float getDistance(int prevCountM1, int prevCountM2) {
 672              		.loc 1 288 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 16
 675              		@ frame_needed = 1, uses_anonymous_args = 0
 676 0000 80B5     		push	{r7, lr}
 677              		.cfi_def_cfa_offset 8
 678              		.cfi_offset 7, -8
 679              		.cfi_offset 14, -4
 680 0002 84B0     		sub	sp, sp, #16
 681              		.cfi_def_cfa_offset 24
 682 0004 00AF     		add	r7, sp, #0
 683              		.cfi_def_cfa_register 7
 684 0006 7860     		str	r0, [r7, #4]
 685 0008 3960     		str	r1, [r7]
 289:.\main.c      ****     float m1_dist = ((float)abs(countM1 - prevCountM1) / TICKS_PER_REV) * LINEAR_DISTANCE_PER_REV;
 686              		.loc 1 289 0
 687 000a 2D4B     		ldr	r3, .L27+8
 688 000c 1A68     		ldr	r2, [r3]
 689 000e 7B68     		ldr	r3, [r7, #4]
 690 0010 D31A     		subs	r3, r2, r3
 691 0012 002B     		cmp	r3, #0
 692 0014 B8BF     		it	lt
 693 0016 5B42     		rsblt	r3, r3, #0
 694 0018 1846     		mov	r0, r3
 695 001a FFF7FEFF 		bl	__aeabi_i2f
 696 001e 0346     		mov	r3, r0
 697 0020 1846     		mov	r0, r3
 698 0022 2849     		ldr	r1, .L27+12
 699 0024 FFF7FEFF 		bl	__aeabi_fdiv
 700 0028 0346     		mov	r3, r0
 701 002a 1846     		mov	r0, r3
 702 002c FFF7FEFF 		bl	__aeabi_f2d
 703 0030 0246     		mov	r2, r0
 704 0032 0B46     		mov	r3, r1
 705 0034 1046     		mov	r0, r2
 706 0036 1946     		mov	r1, r3
 707 0038 1FA3     		adr	r3, .L27
 708 003a D3E90023 		ldrd	r2, [r3]
 709 003e FFF7FEFF 		bl	__aeabi_dmul
 710 0042 0246     		mov	r2, r0
 711 0044 0B46     		mov	r3, r1
 712 0046 1046     		mov	r0, r2
 713 0048 1946     		mov	r1, r3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 19


 714 004a FFF7FEFF 		bl	__aeabi_d2f
 715 004e 0346     		mov	r3, r0
 716 0050 FB60     		str	r3, [r7, #12]	@ float
 290:.\main.c      ****     float m2_dist = ((float)abs(countM2 - prevCountM2) / TICKS_PER_REV) * LINEAR_DISTANCE_PER_REV;
 717              		.loc 1 290 0
 718 0052 1D4B     		ldr	r3, .L27+16
 719 0054 1A68     		ldr	r2, [r3]
 720 0056 3B68     		ldr	r3, [r7]
 721 0058 D31A     		subs	r3, r2, r3
 722 005a 002B     		cmp	r3, #0
 723 005c B8BF     		it	lt
 724 005e 5B42     		rsblt	r3, r3, #0
 725 0060 1846     		mov	r0, r3
 726 0062 FFF7FEFF 		bl	__aeabi_i2f
 727 0066 0346     		mov	r3, r0
 728 0068 1846     		mov	r0, r3
 729 006a 1649     		ldr	r1, .L27+12
 730 006c FFF7FEFF 		bl	__aeabi_fdiv
 731 0070 0346     		mov	r3, r0
 732 0072 1846     		mov	r0, r3
 733 0074 FFF7FEFF 		bl	__aeabi_f2d
 734 0078 0246     		mov	r2, r0
 735 007a 0B46     		mov	r3, r1
 736 007c 1046     		mov	r0, r2
 737 007e 1946     		mov	r1, r3
 738 0080 0DA3     		adr	r3, .L27
 739 0082 D3E90023 		ldrd	r2, [r3]
 740 0086 FFF7FEFF 		bl	__aeabi_dmul
 741 008a 0246     		mov	r2, r0
 742 008c 0B46     		mov	r3, r1
 743 008e 1046     		mov	r0, r2
 744 0090 1946     		mov	r1, r3
 745 0092 FFF7FEFF 		bl	__aeabi_d2f
 746 0096 0346     		mov	r3, r0
 747 0098 BB60     		str	r3, [r7, #8]	@ float
 291:.\main.c      ****     return (m1_dist + m2_dist) / 2;
 748              		.loc 1 291 0
 749 009a F868     		ldr	r0, [r7, #12]	@ float
 750 009c B968     		ldr	r1, [r7, #8]	@ float
 751 009e FFF7FEFF 		bl	__aeabi_fadd
 752 00a2 0346     		mov	r3, r0
 753 00a4 1846     		mov	r0, r3
 754 00a6 4FF08041 		mov	r1, #1073741824
 755 00aa FFF7FEFF 		bl	__aeabi_fdiv
 756 00ae 0346     		mov	r3, r0
 292:.\main.c      **** };
 757              		.loc 1 292 0
 758 00b0 1846     		mov	r0, r3
 759 00b2 1037     		adds	r7, r7, #16
 760              		.cfi_def_cfa_offset 8
 761 00b4 BD46     		mov	sp, r7
 762              		.cfi_def_cfa_register 13
 763              		@ sp needed
 764 00b6 80BD     		pop	{r7, pc}
 765              	.L28:
 766              		.align	3
 767              	.L27:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 20


 768 00b8 CE8C7E34 		.word	880708814
 769 00bc 9C6B3440 		.word	1077177244
 770 00c0 00000000 		.word	countM1
 771 00c4 00006443 		.word	1130627072
 772 00c8 00000000 		.word	countM2
 773              		.cfi_endproc
 774              	.LFE67:
 775              		.size	getDistance, .-getDistance
 776              		.global	__aeabi_fcmplt
 777 00cc AFF30080 		.section	.text.turnForDegrees,"ax",%progbits
 778              		.align	2
 779              		.global	turnForDegrees
 780              		.thumb
 781              		.thumb_func
 782              		.type	turnForDegrees, %function
 783              	turnForDegrees:
 784              	.LFB68:
 293:.\main.c      **** 
 294:.\main.c      **** void turnForDegrees(int degrees) {
 785              		.loc 1 294 0
 786              		.cfi_startproc
 787              		@ args = 0, pretend = 0, frame = 16
 788              		@ frame_needed = 1, uses_anonymous_args = 0
 789 0000 80B5     		push	{r7, lr}
 790              		.cfi_def_cfa_offset 8
 791              		.cfi_offset 7, -8
 792              		.cfi_offset 14, -4
 793 0002 84B0     		sub	sp, sp, #16
 794              		.cfi_def_cfa_offset 24
 795 0004 00AF     		add	r7, sp, #0
 796              		.cfi_def_cfa_register 7
 797 0006 7860     		str	r0, [r7, #4]
 295:.\main.c      ****     float distance_to_turn = degrees / 13;
 798              		.loc 1 295 0
 799 0008 7B68     		ldr	r3, [r7, #4]
 800 000a 1D4A     		ldr	r2, .L32
 801 000c 82FB0312 		smull	r1, r2, r2, r3
 802 0010 9210     		asrs	r2, r2, #2
 803 0012 DB17     		asrs	r3, r3, #31
 804 0014 D31A     		subs	r3, r2, r3
 805 0016 1846     		mov	r0, r3
 806 0018 FFF7FEFF 		bl	__aeabi_i2f
 807 001c 0346     		mov	r3, r0
 808 001e BB60     		str	r3, [r7, #8]	@ float
 296:.\main.c      ****     float distance_turned = 0;
 809              		.loc 1 296 0
 810 0020 4FF00003 		mov	r3, #0
 811 0024 FB60     		str	r3, [r7, #12]	@ float
 297:.\main.c      ****     
 298:.\main.c      ****     while (distance_turned < distance_to_turn) {
 812              		.loc 1 298 0
 813 0026 21E0     		b	.L30
 814              	.L31:
 299:.\main.c      ****          // New count values from encoder are ready
 300:.\main.c      ****         if (timer_flag){
 815              		.loc 1 300 0
 816 0028 164B     		ldr	r3, .L32+4
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 21


 817 002a 1B68     		ldr	r3, [r3]
 818 002c 002B     		cmp	r3, #0
 819 002e 1DD0     		beq	.L30
 301:.\main.c      ****             isr_TS_Disable();
 820              		.loc 1 301 0
 821 0030 FFF7FEFF 		bl	isr_TS_Disable
 302:.\main.c      ****             
 303:.\main.c      ****             distance_turned += getDistance(prevCountM1, prevCountM2);
 822              		.loc 1 303 0
 823 0034 144B     		ldr	r3, .L32+8
 824 0036 1A68     		ldr	r2, [r3]
 825 0038 144B     		ldr	r3, .L32+12
 826 003a 1B68     		ldr	r3, [r3]
 827 003c 1046     		mov	r0, r2
 828 003e 1946     		mov	r1, r3
 829 0040 FFF7FEFF 		bl	getDistance
 830 0044 0346     		mov	r3, r0
 831 0046 F868     		ldr	r0, [r7, #12]	@ float
 832 0048 1946     		mov	r1, r3
 833 004a FFF7FEFF 		bl	__aeabi_fadd
 834 004e 0346     		mov	r3, r0
 835 0050 FB60     		str	r3, [r7, #12]	@ float
 304:.\main.c      ****             
 305:.\main.c      ****             // Update previous values
 306:.\main.c      ****             prevCountM1 = countM1;
 836              		.loc 1 306 0
 837 0052 0F4B     		ldr	r3, .L32+16
 838 0054 1B68     		ldr	r3, [r3]
 839 0056 0C4A     		ldr	r2, .L32+8
 840 0058 1360     		str	r3, [r2]
 307:.\main.c      ****             prevCountM2 = countM2;
 841              		.loc 1 307 0
 842 005a 0E4B     		ldr	r3, .L32+20
 843 005c 1B68     		ldr	r3, [r3]
 844 005e 0B4A     		ldr	r2, .L32+12
 845 0060 1360     		str	r3, [r2]
 308:.\main.c      ****             
 309:.\main.c      ****             // Reset flag
 310:.\main.c      ****             timer_flag = FALSE;
 846              		.loc 1 310 0
 847 0062 084B     		ldr	r3, .L32+4
 848 0064 0022     		movs	r2, #0
 849 0066 1A60     		str	r2, [r3]
 311:.\main.c      ****             
 312:.\main.c      ****             isr_TS_Enable();
 850              		.loc 1 312 0
 851 0068 FFF7FEFF 		bl	isr_TS_Enable
 852              	.L30:
 298:.\main.c      ****          // New count values from encoder are ready
 853              		.loc 1 298 0
 854 006c F868     		ldr	r0, [r7, #12]	@ float
 855 006e B968     		ldr	r1, [r7, #8]	@ float
 856 0070 FFF7FEFF 		bl	__aeabi_fcmplt
 857 0074 0346     		mov	r3, r0
 858 0076 002B     		cmp	r3, #0
 859 0078 D6D1     		bne	.L31
 313:.\main.c      ****         }
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 22


 314:.\main.c      ****     }
 315:.\main.c      **** }
 860              		.loc 1 315 0
 861 007a 1037     		adds	r7, r7, #16
 862              		.cfi_def_cfa_offset 8
 863 007c BD46     		mov	sp, r7
 864              		.cfi_def_cfa_register 13
 865              		@ sp needed
 866 007e 80BD     		pop	{r7, pc}
 867              	.L33:
 868              		.align	2
 869              	.L32:
 870 0080 4FECC44E 		.word	1321528399
 871 0084 00000000 		.word	timer_flag
 872 0088 00000000 		.word	prevCountM1
 873 008c 00000000 		.word	prevCountM2
 874 0090 00000000 		.word	countM1
 875 0094 00000000 		.word	countM2
 876              		.cfi_endproc
 877              	.LFE68:
 878              		.size	turnForDegrees, .-turnForDegrees
 879              		.section	.rodata
 880 0043 00       		.align	2
 881              	.LC5:
 882 0044 202D2055 		.ascii	" - U turn\015\012\000"
 882      20747572 
 882      6E0D0A00 
 883              		.align	2
 884              	.LC6:
 885 0050 202D2074 		.ascii	" - turn 135\015\012\000"
 885      75726E20 
 885      3133350D 
 885      0A00
 886 005e 0000     		.align	2
 887              	.LC7:
 888 0060 202D2066 		.ascii	" - finish turn\015\012\000"
 888      696E6973 
 888      68207475 
 888      726E0D0A 
 888      00
 889              		.section	.text.uTurn,"ax",%progbits
 890              		.align	2
 891              		.global	uTurn
 892              		.thumb
 893              		.thumb_func
 894              		.type	uTurn, %function
 895              	uTurn:
 896              	.LFB69:
 316:.\main.c      ****     
 317:.\main.c      **** void uTurn(int *left_wheel_count, int *right_wheel_count) {
 897              		.loc 1 317 0
 898              		.cfi_startproc
 899              		@ args = 0, pretend = 0, frame = 16
 900              		@ frame_needed = 1, uses_anonymous_args = 0
 901 0000 80B5     		push	{r7, lr}
 902              		.cfi_def_cfa_offset 8
 903              		.cfi_offset 7, -8
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 23


 904              		.cfi_offset 14, -4
 905 0002 84B0     		sub	sp, sp, #16
 906              		.cfi_def_cfa_offset 24
 907 0004 00AF     		add	r7, sp, #0
 908              		.cfi_def_cfa_register 7
 909 0006 7860     		str	r0, [r7, #4]
 910 0008 3960     		str	r1, [r7]
 318:.\main.c      ****     usbPutString(" - U turn\r\n");
 911              		.loc 1 318 0
 912 000a 3948     		ldr	r0, .L39
 913 000c FFF7FEFF 		bl	usbPutString
 319:.\main.c      ****     
 320:.\main.c      ****     // go forward slightly
 321:.\main.c      ****     float distance = 0;
 914              		.loc 1 321 0
 915 0010 4FF00003 		mov	r3, #0
 916 0014 FB60     		str	r3, [r7, #12]	@ float
 322:.\main.c      ****     while (distance < SMALL_FORWARD_DISTANCE) {
 917              		.loc 1 322 0
 918 0016 39E0     		b	.L35
 919              	.L36:
 323:.\main.c      ****          // New count values from encoder are ready
 324:.\main.c      ****         if (timer_flag){
 920              		.loc 1 324 0
 921 0018 364B     		ldr	r3, .L39+4
 922 001a 1B68     		ldr	r3, [r3]
 923 001c 002B     		cmp	r3, #0
 924 001e 35D0     		beq	.L35
 325:.\main.c      ****             isr_TS_Disable();
 925              		.loc 1 325 0
 926 0020 FFF7FEFF 		bl	isr_TS_Disable
 326:.\main.c      ****             
 327:.\main.c      ****             // update distance
 328:.\main.c      ****             distance += getDistance(prevCountM1, prevCountM2);
 927              		.loc 1 328 0
 928 0024 344B     		ldr	r3, .L39+8
 929 0026 1A68     		ldr	r2, [r3]
 930 0028 344B     		ldr	r3, .L39+12
 931 002a 1B68     		ldr	r3, [r3]
 932 002c 1046     		mov	r0, r2
 933 002e 1946     		mov	r1, r3
 934 0030 FFF7FEFF 		bl	getDistance
 935 0034 0346     		mov	r3, r0
 936 0036 F868     		ldr	r0, [r7, #12]	@ float
 937 0038 1946     		mov	r1, r3
 938 003a FFF7FEFF 		bl	__aeabi_fadd
 939 003e 0346     		mov	r3, r0
 940 0040 FB60     		str	r3, [r7, #12]	@ float
 329:.\main.c      ****             
 330:.\main.c      ****             // Correct speed
 331:.\main.c      ****             correctSpeed(prevCountM1,countM1,*left_wheel_count,TRUE);
 941              		.loc 1 331 0
 942 0042 2D4B     		ldr	r3, .L39+8
 943 0044 1968     		ldr	r1, [r3]
 944 0046 2E4B     		ldr	r3, .L39+16
 945 0048 1A68     		ldr	r2, [r3]
 946 004a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 24


 947 004c 1B68     		ldr	r3, [r3]
 948 004e 0846     		mov	r0, r1
 949 0050 1146     		mov	r1, r2
 950 0052 1A46     		mov	r2, r3
 951 0054 0123     		movs	r3, #1
 952 0056 FFF7FEFF 		bl	correctSpeed
 332:.\main.c      ****             correctSpeed(prevCountM2,countM2,*right_wheel_count,FALSE);
 953              		.loc 1 332 0
 954 005a 284B     		ldr	r3, .L39+12
 955 005c 1968     		ldr	r1, [r3]
 956 005e 294B     		ldr	r3, .L39+20
 957 0060 1A68     		ldr	r2, [r3]
 958 0062 3B68     		ldr	r3, [r7]
 959 0064 1B68     		ldr	r3, [r3]
 960 0066 0846     		mov	r0, r1
 961 0068 1146     		mov	r1, r2
 962 006a 1A46     		mov	r2, r3
 963 006c 0023     		movs	r3, #0
 964 006e FFF7FEFF 		bl	correctSpeed
 333:.\main.c      ****             
 334:.\main.c      ****             // Update previous values
 335:.\main.c      ****             prevCountM1 = countM1;
 965              		.loc 1 335 0
 966 0072 234B     		ldr	r3, .L39+16
 967 0074 1B68     		ldr	r3, [r3]
 968 0076 204A     		ldr	r2, .L39+8
 969 0078 1360     		str	r3, [r2]
 336:.\main.c      ****             prevCountM2 = countM2;
 970              		.loc 1 336 0
 971 007a 224B     		ldr	r3, .L39+20
 972 007c 1B68     		ldr	r3, [r3]
 973 007e 1F4A     		ldr	r2, .L39+12
 974 0080 1360     		str	r3, [r2]
 337:.\main.c      ****             
 338:.\main.c      ****             // Reset flag
 339:.\main.c      ****             timer_flag = FALSE;
 975              		.loc 1 339 0
 976 0082 1C4B     		ldr	r3, .L39+4
 977 0084 0022     		movs	r2, #0
 978 0086 1A60     		str	r2, [r3]
 340:.\main.c      ****             
 341:.\main.c      ****             isr_TS_Enable();
 979              		.loc 1 341 0
 980 0088 FFF7FEFF 		bl	isr_TS_Enable
 981              	.L35:
 322:.\main.c      ****          // New count values from encoder are ready
 982              		.loc 1 322 0
 983 008c F868     		ldr	r0, [r7, #12]	@ float
 984 008e 4FF08241 		mov	r1, #1090519040
 985 0092 FFF7FEFF 		bl	__aeabi_fcmplt
 986 0096 0346     		mov	r3, r0
 987 0098 002B     		cmp	r3, #0
 988 009a BDD1     		bne	.L36
 342:.\main.c      ****         }
 343:.\main.c      ****     }
 344:.\main.c      ****     
 345:.\main.c      ****     usbPutString(" - turn 135\r\n");
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 25


 989              		.loc 1 345 0
 990 009c 1A48     		ldr	r0, .L39+24
 991 009e FFF7FEFF 		bl	usbPutString
 346:.\main.c      ****     
 347:.\main.c      ****     // make the turn
 348:.\main.c      ****     setWheelDirection(TRUE, FALSE);
 992              		.loc 1 348 0
 993 00a2 0120     		movs	r0, #1
 994 00a4 0021     		movs	r1, #0
 995 00a6 FFF7FEFF 		bl	setWheelDirection
 349:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 996              		.loc 1 349 0
 997 00aa 4FF4E170 		mov	r0, #450
 998 00ae FFF7FEFF 		bl	PWM_1_WriteCompare
 350:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 999              		.loc 1 350 0
 1000 00b2 4FF4E170 		mov	r0, #450
 1001 00b6 FFF7FEFF 		bl	PWM_2_WriteCompare
 351:.\main.c      ****     
 352:.\main.c      ****     // the number 180 is roughly a 135 degree turn
 353:.\main.c      ****     turnForDegrees(180); // so that it doesn't stop if it's already on a line
 1002              		.loc 1 353 0
 1003 00ba B420     		movs	r0, #180
 1004 00bc FFF7FEFF 		bl	turnForDegrees
 354:.\main.c      ****     
 355:.\main.c      ****     usbPutString(" - finish turn\r\n");
 1005              		.loc 1 355 0
 1006 00c0 1248     		ldr	r0, .L39+28
 1007 00c2 FFF7FEFF 		bl	usbPutString
 356:.\main.c      ****     
 357:.\main.c      ****     // finish turn
 358:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 1008              		.loc 1 358 0
 1009 00c6 08E0     		b	.L37
 1010              	.L38:
 359:.\main.c      ****         if (adc_flag) {
 1011              		.loc 1 359 0
 1012 00c8 114B     		ldr	r3, .L39+32
 1013 00ca 1B68     		ldr	r3, [r3]
 1014 00cc 002B     		cmp	r3, #0
 1015 00ce 04D0     		beq	.L37
 360:.\main.c      ****             updateSensorValues();
 1016              		.loc 1 360 0
 1017 00d0 FFF7FEFF 		bl	updateSensorValues
 361:.\main.c      ****             adc_flag = FALSE;
 1018              		.loc 1 361 0
 1019 00d4 0E4B     		ldr	r3, .L39+32
 1020 00d6 0022     		movs	r2, #0
 1021 00d8 1A60     		str	r2, [r3]
 1022              	.L37:
 358:.\main.c      ****         if (adc_flag) {
 1023              		.loc 1 358 0
 1024 00da 0E4B     		ldr	r3, .L39+36
 1025 00dc 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1026 00de 002B     		cmp	r3, #0
 1027 00e0 F2D0     		beq	.L38
 362:.\main.c      ****         }
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 26


 363:.\main.c      ****     }
 364:.\main.c      ****     setWheelDirection(TRUE, TRUE);
 1028              		.loc 1 364 0
 1029 00e2 0120     		movs	r0, #1
 1030 00e4 0121     		movs	r1, #1
 1031 00e6 FFF7FEFF 		bl	setWheelDirection
 365:.\main.c      **** }
 1032              		.loc 1 365 0
 1033 00ea 1037     		adds	r7, r7, #16
 1034              		.cfi_def_cfa_offset 8
 1035 00ec BD46     		mov	sp, r7
 1036              		.cfi_def_cfa_register 13
 1037              		@ sp needed
 1038 00ee 80BD     		pop	{r7, pc}
 1039              	.L40:
 1040              		.align	2
 1041              	.L39:
 1042 00f0 44000000 		.word	.LC5
 1043 00f4 00000000 		.word	timer_flag
 1044 00f8 00000000 		.word	prevCountM1
 1045 00fc 00000000 		.word	prevCountM2
 1046 0100 00000000 		.word	countM1
 1047 0104 00000000 		.word	countM2
 1048 0108 50000000 		.word	.LC6
 1049 010c 60000000 		.word	.LC7
 1050 0110 00000000 		.word	adc_flag
 1051 0114 00000000 		.word	sensor_readings
 1052              		.cfi_endproc
 1053              	.LFE69:
 1054              		.size	uTurn, .-uTurn
 1055              		.section	.text.getValForChannel,"ax",%progbits
 1056              		.align	2
 1057              		.global	getValForChannel
 1058              		.thumb
 1059              		.thumb_func
 1060              		.type	getValForChannel, %function
 1061              	getValForChannel:
 1062              	.LFB70:
 366:.\main.c      **** 
 367:.\main.c      **** // Simple ADC conversion
 368:.\main.c      **** int32 getValForChannel(int16 n){
 1063              		.loc 1 368 0
 1064              		.cfi_startproc
 1065              		@ args = 0, pretend = 0, frame = 8
 1066              		@ frame_needed = 1, uses_anonymous_args = 0
 1067 0000 80B5     		push	{r7, lr}
 1068              		.cfi_def_cfa_offset 8
 1069              		.cfi_offset 7, -8
 1070              		.cfi_offset 14, -4
 1071 0002 82B0     		sub	sp, sp, #8
 1072              		.cfi_def_cfa_offset 16
 1073 0004 00AF     		add	r7, sp, #0
 1074              		.cfi_def_cfa_register 7
 1075 0006 0346     		mov	r3, r0
 1076 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 369:.\main.c      ****     return ADC_CountsTo_mVolts(ADC_GetResult16(n));
 1077              		.loc 1 369 0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 27


 1078 000a FB88     		ldrh	r3, [r7, #6]
 1079 000c 1846     		mov	r0, r3
 1080 000e FFF7FEFF 		bl	ADC_GetResult16
 1081 0012 0346     		mov	r3, r0
 1082 0014 1846     		mov	r0, r3
 1083 0016 FFF7FEFF 		bl	ADC_CountsTo_mVolts
 1084 001a 0346     		mov	r3, r0
 370:.\main.c      **** }
 1085              		.loc 1 370 0
 1086 001c 1846     		mov	r0, r3
 1087 001e 0837     		adds	r7, r7, #8
 1088              		.cfi_def_cfa_offset 8
 1089 0020 BD46     		mov	sp, r7
 1090              		.cfi_def_cfa_register 13
 1091              		@ sp needed
 1092 0022 80BD     		pop	{r7, pc}
 1093              		.cfi_endproc
 1094              	.LFE70:
 1095              		.size	getValForChannel, .-getValForChannel
 1096              		.section	.text.updateSensorValues,"ax",%progbits
 1097              		.align	2
 1098              		.global	updateSensorValues
 1099              		.thumb
 1100              		.thumb_func
 1101              		.type	updateSensorValues, %function
 1102              	updateSensorValues:
 1103              	.LFB71:
 371:.\main.c      **** 
 372:.\main.c      **** void updateSensorValues(){
 1104              		.loc 1 372 0
 1105              		.cfi_startproc
 1106              		@ args = 0, pretend = 0, frame = 8
 1107              		@ frame_needed = 1, uses_anonymous_args = 0
 1108 0000 80B5     		push	{r7, lr}
 1109              		.cfi_def_cfa_offset 8
 1110              		.cfi_offset 7, -8
 1111              		.cfi_offset 14, -4
 1112 0002 82B0     		sub	sp, sp, #8
 1113              		.cfi_def_cfa_offset 16
 1114 0004 00AF     		add	r7, sp, #0
 1115              		.cfi_def_cfa_register 7
 373:.\main.c      ****     // update each sensor with the maximum reading so far
 374:.\main.c      ****     int i;
 375:.\main.c      ****     for (i = 0; i < NUM_SENSORS; i++){
 1116              		.loc 1 375 0
 1117 0006 0023     		movs	r3, #0
 1118 0008 7B60     		str	r3, [r7, #4]
 1119 000a 15E0     		b	.L44
 1120              	.L46:
 1121              	.LBB2:
 376:.\main.c      ****         int reading = getValForChannel(i);
 1122              		.loc 1 376 0
 1123 000c 7B68     		ldr	r3, [r7, #4]
 1124 000e 9BB2     		uxth	r3, r3
 1125 0010 1BB2     		sxth	r3, r3
 1126 0012 1846     		mov	r0, r3
 1127 0014 FFF7FEFF 		bl	getValForChannel
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 28


 1128 0018 3860     		str	r0, [r7]
 377:.\main.c      ****         if (reading > adc_readings[i]) {
 1129              		.loc 1 377 0
 1130 001a 234A     		ldr	r2, .L51
 1131 001c 7B68     		ldr	r3, [r7, #4]
 1132 001e 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1133 0022 3B68     		ldr	r3, [r7]
 1134 0024 9A42     		cmp	r2, r3
 1135 0026 04DA     		bge	.L45
 378:.\main.c      ****             adc_readings[i] = reading;
 1136              		.loc 1 378 0
 1137 0028 1F49     		ldr	r1, .L51
 1138 002a 7B68     		ldr	r3, [r7, #4]
 1139 002c 3A68     		ldr	r2, [r7]
 1140 002e 41F82320 		str	r2, [r1, r3, lsl #2]
 1141              	.L45:
 1142              	.LBE2:
 375:.\main.c      ****         int reading = getValForChannel(i);
 1143              		.loc 1 375 0 discriminator 2
 1144 0032 7B68     		ldr	r3, [r7, #4]
 1145 0034 0133     		adds	r3, r3, #1
 1146 0036 7B60     		str	r3, [r7, #4]
 1147              	.L44:
 375:.\main.c      ****         int reading = getValForChannel(i);
 1148              		.loc 1 375 0 is_stmt 0 discriminator 1
 1149 0038 7B68     		ldr	r3, [r7, #4]
 1150 003a 052B     		cmp	r3, #5
 1151 003c E6DD     		ble	.L46
 379:.\main.c      ****         }
 380:.\main.c      ****     }
 381:.\main.c      **** 
 382:.\main.c      ****     sample_count++;
 1152              		.loc 1 382 0 is_stmt 1
 1153 003e 1B4B     		ldr	r3, .L51+4
 1154 0040 1B68     		ldr	r3, [r3]
 1155 0042 0133     		adds	r3, r3, #1
 1156 0044 194A     		ldr	r2, .L51+4
 1157 0046 1360     		str	r3, [r2]
 383:.\main.c      ****     if (sample_count == ADC_READINGS_SIZE){
 1158              		.loc 1 383 0
 1159 0048 184B     		ldr	r3, .L51+4
 1160 004a 1B68     		ldr	r3, [r3]
 1161 004c 5A2B     		cmp	r3, #90
 1162 004e 25D1     		bne	.L47
 384:.\main.c      ****         // Black = 1 (high voltage level)
 385:.\main.c      ****         for (i = 0; i < NUM_SENSORS; i++){
 1163              		.loc 1 385 0
 1164 0050 0023     		movs	r3, #0
 1165 0052 7B60     		str	r3, [r7, #4]
 1166 0054 18E0     		b	.L48
 1167              	.L49:
 386:.\main.c      ****             sensor_readings[i] = !!(adc_readings[i] < LIGHT_LEVEL);
 1168              		.loc 1 386 0 discriminator 3
 1169 0056 144A     		ldr	r2, .L51
 1170 0058 7B68     		ldr	r3, [r7, #4]
 1171 005a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1172 005e 40F22B12 		movw	r2, #299
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 29


 1173 0062 9342     		cmp	r3, r2
 1174 0064 D4BF     		ite	le
 1175 0066 0123     		movle	r3, #1
 1176 0068 0023     		movgt	r3, #0
 1177 006a DBB2     		uxtb	r3, r3
 1178 006c D9B2     		uxtb	r1, r3
 1179 006e 104A     		ldr	r2, .L51+8
 1180 0070 7B68     		ldr	r3, [r7, #4]
 1181 0072 1344     		add	r3, r3, r2
 1182 0074 0A46     		mov	r2, r1
 1183 0076 1A70     		strb	r2, [r3]
 387:.\main.c      ****             adc_readings[i] = 0; // Reset max value from samples
 1184              		.loc 1 387 0 discriminator 3
 1185 0078 0B4A     		ldr	r2, .L51
 1186 007a 7B68     		ldr	r3, [r7, #4]
 1187 007c 0021     		movs	r1, #0
 1188 007e 42F82310 		str	r1, [r2, r3, lsl #2]
 385:.\main.c      ****             sensor_readings[i] = !!(adc_readings[i] < LIGHT_LEVEL);
 1189              		.loc 1 385 0 discriminator 3
 1190 0082 7B68     		ldr	r3, [r7, #4]
 1191 0084 0133     		adds	r3, r3, #1
 1192 0086 7B60     		str	r3, [r7, #4]
 1193              	.L48:
 385:.\main.c      ****             sensor_readings[i] = !!(adc_readings[i] < LIGHT_LEVEL);
 1194              		.loc 1 385 0 is_stmt 0 discriminator 1
 1195 0088 7B68     		ldr	r3, [r7, #4]
 1196 008a 052B     		cmp	r3, #5
 1197 008c E3DD     		ble	.L49
 388:.\main.c      ****         }
 389:.\main.c      ****         ADC_DEBUG_Write(1);
 1198              		.loc 1 389 0 is_stmt 1
 1199 008e 0120     		movs	r0, #1
 1200 0090 FFF7FEFF 		bl	ADC_DEBUG_Write
 390:.\main.c      ****         sample_count = 0;
 1201              		.loc 1 390 0
 1202 0094 054B     		ldr	r3, .L51+4
 1203 0096 0022     		movs	r2, #0
 1204 0098 1A60     		str	r2, [r3]
 1205 009a 02E0     		b	.L43
 1206              	.L47:
 391:.\main.c      ****     }
 392:.\main.c      ****     else ADC_DEBUG_Write(0);
 1207              		.loc 1 392 0
 1208 009c 0020     		movs	r0, #0
 1209 009e FFF7FEFF 		bl	ADC_DEBUG_Write
 1210              	.L43:
 393:.\main.c      **** }
 1211              		.loc 1 393 0
 1212 00a2 0837     		adds	r7, r7, #8
 1213              		.cfi_def_cfa_offset 8
 1214 00a4 BD46     		mov	sp, r7
 1215              		.cfi_def_cfa_register 13
 1216              		@ sp needed
 1217 00a6 80BD     		pop	{r7, pc}
 1218              	.L52:
 1219              		.align	2
 1220              	.L51:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 30


 1221 00a8 00000000 		.word	adc_readings
 1222 00ac 00000000 		.word	sample_count
 1223 00b0 00000000 		.word	sensor_readings
 1224              		.cfi_endproc
 1225              	.LFE71:
 1226              		.size	updateSensorValues, .-updateSensorValues
 1227              		.section	.text.changeLeftWheelSpeed,"ax",%progbits
 1228              		.align	2
 1229              		.global	changeLeftWheelSpeed
 1230              		.thumb
 1231              		.thumb_func
 1232              		.type	changeLeftWheelSpeed, %function
 1233              	changeLeftWheelSpeed:
 1234              	.LFB72:
 394:.\main.c      **** 
 395:.\main.c      **** void changeLeftWheelSpeed(int amount) {
 1235              		.loc 1 395 0
 1236              		.cfi_startproc
 1237              		@ args = 0, pretend = 0, frame = 16
 1238              		@ frame_needed = 1, uses_anonymous_args = 0
 1239 0000 80B5     		push	{r7, lr}
 1240              		.cfi_def_cfa_offset 8
 1241              		.cfi_offset 7, -8
 1242              		.cfi_offset 14, -4
 1243 0002 84B0     		sub	sp, sp, #16
 1244              		.cfi_def_cfa_offset 24
 1245 0004 00AF     		add	r7, sp, #0
 1246              		.cfi_def_cfa_register 7
 1247 0006 7860     		str	r0, [r7, #4]
 396:.\main.c      ****     int new_value = PWM_1_ReadCompare() + amount;
 1248              		.loc 1 396 0
 1249 0008 FFF7FEFF 		bl	PWM_1_ReadCompare
 1250 000c 0346     		mov	r3, r0
 1251 000e 1A46     		mov	r2, r3
 1252 0010 7B68     		ldr	r3, [r7, #4]
 1253 0012 1344     		add	r3, r3, r2
 1254 0014 FB60     		str	r3, [r7, #12]
 397:.\main.c      ****     PWM_1_WriteCompare((new_value > 0) ? new_value:0); // account for underflow
 1255              		.loc 1 397 0
 1256 0016 FB68     		ldr	r3, [r7, #12]
 1257 0018 23EAE373 		bic	r3, r3, r3, asr #31
 1258 001c 9BB2     		uxth	r3, r3
 1259 001e 1846     		mov	r0, r3
 1260 0020 FFF7FEFF 		bl	PWM_1_WriteCompare
 398:.\main.c      **** }
 1261              		.loc 1 398 0
 1262 0024 1037     		adds	r7, r7, #16
 1263              		.cfi_def_cfa_offset 8
 1264 0026 BD46     		mov	sp, r7
 1265              		.cfi_def_cfa_register 13
 1266              		@ sp needed
 1267 0028 80BD     		pop	{r7, pc}
 1268              		.cfi_endproc
 1269              	.LFE72:
 1270              		.size	changeLeftWheelSpeed, .-changeLeftWheelSpeed
 1271 002a 00BF     		.section	.text.changeRightWheelSpeed,"ax",%progbits
 1272              		.align	2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 31


 1273              		.global	changeRightWheelSpeed
 1274              		.thumb
 1275              		.thumb_func
 1276              		.type	changeRightWheelSpeed, %function
 1277              	changeRightWheelSpeed:
 1278              	.LFB73:
 399:.\main.c      **** 
 400:.\main.c      **** void changeRightWheelSpeed(int amount){
 1279              		.loc 1 400 0
 1280              		.cfi_startproc
 1281              		@ args = 0, pretend = 0, frame = 16
 1282              		@ frame_needed = 1, uses_anonymous_args = 0
 1283 0000 80B5     		push	{r7, lr}
 1284              		.cfi_def_cfa_offset 8
 1285              		.cfi_offset 7, -8
 1286              		.cfi_offset 14, -4
 1287 0002 84B0     		sub	sp, sp, #16
 1288              		.cfi_def_cfa_offset 24
 1289 0004 00AF     		add	r7, sp, #0
 1290              		.cfi_def_cfa_register 7
 1291 0006 7860     		str	r0, [r7, #4]
 401:.\main.c      ****     int new_value = PWM_2_ReadCompare() + amount;
 1292              		.loc 1 401 0
 1293 0008 FFF7FEFF 		bl	PWM_2_ReadCompare
 1294 000c 0346     		mov	r3, r0
 1295 000e 1A46     		mov	r2, r3
 1296 0010 7B68     		ldr	r3, [r7, #4]
 1297 0012 1344     		add	r3, r3, r2
 1298 0014 FB60     		str	r3, [r7, #12]
 402:.\main.c      ****     PWM_2_WriteCompare((new_value > 0) ? new_value:0); // account for underflow
 1299              		.loc 1 402 0
 1300 0016 FB68     		ldr	r3, [r7, #12]
 1301 0018 23EAE373 		bic	r3, r3, r3, asr #31
 1302 001c 9BB2     		uxth	r3, r3
 1303 001e 1846     		mov	r0, r3
 1304 0020 FFF7FEFF 		bl	PWM_2_WriteCompare
 403:.\main.c      **** }
 1305              		.loc 1 403 0
 1306 0024 1037     		adds	r7, r7, #16
 1307              		.cfi_def_cfa_offset 8
 1308 0026 BD46     		mov	sp, r7
 1309              		.cfi_def_cfa_register 13
 1310              		@ sp needed
 1311 0028 80BD     		pop	{r7, pc}
 1312              		.cfi_endproc
 1313              	.LFE73:
 1314              		.size	changeRightWheelSpeed, .-changeRightWheelSpeed
 1315 002a 00BF     		.section	.text.correctSpeed,"ax",%progbits
 1316              		.align	2
 1317              		.global	correctSpeed
 1318              		.thumb
 1319              		.thumb_func
 1320              		.type	correctSpeed, %function
 1321              	correctSpeed:
 1322              	.LFB74:
 404:.\main.c      **** 
 405:.\main.c      **** /* ## SPEED CONTROL ## 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 32


 406:.\main.c      **** * Algorithm: Get difference between counts, compare to
 407:.\main.c      **** * the difference we expect. Add the correction to the PWM.
 408:.\main.c      **** */
 409:.\main.c      **** void correctSpeed(int prevCount, int count, int desired_count, int isLeftWheel){    
 1323              		.loc 1 409 0
 1324              		.cfi_startproc
 1325              		@ args = 0, pretend = 0, frame = 88
 1326              		@ frame_needed = 1, uses_anonymous_args = 0
 1327 0000 80B5     		push	{r7, lr}
 1328              		.cfi_def_cfa_offset 8
 1329              		.cfi_offset 7, -8
 1330              		.cfi_offset 14, -4
 1331 0002 96B0     		sub	sp, sp, #88
 1332              		.cfi_def_cfa_offset 96
 1333 0004 00AF     		add	r7, sp, #0
 1334              		.cfi_def_cfa_register 7
 1335 0006 F860     		str	r0, [r7, #12]
 1336 0008 B960     		str	r1, [r7, #8]
 1337 000a 7A60     		str	r2, [r7, #4]
 1338 000c 3B60     		str	r3, [r7]
 410:.\main.c      ****     
 411:.\main.c      ****     // Account for overflow edge or other unknown error
 412:.\main.c      ****     if (prevCount > count) return;
 1339              		.loc 1 412 0
 1340 000e FA68     		ldr	r2, [r7, #12]
 1341 0010 BB68     		ldr	r3, [r7, #8]
 1342 0012 9A42     		cmp	r2, r3
 1343 0014 00DD     		ble	.L56
 1344 0016 19E0     		b	.L55
 1345              	.L56:
 413:.\main.c      ****     
 414:.\main.c      ****     int diff_count = abs(count - prevCount);
 1346              		.loc 1 414 0
 1347 0018 BA68     		ldr	r2, [r7, #8]
 1348 001a FB68     		ldr	r3, [r7, #12]
 1349 001c D31A     		subs	r3, r2, r3
 1350 001e 002B     		cmp	r3, #0
 1351 0020 B8BF     		it	lt
 1352 0022 5B42     		rsblt	r3, r3, #0
 1353 0024 7B65     		str	r3, [r7, #84]
 415:.\main.c      ****     
 416:.\main.c      ****     // Account for a situation where PSoc is powered but wheels aren't moving
 417:.\main.c      ****     if (diff_count == 0) return;
 1354              		.loc 1 417 0
 1355 0026 7B6D     		ldr	r3, [r7, #84]
 1356 0028 002B     		cmp	r3, #0
 1357 002a 00D1     		bne	.L58
 1358              		.loc 1 417 0 is_stmt 0 discriminator 2
 1359 002c 0EE0     		b	.L55
 1360              	.L58:
 418:.\main.c      ****     
 419:.\main.c      ****     char msg[64];
 420:.\main.c      ****         
 421:.\main.c      ****     /* Determine correction that must be applied to the wheel
 422:.\main.c      ****     * desired_count > diff_count :-> wheel is slow; increase PWM
 423:.\main.c      ****     * desired_count < diff_count :-> wheel is fast; decrease PWM
 424:.\main.c      ****     * desired_count == diff_count :-> wheel is stable; do nothing
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 33


 425:.\main.c      ****     */
 426:.\main.c      ****     int correction = desired_count-diff_count;
 1361              		.loc 1 426 0 is_stmt 1
 1362 002e 7A68     		ldr	r2, [r7, #4]
 1363 0030 7B6D     		ldr	r3, [r7, #84]
 1364 0032 D31A     		subs	r3, r2, r3
 1365 0034 3B65     		str	r3, [r7, #80]
 427:.\main.c      ****     
 428:.\main.c      ****     // Apply the speed correction to the appropriate wheel          
 429:.\main.c      ****     if (isLeftWheel){
 1366              		.loc 1 429 0
 1367 0036 3B68     		ldr	r3, [r7]
 1368 0038 002B     		cmp	r3, #0
 1369 003a 03D0     		beq	.L59
 430:.\main.c      ****         changeLeftWheelSpeed(correction);
 1370              		.loc 1 430 0
 1371 003c 386D     		ldr	r0, [r7, #80]
 1372 003e FFF7FEFF 		bl	changeLeftWheelSpeed
 1373 0042 02E0     		b	.L60
 1374              	.L59:
 431:.\main.c      ****     }
 432:.\main.c      ****     else{
 433:.\main.c      ****         changeRightWheelSpeed(correction);
 1375              		.loc 1 433 0
 1376 0044 386D     		ldr	r0, [r7, #80]
 1377 0046 FFF7FEFF 		bl	changeRightWheelSpeed
 1378              	.L60:
 434:.\main.c      ****     }
 435:.\main.c      ****     
 436:.\main.c      ****     return;
 1379              		.loc 1 436 0 discriminator 3
 1380 004a 00BF     		nop
 1381              	.L55:
 437:.\main.c      **** }
 1382              		.loc 1 437 0
 1383 004c 5837     		adds	r7, r7, #88
 1384              		.cfi_def_cfa_offset 8
 1385 004e BD46     		mov	sp, r7
 1386              		.cfi_def_cfa_register 13
 1387              		@ sp needed
 1388 0050 80BD     		pop	{r7, pc}
 1389              		.cfi_endproc
 1390              	.LFE74:
 1391              		.size	correctSpeed, .-correctSpeed
 1392 0052 00BF     		.section	.text.setWheelDirection,"ax",%progbits
 1393              		.align	2
 1394              		.global	setWheelDirection
 1395              		.thumb
 1396              		.thumb_func
 1397              		.type	setWheelDirection, %function
 1398              	setWheelDirection:
 1399              	.LFB75:
 438:.\main.c      **** 
 439:.\main.c      **** /* Set wheel direction explicitly
 440:.\main.c      **** * Parameters are boolean, UNKNOWN can be passed
 441:.\main.c      **** * in if you wish the value to be unchanged
 442:.\main.c      **** */
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 34


 443:.\main.c      **** void setWheelDirection(int leftIsForward, int rightIsForward){
 1400              		.loc 1 443 0
 1401              		.cfi_startproc
 1402              		@ args = 0, pretend = 0, frame = 8
 1403              		@ frame_needed = 1, uses_anonymous_args = 0
 1404 0000 80B5     		push	{r7, lr}
 1405              		.cfi_def_cfa_offset 8
 1406              		.cfi_offset 7, -8
 1407              		.cfi_offset 14, -4
 1408 0002 82B0     		sub	sp, sp, #8
 1409              		.cfi_def_cfa_offset 16
 1410 0004 00AF     		add	r7, sp, #0
 1411              		.cfi_def_cfa_register 7
 1412 0006 7860     		str	r0, [r7, #4]
 1413 0008 3960     		str	r1, [r7]
 444:.\main.c      ****     INV1_Write(!leftIsForward);
 1414              		.loc 1 444 0
 1415 000a 7B68     		ldr	r3, [r7, #4]
 1416 000c 002B     		cmp	r3, #0
 1417 000e 0CBF     		ite	eq
 1418 0010 0123     		moveq	r3, #1
 1419 0012 0023     		movne	r3, #0
 1420 0014 DBB2     		uxtb	r3, r3
 1421 0016 1846     		mov	r0, r3
 1422 0018 FFF7FEFF 		bl	INV1_Write
 445:.\main.c      ****     INV2_Write(rightIsForward);
 1423              		.loc 1 445 0
 1424 001c 3B68     		ldr	r3, [r7]
 1425 001e DBB2     		uxtb	r3, r3
 1426 0020 1846     		mov	r0, r3
 1427 0022 FFF7FEFF 		bl	INV2_Write
 446:.\main.c      **** }
 1428              		.loc 1 446 0
 1429 0026 0837     		adds	r7, r7, #8
 1430              		.cfi_def_cfa_offset 8
 1431 0028 BD46     		mov	sp, r7
 1432              		.cfi_def_cfa_register 13
 1433              		@ sp needed
 1434 002a 80BD     		pop	{r7, pc}
 1435              		.cfi_endproc
 1436              	.LFE75:
 1437              		.size	setWheelDirection, .-setWheelDirection
 1438              		.section	.text.turnLeft,"ax",%progbits
 1439              		.align	2
 1440              		.global	turnLeft
 1441              		.thumb
 1442              		.thumb_func
 1443              		.type	turnLeft, %function
 1444              	turnLeft:
 1445              	.LFB76:
 447:.\main.c      **** 
 448:.\main.c      **** void turnLeft() {
 1446              		.loc 1 448 0
 1447              		.cfi_startproc
 1448              		@ args = 0, pretend = 0, frame = 0
 1449              		@ frame_needed = 1, uses_anonymous_args = 0
 1450 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 35


 1451              		.cfi_def_cfa_offset 8
 1452              		.cfi_offset 7, -8
 1453              		.cfi_offset 14, -4
 1454 0002 00AF     		add	r7, sp, #0
 1455              		.cfi_def_cfa_register 7
 449:.\main.c      ****     PWM_1_WriteCompare(0);
 1456              		.loc 1 449 0
 1457 0004 0020     		movs	r0, #0
 1458 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 450:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 1459              		.loc 1 450 0
 1460 000a 4FF4E170 		mov	r0, #450
 1461 000e FFF7FEFF 		bl	PWM_2_WriteCompare
 451:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 1462              		.loc 1 451 0
 1463 0012 08E0     		b	.L64
 1464              	.L65:
 452:.\main.c      ****         if (adc_flag) {
 1465              		.loc 1 452 0
 1466 0014 084B     		ldr	r3, .L66
 1467 0016 1B68     		ldr	r3, [r3]
 1468 0018 002B     		cmp	r3, #0
 1469 001a 04D0     		beq	.L64
 453:.\main.c      ****             updateSensorValues();
 1470              		.loc 1 453 0
 1471 001c FFF7FEFF 		bl	updateSensorValues
 454:.\main.c      ****             adc_flag = FALSE;
 1472              		.loc 1 454 0
 1473 0020 054B     		ldr	r3, .L66
 1474 0022 0022     		movs	r2, #0
 1475 0024 1A60     		str	r2, [r3]
 1476              	.L64:
 451:.\main.c      ****         if (adc_flag) {
 1477              		.loc 1 451 0
 1478 0026 054B     		ldr	r3, .L66+4
 1479 0028 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1480 002a 002B     		cmp	r3, #0
 1481 002c F2D0     		beq	.L65
 455:.\main.c      ****         }
 456:.\main.c      ****     }
 457:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 1482              		.loc 1 457 0
 1483 002e 4FF4E170 		mov	r0, #450
 1484 0032 FFF7FEFF 		bl	PWM_1_WriteCompare
 458:.\main.c      **** }
 1485              		.loc 1 458 0
 1486 0036 80BD     		pop	{r7, pc}
 1487              	.L67:
 1488              		.align	2
 1489              	.L66:
 1490 0038 00000000 		.word	adc_flag
 1491 003c 00000000 		.word	sensor_readings
 1492              		.cfi_endproc
 1493              	.LFE76:
 1494              		.size	turnLeft, .-turnLeft
 1495              		.section	.text.turnRight,"ax",%progbits
 1496              		.align	2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 36


 1497              		.global	turnRight
 1498              		.thumb
 1499              		.thumb_func
 1500              		.type	turnRight, %function
 1501              	turnRight:
 1502              	.LFB77:
 459:.\main.c      **** 
 460:.\main.c      **** void turnRight() {
 1503              		.loc 1 460 0
 1504              		.cfi_startproc
 1505              		@ args = 0, pretend = 0, frame = 0
 1506              		@ frame_needed = 1, uses_anonymous_args = 0
 1507 0000 80B5     		push	{r7, lr}
 1508              		.cfi_def_cfa_offset 8
 1509              		.cfi_offset 7, -8
 1510              		.cfi_offset 14, -4
 1511 0002 00AF     		add	r7, sp, #0
 1512              		.cfi_def_cfa_register 7
 461:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 1513              		.loc 1 461 0
 1514 0004 4FF4E170 		mov	r0, #450
 1515 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
 462:.\main.c      ****     PWM_2_WriteCompare(0);
 1516              		.loc 1 462 0
 1517 000c 0020     		movs	r0, #0
 1518 000e FFF7FEFF 		bl	PWM_2_WriteCompare
 463:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 1519              		.loc 1 463 0
 1520 0012 08E0     		b	.L69
 1521              	.L70:
 464:.\main.c      ****         if (adc_flag) {
 1522              		.loc 1 464 0
 1523 0014 084B     		ldr	r3, .L71
 1524 0016 1B68     		ldr	r3, [r3]
 1525 0018 002B     		cmp	r3, #0
 1526 001a 04D0     		beq	.L69
 465:.\main.c      ****             updateSensorValues();
 1527              		.loc 1 465 0
 1528 001c FFF7FEFF 		bl	updateSensorValues
 466:.\main.c      ****             adc_flag = FALSE;
 1529              		.loc 1 466 0
 1530 0020 054B     		ldr	r3, .L71
 1531 0022 0022     		movs	r2, #0
 1532 0024 1A60     		str	r2, [r3]
 1533              	.L69:
 463:.\main.c      ****         if (adc_flag) {
 1534              		.loc 1 463 0
 1535 0026 054B     		ldr	r3, .L71+4
 1536 0028 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1537 002a 002B     		cmp	r3, #0
 1538 002c F2D0     		beq	.L70
 467:.\main.c      ****         }
 468:.\main.c      ****     }
 469:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 1539              		.loc 1 469 0
 1540 002e 4FF4E170 		mov	r0, #450
 1541 0032 FFF7FEFF 		bl	PWM_2_WriteCompare
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 37


 470:.\main.c      **** }
 1542              		.loc 1 470 0
 1543 0036 80BD     		pop	{r7, pc}
 1544              	.L72:
 1545              		.align	2
 1546              	.L71:
 1547 0038 00000000 		.word	adc_flag
 1548 003c 00000000 		.word	sensor_readings
 1549              		.cfi_endproc
 1550              	.LFE77:
 1551              		.size	turnRight, .-turnRight
 1552              		.section	.rodata
 1553 0071 000000   		.align	2
 1554              	.LC8:
 1555 0074 202D2066 		.ascii	" - forward\015\012\000"
 1555      6F727761 
 1555      72640D0A 
 1555      00
 1556 0081 000000   		.align	2
 1557              	.LC9:
 1558 0084 202D2074 		.ascii	" - turn 45\015\012\000"
 1558      75726E20 
 1558      34350D0A 
 1558      00
 1559 0091 000000   		.section	.text.sharpTurnLeft,"ax",%progbits
 1560              		.align	2
 1561              		.global	sharpTurnLeft
 1562              		.thumb
 1563              		.thumb_func
 1564              		.type	sharpTurnLeft, %function
 1565              	sharpTurnLeft:
 1566              	.LFB78:
 471:.\main.c      **** 
 472:.\main.c      **** void sharpTurnLeft() {
 1567              		.loc 1 472 0
 1568              		.cfi_startproc
 1569              		@ args = 0, pretend = 0, frame = 0
 1570              		@ frame_needed = 1, uses_anonymous_args = 0
 1571 0000 80B5     		push	{r7, lr}
 1572              		.cfi_def_cfa_offset 8
 1573              		.cfi_offset 7, -8
 1574              		.cfi_offset 14, -4
 1575 0002 00AF     		add	r7, sp, #0
 1576              		.cfi_def_cfa_register 7
 473:.\main.c      ****     usbPutString(" - forward\r\n");
 1577              		.loc 1 473 0
 1578 0004 1C48     		ldr	r0, .L78
 1579 0006 FFF7FEFF 		bl	usbPutString
 474:.\main.c      ****     // go until we reach the junction
 475:.\main.c      ****     while (!sensor_readings[BOTTOM_LEFT_SENSOR]) {
 1580              		.loc 1 475 0
 1581 000a 08E0     		b	.L74
 1582              	.L75:
 476:.\main.c      ****         if (adc_flag) {
 1583              		.loc 1 476 0
 1584 000c 1B4B     		ldr	r3, .L78+4
 1585 000e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 38


 1586 0010 002B     		cmp	r3, #0
 1587 0012 04D0     		beq	.L74
 477:.\main.c      ****             updateSensorValues();
 1588              		.loc 1 477 0
 1589 0014 FFF7FEFF 		bl	updateSensorValues
 478:.\main.c      ****             adc_flag = FALSE;
 1590              		.loc 1 478 0
 1591 0018 184B     		ldr	r3, .L78+4
 1592 001a 0022     		movs	r2, #0
 1593 001c 1A60     		str	r2, [r3]
 1594              	.L74:
 475:.\main.c      ****         if (adc_flag) {
 1595              		.loc 1 475 0
 1596 001e 184B     		ldr	r3, .L78+8
 1597 0020 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1598 0022 002B     		cmp	r3, #0
 1599 0024 F2D0     		beq	.L75
 479:.\main.c      ****         }
 480:.\main.c      ****     }
 481:.\main.c      ****     
 482:.\main.c      ****     usbPutString(" - turn 45\r\n");
 1600              		.loc 1 482 0
 1601 0026 1748     		ldr	r0, .L78+12
 1602 0028 FFF7FEFF 		bl	usbPutString
 483:.\main.c      ****     
 484:.\main.c      ****     // make the turn
 485:.\main.c      ****     setWheelDirection(FALSE, TRUE);
 1603              		.loc 1 485 0
 1604 002c 0020     		movs	r0, #0
 1605 002e 0121     		movs	r1, #1
 1606 0030 FFF7FEFF 		bl	setWheelDirection
 486:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 1607              		.loc 1 486 0
 1608 0034 4FF4E170 		mov	r0, #450
 1609 0038 FFF7FEFF 		bl	PWM_1_WriteCompare
 487:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 1610              		.loc 1 487 0
 1611 003c 4FF4E170 		mov	r0, #450
 1612 0040 FFF7FEFF 		bl	PWM_2_WriteCompare
 488:.\main.c      ****     
 489:.\main.c      ****     turnForDegrees(45); // so that it doesn't stop if it's already on a line
 1613              		.loc 1 489 0
 1614 0044 2D20     		movs	r0, #45
 1615 0046 FFF7FEFF 		bl	turnForDegrees
 490:.\main.c      ****     
 491:.\main.c      ****     usbPutString(" - finish turn\r\n");
 1616              		.loc 1 491 0
 1617 004a 0F48     		ldr	r0, .L78+16
 1618 004c FFF7FEFF 		bl	usbPutString
 492:.\main.c      ****     
 493:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 1619              		.loc 1 493 0
 1620 0050 08E0     		b	.L76
 1621              	.L77:
 494:.\main.c      ****         if (adc_flag) {
 1622              		.loc 1 494 0
 1623 0052 0A4B     		ldr	r3, .L78+4
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 39


 1624 0054 1B68     		ldr	r3, [r3]
 1625 0056 002B     		cmp	r3, #0
 1626 0058 04D0     		beq	.L76
 495:.\main.c      ****             updateSensorValues();
 1627              		.loc 1 495 0
 1628 005a FFF7FEFF 		bl	updateSensorValues
 496:.\main.c      ****             adc_flag = FALSE;
 1629              		.loc 1 496 0
 1630 005e 074B     		ldr	r3, .L78+4
 1631 0060 0022     		movs	r2, #0
 1632 0062 1A60     		str	r2, [r3]
 1633              	.L76:
 493:.\main.c      ****         if (adc_flag) {
 1634              		.loc 1 493 0
 1635 0064 064B     		ldr	r3, .L78+8
 1636 0066 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1637 0068 002B     		cmp	r3, #0
 1638 006a F2D0     		beq	.L77
 497:.\main.c      ****         }
 498:.\main.c      ****     }
 499:.\main.c      ****     setWheelDirection(TRUE, TRUE);
 1639              		.loc 1 499 0
 1640 006c 0120     		movs	r0, #1
 1641 006e 0121     		movs	r1, #1
 1642 0070 FFF7FEFF 		bl	setWheelDirection
 500:.\main.c      **** }
 1643              		.loc 1 500 0
 1644 0074 80BD     		pop	{r7, pc}
 1645              	.L79:
 1646 0076 00BF     		.align	2
 1647              	.L78:
 1648 0078 74000000 		.word	.LC8
 1649 007c 00000000 		.word	adc_flag
 1650 0080 00000000 		.word	sensor_readings
 1651 0084 84000000 		.word	.LC9
 1652 0088 60000000 		.word	.LC7
 1653              		.cfi_endproc
 1654              	.LFE78:
 1655              		.size	sharpTurnLeft, .-sharpTurnLeft
 1656              		.section	.text.sharpTurnRight,"ax",%progbits
 1657              		.align	2
 1658              		.global	sharpTurnRight
 1659              		.thumb
 1660              		.thumb_func
 1661              		.type	sharpTurnRight, %function
 1662              	sharpTurnRight:
 1663              	.LFB79:
 501:.\main.c      **** 
 502:.\main.c      **** void sharpTurnRight() {
 1664              		.loc 1 502 0
 1665              		.cfi_startproc
 1666              		@ args = 0, pretend = 0, frame = 0
 1667              		@ frame_needed = 1, uses_anonymous_args = 0
 1668 0000 80B5     		push	{r7, lr}
 1669              		.cfi_def_cfa_offset 8
 1670              		.cfi_offset 7, -8
 1671              		.cfi_offset 14, -4
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 40


 1672 0002 00AF     		add	r7, sp, #0
 1673              		.cfi_def_cfa_register 7
 503:.\main.c      ****     usbPutString(" - forward\r\n");
 1674              		.loc 1 503 0
 1675 0004 1C48     		ldr	r0, .L85
 1676 0006 FFF7FEFF 		bl	usbPutString
 504:.\main.c      ****     
 505:.\main.c      ****     // go until we reach the junction
 506:.\main.c      ****     while (!sensor_readings[BOTTOM_RIGHT_SENSOR]) {
 1677              		.loc 1 506 0
 1678 000a 08E0     		b	.L81
 1679              	.L82:
 507:.\main.c      ****         if (adc_flag) {
 1680              		.loc 1 507 0
 1681 000c 1B4B     		ldr	r3, .L85+4
 1682 000e 1B68     		ldr	r3, [r3]
 1683 0010 002B     		cmp	r3, #0
 1684 0012 04D0     		beq	.L81
 508:.\main.c      ****             updateSensorValues();
 1685              		.loc 1 508 0
 1686 0014 FFF7FEFF 		bl	updateSensorValues
 509:.\main.c      ****             adc_flag = FALSE;
 1687              		.loc 1 509 0
 1688 0018 184B     		ldr	r3, .L85+4
 1689 001a 0022     		movs	r2, #0
 1690 001c 1A60     		str	r2, [r3]
 1691              	.L81:
 506:.\main.c      ****         if (adc_flag) {
 1692              		.loc 1 506 0
 1693 001e 184B     		ldr	r3, .L85+8
 1694 0020 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1695 0022 002B     		cmp	r3, #0
 1696 0024 F2D0     		beq	.L82
 510:.\main.c      ****         }
 511:.\main.c      ****     }
 512:.\main.c      ****     
 513:.\main.c      ****     usbPutString(" - turn 45\r\n");
 1697              		.loc 1 513 0
 1698 0026 1748     		ldr	r0, .L85+12
 1699 0028 FFF7FEFF 		bl	usbPutString
 514:.\main.c      ****     
 515:.\main.c      ****     // make the turn
 516:.\main.c      ****     setWheelDirection(TRUE, FALSE);
 1700              		.loc 1 516 0
 1701 002c 0120     		movs	r0, #1
 1702 002e 0021     		movs	r1, #0
 1703 0030 FFF7FEFF 		bl	setWheelDirection
 517:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 1704              		.loc 1 517 0
 1705 0034 4FF4E170 		mov	r0, #450
 1706 0038 FFF7FEFF 		bl	PWM_1_WriteCompare
 518:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 1707              		.loc 1 518 0
 1708 003c 4FF4E170 		mov	r0, #450
 1709 0040 FFF7FEFF 		bl	PWM_2_WriteCompare
 519:.\main.c      ****     
 520:.\main.c      ****     turnForDegrees(45); // so that it doesn't stop if it's already on a line
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 41


 1710              		.loc 1 520 0
 1711 0044 2D20     		movs	r0, #45
 1712 0046 FFF7FEFF 		bl	turnForDegrees
 521:.\main.c      ****     
 522:.\main.c      ****     usbPutString(" - finish turn\r\n");
 1713              		.loc 1 522 0
 1714 004a 0F48     		ldr	r0, .L85+16
 1715 004c FFF7FEFF 		bl	usbPutString
 523:.\main.c      ****     
 524:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 1716              		.loc 1 524 0
 1717 0050 08E0     		b	.L83
 1718              	.L84:
 525:.\main.c      ****         if (adc_flag) {
 1719              		.loc 1 525 0
 1720 0052 0A4B     		ldr	r3, .L85+4
 1721 0054 1B68     		ldr	r3, [r3]
 1722 0056 002B     		cmp	r3, #0
 1723 0058 04D0     		beq	.L83
 526:.\main.c      ****             updateSensorValues();
 1724              		.loc 1 526 0
 1725 005a FFF7FEFF 		bl	updateSensorValues
 527:.\main.c      ****             adc_flag = FALSE;
 1726              		.loc 1 527 0
 1727 005e 074B     		ldr	r3, .L85+4
 1728 0060 0022     		movs	r2, #0
 1729 0062 1A60     		str	r2, [r3]
 1730              	.L83:
 524:.\main.c      ****         if (adc_flag) {
 1731              		.loc 1 524 0
 1732 0064 064B     		ldr	r3, .L85+8
 1733 0066 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1734 0068 002B     		cmp	r3, #0
 1735 006a F2D0     		beq	.L84
 528:.\main.c      ****         }
 529:.\main.c      ****     }
 530:.\main.c      ****     setWheelDirection(TRUE, TRUE);
 1736              		.loc 1 530 0
 1737 006c 0120     		movs	r0, #1
 1738 006e 0121     		movs	r1, #1
 1739 0070 FFF7FEFF 		bl	setWheelDirection
 531:.\main.c      **** }
 1740              		.loc 1 531 0
 1741 0074 80BD     		pop	{r7, pc}
 1742              	.L86:
 1743 0076 00BF     		.align	2
 1744              	.L85:
 1745 0078 74000000 		.word	.LC8
 1746 007c 00000000 		.word	adc_flag
 1747 0080 00000000 		.word	sensor_readings
 1748 0084 84000000 		.word	.LC9
 1749 0088 60000000 		.word	.LC7
 1750              		.cfi_endproc
 1751              	.LFE79:
 1752              		.size	sharpTurnRight, .-sharpTurnRight
 1753              		.section	.text.usbPutString,"ax",%progbits
 1754              		.align	2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 42


 1755              		.global	usbPutString
 1756              		.thumb
 1757              		.thumb_func
 1758              		.type	usbPutString, %function
 1759              	usbPutString:
 1760              	.LFB80:
 532:.\main.c      **** 
 533:.\main.c      **** //* ========================================
 534:.\main.c      **** void usbPutString(char *s) {
 1761              		.loc 1 534 0
 1762              		.cfi_startproc
 1763              		@ args = 0, pretend = 0, frame = 8
 1764              		@ frame_needed = 1, uses_anonymous_args = 0
 1765              		@ link register save eliminated.
 1766 0000 80B4     		push	{r7}
 1767              		.cfi_def_cfa_offset 4
 1768              		.cfi_offset 7, -4
 1769 0002 83B0     		sub	sp, sp, #12
 1770              		.cfi_def_cfa_offset 16
 1771 0004 00AF     		add	r7, sp, #0
 1772              		.cfi_def_cfa_register 7
 1773 0006 7860     		str	r0, [r7, #4]
 535:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
 536:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 537:.\main.c      **** //  length to 62 char (63rd char is a '!')
 538:.\main.c      ****     
 539:.\main.c      **** #ifdef PUTTY
 540:.\main.c      ****     while (USBUART_CDCIsReady() == 0){ };
 541:.\main.c      ****     USBUART_PutData((uint8 *)s, strlen(s));
 542:.\main.c      **** #endif
 543:.\main.c      ****     (void)s;
 544:.\main.c      ****     return;
 1774              		.loc 1 544 0
 1775 0008 00BF     		nop
 545:.\main.c      **** }
 1776              		.loc 1 545 0
 1777 000a 0C37     		adds	r7, r7, #12
 1778              		.cfi_def_cfa_offset 4
 1779 000c BD46     		mov	sp, r7
 1780              		.cfi_def_cfa_register 13
 1781              		@ sp needed
 1782 000e 5DF8047B 		ldr	r7, [sp], #4
 1783              		.cfi_restore 7
 1784              		.cfi_def_cfa_offset 0
 1785 0012 7047     		bx	lr
 1786              		.cfi_endproc
 1787              	.LFE80:
 1788              		.size	usbPutString, .-usbPutString
 1789              		.text
 1790              	.Letext0:
 1791              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 1792              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 1793              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1794              		.file 5 ".\\vars.h"
 1795              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1796              		.section	.debug_info,"",%progbits
 1797              	.Ldebug_info0:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 43


 1798 0000 92070000 		.4byte	0x792
 1799 0004 0400     		.2byte	0x4
 1800 0006 00000000 		.4byte	.Ldebug_abbrev0
 1801 000a 04       		.byte	0x4
 1802 000b 01       		.uleb128 0x1
 1803 000c 0C020000 		.4byte	.LASF103
 1804 0010 01       		.byte	0x1
 1805 0011 2E000000 		.4byte	.LASF104
 1806 0015 9E000000 		.4byte	.LASF105
 1807 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1808 001d 00000000 		.4byte	0
 1809 0021 00000000 		.4byte	.Ldebug_line0
 1810 0025 02       		.uleb128 0x2
 1811 0026 01       		.byte	0x1
 1812 0027 06       		.byte	0x6
 1813 0028 19030000 		.4byte	.LASF0
 1814 002c 02       		.uleb128 0x2
 1815 002d 01       		.byte	0x1
 1816 002e 08       		.byte	0x8
 1817 002f ED020000 		.4byte	.LASF1
 1818 0033 02       		.uleb128 0x2
 1819 0034 02       		.byte	0x2
 1820 0035 05       		.byte	0x5
 1821 0036 4D000000 		.4byte	.LASF2
 1822 003a 02       		.uleb128 0x2
 1823 003b 02       		.byte	0x2
 1824 003c 07       		.byte	0x7
 1825 003d B0030000 		.4byte	.LASF3
 1826 0041 03       		.uleb128 0x3
 1827 0042 01050000 		.4byte	.LASF11
 1828 0046 02       		.byte	0x2
 1829 0047 3F       		.byte	0x3f
 1830 0048 4C000000 		.4byte	0x4c
 1831 004c 02       		.uleb128 0x2
 1832 004d 04       		.byte	0x4
 1833 004e 05       		.byte	0x5
 1834 004f E4030000 		.4byte	.LASF4
 1835 0053 02       		.uleb128 0x2
 1836 0054 04       		.byte	0x4
 1837 0055 07       		.byte	0x7
 1838 0056 83030000 		.4byte	.LASF5
 1839 005a 02       		.uleb128 0x2
 1840 005b 08       		.byte	0x8
 1841 005c 05       		.byte	0x5
 1842 005d A6010000 		.4byte	.LASF6
 1843 0061 02       		.uleb128 0x2
 1844 0062 08       		.byte	0x8
 1845 0063 07       		.byte	0x7
 1846 0064 33030000 		.4byte	.LASF7
 1847 0068 04       		.uleb128 0x4
 1848 0069 04       		.byte	0x4
 1849 006a 05       		.byte	0x5
 1850 006b 696E7400 		.ascii	"int\000"
 1851 006f 02       		.uleb128 0x2
 1852 0070 04       		.byte	0x4
 1853 0071 07       		.byte	0x7
 1854 0072 50030000 		.4byte	.LASF8
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 44


 1855 0076 02       		.uleb128 0x2
 1856 0077 04       		.byte	0x4
 1857 0078 07       		.byte	0x7
 1858 0079 64000000 		.4byte	.LASF9
 1859 007d 05       		.uleb128 0x5
 1860 007e 04       		.byte	0x4
 1861 007f 83000000 		.4byte	0x83
 1862 0083 02       		.uleb128 0x2
 1863 0084 01       		.byte	0x1
 1864 0085 08       		.byte	0x8
 1865 0086 D6030000 		.4byte	.LASF10
 1866 008a 03       		.uleb128 0x3
 1867 008b 06040000 		.4byte	.LASF12
 1868 008f 03       		.byte	0x3
 1869 0090 2C       		.byte	0x2c
 1870 0091 41000000 		.4byte	0x41
 1871 0095 06       		.uleb128 0x6
 1872 0096 59010000 		.4byte	.LASF13
 1873 009a 04       		.byte	0x4
 1874 009b 9201     		.2byte	0x192
 1875 009d 2C000000 		.4byte	0x2c
 1876 00a1 06       		.uleb128 0x6
 1877 00a2 46010000 		.4byte	.LASF14
 1878 00a6 04       		.byte	0x4
 1879 00a7 9301     		.2byte	0x193
 1880 00a9 3A000000 		.4byte	0x3a
 1881 00ad 06       		.uleb128 0x6
 1882 00ae C1010000 		.4byte	.LASF15
 1883 00b2 04       		.byte	0x4
 1884 00b3 9501     		.2byte	0x195
 1885 00b5 25000000 		.4byte	0x25
 1886 00b9 06       		.uleb128 0x6
 1887 00ba 53010000 		.4byte	.LASF16
 1888 00be 04       		.byte	0x4
 1889 00bf 9601     		.2byte	0x196
 1890 00c1 33000000 		.4byte	0x33
 1891 00c5 06       		.uleb128 0x6
 1892 00c6 BF040000 		.4byte	.LASF17
 1893 00ca 04       		.byte	0x4
 1894 00cb 9701     		.2byte	0x197
 1895 00cd 4C000000 		.4byte	0x4c
 1896 00d1 02       		.uleb128 0x2
 1897 00d2 04       		.byte	0x4
 1898 00d3 04       		.byte	0x4
 1899 00d4 A0010000 		.4byte	.LASF18
 1900 00d8 02       		.uleb128 0x2
 1901 00d9 08       		.byte	0x8
 1902 00da 04       		.byte	0x4
 1903 00db C5040000 		.4byte	.LASF19
 1904 00df 07       		.uleb128 0x7
 1905 00e0 C3030000 		.4byte	.LASF106
 1906 00e4 20       		.byte	0x20
 1907 00e5 05       		.byte	0x5
 1908 00e6 29       		.byte	0x29
 1909 00e7 B8010000 		.4byte	0x1b8
 1910 00eb 08       		.uleb128 0x8
 1911 00ec B6050000 		.4byte	.LASF20
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 45


 1912 00f0 05       		.byte	0x5
 1913 00f1 2A       		.byte	0x2a
 1914 00f2 AD000000 		.4byte	0xad
 1915 00f6 00       		.byte	0
 1916 00f7 08       		.uleb128 0x8
 1917 00f8 4D010000 		.4byte	.LASF21
 1918 00fc 05       		.byte	0x5
 1919 00fd 2B       		.byte	0x2b
 1920 00fe 95000000 		.4byte	0x95
 1921 0102 01       		.byte	0x1
 1922 0103 08       		.uleb128 0x8
 1923 0104 ED030000 		.4byte	.LASF22
 1924 0108 05       		.byte	0x5
 1925 0109 2C       		.byte	0x2c
 1926 010a B9000000 		.4byte	0xb9
 1927 010e 02       		.byte	0x2
 1928 010f 08       		.uleb128 0x8
 1929 0110 94050000 		.4byte	.LASF23
 1930 0114 05       		.byte	0x5
 1931 0115 2D       		.byte	0x2d
 1932 0116 B9000000 		.4byte	0xb9
 1933 011a 04       		.byte	0x4
 1934 011b 08       		.uleb128 0x8
 1935 011c 9A020000 		.4byte	.LASF24
 1936 0120 05       		.byte	0x5
 1937 0121 2E       		.byte	0x2e
 1938 0122 B9000000 		.4byte	0xb9
 1939 0126 06       		.byte	0x6
 1940 0127 08       		.uleb128 0x8
 1941 0128 94040000 		.4byte	.LASF25
 1942 012c 05       		.byte	0x5
 1943 012d 2F       		.byte	0x2f
 1944 012e B9000000 		.4byte	0xb9
 1945 0132 08       		.byte	0x8
 1946 0133 08       		.uleb128 0x8
 1947 0134 33050000 		.4byte	.LASF26
 1948 0138 05       		.byte	0x5
 1949 0139 30       		.byte	0x30
 1950 013a B9000000 		.4byte	0xb9
 1951 013e 0A       		.byte	0xa
 1952 013f 08       		.uleb128 0x8
 1953 0140 FB020000 		.4byte	.LASF27
 1954 0144 05       		.byte	0x5
 1955 0145 31       		.byte	0x31
 1956 0146 B9000000 		.4byte	0xb9
 1957 014a 0C       		.byte	0xc
 1958 014b 08       		.uleb128 0x8
 1959 014c F0010000 		.4byte	.LASF28
 1960 0150 05       		.byte	0x5
 1961 0151 32       		.byte	0x32
 1962 0152 B9000000 		.4byte	0xb9
 1963 0156 0E       		.byte	0xe
 1964 0157 08       		.uleb128 0x8
 1965 0158 A8030000 		.4byte	.LASF29
 1966 015c 05       		.byte	0x5
 1967 015d 33       		.byte	0x33
 1968 015e B9000000 		.4byte	0xb9
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 46


 1969 0162 10       		.byte	0x10
 1970 0163 08       		.uleb128 0x8
 1971 0164 D1020000 		.4byte	.LASF30
 1972 0168 05       		.byte	0x5
 1973 0169 34       		.byte	0x34
 1974 016a B9000000 		.4byte	0xb9
 1975 016e 12       		.byte	0x12
 1976 016f 08       		.uleb128 0x8
 1977 0170 38040000 		.4byte	.LASF31
 1978 0174 05       		.byte	0x5
 1979 0175 35       		.byte	0x35
 1980 0176 B9000000 		.4byte	0xb9
 1981 017a 14       		.byte	0x14
 1982 017b 08       		.uleb128 0x8
 1983 017c 5F010000 		.4byte	.LASF32
 1984 0180 05       		.byte	0x5
 1985 0181 36       		.byte	0x36
 1986 0182 B9000000 		.4byte	0xb9
 1987 0186 16       		.byte	0x16
 1988 0187 08       		.uleb128 0x8
 1989 0188 45000000 		.4byte	.LASF33
 1990 018c 05       		.byte	0x5
 1991 018d 37       		.byte	0x37
 1992 018e B9000000 		.4byte	0xb9
 1993 0192 18       		.byte	0x18
 1994 0193 08       		.uleb128 0x8
 1995 0194 E8010000 		.4byte	.LASF34
 1996 0198 05       		.byte	0x5
 1997 0199 38       		.byte	0x38
 1998 019a B9000000 		.4byte	0xb9
 1999 019e 1A       		.byte	0x1a
 2000 019f 08       		.uleb128 0x8
 2001 01a0 9F030000 		.4byte	.LASF35
 2002 01a4 05       		.byte	0x5
 2003 01a5 39       		.byte	0x39
 2004 01a6 B9000000 		.4byte	0xb9
 2005 01aa 1C       		.byte	0x1c
 2006 01ab 08       		.uleb128 0x8
 2007 01ac 1E040000 		.4byte	.LASF36
 2008 01b0 05       		.byte	0x5
 2009 01b1 3A       		.byte	0x3a
 2010 01b2 B9000000 		.4byte	0xb9
 2011 01b6 1E       		.byte	0x1e
 2012 01b7 00       		.byte	0
 2013 01b8 09       		.uleb128 0x9
 2014 01b9 0D030000 		.4byte	.LASF37
 2015 01bd 01       		.byte	0x1
 2016 01be 5F       		.byte	0x5f
 2017 01bf 00000000 		.4byte	.LFB63
 2018 01c3 30000000 		.4byte	.LFE63-.LFB63
 2019 01c7 01       		.uleb128 0x1
 2020 01c8 9C       		.byte	0x9c
 2021 01c9 0A       		.uleb128 0xa
 2022 01ca 0B000000 		.4byte	.LASF38
 2023 01ce 01       		.byte	0x1
 2024 01cf 66       		.byte	0x66
 2025 01d0 00000000 		.4byte	.LFB64
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 47


 2026 01d4 18000000 		.4byte	.LFE64-.LFB64
 2027 01d8 01       		.uleb128 0x1
 2028 01d9 9C       		.byte	0x9c
 2029 01da 0B       		.uleb128 0xb
 2030 01db 8D000000 		.4byte	.LASF42
 2031 01df 01       		.byte	0x1
 2032 01e0 7B       		.byte	0x7b
 2033 01e1 68000000 		.4byte	0x68
 2034 01e5 00000000 		.4byte	.LFB65
 2035 01e9 7C000000 		.4byte	.LFE65-.LFB65
 2036 01ed 01       		.uleb128 0x1
 2037 01ee 9C       		.byte	0x9c
 2038 01ef 1E020000 		.4byte	0x21e
 2039 01f3 0C       		.uleb128 0xc
 2040 01f4 9C040000 		.4byte	.LASF39
 2041 01f8 01       		.byte	0x1
 2042 01f9 A0       		.byte	0xa0
 2043 01fa 68000000 		.4byte	0x68
 2044 01fe 02       		.uleb128 0x2
 2045 01ff 91       		.byte	0x91
 2046 0200 74       		.sleb128 -12
 2047 0201 0C       		.uleb128 0xc
 2048 0202 AE040000 		.4byte	.LASF40
 2049 0206 01       		.byte	0x1
 2050 0207 A1       		.byte	0xa1
 2051 0208 68000000 		.4byte	0x68
 2052 020c 02       		.uleb128 0x2
 2053 020d 91       		.byte	0x91
 2054 020e 70       		.sleb128 -16
 2055 020f 0C       		.uleb128 0xc
 2056 0210 1B050000 		.4byte	.LASF41
 2057 0214 01       		.byte	0x1
 2058 0215 A2       		.byte	0xa2
 2059 0216 68000000 		.4byte	0x68
 2060 021a 02       		.uleb128 0x2
 2061 021b 91       		.byte	0x91
 2062 021c 6C       		.sleb128 -20
 2063 021d 00       		.byte	0
 2064 021e 0D       		.uleb128 0xd
 2065 021f 95010000 		.4byte	.LASF43
 2066 0223 01       		.byte	0x1
 2067 0224 D3       		.byte	0xd3
 2068 0225 00000000 		.4byte	.LFB66
 2069 0229 00020000 		.4byte	.LFE66-.LFB66
 2070 022d 01       		.uleb128 0x1
 2071 022e 9C       		.byte	0x9c
 2072 022f 7A020000 		.4byte	0x27a
 2073 0233 0E       		.uleb128 0xe
 2074 0234 66040000 		.4byte	.LASF44
 2075 0238 01       		.byte	0x1
 2076 0239 D3       		.byte	0xd3
 2077 023a 68000000 		.4byte	0x68
 2078 023e 02       		.uleb128 0x2
 2079 023f 91       		.byte	0x91
 2080 0240 4C       		.sleb128 -52
 2081 0241 0E       		.uleb128 0xe
 2082 0242 9C040000 		.4byte	.LASF39
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 48


 2083 0246 01       		.byte	0x1
 2084 0247 D3       		.byte	0xd3
 2085 0248 7A020000 		.4byte	0x27a
 2086 024c 02       		.uleb128 0x2
 2087 024d 91       		.byte	0x91
 2088 024e 48       		.sleb128 -56
 2089 024f 0E       		.uleb128 0xe
 2090 0250 AE040000 		.4byte	.LASF40
 2091 0254 01       		.byte	0x1
 2092 0255 D3       		.byte	0xd3
 2093 0256 7A020000 		.4byte	0x27a
 2094 025a 02       		.uleb128 0x2
 2095 025b 91       		.byte	0x91
 2096 025c 44       		.sleb128 -60
 2097 025d 0F       		.uleb128 0xf
 2098 025e 62756600 		.ascii	"buf\000"
 2099 0262 01       		.byte	0x1
 2100 0263 D5       		.byte	0xd5
 2101 0264 80020000 		.4byte	0x280
 2102 0268 02       		.uleb128 0x2
 2103 0269 91       		.byte	0x91
 2104 026a 54       		.sleb128 -44
 2105 026b 0C       		.uleb128 0xc
 2106 026c CD030000 		.4byte	.LASF45
 2107 0270 01       		.byte	0x1
 2108 0271 DC       		.byte	0xdc
 2109 0272 D1000000 		.4byte	0xd1
 2110 0276 02       		.uleb128 0x2
 2111 0277 91       		.byte	0x91
 2112 0278 74       		.sleb128 -12
 2113 0279 00       		.byte	0
 2114 027a 05       		.uleb128 0x5
 2115 027b 04       		.byte	0x4
 2116 027c 68000000 		.4byte	0x68
 2117 0280 10       		.uleb128 0x10
 2118 0281 83000000 		.4byte	0x83
 2119 0285 90020000 		.4byte	0x290
 2120 0289 11       		.uleb128 0x11
 2121 028a 76000000 		.4byte	0x76
 2122 028e 1F       		.byte	0x1f
 2123 028f 00       		.byte	0
 2124 0290 12       		.uleb128 0x12
 2125 0291 5A050000 		.4byte	.LASF55
 2126 0295 01       		.byte	0x1
 2127 0296 2001     		.2byte	0x120
 2128 0298 D1000000 		.4byte	0xd1
 2129 029c 00000000 		.4byte	.LFB67
 2130 02a0 CC000000 		.4byte	.LFE67-.LFB67
 2131 02a4 01       		.uleb128 0x1
 2132 02a5 9C       		.byte	0x9c
 2133 02a6 E7020000 		.4byte	0x2e7
 2134 02aa 13       		.uleb128 0x13
 2135 02ab D9020000 		.4byte	.LASF46
 2136 02af 01       		.byte	0x1
 2137 02b0 2001     		.2byte	0x120
 2138 02b2 68000000 		.4byte	0x68
 2139 02b6 02       		.uleb128 0x2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 49


 2140 02b7 91       		.byte	0x91
 2141 02b8 6C       		.sleb128 -20
 2142 02b9 13       		.uleb128 0x13
 2143 02ba 6C010000 		.4byte	.LASF47
 2144 02be 01       		.byte	0x1
 2145 02bf 2001     		.2byte	0x120
 2146 02c1 68000000 		.4byte	0x68
 2147 02c5 02       		.uleb128 0x2
 2148 02c6 91       		.byte	0x91
 2149 02c7 68       		.sleb128 -24
 2150 02c8 14       		.uleb128 0x14
 2151 02c9 5D030000 		.4byte	.LASF48
 2152 02cd 01       		.byte	0x1
 2153 02ce 2101     		.2byte	0x121
 2154 02d0 D1000000 		.4byte	0xd1
 2155 02d4 02       		.uleb128 0x2
 2156 02d5 91       		.byte	0x91
 2157 02d6 74       		.sleb128 -12
 2158 02d7 14       		.uleb128 0x14
 2159 02d8 1A000000 		.4byte	.LASF49
 2160 02dc 01       		.byte	0x1
 2161 02dd 2201     		.2byte	0x122
 2162 02df D1000000 		.4byte	0xd1
 2163 02e3 02       		.uleb128 0x2
 2164 02e4 91       		.byte	0x91
 2165 02e5 70       		.sleb128 -16
 2166 02e6 00       		.byte	0
 2167 02e7 15       		.uleb128 0x15
 2168 02e8 74030000 		.4byte	.LASF50
 2169 02ec 01       		.byte	0x1
 2170 02ed 2601     		.2byte	0x126
 2171 02ef 00000000 		.4byte	.LFB68
 2172 02f3 98000000 		.4byte	.LFE68-.LFB68
 2173 02f7 01       		.uleb128 0x1
 2174 02f8 9C       		.byte	0x9c
 2175 02f9 2B030000 		.4byte	0x32b
 2176 02fd 13       		.uleb128 0x13
 2177 02fe E5020000 		.4byte	.LASF51
 2178 0302 01       		.byte	0x1
 2179 0303 2601     		.2byte	0x126
 2180 0305 68000000 		.4byte	0x68
 2181 0309 02       		.uleb128 0x2
 2182 030a 91       		.byte	0x91
 2183 030b 6C       		.sleb128 -20
 2184 030c 14       		.uleb128 0x14
 2185 030d 28010000 		.4byte	.LASF52
 2186 0311 01       		.byte	0x1
 2187 0312 2701     		.2byte	0x127
 2188 0314 D1000000 		.4byte	0xd1
 2189 0318 02       		.uleb128 0x2
 2190 0319 91       		.byte	0x91
 2191 031a 70       		.sleb128 -16
 2192 031b 14       		.uleb128 0x14
 2193 031c 0E040000 		.4byte	.LASF53
 2194 0320 01       		.byte	0x1
 2195 0321 2801     		.2byte	0x128
 2196 0323 D1000000 		.4byte	0xd1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 50


 2197 0327 02       		.uleb128 0x2
 2198 0328 91       		.byte	0x91
 2199 0329 74       		.sleb128 -12
 2200 032a 00       		.byte	0
 2201 032b 15       		.uleb128 0x15
 2202 032c 41040000 		.4byte	.LASF54
 2203 0330 01       		.byte	0x1
 2204 0331 3D01     		.2byte	0x13d
 2205 0333 00000000 		.4byte	.LFB69
 2206 0337 18010000 		.4byte	.LFE69-.LFB69
 2207 033b 01       		.uleb128 0x1
 2208 033c 9C       		.byte	0x9c
 2209 033d 6F030000 		.4byte	0x36f
 2210 0341 13       		.uleb128 0x13
 2211 0342 AE040000 		.4byte	.LASF40
 2212 0346 01       		.byte	0x1
 2213 0347 3D01     		.2byte	0x13d
 2214 0349 7A020000 		.4byte	0x27a
 2215 034d 02       		.uleb128 0x2
 2216 034e 91       		.byte	0x91
 2217 034f 6C       		.sleb128 -20
 2218 0350 13       		.uleb128 0x13
 2219 0351 9C040000 		.4byte	.LASF39
 2220 0355 01       		.byte	0x1
 2221 0356 3D01     		.2byte	0x13d
 2222 0358 7A020000 		.4byte	0x27a
 2223 035c 02       		.uleb128 0x2
 2224 035d 91       		.byte	0x91
 2225 035e 68       		.sleb128 -24
 2226 035f 14       		.uleb128 0x14
 2227 0360 CD030000 		.4byte	.LASF45
 2228 0364 01       		.byte	0x1
 2229 0365 4101     		.2byte	0x141
 2230 0367 D1000000 		.4byte	0xd1
 2231 036b 02       		.uleb128 0x2
 2232 036c 91       		.byte	0x91
 2233 036d 74       		.sleb128 -12
 2234 036e 00       		.byte	0
 2235 036f 12       		.uleb128 0x12
 2236 0370 47040000 		.4byte	.LASF56
 2237 0374 01       		.byte	0x1
 2238 0375 7001     		.2byte	0x170
 2239 0377 C5000000 		.4byte	0xc5
 2240 037b 00000000 		.4byte	.LFB70
 2241 037f 24000000 		.4byte	.LFE70-.LFB70
 2242 0383 01       		.uleb128 0x1
 2243 0384 9C       		.byte	0x9c
 2244 0385 97030000 		.4byte	0x397
 2245 0389 16       		.uleb128 0x16
 2246 038a 6E00     		.ascii	"n\000"
 2247 038c 01       		.byte	0x1
 2248 038d 7001     		.2byte	0x170
 2249 038f B9000000 		.4byte	0xb9
 2250 0393 02       		.uleb128 0x2
 2251 0394 91       		.byte	0x91
 2252 0395 76       		.sleb128 -10
 2253 0396 00       		.byte	0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 51


 2254 0397 17       		.uleb128 0x17
 2255 0398 C6010000 		.4byte	.LASF107
 2256 039c 01       		.byte	0x1
 2257 039d 7401     		.2byte	0x174
 2258 039f 00000000 		.4byte	.LFB71
 2259 03a3 B4000000 		.4byte	.LFE71-.LFB71
 2260 03a7 01       		.uleb128 0x1
 2261 03a8 9C       		.byte	0x9c
 2262 03a9 D4030000 		.4byte	0x3d4
 2263 03ad 18       		.uleb128 0x18
 2264 03ae 6900     		.ascii	"i\000"
 2265 03b0 01       		.byte	0x1
 2266 03b1 7601     		.2byte	0x176
 2267 03b3 68000000 		.4byte	0x68
 2268 03b7 02       		.uleb128 0x2
 2269 03b8 91       		.byte	0x91
 2270 03b9 74       		.sleb128 -12
 2271 03ba 19       		.uleb128 0x19
 2272 03bb 0C000000 		.4byte	.LBB2
 2273 03bf 26000000 		.4byte	.LBE2-.LBB2
 2274 03c3 14       		.uleb128 0x14
 2275 03c4 8C040000 		.4byte	.LASF57
 2276 03c8 01       		.byte	0x1
 2277 03c9 7801     		.2byte	0x178
 2278 03cb 68000000 		.4byte	0x68
 2279 03cf 02       		.uleb128 0x2
 2280 03d0 91       		.byte	0x91
 2281 03d1 70       		.sleb128 -16
 2282 03d2 00       		.byte	0
 2283 03d3 00       		.byte	0
 2284 03d4 15       		.uleb128 0x15
 2285 03d5 77040000 		.4byte	.LASF58
 2286 03d9 01       		.byte	0x1
 2287 03da 8B01     		.2byte	0x18b
 2288 03dc 00000000 		.4byte	.LFB72
 2289 03e0 2A000000 		.4byte	.LFE72-.LFB72
 2290 03e4 01       		.uleb128 0x1
 2291 03e5 9C       		.byte	0x9c
 2292 03e6 09040000 		.4byte	0x409
 2293 03ea 13       		.uleb128 0x13
 2294 03eb 9F050000 		.4byte	.LASF59
 2295 03ef 01       		.byte	0x1
 2296 03f0 8B01     		.2byte	0x18b
 2297 03f2 68000000 		.4byte	0x68
 2298 03f6 02       		.uleb128 0x2
 2299 03f7 91       		.byte	0x91
 2300 03f8 6C       		.sleb128 -20
 2301 03f9 14       		.uleb128 0x14
 2302 03fa 29050000 		.4byte	.LASF60
 2303 03fe 01       		.byte	0x1
 2304 03ff 8C01     		.2byte	0x18c
 2305 0401 68000000 		.4byte	0x68
 2306 0405 02       		.uleb128 0x2
 2307 0406 91       		.byte	0x91
 2308 0407 74       		.sleb128 -12
 2309 0408 00       		.byte	0
 2310 0409 15       		.uleb128 0x15
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 52


 2311 040a 6D000000 		.4byte	.LASF61
 2312 040e 01       		.byte	0x1
 2313 040f 9001     		.2byte	0x190
 2314 0411 00000000 		.4byte	.LFB73
 2315 0415 2A000000 		.4byte	.LFE73-.LFB73
 2316 0419 01       		.uleb128 0x1
 2317 041a 9C       		.byte	0x9c
 2318 041b 3E040000 		.4byte	0x43e
 2319 041f 13       		.uleb128 0x13
 2320 0420 9F050000 		.4byte	.LASF59
 2321 0424 01       		.byte	0x1
 2322 0425 9001     		.2byte	0x190
 2323 0427 68000000 		.4byte	0x68
 2324 042b 02       		.uleb128 0x2
 2325 042c 91       		.byte	0x91
 2326 042d 6C       		.sleb128 -20
 2327 042e 14       		.uleb128 0x14
 2328 042f 29050000 		.4byte	.LASF60
 2329 0433 01       		.byte	0x1
 2330 0434 9101     		.2byte	0x191
 2331 0436 68000000 		.4byte	0x68
 2332 043a 02       		.uleb128 0x2
 2333 043b 91       		.byte	0x91
 2334 043c 74       		.sleb128 -12
 2335 043d 00       		.byte	0
 2336 043e 15       		.uleb128 0x15
 2337 043f 78010000 		.4byte	.LASF62
 2338 0443 01       		.byte	0x1
 2339 0444 9901     		.2byte	0x199
 2340 0446 00000000 		.4byte	.LFB74
 2341 044a 52000000 		.4byte	.LFE74-.LFB74
 2342 044e 01       		.uleb128 0x1
 2343 044f 9C       		.byte	0x9c
 2344 0450 C3040000 		.4byte	0x4c3
 2345 0454 13       		.uleb128 0x13
 2346 0455 95030000 		.4byte	.LASF63
 2347 0459 01       		.byte	0x1
 2348 045a 9901     		.2byte	0x199
 2349 045c 68000000 		.4byte	0x68
 2350 0460 03       		.uleb128 0x3
 2351 0461 91       		.byte	0x91
 2352 0462 AC7F     		.sleb128 -84
 2353 0464 13       		.uleb128 0x13
 2354 0465 EF040000 		.4byte	.LASF64
 2355 0469 01       		.byte	0x1
 2356 046a 9901     		.2byte	0x199
 2357 046c 68000000 		.4byte	0x68
 2358 0470 03       		.uleb128 0x3
 2359 0471 91       		.byte	0x91
 2360 0472 A87F     		.sleb128 -88
 2361 0474 13       		.uleb128 0x13
 2362 0475 25030000 		.4byte	.LASF65
 2363 0479 01       		.byte	0x1
 2364 047a 9901     		.2byte	0x199
 2365 047c 68000000 		.4byte	0x68
 2366 0480 03       		.uleb128 0x3
 2367 0481 91       		.byte	0x91
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 53


 2368 0482 A47F     		.sleb128 -92
 2369 0484 13       		.uleb128 0x13
 2370 0485 92000000 		.4byte	.LASF66
 2371 0489 01       		.byte	0x1
 2372 048a 9901     		.2byte	0x199
 2373 048c 68000000 		.4byte	0x68
 2374 0490 03       		.uleb128 0x3
 2375 0491 91       		.byte	0x91
 2376 0492 A07F     		.sleb128 -96
 2377 0494 14       		.uleb128 0x14
 2378 0495 CC040000 		.4byte	.LASF67
 2379 0499 01       		.byte	0x1
 2380 049a 9E01     		.2byte	0x19e
 2381 049c 68000000 		.4byte	0x68
 2382 04a0 02       		.uleb128 0x2
 2383 04a1 91       		.byte	0x91
 2384 04a2 74       		.sleb128 -12
 2385 04a3 18       		.uleb128 0x18
 2386 04a4 6D736700 		.ascii	"msg\000"
 2387 04a8 01       		.byte	0x1
 2388 04a9 A301     		.2byte	0x1a3
 2389 04ab C3040000 		.4byte	0x4c3
 2390 04af 03       		.uleb128 0x3
 2391 04b0 91       		.byte	0x91
 2392 04b1 B07F     		.sleb128 -80
 2393 04b3 14       		.uleb128 0x14
 2394 04b4 00000000 		.4byte	.LASF68
 2395 04b8 01       		.byte	0x1
 2396 04b9 AA01     		.2byte	0x1aa
 2397 04bb 68000000 		.4byte	0x68
 2398 04bf 02       		.uleb128 0x2
 2399 04c0 91       		.byte	0x91
 2400 04c1 70       		.sleb128 -16
 2401 04c2 00       		.byte	0
 2402 04c3 10       		.uleb128 0x10
 2403 04c4 83000000 		.4byte	0x83
 2404 04c8 D3040000 		.4byte	0x4d3
 2405 04cc 11       		.uleb128 0x11
 2406 04cd 76000000 		.4byte	0x76
 2407 04d1 3F       		.byte	0x3f
 2408 04d2 00       		.byte	0
 2409 04d3 15       		.uleb128 0x15
 2410 04d4 66050000 		.4byte	.LASF69
 2411 04d8 01       		.byte	0x1
 2412 04d9 BB01     		.2byte	0x1bb
 2413 04db 00000000 		.4byte	.LFB75
 2414 04df 2C000000 		.4byte	.LFE75-.LFB75
 2415 04e3 01       		.uleb128 0x1
 2416 04e4 9C       		.byte	0x9c
 2417 04e5 08050000 		.4byte	0x508
 2418 04e9 13       		.uleb128 0x13
 2419 04ea BB050000 		.4byte	.LASF70
 2420 04ee 01       		.byte	0x1
 2421 04ef BB01     		.2byte	0x1bb
 2422 04f1 68000000 		.4byte	0x68
 2423 04f5 02       		.uleb128 0x2
 2424 04f6 91       		.byte	0x91
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 54


 2425 04f7 74       		.sleb128 -12
 2426 04f8 13       		.uleb128 0x13
 2427 04f9 FD010000 		.4byte	.LASF71
 2428 04fd 01       		.byte	0x1
 2429 04fe BB01     		.2byte	0x1bb
 2430 0500 68000000 		.4byte	0x68
 2431 0504 02       		.uleb128 0x2
 2432 0505 91       		.byte	0x91
 2433 0506 70       		.sleb128 -16
 2434 0507 00       		.byte	0
 2435 0508 1A       		.uleb128 0x1a
 2436 0509 04030000 		.4byte	.LASF72
 2437 050d 01       		.byte	0x1
 2438 050e C001     		.2byte	0x1c0
 2439 0510 00000000 		.4byte	.LFB76
 2440 0514 40000000 		.4byte	.LFE76-.LFB76
 2441 0518 01       		.uleb128 0x1
 2442 0519 9C       		.byte	0x9c
 2443 051a 1A       		.uleb128 0x1a
 2444 051b 3B050000 		.4byte	.LASF73
 2445 051f 01       		.byte	0x1
 2446 0520 CC01     		.2byte	0x1cc
 2447 0522 00000000 		.4byte	.LFB77
 2448 0526 40000000 		.4byte	.LFE77-.LFB77
 2449 052a 01       		.uleb128 0x1
 2450 052b 9C       		.byte	0x9c
 2451 052c 1A       		.uleb128 0x1a
 2452 052d F8030000 		.4byte	.LASF74
 2453 0531 01       		.byte	0x1
 2454 0532 D801     		.2byte	0x1d8
 2455 0534 00000000 		.4byte	.LFB78
 2456 0538 8C000000 		.4byte	.LFE78-.LFB78
 2457 053c 01       		.uleb128 0x1
 2458 053d 9C       		.byte	0x9c
 2459 053e 1A       		.uleb128 0x1a
 2460 053f C9050000 		.4byte	.LASF75
 2461 0543 01       		.byte	0x1
 2462 0544 F601     		.2byte	0x1f6
 2463 0546 00000000 		.4byte	.LFB79
 2464 054a 8C000000 		.4byte	.LFE79-.LFB79
 2465 054e 01       		.uleb128 0x1
 2466 054f 9C       		.byte	0x9c
 2467 0550 1B       		.uleb128 0x1b
 2468 0551 B4010000 		.4byte	.LASF76
 2469 0555 01       		.byte	0x1
 2470 0556 1602     		.2byte	0x216
 2471 0558 00000000 		.4byte	.LFB80
 2472 055c 14000000 		.4byte	.LFE80-.LFB80
 2473 0560 01       		.uleb128 0x1
 2474 0561 9C       		.byte	0x9c
 2475 0562 74050000 		.4byte	0x574
 2476 0566 16       		.uleb128 0x16
 2477 0567 7300     		.ascii	"s\000"
 2478 0569 01       		.byte	0x1
 2479 056a 1602     		.2byte	0x216
 2480 056c 7D000000 		.4byte	0x7d
 2481 0570 02       		.uleb128 0x2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 55


 2482 0571 91       		.byte	0x91
 2483 0572 74       		.sleb128 -12
 2484 0573 00       		.byte	0
 2485 0574 1C       		.uleb128 0x1c
 2486 0575 39010000 		.4byte	.LASF77
 2487 0579 06       		.byte	0x6
 2488 057a 9606     		.2byte	0x696
 2489 057c 80050000 		.4byte	0x580
 2490 0580 1D       		.uleb128 0x1d
 2491 0581 8A000000 		.4byte	0x8a
 2492 0585 1E       		.uleb128 0x1e
 2493 0586 747300   		.ascii	"ts\000"
 2494 0589 05       		.byte	0x5
 2495 058a 10       		.byte	0x10
 2496 058b 95000000 		.4byte	0x95
 2497 058f 05       		.uleb128 0x5
 2498 0590 03       		.byte	0x3
 2499 0591 00000000 		.4byte	ts
 2500 0595 1F       		.uleb128 0x1f
 2501 0596 13000000 		.4byte	.LASF78
 2502 059a 05       		.byte	0x5
 2503 059b 11       		.byte	0x11
 2504 059c A1000000 		.4byte	0xa1
 2505 05a0 05       		.uleb128 0x5
 2506 05a1 03       		.byte	0x3
 2507 05a2 00000000 		.4byte	ts_enc
 2508 05a6 1F       		.uleb128 0x1f
 2509 05a7 50050000 		.4byte	.LASF79
 2510 05ab 05       		.byte	0x5
 2511 05ac 12       		.byte	0x12
 2512 05ad A1000000 		.4byte	0xa1
 2513 05b1 05       		.uleb128 0x5
 2514 05b2 03       		.byte	0x3
 2515 05b3 00000000 		.4byte	ts_update
 2516 05b7 1F       		.uleb128 0x1f
 2517 05b8 E6040000 		.4byte	.LASF80
 2518 05bc 05       		.byte	0x5
 2519 05bd 13       		.byte	0x13
 2520 05be A1000000 		.4byte	0xa1
 2521 05c2 05       		.uleb128 0x5
 2522 05c3 03       		.byte	0x3
 2523 05c4 00000000 		.4byte	ts_speed
 2524 05c8 1F       		.uleb128 0x1f
 2525 05c9 45050000 		.4byte	.LASF81
 2526 05cd 05       		.byte	0x5
 2527 05ce 14       		.byte	0x14
 2528 05cf A1000000 		.4byte	0xa1
 2529 05d3 05       		.uleb128 0x5
 2530 05d4 03       		.byte	0x3
 2531 05d5 00000000 		.4byte	ts_display
 2532 05d9 1F       		.uleb128 0x1f
 2533 05da F5040000 		.4byte	.LASF82
 2534 05de 05       		.byte	0x5
 2535 05df 16       		.byte	0x16
 2536 05e0 95000000 		.4byte	0x95
 2537 05e4 05       		.uleb128 0x5
 2538 05e5 03       		.byte	0x3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 56


 2539 05e6 00000000 		.4byte	flag_ts_enc
 2540 05ea 1F       		.uleb128 0x1f
 2541 05eb D9010000 		.4byte	.LASF83
 2542 05ef 05       		.byte	0x5
 2543 05f0 17       		.byte	0x17
 2544 05f1 95000000 		.4byte	0x95
 2545 05f5 05       		.uleb128 0x5
 2546 05f6 03       		.byte	0x3
 2547 05f7 00000000 		.4byte	flag_ts_update
 2548 05fb 1F       		.uleb128 0x1f
 2549 05fc 37000000 		.4byte	.LASF84
 2550 0600 05       		.byte	0x5
 2551 0601 18       		.byte	0x18
 2552 0602 95000000 		.4byte	0x95
 2553 0606 05       		.uleb128 0x5
 2554 0607 03       		.byte	0x3
 2555 0608 00000000 		.4byte	flag_ts_speed
 2556 060c 1F       		.uleb128 0x1f
 2557 060d AC020000 		.4byte	.LASF85
 2558 0611 05       		.byte	0x5
 2559 0612 19       		.byte	0x19
 2560 0613 95000000 		.4byte	0x95
 2561 0617 05       		.uleb128 0x5
 2562 0618 03       		.byte	0x3
 2563 0619 00000000 		.4byte	flag_ts_display
 2564 061d 1F       		.uleb128 0x1f
 2565 061e BC020000 		.4byte	.LASF86
 2566 0622 05       		.byte	0x5
 2567 0623 1C       		.byte	0x1c
 2568 0624 95000000 		.4byte	0x95
 2569 0628 05       		.uleb128 0x5
 2570 0629 03       		.byte	0x3
 2571 062a 00000000 		.4byte	flag_rx
 2572 062e 1F       		.uleb128 0x1f
 2573 062f 22000000 		.4byte	.LASF87
 2574 0633 05       		.byte	0x5
 2575 0634 1D       		.byte	0x1d
 2576 0635 95000000 		.4byte	0x95
 2577 0639 05       		.uleb128 0x5
 2578 063a 03       		.byte	0x3
 2579 063b 00000000 		.4byte	flag_packet
 2580 063f 1F       		.uleb128 0x1f
 2581 0640 65030000 		.4byte	.LASF88
 2582 0644 05       		.byte	0x5
 2583 0645 1E       		.byte	0x1e
 2584 0646 95000000 		.4byte	0x95
 2585 064a 05       		.uleb128 0x5
 2586 064b 03       		.byte	0x3
 2587 064c 00000000 		.4byte	flag_KB_string
 2588 0650 1F       		.uleb128 0x1f
 2589 0651 D7040000 		.4byte	.LASF89
 2590 0655 05       		.byte	0x5
 2591 0656 20       		.byte	0x20
 2592 0657 95000000 		.4byte	0x95
 2593 065b 05       		.uleb128 0x5
 2594 065c 03       		.byte	0x3
 2595 065d 00000000 		.4byte	dataready_flag
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 57


 2596 0661 1F       		.uleb128 0x1f
 2597 0662 78050000 		.4byte	.LASF90
 2598 0666 05       		.byte	0x5
 2599 0667 22       		.byte	0x22
 2600 0668 95000000 		.4byte	0x95
 2601 066c 05       		.uleb128 0x5
 2602 066d 03       		.byte	0x3
 2603 066e 00000000 		.4byte	flag_rf_transmission_active
 2604 0672 1F       		.uleb128 0x1f
 2605 0673 58040000 		.4byte	.LASF91
 2606 0677 05       		.byte	0x5
 2607 0678 25       		.byte	0x25
 2608 0679 C3040000 		.4byte	0x4c3
 2609 067d 05       		.uleb128 0x5
 2610 067e 03       		.byte	0x3
 2611 067f 00000000 		.4byte	displaystring
 2612 0683 1F       		.uleb128 0x1f
 2613 0684 85010000 		.4byte	.LASF92
 2614 0688 05       		.byte	0x5
 2615 0689 26       		.byte	0x26
 2616 068a C3040000 		.4byte	0x4c3
 2617 068e 05       		.uleb128 0x5
 2618 068f 03       		.byte	0x3
 2619 0690 00000000 		.4byte	line
 2620 0694 1F       		.uleb128 0x1f
 2621 0695 4A030000 		.4byte	.LASF93
 2622 0699 05       		.byte	0x5
 2623 069a 26       		.byte	0x26
 2624 069b C3040000 		.4byte	0x4c3
 2625 069f 05       		.uleb128 0x5
 2626 06a0 03       		.byte	0x3
 2627 06a1 00000000 		.4byte	entry
 2628 06a5 10       		.uleb128 0x10
 2629 06a6 95000000 		.4byte	0x95
 2630 06aa B5060000 		.4byte	0x6b5
 2631 06ae 11       		.uleb128 0x11
 2632 06af 76000000 		.4byte	0x76
 2633 06b3 3F       		.byte	0x3f
 2634 06b4 00       		.byte	0
 2635 06b5 1F       		.uleb128 0x1f
 2636 06b6 83000000 		.4byte	.LASF94
 2637 06ba 05       		.byte	0x5
 2638 06bb 27       		.byte	0x27
 2639 06bc A5060000 		.4byte	0x6a5
 2640 06c0 05       		.uleb128 0x5
 2641 06c1 03       		.byte	0x3
 2642 06c2 00000000 		.4byte	usbBuffer
 2643 06c6 1F       		.uleb128 0x1f
 2644 06c7 57000000 		.4byte	.LASF95
 2645 06cb 05       		.byte	0x5
 2646 06cc 3C       		.byte	0x3c
 2647 06cd DF000000 		.4byte	0xdf
 2648 06d1 05       		.uleb128 0x5
 2649 06d2 03       		.byte	0x3
 2650 06d3 00000000 		.4byte	system_state
 2651 06d7 1F       		.uleb128 0x1f
 2652 06d8 DB030000 		.4byte	.LASF96
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 58


 2653 06dc 01       		.byte	0x1
 2654 06dd 54       		.byte	0x54
 2655 06de E8060000 		.4byte	0x6e8
 2656 06e2 05       		.uleb128 0x5
 2657 06e3 03       		.byte	0x3
 2658 06e4 00000000 		.4byte	adc_flag
 2659 06e8 1D       		.uleb128 0x1d
 2660 06e9 68000000 		.4byte	0x68
 2661 06ed 10       		.uleb128 0x10
 2662 06ee AD000000 		.4byte	0xad
 2663 06f2 FD060000 		.4byte	0x6fd
 2664 06f6 11       		.uleb128 0x11
 2665 06f7 76000000 		.4byte	0x76
 2666 06fb 05       		.byte	0x5
 2667 06fc 00       		.byte	0
 2668 06fd 1F       		.uleb128 0x1f
 2669 06fe A6050000 		.4byte	.LASF97
 2670 0702 01       		.byte	0x1
 2671 0703 55       		.byte	0x55
 2672 0704 ED060000 		.4byte	0x6ed
 2673 0708 05       		.uleb128 0x5
 2674 0709 03       		.byte	0x3
 2675 070a 00000000 		.4byte	sensor_readings
 2676 070e 10       		.uleb128 0x10
 2677 070f 68000000 		.4byte	0x68
 2678 0713 1E070000 		.4byte	0x71e
 2679 0717 11       		.uleb128 0x11
 2680 0718 76000000 		.4byte	0x76
 2681 071c 05       		.byte	0x5
 2682 071d 00       		.byte	0
 2683 071e 1F       		.uleb128 0x1f
 2684 071f C4020000 		.4byte	.LASF98
 2685 0723 01       		.byte	0x1
 2686 0724 56       		.byte	0x56
 2687 0725 0E070000 		.4byte	0x70e
 2688 0729 05       		.uleb128 0x5
 2689 072a 03       		.byte	0x3
 2690 072b 00000000 		.4byte	adc_readings
 2691 072f 1F       		.uleb128 0x1f
 2692 0730 2B040000 		.4byte	.LASF99
 2693 0734 01       		.byte	0x1
 2694 0735 57       		.byte	0x57
 2695 0736 68000000 		.4byte	0x68
 2696 073a 05       		.uleb128 0x5
 2697 073b 03       		.byte	0x3
 2698 073c 00000000 		.4byte	sample_count
 2699 0740 1F       		.uleb128 0x1f
 2700 0741 8A010000 		.4byte	.LASF100
 2701 0745 01       		.byte	0x1
 2702 0746 59       		.byte	0x59
 2703 0747 E8060000 		.4byte	0x6e8
 2704 074b 05       		.uleb128 0x5
 2705 074c 03       		.byte	0x3
 2706 074d 00000000 		.4byte	timer_flag
 2707 0751 1F       		.uleb128 0x1f
 2708 0752 0B050000 		.4byte	.LASF101
 2709 0756 01       		.byte	0x1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 59


 2710 0757 5A       		.byte	0x5a
 2711 0758 E8060000 		.4byte	0x6e8
 2712 075c 05       		.uleb128 0x5
 2713 075d 03       		.byte	0x3
 2714 075e 00000000 		.4byte	countM1
 2715 0762 1F       		.uleb128 0x1f
 2716 0763 13050000 		.4byte	.LASF102
 2717 0767 01       		.byte	0x1
 2718 0768 5B       		.byte	0x5b
 2719 0769 E8060000 		.4byte	0x6e8
 2720 076d 05       		.uleb128 0x5
 2721 076e 03       		.byte	0x3
 2722 076f 00000000 		.4byte	countM2
 2723 0773 1F       		.uleb128 0x1f
 2724 0774 D9020000 		.4byte	.LASF46
 2725 0778 01       		.byte	0x1
 2726 0779 5C       		.byte	0x5c
 2727 077a 68000000 		.4byte	0x68
 2728 077e 05       		.uleb128 0x5
 2729 077f 03       		.byte	0x3
 2730 0780 00000000 		.4byte	prevCountM1
 2731 0784 1F       		.uleb128 0x1f
 2732 0785 6C010000 		.4byte	.LASF47
 2733 0789 01       		.byte	0x1
 2734 078a 5D       		.byte	0x5d
 2735 078b 68000000 		.4byte	0x68
 2736 078f 05       		.uleb128 0x5
 2737 0790 03       		.byte	0x3
 2738 0791 00000000 		.4byte	prevCountM2
 2739 0795 00       		.byte	0
 2740              		.section	.debug_abbrev,"",%progbits
 2741              	.Ldebug_abbrev0:
 2742 0000 01       		.uleb128 0x1
 2743 0001 11       		.uleb128 0x11
 2744 0002 01       		.byte	0x1
 2745 0003 25       		.uleb128 0x25
 2746 0004 0E       		.uleb128 0xe
 2747 0005 13       		.uleb128 0x13
 2748 0006 0B       		.uleb128 0xb
 2749 0007 03       		.uleb128 0x3
 2750 0008 0E       		.uleb128 0xe
 2751 0009 1B       		.uleb128 0x1b
 2752 000a 0E       		.uleb128 0xe
 2753 000b 55       		.uleb128 0x55
 2754 000c 17       		.uleb128 0x17
 2755 000d 11       		.uleb128 0x11
 2756 000e 01       		.uleb128 0x1
 2757 000f 10       		.uleb128 0x10
 2758 0010 17       		.uleb128 0x17
 2759 0011 00       		.byte	0
 2760 0012 00       		.byte	0
 2761 0013 02       		.uleb128 0x2
 2762 0014 24       		.uleb128 0x24
 2763 0015 00       		.byte	0
 2764 0016 0B       		.uleb128 0xb
 2765 0017 0B       		.uleb128 0xb
 2766 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 60


 2767 0019 0B       		.uleb128 0xb
 2768 001a 03       		.uleb128 0x3
 2769 001b 0E       		.uleb128 0xe
 2770 001c 00       		.byte	0
 2771 001d 00       		.byte	0
 2772 001e 03       		.uleb128 0x3
 2773 001f 16       		.uleb128 0x16
 2774 0020 00       		.byte	0
 2775 0021 03       		.uleb128 0x3
 2776 0022 0E       		.uleb128 0xe
 2777 0023 3A       		.uleb128 0x3a
 2778 0024 0B       		.uleb128 0xb
 2779 0025 3B       		.uleb128 0x3b
 2780 0026 0B       		.uleb128 0xb
 2781 0027 49       		.uleb128 0x49
 2782 0028 13       		.uleb128 0x13
 2783 0029 00       		.byte	0
 2784 002a 00       		.byte	0
 2785 002b 04       		.uleb128 0x4
 2786 002c 24       		.uleb128 0x24
 2787 002d 00       		.byte	0
 2788 002e 0B       		.uleb128 0xb
 2789 002f 0B       		.uleb128 0xb
 2790 0030 3E       		.uleb128 0x3e
 2791 0031 0B       		.uleb128 0xb
 2792 0032 03       		.uleb128 0x3
 2793 0033 08       		.uleb128 0x8
 2794 0034 00       		.byte	0
 2795 0035 00       		.byte	0
 2796 0036 05       		.uleb128 0x5
 2797 0037 0F       		.uleb128 0xf
 2798 0038 00       		.byte	0
 2799 0039 0B       		.uleb128 0xb
 2800 003a 0B       		.uleb128 0xb
 2801 003b 49       		.uleb128 0x49
 2802 003c 13       		.uleb128 0x13
 2803 003d 00       		.byte	0
 2804 003e 00       		.byte	0
 2805 003f 06       		.uleb128 0x6
 2806 0040 16       		.uleb128 0x16
 2807 0041 00       		.byte	0
 2808 0042 03       		.uleb128 0x3
 2809 0043 0E       		.uleb128 0xe
 2810 0044 3A       		.uleb128 0x3a
 2811 0045 0B       		.uleb128 0xb
 2812 0046 3B       		.uleb128 0x3b
 2813 0047 05       		.uleb128 0x5
 2814 0048 49       		.uleb128 0x49
 2815 0049 13       		.uleb128 0x13
 2816 004a 00       		.byte	0
 2817 004b 00       		.byte	0
 2818 004c 07       		.uleb128 0x7
 2819 004d 13       		.uleb128 0x13
 2820 004e 01       		.byte	0x1
 2821 004f 03       		.uleb128 0x3
 2822 0050 0E       		.uleb128 0xe
 2823 0051 0B       		.uleb128 0xb
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 61


 2824 0052 0B       		.uleb128 0xb
 2825 0053 3A       		.uleb128 0x3a
 2826 0054 0B       		.uleb128 0xb
 2827 0055 3B       		.uleb128 0x3b
 2828 0056 0B       		.uleb128 0xb
 2829 0057 01       		.uleb128 0x1
 2830 0058 13       		.uleb128 0x13
 2831 0059 00       		.byte	0
 2832 005a 00       		.byte	0
 2833 005b 08       		.uleb128 0x8
 2834 005c 0D       		.uleb128 0xd
 2835 005d 00       		.byte	0
 2836 005e 03       		.uleb128 0x3
 2837 005f 0E       		.uleb128 0xe
 2838 0060 3A       		.uleb128 0x3a
 2839 0061 0B       		.uleb128 0xb
 2840 0062 3B       		.uleb128 0x3b
 2841 0063 0B       		.uleb128 0xb
 2842 0064 49       		.uleb128 0x49
 2843 0065 13       		.uleb128 0x13
 2844 0066 38       		.uleb128 0x38
 2845 0067 0B       		.uleb128 0xb
 2846 0068 00       		.byte	0
 2847 0069 00       		.byte	0
 2848 006a 09       		.uleb128 0x9
 2849 006b 2E       		.uleb128 0x2e
 2850 006c 00       		.byte	0
 2851 006d 3F       		.uleb128 0x3f
 2852 006e 19       		.uleb128 0x19
 2853 006f 03       		.uleb128 0x3
 2854 0070 0E       		.uleb128 0xe
 2855 0071 3A       		.uleb128 0x3a
 2856 0072 0B       		.uleb128 0xb
 2857 0073 3B       		.uleb128 0x3b
 2858 0074 0B       		.uleb128 0xb
 2859 0075 27       		.uleb128 0x27
 2860 0076 19       		.uleb128 0x19
 2861 0077 11       		.uleb128 0x11
 2862 0078 01       		.uleb128 0x1
 2863 0079 12       		.uleb128 0x12
 2864 007a 06       		.uleb128 0x6
 2865 007b 40       		.uleb128 0x40
 2866 007c 18       		.uleb128 0x18
 2867 007d 9642     		.uleb128 0x2116
 2868 007f 19       		.uleb128 0x19
 2869 0080 00       		.byte	0
 2870 0081 00       		.byte	0
 2871 0082 0A       		.uleb128 0xa
 2872 0083 2E       		.uleb128 0x2e
 2873 0084 00       		.byte	0
 2874 0085 3F       		.uleb128 0x3f
 2875 0086 19       		.uleb128 0x19
 2876 0087 03       		.uleb128 0x3
 2877 0088 0E       		.uleb128 0xe
 2878 0089 3A       		.uleb128 0x3a
 2879 008a 0B       		.uleb128 0xb
 2880 008b 3B       		.uleb128 0x3b
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 62


 2881 008c 0B       		.uleb128 0xb
 2882 008d 27       		.uleb128 0x27
 2883 008e 19       		.uleb128 0x19
 2884 008f 11       		.uleb128 0x11
 2885 0090 01       		.uleb128 0x1
 2886 0091 12       		.uleb128 0x12
 2887 0092 06       		.uleb128 0x6
 2888 0093 40       		.uleb128 0x40
 2889 0094 18       		.uleb128 0x18
 2890 0095 9742     		.uleb128 0x2117
 2891 0097 19       		.uleb128 0x19
 2892 0098 00       		.byte	0
 2893 0099 00       		.byte	0
 2894 009a 0B       		.uleb128 0xb
 2895 009b 2E       		.uleb128 0x2e
 2896 009c 01       		.byte	0x1
 2897 009d 3F       		.uleb128 0x3f
 2898 009e 19       		.uleb128 0x19
 2899 009f 03       		.uleb128 0x3
 2900 00a0 0E       		.uleb128 0xe
 2901 00a1 3A       		.uleb128 0x3a
 2902 00a2 0B       		.uleb128 0xb
 2903 00a3 3B       		.uleb128 0x3b
 2904 00a4 0B       		.uleb128 0xb
 2905 00a5 49       		.uleb128 0x49
 2906 00a6 13       		.uleb128 0x13
 2907 00a7 11       		.uleb128 0x11
 2908 00a8 01       		.uleb128 0x1
 2909 00a9 12       		.uleb128 0x12
 2910 00aa 06       		.uleb128 0x6
 2911 00ab 40       		.uleb128 0x40
 2912 00ac 18       		.uleb128 0x18
 2913 00ad 9642     		.uleb128 0x2116
 2914 00af 19       		.uleb128 0x19
 2915 00b0 01       		.uleb128 0x1
 2916 00b1 13       		.uleb128 0x13
 2917 00b2 00       		.byte	0
 2918 00b3 00       		.byte	0
 2919 00b4 0C       		.uleb128 0xc
 2920 00b5 34       		.uleb128 0x34
 2921 00b6 00       		.byte	0
 2922 00b7 03       		.uleb128 0x3
 2923 00b8 0E       		.uleb128 0xe
 2924 00b9 3A       		.uleb128 0x3a
 2925 00ba 0B       		.uleb128 0xb
 2926 00bb 3B       		.uleb128 0x3b
 2927 00bc 0B       		.uleb128 0xb
 2928 00bd 49       		.uleb128 0x49
 2929 00be 13       		.uleb128 0x13
 2930 00bf 02       		.uleb128 0x2
 2931 00c0 18       		.uleb128 0x18
 2932 00c1 00       		.byte	0
 2933 00c2 00       		.byte	0
 2934 00c3 0D       		.uleb128 0xd
 2935 00c4 2E       		.uleb128 0x2e
 2936 00c5 01       		.byte	0x1
 2937 00c6 3F       		.uleb128 0x3f
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 63


 2938 00c7 19       		.uleb128 0x19
 2939 00c8 03       		.uleb128 0x3
 2940 00c9 0E       		.uleb128 0xe
 2941 00ca 3A       		.uleb128 0x3a
 2942 00cb 0B       		.uleb128 0xb
 2943 00cc 3B       		.uleb128 0x3b
 2944 00cd 0B       		.uleb128 0xb
 2945 00ce 27       		.uleb128 0x27
 2946 00cf 19       		.uleb128 0x19
 2947 00d0 11       		.uleb128 0x11
 2948 00d1 01       		.uleb128 0x1
 2949 00d2 12       		.uleb128 0x12
 2950 00d3 06       		.uleb128 0x6
 2951 00d4 40       		.uleb128 0x40
 2952 00d5 18       		.uleb128 0x18
 2953 00d6 9642     		.uleb128 0x2116
 2954 00d8 19       		.uleb128 0x19
 2955 00d9 01       		.uleb128 0x1
 2956 00da 13       		.uleb128 0x13
 2957 00db 00       		.byte	0
 2958 00dc 00       		.byte	0
 2959 00dd 0E       		.uleb128 0xe
 2960 00de 05       		.uleb128 0x5
 2961 00df 00       		.byte	0
 2962 00e0 03       		.uleb128 0x3
 2963 00e1 0E       		.uleb128 0xe
 2964 00e2 3A       		.uleb128 0x3a
 2965 00e3 0B       		.uleb128 0xb
 2966 00e4 3B       		.uleb128 0x3b
 2967 00e5 0B       		.uleb128 0xb
 2968 00e6 49       		.uleb128 0x49
 2969 00e7 13       		.uleb128 0x13
 2970 00e8 02       		.uleb128 0x2
 2971 00e9 18       		.uleb128 0x18
 2972 00ea 00       		.byte	0
 2973 00eb 00       		.byte	0
 2974 00ec 0F       		.uleb128 0xf
 2975 00ed 34       		.uleb128 0x34
 2976 00ee 00       		.byte	0
 2977 00ef 03       		.uleb128 0x3
 2978 00f0 08       		.uleb128 0x8
 2979 00f1 3A       		.uleb128 0x3a
 2980 00f2 0B       		.uleb128 0xb
 2981 00f3 3B       		.uleb128 0x3b
 2982 00f4 0B       		.uleb128 0xb
 2983 00f5 49       		.uleb128 0x49
 2984 00f6 13       		.uleb128 0x13
 2985 00f7 02       		.uleb128 0x2
 2986 00f8 18       		.uleb128 0x18
 2987 00f9 00       		.byte	0
 2988 00fa 00       		.byte	0
 2989 00fb 10       		.uleb128 0x10
 2990 00fc 01       		.uleb128 0x1
 2991 00fd 01       		.byte	0x1
 2992 00fe 49       		.uleb128 0x49
 2993 00ff 13       		.uleb128 0x13
 2994 0100 01       		.uleb128 0x1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 64


 2995 0101 13       		.uleb128 0x13
 2996 0102 00       		.byte	0
 2997 0103 00       		.byte	0
 2998 0104 11       		.uleb128 0x11
 2999 0105 21       		.uleb128 0x21
 3000 0106 00       		.byte	0
 3001 0107 49       		.uleb128 0x49
 3002 0108 13       		.uleb128 0x13
 3003 0109 2F       		.uleb128 0x2f
 3004 010a 0B       		.uleb128 0xb
 3005 010b 00       		.byte	0
 3006 010c 00       		.byte	0
 3007 010d 12       		.uleb128 0x12
 3008 010e 2E       		.uleb128 0x2e
 3009 010f 01       		.byte	0x1
 3010 0110 3F       		.uleb128 0x3f
 3011 0111 19       		.uleb128 0x19
 3012 0112 03       		.uleb128 0x3
 3013 0113 0E       		.uleb128 0xe
 3014 0114 3A       		.uleb128 0x3a
 3015 0115 0B       		.uleb128 0xb
 3016 0116 3B       		.uleb128 0x3b
 3017 0117 05       		.uleb128 0x5
 3018 0118 27       		.uleb128 0x27
 3019 0119 19       		.uleb128 0x19
 3020 011a 49       		.uleb128 0x49
 3021 011b 13       		.uleb128 0x13
 3022 011c 11       		.uleb128 0x11
 3023 011d 01       		.uleb128 0x1
 3024 011e 12       		.uleb128 0x12
 3025 011f 06       		.uleb128 0x6
 3026 0120 40       		.uleb128 0x40
 3027 0121 18       		.uleb128 0x18
 3028 0122 9642     		.uleb128 0x2116
 3029 0124 19       		.uleb128 0x19
 3030 0125 01       		.uleb128 0x1
 3031 0126 13       		.uleb128 0x13
 3032 0127 00       		.byte	0
 3033 0128 00       		.byte	0
 3034 0129 13       		.uleb128 0x13
 3035 012a 05       		.uleb128 0x5
 3036 012b 00       		.byte	0
 3037 012c 03       		.uleb128 0x3
 3038 012d 0E       		.uleb128 0xe
 3039 012e 3A       		.uleb128 0x3a
 3040 012f 0B       		.uleb128 0xb
 3041 0130 3B       		.uleb128 0x3b
 3042 0131 05       		.uleb128 0x5
 3043 0132 49       		.uleb128 0x49
 3044 0133 13       		.uleb128 0x13
 3045 0134 02       		.uleb128 0x2
 3046 0135 18       		.uleb128 0x18
 3047 0136 00       		.byte	0
 3048 0137 00       		.byte	0
 3049 0138 14       		.uleb128 0x14
 3050 0139 34       		.uleb128 0x34
 3051 013a 00       		.byte	0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 65


 3052 013b 03       		.uleb128 0x3
 3053 013c 0E       		.uleb128 0xe
 3054 013d 3A       		.uleb128 0x3a
 3055 013e 0B       		.uleb128 0xb
 3056 013f 3B       		.uleb128 0x3b
 3057 0140 05       		.uleb128 0x5
 3058 0141 49       		.uleb128 0x49
 3059 0142 13       		.uleb128 0x13
 3060 0143 02       		.uleb128 0x2
 3061 0144 18       		.uleb128 0x18
 3062 0145 00       		.byte	0
 3063 0146 00       		.byte	0
 3064 0147 15       		.uleb128 0x15
 3065 0148 2E       		.uleb128 0x2e
 3066 0149 01       		.byte	0x1
 3067 014a 3F       		.uleb128 0x3f
 3068 014b 19       		.uleb128 0x19
 3069 014c 03       		.uleb128 0x3
 3070 014d 0E       		.uleb128 0xe
 3071 014e 3A       		.uleb128 0x3a
 3072 014f 0B       		.uleb128 0xb
 3073 0150 3B       		.uleb128 0x3b
 3074 0151 05       		.uleb128 0x5
 3075 0152 27       		.uleb128 0x27
 3076 0153 19       		.uleb128 0x19
 3077 0154 11       		.uleb128 0x11
 3078 0155 01       		.uleb128 0x1
 3079 0156 12       		.uleb128 0x12
 3080 0157 06       		.uleb128 0x6
 3081 0158 40       		.uleb128 0x40
 3082 0159 18       		.uleb128 0x18
 3083 015a 9642     		.uleb128 0x2116
 3084 015c 19       		.uleb128 0x19
 3085 015d 01       		.uleb128 0x1
 3086 015e 13       		.uleb128 0x13
 3087 015f 00       		.byte	0
 3088 0160 00       		.byte	0
 3089 0161 16       		.uleb128 0x16
 3090 0162 05       		.uleb128 0x5
 3091 0163 00       		.byte	0
 3092 0164 03       		.uleb128 0x3
 3093 0165 08       		.uleb128 0x8
 3094 0166 3A       		.uleb128 0x3a
 3095 0167 0B       		.uleb128 0xb
 3096 0168 3B       		.uleb128 0x3b
 3097 0169 05       		.uleb128 0x5
 3098 016a 49       		.uleb128 0x49
 3099 016b 13       		.uleb128 0x13
 3100 016c 02       		.uleb128 0x2
 3101 016d 18       		.uleb128 0x18
 3102 016e 00       		.byte	0
 3103 016f 00       		.byte	0
 3104 0170 17       		.uleb128 0x17
 3105 0171 2E       		.uleb128 0x2e
 3106 0172 01       		.byte	0x1
 3107 0173 3F       		.uleb128 0x3f
 3108 0174 19       		.uleb128 0x19
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 66


 3109 0175 03       		.uleb128 0x3
 3110 0176 0E       		.uleb128 0xe
 3111 0177 3A       		.uleb128 0x3a
 3112 0178 0B       		.uleb128 0xb
 3113 0179 3B       		.uleb128 0x3b
 3114 017a 05       		.uleb128 0x5
 3115 017b 11       		.uleb128 0x11
 3116 017c 01       		.uleb128 0x1
 3117 017d 12       		.uleb128 0x12
 3118 017e 06       		.uleb128 0x6
 3119 017f 40       		.uleb128 0x40
 3120 0180 18       		.uleb128 0x18
 3121 0181 9642     		.uleb128 0x2116
 3122 0183 19       		.uleb128 0x19
 3123 0184 01       		.uleb128 0x1
 3124 0185 13       		.uleb128 0x13
 3125 0186 00       		.byte	0
 3126 0187 00       		.byte	0
 3127 0188 18       		.uleb128 0x18
 3128 0189 34       		.uleb128 0x34
 3129 018a 00       		.byte	0
 3130 018b 03       		.uleb128 0x3
 3131 018c 08       		.uleb128 0x8
 3132 018d 3A       		.uleb128 0x3a
 3133 018e 0B       		.uleb128 0xb
 3134 018f 3B       		.uleb128 0x3b
 3135 0190 05       		.uleb128 0x5
 3136 0191 49       		.uleb128 0x49
 3137 0192 13       		.uleb128 0x13
 3138 0193 02       		.uleb128 0x2
 3139 0194 18       		.uleb128 0x18
 3140 0195 00       		.byte	0
 3141 0196 00       		.byte	0
 3142 0197 19       		.uleb128 0x19
 3143 0198 0B       		.uleb128 0xb
 3144 0199 01       		.byte	0x1
 3145 019a 11       		.uleb128 0x11
 3146 019b 01       		.uleb128 0x1
 3147 019c 12       		.uleb128 0x12
 3148 019d 06       		.uleb128 0x6
 3149 019e 00       		.byte	0
 3150 019f 00       		.byte	0
 3151 01a0 1A       		.uleb128 0x1a
 3152 01a1 2E       		.uleb128 0x2e
 3153 01a2 00       		.byte	0
 3154 01a3 3F       		.uleb128 0x3f
 3155 01a4 19       		.uleb128 0x19
 3156 01a5 03       		.uleb128 0x3
 3157 01a6 0E       		.uleb128 0xe
 3158 01a7 3A       		.uleb128 0x3a
 3159 01a8 0B       		.uleb128 0xb
 3160 01a9 3B       		.uleb128 0x3b
 3161 01aa 05       		.uleb128 0x5
 3162 01ab 11       		.uleb128 0x11
 3163 01ac 01       		.uleb128 0x1
 3164 01ad 12       		.uleb128 0x12
 3165 01ae 06       		.uleb128 0x6
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 67


 3166 01af 40       		.uleb128 0x40
 3167 01b0 18       		.uleb128 0x18
 3168 01b1 9642     		.uleb128 0x2116
 3169 01b3 19       		.uleb128 0x19
 3170 01b4 00       		.byte	0
 3171 01b5 00       		.byte	0
 3172 01b6 1B       		.uleb128 0x1b
 3173 01b7 2E       		.uleb128 0x2e
 3174 01b8 01       		.byte	0x1
 3175 01b9 3F       		.uleb128 0x3f
 3176 01ba 19       		.uleb128 0x19
 3177 01bb 03       		.uleb128 0x3
 3178 01bc 0E       		.uleb128 0xe
 3179 01bd 3A       		.uleb128 0x3a
 3180 01be 0B       		.uleb128 0xb
 3181 01bf 3B       		.uleb128 0x3b
 3182 01c0 05       		.uleb128 0x5
 3183 01c1 27       		.uleb128 0x27
 3184 01c2 19       		.uleb128 0x19
 3185 01c3 11       		.uleb128 0x11
 3186 01c4 01       		.uleb128 0x1
 3187 01c5 12       		.uleb128 0x12
 3188 01c6 06       		.uleb128 0x6
 3189 01c7 40       		.uleb128 0x40
 3190 01c8 18       		.uleb128 0x18
 3191 01c9 9742     		.uleb128 0x2117
 3192 01cb 19       		.uleb128 0x19
 3193 01cc 01       		.uleb128 0x1
 3194 01cd 13       		.uleb128 0x13
 3195 01ce 00       		.byte	0
 3196 01cf 00       		.byte	0
 3197 01d0 1C       		.uleb128 0x1c
 3198 01d1 34       		.uleb128 0x34
 3199 01d2 00       		.byte	0
 3200 01d3 03       		.uleb128 0x3
 3201 01d4 0E       		.uleb128 0xe
 3202 01d5 3A       		.uleb128 0x3a
 3203 01d6 0B       		.uleb128 0xb
 3204 01d7 3B       		.uleb128 0x3b
 3205 01d8 05       		.uleb128 0x5
 3206 01d9 49       		.uleb128 0x49
 3207 01da 13       		.uleb128 0x13
 3208 01db 3F       		.uleb128 0x3f
 3209 01dc 19       		.uleb128 0x19
 3210 01dd 3C       		.uleb128 0x3c
 3211 01de 19       		.uleb128 0x19
 3212 01df 00       		.byte	0
 3213 01e0 00       		.byte	0
 3214 01e1 1D       		.uleb128 0x1d
 3215 01e2 35       		.uleb128 0x35
 3216 01e3 00       		.byte	0
 3217 01e4 49       		.uleb128 0x49
 3218 01e5 13       		.uleb128 0x13
 3219 01e6 00       		.byte	0
 3220 01e7 00       		.byte	0
 3221 01e8 1E       		.uleb128 0x1e
 3222 01e9 34       		.uleb128 0x34
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 68


 3223 01ea 00       		.byte	0
 3224 01eb 03       		.uleb128 0x3
 3225 01ec 08       		.uleb128 0x8
 3226 01ed 3A       		.uleb128 0x3a
 3227 01ee 0B       		.uleb128 0xb
 3228 01ef 3B       		.uleb128 0x3b
 3229 01f0 0B       		.uleb128 0xb
 3230 01f1 49       		.uleb128 0x49
 3231 01f2 13       		.uleb128 0x13
 3232 01f3 3F       		.uleb128 0x3f
 3233 01f4 19       		.uleb128 0x19
 3234 01f5 02       		.uleb128 0x2
 3235 01f6 18       		.uleb128 0x18
 3236 01f7 00       		.byte	0
 3237 01f8 00       		.byte	0
 3238 01f9 1F       		.uleb128 0x1f
 3239 01fa 34       		.uleb128 0x34
 3240 01fb 00       		.byte	0
 3241 01fc 03       		.uleb128 0x3
 3242 01fd 0E       		.uleb128 0xe
 3243 01fe 3A       		.uleb128 0x3a
 3244 01ff 0B       		.uleb128 0xb
 3245 0200 3B       		.uleb128 0x3b
 3246 0201 0B       		.uleb128 0xb
 3247 0202 49       		.uleb128 0x49
 3248 0203 13       		.uleb128 0x13
 3249 0204 3F       		.uleb128 0x3f
 3250 0205 19       		.uleb128 0x19
 3251 0206 02       		.uleb128 0x2
 3252 0207 18       		.uleb128 0x18
 3253 0208 00       		.byte	0
 3254 0209 00       		.byte	0
 3255 020a 00       		.byte	0
 3256              		.section	.debug_aranges,"",%progbits
 3257 0000 A4000000 		.4byte	0xa4
 3258 0004 0200     		.2byte	0x2
 3259 0006 00000000 		.4byte	.Ldebug_info0
 3260 000a 04       		.byte	0x4
 3261 000b 00       		.byte	0
 3262 000c 0000     		.2byte	0
 3263 000e 0000     		.2byte	0
 3264 0010 00000000 		.4byte	.LFB63
 3265 0014 30000000 		.4byte	.LFE63-.LFB63
 3266 0018 00000000 		.4byte	.LFB64
 3267 001c 18000000 		.4byte	.LFE64-.LFB64
 3268 0020 00000000 		.4byte	.LFB65
 3269 0024 7C000000 		.4byte	.LFE65-.LFB65
 3270 0028 00000000 		.4byte	.LFB66
 3271 002c 00020000 		.4byte	.LFE66-.LFB66
 3272 0030 00000000 		.4byte	.LFB67
 3273 0034 CC000000 		.4byte	.LFE67-.LFB67
 3274 0038 00000000 		.4byte	.LFB68
 3275 003c 98000000 		.4byte	.LFE68-.LFB68
 3276 0040 00000000 		.4byte	.LFB69
 3277 0044 18010000 		.4byte	.LFE69-.LFB69
 3278 0048 00000000 		.4byte	.LFB70
 3279 004c 24000000 		.4byte	.LFE70-.LFB70
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 69


 3280 0050 00000000 		.4byte	.LFB71
 3281 0054 B4000000 		.4byte	.LFE71-.LFB71
 3282 0058 00000000 		.4byte	.LFB72
 3283 005c 2A000000 		.4byte	.LFE72-.LFB72
 3284 0060 00000000 		.4byte	.LFB73
 3285 0064 2A000000 		.4byte	.LFE73-.LFB73
 3286 0068 00000000 		.4byte	.LFB74
 3287 006c 52000000 		.4byte	.LFE74-.LFB74
 3288 0070 00000000 		.4byte	.LFB75
 3289 0074 2C000000 		.4byte	.LFE75-.LFB75
 3290 0078 00000000 		.4byte	.LFB76
 3291 007c 40000000 		.4byte	.LFE76-.LFB76
 3292 0080 00000000 		.4byte	.LFB77
 3293 0084 40000000 		.4byte	.LFE77-.LFB77
 3294 0088 00000000 		.4byte	.LFB78
 3295 008c 8C000000 		.4byte	.LFE78-.LFB78
 3296 0090 00000000 		.4byte	.LFB79
 3297 0094 8C000000 		.4byte	.LFE79-.LFB79
 3298 0098 00000000 		.4byte	.LFB80
 3299 009c 14000000 		.4byte	.LFE80-.LFB80
 3300 00a0 00000000 		.4byte	0
 3301 00a4 00000000 		.4byte	0
 3302              		.section	.debug_ranges,"",%progbits
 3303              	.Ldebug_ranges0:
 3304 0000 00000000 		.4byte	.LFB63
 3305 0004 30000000 		.4byte	.LFE63
 3306 0008 00000000 		.4byte	.LFB64
 3307 000c 18000000 		.4byte	.LFE64
 3308 0010 00000000 		.4byte	.LFB65
 3309 0014 7C000000 		.4byte	.LFE65
 3310 0018 00000000 		.4byte	.LFB66
 3311 001c 00020000 		.4byte	.LFE66
 3312 0020 00000000 		.4byte	.LFB67
 3313 0024 CC000000 		.4byte	.LFE67
 3314 0028 00000000 		.4byte	.LFB68
 3315 002c 98000000 		.4byte	.LFE68
 3316 0030 00000000 		.4byte	.LFB69
 3317 0034 18010000 		.4byte	.LFE69
 3318 0038 00000000 		.4byte	.LFB70
 3319 003c 24000000 		.4byte	.LFE70
 3320 0040 00000000 		.4byte	.LFB71
 3321 0044 B4000000 		.4byte	.LFE71
 3322 0048 00000000 		.4byte	.LFB72
 3323 004c 2A000000 		.4byte	.LFE72
 3324 0050 00000000 		.4byte	.LFB73
 3325 0054 2A000000 		.4byte	.LFE73
 3326 0058 00000000 		.4byte	.LFB74
 3327 005c 52000000 		.4byte	.LFE74
 3328 0060 00000000 		.4byte	.LFB75
 3329 0064 2C000000 		.4byte	.LFE75
 3330 0068 00000000 		.4byte	.LFB76
 3331 006c 40000000 		.4byte	.LFE76
 3332 0070 00000000 		.4byte	.LFB77
 3333 0074 40000000 		.4byte	.LFE77
 3334 0078 00000000 		.4byte	.LFB78
 3335 007c 8C000000 		.4byte	.LFE78
 3336 0080 00000000 		.4byte	.LFB79
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 70


 3337 0084 8C000000 		.4byte	.LFE79
 3338 0088 00000000 		.4byte	.LFB80
 3339 008c 14000000 		.4byte	.LFE80
 3340 0090 00000000 		.4byte	0
 3341 0094 00000000 		.4byte	0
 3342              		.section	.debug_line,"",%progbits
 3343              	.Ldebug_line0:
 3344 0000 A8030000 		.section	.debug_str,"MS",%progbits,1
 3344      02005501 
 3344      00000201 
 3344      FB0E0D00 
 3344      01010101 
 3345              	.LASF68:
 3346 0000 636F7272 		.ascii	"correction\000"
 3346      65637469 
 3346      6F6E00
 3347              	.LASF38:
 3348 000b 4144435F 		.ascii	"ADC_ISR\000"
 3348      49535200 
 3349              	.LASF78:
 3350 0013 74735F65 		.ascii	"ts_enc\000"
 3350      6E6300
 3351              	.LASF49:
 3352 001a 6D325F64 		.ascii	"m2_dist\000"
 3352      69737400 
 3353              	.LASF87:
 3354 0022 666C6167 		.ascii	"flag_packet\000"
 3354      5F706163 
 3354      6B657400 
 3355              	.LASF104:
 3356 002e 2E5C6D61 		.ascii	".\\main.c\000"
 3356      696E2E63 
 3356      00
 3357              	.LASF84:
 3358 0037 666C6167 		.ascii	"flag_ts_speed\000"
 3358      5F74735F 
 3358      73706565 
 3358      6400
 3359              	.LASF33:
 3360 0045 67325F78 		.ascii	"g2_xpos\000"
 3360      706F7300 
 3361              	.LASF2:
 3362 004d 73686F72 		.ascii	"short int\000"
 3362      7420696E 
 3362      7400
 3363              	.LASF95:
 3364 0057 73797374 		.ascii	"system_state\000"
 3364      656D5F73 
 3364      74617465 
 3364      00
 3365              	.LASF9:
 3366 0064 73697A65 		.ascii	"sizetype\000"
 3366      74797065 
 3366      00
 3367              	.LASF61:
 3368 006d 6368616E 		.ascii	"changeRightWheelSpeed\000"
 3368      67655269 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 71


 3368      67687457 
 3368      6865656C 
 3368      53706565 
 3369              	.LASF94:
 3370 0083 75736242 		.ascii	"usbBuffer\000"
 3370      75666665 
 3370      7200
 3371              	.LASF42:
 3372 008d 6D61696E 		.ascii	"main\000"
 3372      00
 3373              	.LASF66:
 3374 0092 69734C65 		.ascii	"isLeftWheel\000"
 3374      66745768 
 3374      65656C00 
 3375              	.LASF105:
 3376 009e 5C5C6669 		.ascii	"\\\\files.auckland.ac.nz\\myhome\\Desktop\\Flik\\CS"
 3376      6C65732E 
 3376      6175636B 
 3376      6C616E64 
 3376      2E61632E 
 3377 00cb 3330315F 		.ascii	"301_Class.cyprj.Archive01-20190825T234813Z-001\\CS3"
 3377      436C6173 
 3377      732E6379 
 3377      70726A2E 
 3377      41726368 
 3378 00fd 30315F43 		.ascii	"01_Class.cyprj.Archive01\\CS301_Class.cydsn\000"
 3378      6C617373 
 3378      2E637970 
 3378      726A2E41 
 3378      72636869 
 3379              	.LASF52:
 3380 0128 64697374 		.ascii	"distance_to_turn\000"
 3380      616E6365 
 3380      5F746F5F 
 3380      7475726E 
 3380      00
 3381              	.LASF77:
 3382 0139 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3382      52784275 
 3382      66666572 
 3382      00
 3383              	.LASF14:
 3384 0146 75696E74 		.ascii	"uint16\000"
 3384      313600
 3385              	.LASF21:
 3386 014d 696E6465 		.ascii	"index\000"
 3386      7800
 3387              	.LASF16:
 3388 0153 696E7431 		.ascii	"int16\000"
 3388      3600
 3389              	.LASF13:
 3390 0159 75696E74 		.ascii	"uint8\000"
 3390      3800
 3391              	.LASF32:
 3392 015f 67315F64 		.ascii	"g1_direction\000"
 3392      69726563 
 3392      74696F6E 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 72


 3392      00
 3393              	.LASF47:
 3394 016c 70726576 		.ascii	"prevCountM2\000"
 3394      436F756E 
 3394      744D3200 
 3395              	.LASF62:
 3396 0178 636F7272 		.ascii	"correctSpeed\000"
 3396      65637453 
 3396      70656564 
 3396      00
 3397              	.LASF92:
 3398 0185 6C696E65 		.ascii	"line\000"
 3398      00
 3399              	.LASF100:
 3400 018a 74696D65 		.ascii	"timer_flag\000"
 3400      725F666C 
 3400      616700
 3401              	.LASF43:
 3402 0195 676F5374 		.ascii	"goStraight\000"
 3402      72616967 
 3402      687400
 3403              	.LASF18:
 3404 01a0 666C6F61 		.ascii	"float\000"
 3404      7400
 3405              	.LASF6:
 3406 01a6 6C6F6E67 		.ascii	"long long int\000"
 3406      206C6F6E 
 3406      6720696E 
 3406      7400
 3407              	.LASF76:
 3408 01b4 75736250 		.ascii	"usbPutString\000"
 3408      75745374 
 3408      72696E67 
 3408      00
 3409              	.LASF15:
 3410 01c1 696E7438 		.ascii	"int8\000"
 3410      00
 3411              	.LASF107:
 3412 01c6 75706461 		.ascii	"updateSensorValues\000"
 3412      74655365 
 3412      6E736F72 
 3412      56616C75 
 3412      657300
 3413              	.LASF83:
 3414 01d9 666C6167 		.ascii	"flag_ts_update\000"
 3414      5F74735F 
 3414      75706461 
 3414      746500
 3415              	.LASF34:
 3416 01e8 67325F79 		.ascii	"g2_ypos\000"
 3416      706F7300 
 3417              	.LASF28:
 3418 01f0 67305F64 		.ascii	"g0_direction\000"
 3418      69726563 
 3418      74696F6E 
 3418      00
 3419              	.LASF71:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 73


 3420 01fd 72696768 		.ascii	"rightIsForward\000"
 3420      74497346 
 3420      6F727761 
 3420      726400
 3421              	.LASF103:
 3422 020c 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3422      4320342E 
 3422      392E3320 
 3422      32303135 
 3422      30333033 
 3423 023f 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3423      20726576 
 3423      6973696F 
 3423      6E203232 
 3423      31323230 
 3424 0272 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3424      66756E63 
 3424      74696F6E 
 3424      2D736563 
 3424      74696F6E 
 3425              	.LASF24:
 3426 029a 726F626F 		.ascii	"robot_orientation\000"
 3426      745F6F72 
 3426      69656E74 
 3426      6174696F 
 3426      6E00
 3427              	.LASF85:
 3428 02ac 666C6167 		.ascii	"flag_ts_display\000"
 3428      5F74735F 
 3428      64697370 
 3428      6C617900 
 3429              	.LASF86:
 3430 02bc 666C6167 		.ascii	"flag_rx\000"
 3430      5F727800 
 3431              	.LASF98:
 3432 02c4 6164635F 		.ascii	"adc_readings\000"
 3432      72656164 
 3432      696E6773 
 3432      00
 3433              	.LASF30:
 3434 02d1 67315F79 		.ascii	"g1_ypos\000"
 3434      706F7300 
 3435              	.LASF46:
 3436 02d9 70726576 		.ascii	"prevCountM1\000"
 3436      436F756E 
 3436      744D3100 
 3437              	.LASF51:
 3438 02e5 64656772 		.ascii	"degrees\000"
 3438      65657300 
 3439              	.LASF1:
 3440 02ed 756E7369 		.ascii	"unsigned char\000"
 3440      676E6564 
 3440      20636861 
 3440      7200
 3441              	.LASF27:
 3442 02fb 67305F73 		.ascii	"g0_speed\000"
 3442      70656564 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 74


 3442      00
 3443              	.LASF72:
 3444 0304 7475726E 		.ascii	"turnLeft\000"
 3444      4C656674 
 3444      00
 3445              	.LASF37:
 3446 030d 454E434F 		.ascii	"ENCODER_ISR\000"
 3446      4445525F 
 3446      49535200 
 3447              	.LASF0:
 3448 0319 7369676E 		.ascii	"signed char\000"
 3448      65642063 
 3448      68617200 
 3449              	.LASF65:
 3450 0325 64657369 		.ascii	"desired_count\000"
 3450      7265645F 
 3450      636F756E 
 3450      7400
 3451              	.LASF7:
 3452 0333 6C6F6E67 		.ascii	"long long unsigned int\000"
 3452      206C6F6E 
 3452      6720756E 
 3452      7369676E 
 3452      65642069 
 3453              	.LASF93:
 3454 034a 656E7472 		.ascii	"entry\000"
 3454      7900
 3455              	.LASF8:
 3456 0350 756E7369 		.ascii	"unsigned int\000"
 3456      676E6564 
 3456      20696E74 
 3456      00
 3457              	.LASF48:
 3458 035d 6D315F64 		.ascii	"m1_dist\000"
 3458      69737400 
 3459              	.LASF88:
 3460 0365 666C6167 		.ascii	"flag_KB_string\000"
 3460      5F4B425F 
 3460      73747269 
 3460      6E6700
 3461              	.LASF50:
 3462 0374 7475726E 		.ascii	"turnForDegrees\000"
 3462      466F7244 
 3462      65677265 
 3462      657300
 3463              	.LASF5:
 3464 0383 6C6F6E67 		.ascii	"long unsigned int\000"
 3464      20756E73 
 3464      69676E65 
 3464      6420696E 
 3464      7400
 3465              	.LASF63:
 3466 0395 70726576 		.ascii	"prevCount\000"
 3466      436F756E 
 3466      7400
 3467              	.LASF35:
 3468 039f 67325F73 		.ascii	"g2_speed\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 75


 3468      70656564 
 3468      00
 3469              	.LASF29:
 3470 03a8 67315F78 		.ascii	"g1_xpos\000"
 3470      706F7300 
 3471              	.LASF3:
 3472 03b0 73686F72 		.ascii	"short unsigned int\000"
 3472      7420756E 
 3472      7369676E 
 3472      65642069 
 3472      6E7400
 3473              	.LASF106:
 3474 03c3 64617461 		.ascii	"data_main\000"
 3474      5F6D6169 
 3474      6E00
 3475              	.LASF45:
 3476 03cd 64697374 		.ascii	"distance\000"
 3476      616E6365 
 3476      00
 3477              	.LASF10:
 3478 03d6 63686172 		.ascii	"char\000"
 3478      00
 3479              	.LASF96:
 3480 03db 6164635F 		.ascii	"adc_flag\000"
 3480      666C6167 
 3480      00
 3481              	.LASF4:
 3482 03e4 6C6F6E67 		.ascii	"long int\000"
 3482      20696E74 
 3482      00
 3483              	.LASF22:
 3484 03ed 726F626F 		.ascii	"robot_xpos\000"
 3484      745F7870 
 3484      6F7300
 3485              	.LASF74:
 3486 03f8 73686172 		.ascii	"sharpTurnLeft\000"
 3486      70547572 
 3486      6E4C6566 
 3486      7400
 3487              	.LASF12:
 3488 0406 696E7433 		.ascii	"int32_t\000"
 3488      325F7400 
 3489              	.LASF53:
 3490 040e 64697374 		.ascii	"distance_turned\000"
 3490      616E6365 
 3490      5F747572 
 3490      6E656400 
 3491              	.LASF36:
 3492 041e 67325F64 		.ascii	"g2_direction\000"
 3492      69726563 
 3492      74696F6E 
 3492      00
 3493              	.LASF99:
 3494 042b 73616D70 		.ascii	"sample_count\000"
 3494      6C655F63 
 3494      6F756E74 
 3494      00
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 76


 3495              	.LASF31:
 3496 0438 67315F73 		.ascii	"g1_speed\000"
 3496      70656564 
 3496      00
 3497              	.LASF54:
 3498 0441 75547572 		.ascii	"uTurn\000"
 3498      6E00
 3499              	.LASF56:
 3500 0447 67657456 		.ascii	"getValForChannel\000"
 3500      616C466F 
 3500      72436861 
 3500      6E6E656C 
 3500      00
 3501              	.LASF91:
 3502 0458 64697370 		.ascii	"displaystring\000"
 3502      6C617973 
 3502      7472696E 
 3502      6700
 3503              	.LASF44:
 3504 0466 64657369 		.ascii	"desired_distance\000"
 3504      7265645F 
 3504      64697374 
 3504      616E6365 
 3504      00
 3505              	.LASF58:
 3506 0477 6368616E 		.ascii	"changeLeftWheelSpeed\000"
 3506      67654C65 
 3506      66745768 
 3506      65656C53 
 3506      70656564 
 3507              	.LASF57:
 3508 048c 72656164 		.ascii	"reading\000"
 3508      696E6700 
 3509              	.LASF25:
 3510 0494 67305F78 		.ascii	"g0_xpos\000"
 3510      706F7300 
 3511              	.LASF39:
 3512 049c 72696768 		.ascii	"right_wheel_count\000"
 3512      745F7768 
 3512      65656C5F 
 3512      636F756E 
 3512      7400
 3513              	.LASF40:
 3514 04ae 6C656674 		.ascii	"left_wheel_count\000"
 3514      5F776865 
 3514      656C5F63 
 3514      6F756E74 
 3514      00
 3515              	.LASF17:
 3516 04bf 696E7433 		.ascii	"int32\000"
 3516      3200
 3517              	.LASF19:
 3518 04c5 646F7562 		.ascii	"double\000"
 3518      6C6500
 3519              	.LASF67:
 3520 04cc 64696666 		.ascii	"diff_count\000"
 3520      5F636F75 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 77


 3520      6E7400
 3521              	.LASF89:
 3522 04d7 64617461 		.ascii	"dataready_flag\000"
 3522      72656164 
 3522      795F666C 
 3522      616700
 3523              	.LASF80:
 3524 04e6 74735F73 		.ascii	"ts_speed\000"
 3524      70656564 
 3524      00
 3525              	.LASF64:
 3526 04ef 636F756E 		.ascii	"count\000"
 3526      7400
 3527              	.LASF82:
 3528 04f5 666C6167 		.ascii	"flag_ts_enc\000"
 3528      5F74735F 
 3528      656E6300 
 3529              	.LASF11:
 3530 0501 5F5F696E 		.ascii	"__int32_t\000"
 3530      7433325F 
 3530      7400
 3531              	.LASF101:
 3532 050b 636F756E 		.ascii	"countM1\000"
 3532      744D3100 
 3533              	.LASF102:
 3534 0513 636F756E 		.ascii	"countM2\000"
 3534      744D3200 
 3535              	.LASF41:
 3536 051b 706F6C6C 		.ascii	"polling_count\000"
 3536      696E675F 
 3536      636F756E 
 3536      7400
 3537              	.LASF60:
 3538 0529 6E65775F 		.ascii	"new_value\000"
 3538      76616C75 
 3538      6500
 3539              	.LASF26:
 3540 0533 67305F79 		.ascii	"g0_ypos\000"
 3540      706F7300 
 3541              	.LASF73:
 3542 053b 7475726E 		.ascii	"turnRight\000"
 3542      52696768 
 3542      7400
 3543              	.LASF81:
 3544 0545 74735F64 		.ascii	"ts_display\000"
 3544      6973706C 
 3544      617900
 3545              	.LASF79:
 3546 0550 74735F75 		.ascii	"ts_update\000"
 3546      70646174 
 3546      6500
 3547              	.LASF55:
 3548 055a 67657444 		.ascii	"getDistance\000"
 3548      69737461 
 3548      6E636500 
 3549              	.LASF69:
 3550 0566 73657457 		.ascii	"setWheelDirection\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cco4wIrd.s 			page 78


 3550      6865656C 
 3550      44697265 
 3550      6374696F 
 3550      6E00
 3551              	.LASF90:
 3552 0578 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3552      5F72665F 
 3552      7472616E 
 3552      736D6973 
 3552      73696F6E 
 3553              	.LASF23:
 3554 0594 726F626F 		.ascii	"robot_ypos\000"
 3554      745F7970 
 3554      6F7300
 3555              	.LASF59:
 3556 059f 616D6F75 		.ascii	"amount\000"
 3556      6E7400
 3557              	.LASF97:
 3558 05a6 73656E73 		.ascii	"sensor_readings\000"
 3558      6F725F72 
 3558      65616469 
 3558      6E677300 
 3559              	.LASF20:
 3560 05b6 72737369 		.ascii	"rssi\000"
 3560      00
 3561              	.LASF70:
 3562 05bb 6C656674 		.ascii	"leftIsForward\000"
 3562      4973466F 
 3562      72776172 
 3562      6400
 3563              	.LASF75:
 3564 05c9 73686172 		.ascii	"sharpTurnRight\000"
 3564      70547572 
 3564      6E526967 
 3564      687400
 3565              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
