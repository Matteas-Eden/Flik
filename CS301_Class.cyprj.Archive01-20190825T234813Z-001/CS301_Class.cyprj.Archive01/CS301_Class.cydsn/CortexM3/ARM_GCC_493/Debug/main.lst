ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	displaystring
  95 0001 000000   		.align	2
  96              		.type	displaystring, %object
  97              		.size	displaystring, 64
  98              	displaystring:
  99 0004 43533330 		.ascii	"CS301 2020\012\000"
  99      31203230 
  99      32300A00 
 100 0010 00000000 		.space	52
 100      00000000 
 100      00000000 
 100      00000000 
 100      00000000 
 101              		.comm	line,64,4
 102              		.comm	entry,64,4
 103              		.comm	usbBuffer,64,4
 104              		.comm	system_state,32,4
 105              		.global	map
 106              		.align	2
 107              		.type	map, %object
 108              		.size	map, 1140
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 3


 109              	map:
 110 0044 01000000 		.word	1
 111 0048 01000000 		.word	1
 112 004c 01000000 		.word	1
 113 0050 01000000 		.word	1
 114 0054 01000000 		.word	1
 115 0058 01000000 		.word	1
 116 005c 01000000 		.word	1
 117 0060 01000000 		.word	1
 118 0064 01000000 		.word	1
 119 0068 01000000 		.word	1
 120 006c 01000000 		.word	1
 121 0070 01000000 		.word	1
 122 0074 01000000 		.word	1
 123 0078 01000000 		.word	1
 124 007c 01000000 		.word	1
 125 0080 01000000 		.word	1
 126 0084 01000000 		.word	1
 127 0088 01000000 		.word	1
 128 008c 01000000 		.word	1
 129 0090 01000000 		.word	1
 130 0094 00000000 		.word	0
 131 0098 00000000 		.word	0
 132 009c 00000000 		.word	0
 133 00a0 00000000 		.word	0
 134 00a4 00000000 		.word	0
 135 00a8 00000000 		.word	0
 136 00ac 00000000 		.word	0
 137 00b0 00000000 		.word	0
 138 00b4 00000000 		.word	0
 139 00b8 00000000 		.word	0
 140 00bc 00000000 		.word	0
 141 00c0 00000000 		.word	0
 142 00c4 00000000 		.word	0
 143 00c8 00000000 		.word	0
 144 00cc 00000000 		.word	0
 145 00d0 00000000 		.word	0
 146 00d4 00000000 		.word	0
 147 00d8 01000000 		.word	1
 148 00dc 01000000 		.word	1
 149 00e0 01000000 		.word	1
 150 00e4 01000000 		.word	1
 151 00e8 01000000 		.word	1
 152 00ec 01000000 		.word	1
 153 00f0 01000000 		.word	1
 154 00f4 01000000 		.word	1
 155 00f8 01000000 		.word	1
 156 00fc 01000000 		.word	1
 157 0100 01000000 		.word	1
 158 0104 01000000 		.word	1
 159 0108 01000000 		.word	1
 160 010c 01000000 		.word	1
 161 0110 01000000 		.word	1
 162 0114 01000000 		.word	1
 163 0118 00000000 		.word	0
 164 011c 01000000 		.word	1
 165 0120 00000000 		.word	0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 4


 166 0124 01000000 		.word	1
 167 0128 01000000 		.word	1
 168 012c 00000000 		.word	0
 169 0130 00000000 		.word	0
 170 0134 00000000 		.word	0
 171 0138 00000000 		.word	0
 172 013c 00000000 		.word	0
 173 0140 00000000 		.word	0
 174 0144 00000000 		.word	0
 175 0148 00000000 		.word	0
 176 014c 00000000 		.word	0
 177 0150 00000000 		.word	0
 178 0154 00000000 		.word	0
 179 0158 00000000 		.word	0
 180 015c 00000000 		.word	0
 181 0160 00000000 		.word	0
 182 0164 00000000 		.word	0
 183 0168 01000000 		.word	1
 184 016c 00000000 		.word	0
 185 0170 01000000 		.word	1
 186 0174 01000000 		.word	1
 187 0178 00000000 		.word	0
 188 017c 01000000 		.word	1
 189 0180 01000000 		.word	1
 190 0184 01000000 		.word	1
 191 0188 01000000 		.word	1
 192 018c 01000000 		.word	1
 193 0190 01000000 		.word	1
 194 0194 01000000 		.word	1
 195 0198 01000000 		.word	1
 196 019c 01000000 		.word	1
 197 01a0 01000000 		.word	1
 198 01a4 01000000 		.word	1
 199 01a8 00000000 		.word	0
 200 01ac 01000000 		.word	1
 201 01b0 00000000 		.word	0
 202 01b4 01000000 		.word	1
 203 01b8 00000000 		.word	0
 204 01bc 01000000 		.word	1
 205 01c0 01000000 		.word	1
 206 01c4 00000000 		.word	0
 207 01c8 00000000 		.word	0
 208 01cc 00000000 		.word	0
 209 01d0 00000000 		.word	0
 210 01d4 00000000 		.word	0
 211 01d8 00000000 		.word	0
 212 01dc 00000000 		.word	0
 213 01e0 00000000 		.word	0
 214 01e4 00000000 		.word	0
 215 01e8 00000000 		.word	0
 216 01ec 00000000 		.word	0
 217 01f0 00000000 		.word	0
 218 01f4 00000000 		.word	0
 219 01f8 01000000 		.word	1
 220 01fc 00000000 		.word	0
 221 0200 01000000 		.word	1
 222 0204 00000000 		.word	0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 5


 223 0208 01000000 		.word	1
 224 020c 01000000 		.word	1
 225 0210 00000000 		.word	0
 226 0214 01000000 		.word	1
 227 0218 00000000 		.word	0
 228 021c 01000000 		.word	1
 229 0220 01000000 		.word	1
 230 0224 01000000 		.word	1
 231 0228 01000000 		.word	1
 232 022c 01000000 		.word	1
 233 0230 00000000 		.word	0
 234 0234 01000000 		.word	1
 235 0238 01000000 		.word	1
 236 023c 01000000 		.word	1
 237 0240 00000000 		.word	0
 238 0244 01000000 		.word	1
 239 0248 00000000 		.word	0
 240 024c 01000000 		.word	1
 241 0250 00000000 		.word	0
 242 0254 01000000 		.word	1
 243 0258 01000000 		.word	1
 244 025c 00000000 		.word	0
 245 0260 01000000 		.word	1
 246 0264 00000000 		.word	0
 247 0268 00000000 		.word	0
 248 026c 00000000 		.word	0
 249 0270 00000000 		.word	0
 250 0274 00000000 		.word	0
 251 0278 00000000 		.word	0
 252 027c 00000000 		.word	0
 253 0280 00000000 		.word	0
 254 0284 00000000 		.word	0
 255 0288 01000000 		.word	1
 256 028c 00000000 		.word	0
 257 0290 01000000 		.word	1
 258 0294 00000000 		.word	0
 259 0298 01000000 		.word	1
 260 029c 00000000 		.word	0
 261 02a0 01000000 		.word	1
 262 02a4 01000000 		.word	1
 263 02a8 00000000 		.word	0
 264 02ac 01000000 		.word	1
 265 02b0 00000000 		.word	0
 266 02b4 01000000 		.word	1
 267 02b8 00000000 		.word	0
 268 02bc 01000000 		.word	1
 269 02c0 01000000 		.word	1
 270 02c4 01000000 		.word	1
 271 02c8 00000000 		.word	0
 272 02cc 01000000 		.word	1
 273 02d0 01000000 		.word	1
 274 02d4 01000000 		.word	1
 275 02d8 00000000 		.word	0
 276 02dc 01000000 		.word	1
 277 02e0 00000000 		.word	0
 278 02e4 01000000 		.word	1
 279 02e8 00000000 		.word	0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 6


 280 02ec 01000000 		.word	1
 281 02f0 01000000 		.word	1
 282 02f4 00000000 		.word	0
 283 02f8 01000000 		.word	1
 284 02fc 00000000 		.word	0
 285 0300 01000000 		.word	1
 286 0304 00000000 		.word	0
 287 0308 00000000 		.word	0
 288 030c 00000000 		.word	0
 289 0310 00000000 		.word	0
 290 0314 00000000 		.word	0
 291 0318 00000000 		.word	0
 292 031c 00000000 		.word	0
 293 0320 00000000 		.word	0
 294 0324 00000000 		.word	0
 295 0328 00000000 		.word	0
 296 032c 00000000 		.word	0
 297 0330 01000000 		.word	1
 298 0334 00000000 		.word	0
 299 0338 01000000 		.word	1
 300 033c 01000000 		.word	1
 301 0340 00000000 		.word	0
 302 0344 01000000 		.word	1
 303 0348 00000000 		.word	0
 304 034c 01000000 		.word	1
 305 0350 00000000 		.word	0
 306 0354 01000000 		.word	1
 307 0358 01000000 		.word	1
 308 035c 01000000 		.word	1
 309 0360 01000000 		.word	1
 310 0364 01000000 		.word	1
 311 0368 01000000 		.word	1
 312 036c 01000000 		.word	1
 313 0370 01000000 		.word	1
 314 0374 01000000 		.word	1
 315 0378 00000000 		.word	0
 316 037c 01000000 		.word	1
 317 0380 00000000 		.word	0
 318 0384 01000000 		.word	1
 319 0388 01000000 		.word	1
 320 038c 00000000 		.word	0
 321 0390 01000000 		.word	1
 322 0394 00000000 		.word	0
 323 0398 00000000 		.word	0
 324 039c 00000000 		.word	0
 325 03a0 00000000 		.word	0
 326 03a4 00000000 		.word	0
 327 03a8 00000000 		.word	0
 328 03ac 00000000 		.word	0
 329 03b0 00000000 		.word	0
 330 03b4 00000000 		.word	0
 331 03b8 00000000 		.word	0
 332 03bc 00000000 		.word	0
 333 03c0 00000000 		.word	0
 334 03c4 00000000 		.word	0
 335 03c8 00000000 		.word	0
 336 03cc 00000000 		.word	0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 7


 337 03d0 01000000 		.word	1
 338 03d4 01000000 		.word	1
 339 03d8 00000000 		.word	0
 340 03dc 01000000 		.word	1
 341 03e0 00000000 		.word	0
 342 03e4 01000000 		.word	1
 343 03e8 01000000 		.word	1
 344 03ec 01000000 		.word	1
 345 03f0 01000000 		.word	1
 346 03f4 01000000 		.word	1
 347 03f8 01000000 		.word	1
 348 03fc 01000000 		.word	1
 349 0400 01000000 		.word	1
 350 0404 01000000 		.word	1
 351 0408 01000000 		.word	1
 352 040c 01000000 		.word	1
 353 0410 01000000 		.word	1
 354 0414 01000000 		.word	1
 355 0418 00000000 		.word	0
 356 041c 01000000 		.word	1
 357 0420 01000000 		.word	1
 358 0424 00000000 		.word	0
 359 0428 00000000 		.word	0
 360 042c 00000000 		.word	0
 361 0430 00000000 		.word	0
 362 0434 00000000 		.word	0
 363 0438 00000000 		.word	0
 364 043c 00000000 		.word	0
 365 0440 00000000 		.word	0
 366 0444 00000000 		.word	0
 367 0448 00000000 		.word	0
 368 044c 00000000 		.word	0
 369 0450 00000000 		.word	0
 370 0454 00000000 		.word	0
 371 0458 00000000 		.word	0
 372 045c 00000000 		.word	0
 373 0460 00000000 		.word	0
 374 0464 00000000 		.word	0
 375 0468 01000000 		.word	1
 376 046c 01000000 		.word	1
 377 0470 01000000 		.word	1
 378 0474 01000000 		.word	1
 379 0478 01000000 		.word	1
 380 047c 01000000 		.word	1
 381 0480 01000000 		.word	1
 382 0484 01000000 		.word	1
 383 0488 01000000 		.word	1
 384 048c 01000000 		.word	1
 385 0490 01000000 		.word	1
 386 0494 01000000 		.word	1
 387 0498 01000000 		.word	1
 388 049c 01000000 		.word	1
 389 04a0 01000000 		.word	1
 390 04a4 01000000 		.word	1
 391 04a8 01000000 		.word	1
 392 04ac 01000000 		.word	1
 393 04b0 01000000 		.word	1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 8


 394 04b4 01000000 		.word	1
 395              		.global	food_list
 396              		.align	2
 397              		.type	food_list, %object
 398              		.size	food_list, 40
 399              	food_list:
 400 04b8 10000000 		.word	16
 401 04bc 0B000000 		.word	11
 402 04c0 03000000 		.word	3
 403 04c4 0C000000 		.word	12
 404 04c8 03000000 		.word	3
 405 04cc 05000000 		.word	5
 406 04d0 09000000 		.word	9
 407 04d4 07000000 		.word	7
 408 04d8 05000000 		.word	5
 409 04dc 09000000 		.word	9
 410              		.section	.text.blockAndWait,"ax",%progbits
 411              		.align	2
 412              		.global	blockAndWait
 413              		.thumb
 414              		.thumb_func
 415              		.type	blockAndWait, %function
 416              	blockAndWait:
 417              	.LFB63:
 418              		.file 1 ".\\BFS/helper.h"
   1:.\BFS/helper.h **** #ifndef HELPER_H
   2:.\BFS/helper.h **** #define HELPER_H
   3:.\BFS/helper.h **** #include <stdlib.h>
   4:.\BFS/helper.h **** #include <stdio.h>
   5:.\BFS/helper.h **** #include "point.h"
   6:.\BFS/helper.h **** #include "helper.h"
   7:.\BFS/helper.h **** 
   8:.\BFS/helper.h **** void blockAndWait(){
 419              		.loc 1 8 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 8
 422              		@ frame_needed = 1, uses_anonymous_args = 0
 423 0000 80B5     		push	{r7, lr}
 424              		.cfi_def_cfa_offset 8
 425              		.cfi_offset 7, -8
 426              		.cfi_offset 14, -4
 427 0002 82B0     		sub	sp, sp, #8
 428              		.cfi_def_cfa_offset 16
 429 0004 00AF     		add	r7, sp, #0
 430              		.cfi_def_cfa_register 7
   9:.\BFS/helper.h ****     char c = getchar();
 431              		.loc 1 9 0
 432 0006 104B     		ldr	r3, .L4
 433 0008 1B68     		ldr	r3, [r3]
 434 000a 5B68     		ldr	r3, [r3, #4]
 435 000c 5A68     		ldr	r2, [r3, #4]
 436 000e 013A     		subs	r2, r2, #1
 437 0010 5A60     		str	r2, [r3, #4]
 438 0012 5B68     		ldr	r3, [r3, #4]
 439 0014 002B     		cmp	r3, #0
 440 0016 0BDA     		bge	.L2
 441              		.loc 1 9 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 9


 442 0018 0B4B     		ldr	r3, .L4
 443 001a 1A68     		ldr	r2, [r3]
 444 001c 0A4B     		ldr	r3, .L4
 445 001e 1B68     		ldr	r3, [r3]
 446 0020 5B68     		ldr	r3, [r3, #4]
 447 0022 1046     		mov	r0, r2
 448 0024 1946     		mov	r1, r3
 449 0026 FFF7FEFF 		bl	__srget_r
 450 002a 0346     		mov	r3, r0
 451 002c DBB2     		uxtb	r3, r3
 452 002e 06E0     		b	.L3
 453              	.L2:
 454              		.loc 1 9 0 discriminator 2
 455 0030 054B     		ldr	r3, .L4
 456 0032 1B68     		ldr	r3, [r3]
 457 0034 5A68     		ldr	r2, [r3, #4]
 458 0036 1368     		ldr	r3, [r2]
 459 0038 591C     		adds	r1, r3, #1
 460 003a 1160     		str	r1, [r2]
 461 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 462              	.L3:
 463              		.loc 1 9 0 discriminator 4
 464 003e FB71     		strb	r3, [r7, #7]
  10:.\BFS/helper.h **** }
 465              		.loc 1 10 0 is_stmt 1 discriminator 4
 466 0040 0837     		adds	r7, r7, #8
 467              		.cfi_def_cfa_offset 8
 468 0042 BD46     		mov	sp, r7
 469              		.cfi_def_cfa_register 13
 470              		@ sp needed
 471 0044 80BD     		pop	{r7, pc}
 472              	.L5:
 473 0046 00BF     		.align	2
 474              	.L4:
 475 0048 00000000 		.word	_impure_ptr
 476              		.cfi_endproc
 477              	.LFE63:
 478              		.size	blockAndWait, .-blockAndWait
 479              		.section	.text.max,"ax",%progbits
 480              		.align	2
 481              		.global	max
 482              		.thumb
 483              		.thumb_func
 484              		.type	max, %function
 485              	max:
 486              	.LFB64:
  11:.\BFS/helper.h **** 
  12:.\BFS/helper.h **** int max(int * arr, int size){
 487              		.loc 1 12 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 16
 490              		@ frame_needed = 1, uses_anonymous_args = 0
 491              		@ link register save eliminated.
 492 0000 80B4     		push	{r7}
 493              		.cfi_def_cfa_offset 4
 494              		.cfi_offset 7, -4
 495 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 10


 496              		.cfi_def_cfa_offset 24
 497 0004 00AF     		add	r7, sp, #0
 498              		.cfi_def_cfa_register 7
 499 0006 7860     		str	r0, [r7, #4]
 500 0008 3960     		str	r1, [r7]
  13:.\BFS/helper.h ****     int max = 0;
 501              		.loc 1 13 0
 502 000a 0023     		movs	r3, #0
 503 000c FB60     		str	r3, [r7, #12]
  14:.\BFS/helper.h ****     int i;
  15:.\BFS/helper.h ****     for (i = 0; i < size; i++){
 504              		.loc 1 15 0
 505 000e 0023     		movs	r3, #0
 506 0010 BB60     		str	r3, [r7, #8]
 507 0012 10E0     		b	.L7
 508              	.L9:
  16:.\BFS/helper.h ****         if (arr[i] > max) max = arr[i];
 509              		.loc 1 16 0
 510 0014 BB68     		ldr	r3, [r7, #8]
 511 0016 9B00     		lsls	r3, r3, #2
 512 0018 7A68     		ldr	r2, [r7, #4]
 513 001a 1344     		add	r3, r3, r2
 514 001c 1A68     		ldr	r2, [r3]
 515 001e FB68     		ldr	r3, [r7, #12]
 516 0020 9A42     		cmp	r2, r3
 517 0022 05DD     		ble	.L8
 518              		.loc 1 16 0 is_stmt 0 discriminator 1
 519 0024 BB68     		ldr	r3, [r7, #8]
 520 0026 9B00     		lsls	r3, r3, #2
 521 0028 7A68     		ldr	r2, [r7, #4]
 522 002a 1344     		add	r3, r3, r2
 523 002c 1B68     		ldr	r3, [r3]
 524 002e FB60     		str	r3, [r7, #12]
 525              	.L8:
  15:.\BFS/helper.h ****         if (arr[i] > max) max = arr[i];
 526              		.loc 1 15 0 is_stmt 1 discriminator 2
 527 0030 BB68     		ldr	r3, [r7, #8]
 528 0032 0133     		adds	r3, r3, #1
 529 0034 BB60     		str	r3, [r7, #8]
 530              	.L7:
  15:.\BFS/helper.h ****         if (arr[i] > max) max = arr[i];
 531              		.loc 1 15 0 is_stmt 0 discriminator 1
 532 0036 BA68     		ldr	r2, [r7, #8]
 533 0038 3B68     		ldr	r3, [r7]
 534 003a 9A42     		cmp	r2, r3
 535 003c EADB     		blt	.L9
  17:.\BFS/helper.h ****     }
  18:.\BFS/helper.h ****     return max;
 536              		.loc 1 18 0 is_stmt 1
 537 003e FB68     		ldr	r3, [r7, #12]
  19:.\BFS/helper.h **** }
 538              		.loc 1 19 0
 539 0040 1846     		mov	r0, r3
 540 0042 1437     		adds	r7, r7, #20
 541              		.cfi_def_cfa_offset 4
 542 0044 BD46     		mov	sp, r7
 543              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 11


 544              		@ sp needed
 545 0046 5DF8047B 		ldr	r7, [sp], #4
 546              		.cfi_restore 7
 547              		.cfi_def_cfa_offset 0
 548 004a 7047     		bx	lr
 549              		.cfi_endproc
 550              	.LFE64:
 551              		.size	max, .-max
 552              		.section	.text.reverseRoute,"ax",%progbits
 553              		.align	2
 554              		.global	reverseRoute
 555              		.thumb
 556              		.thumb_func
 557              		.type	reverseRoute, %function
 558              	reverseRoute:
 559              	.LFB65:
  20:.\BFS/helper.h **** 
  21:.\BFS/helper.h **** void reverseRoute(point * arr, int size){
 560              		.loc 1 21 0
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 16
 563              		@ frame_needed = 1, uses_anonymous_args = 0
 564              		@ link register save eliminated.
 565 0000 80B4     		push	{r7}
 566              		.cfi_def_cfa_offset 4
 567              		.cfi_offset 7, -4
 568 0002 85B0     		sub	sp, sp, #20
 569              		.cfi_def_cfa_offset 24
 570 0004 00AF     		add	r7, sp, #0
 571              		.cfi_def_cfa_register 7
 572 0006 7860     		str	r0, [r7, #4]
 573 0008 3960     		str	r1, [r7]
  22:.\BFS/helper.h ****     int i;
  23:.\BFS/helper.h ****     for (i = 0; i < size/2; i++){
 574              		.loc 1 23 0
 575 000a 0023     		movs	r3, #0
 576 000c FB60     		str	r3, [r7, #12]
 577 000e 0FE0     		b	.L12
 578              	.L13:
  24:.\BFS/helper.h ****         arr[i] = arr[size-i];
 579              		.loc 1 24 0 discriminator 3
 580 0010 FB68     		ldr	r3, [r7, #12]
 581 0012 5B00     		lsls	r3, r3, #1
 582 0014 7A68     		ldr	r2, [r7, #4]
 583 0016 D118     		adds	r1, r2, r3
 584 0018 3A68     		ldr	r2, [r7]
 585 001a FB68     		ldr	r3, [r7, #12]
 586 001c D31A     		subs	r3, r2, r3
 587 001e 5B00     		lsls	r3, r3, #1
 588 0020 7A68     		ldr	r2, [r7, #4]
 589 0022 1344     		add	r3, r3, r2
 590 0024 0A46     		mov	r2, r1
 591 0026 1B88     		ldrh	r3, [r3]	@ unaligned
 592 0028 1380     		strh	r3, [r2]	@ unaligned
  23:.\BFS/helper.h ****         arr[i] = arr[size-i];
 593              		.loc 1 23 0 discriminator 3
 594 002a FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 12


 595 002c 0133     		adds	r3, r3, #1
 596 002e FB60     		str	r3, [r7, #12]
 597              	.L12:
  23:.\BFS/helper.h ****         arr[i] = arr[size-i];
 598              		.loc 1 23 0 is_stmt 0 discriminator 1
 599 0030 3B68     		ldr	r3, [r7]
 600 0032 DA0F     		lsrs	r2, r3, #31
 601 0034 1344     		add	r3, r3, r2
 602 0036 5B10     		asrs	r3, r3, #1
 603 0038 1A46     		mov	r2, r3
 604 003a FB68     		ldr	r3, [r7, #12]
 605 003c 9A42     		cmp	r2, r3
 606 003e E7DC     		bgt	.L13
  25:.\BFS/helper.h ****     }
  26:.\BFS/helper.h **** }
 607              		.loc 1 26 0 is_stmt 1
 608 0040 1437     		adds	r7, r7, #20
 609              		.cfi_def_cfa_offset 4
 610 0042 BD46     		mov	sp, r7
 611              		.cfi_def_cfa_register 13
 612              		@ sp needed
 613 0044 5DF8047B 		ldr	r7, [sp], #4
 614              		.cfi_restore 7
 615              		.cfi_def_cfa_offset 0
 616 0048 7047     		bx	lr
 617              		.cfi_endproc
 618              	.LFE65:
 619              		.size	reverseRoute, .-reverseRoute
 620 004a 00BF     		.section	.text.isRouteEqual,"ax",%progbits
 621              		.align	2
 622              		.global	isRouteEqual
 623              		.thumb
 624              		.thumb_func
 625              		.type	isRouteEqual, %function
 626              	isRouteEqual:
 627              	.LFB66:
  27:.\BFS/helper.h **** 
  28:.\BFS/helper.h **** int isRouteEqual(point * arr1, point * arr2, int size){
 628              		.loc 1 28 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 24
 631              		@ frame_needed = 1, uses_anonymous_args = 0
 632              		@ link register save eliminated.
 633 0000 80B4     		push	{r7}
 634              		.cfi_def_cfa_offset 4
 635              		.cfi_offset 7, -4
 636 0002 87B0     		sub	sp, sp, #28
 637              		.cfi_def_cfa_offset 32
 638 0004 00AF     		add	r7, sp, #0
 639              		.cfi_def_cfa_register 7
 640 0006 F860     		str	r0, [r7, #12]
 641 0008 B960     		str	r1, [r7, #8]
 642 000a 7A60     		str	r2, [r7, #4]
  29:.\BFS/helper.h ****     int i;
  30:.\BFS/helper.h ****     for (i = 0; i < size; i++){
 643              		.loc 1 30 0
 644 000c 0023     		movs	r3, #0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 13


 645 000e 7B61     		str	r3, [r7, #20]
 646 0010 20E0     		b	.L15
 647              	.L19:
  31:.\BFS/helper.h ****         if (arr1[i].x != arr2[i].x || arr1[i].y != arr2[i].y) return FALSE;
 648              		.loc 1 31 0
 649 0012 7B69     		ldr	r3, [r7, #20]
 650 0014 5B00     		lsls	r3, r3, #1
 651 0016 FA68     		ldr	r2, [r7, #12]
 652 0018 1344     		add	r3, r3, r2
 653 001a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 654 001c 7B69     		ldr	r3, [r7, #20]
 655 001e 5B00     		lsls	r3, r3, #1
 656 0020 BA68     		ldr	r2, [r7, #8]
 657 0022 1344     		add	r3, r3, r2
 658 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 659 0026 4AB2     		sxtb	r2, r1
 660 0028 5BB2     		sxtb	r3, r3
 661 002a 9A42     		cmp	r2, r3
 662 002c 0DD1     		bne	.L16
 663              		.loc 1 31 0 is_stmt 0 discriminator 2
 664 002e 7B69     		ldr	r3, [r7, #20]
 665 0030 5B00     		lsls	r3, r3, #1
 666 0032 FA68     		ldr	r2, [r7, #12]
 667 0034 1344     		add	r3, r3, r2
 668 0036 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 669 0038 7B69     		ldr	r3, [r7, #20]
 670 003a 5B00     		lsls	r3, r3, #1
 671 003c BA68     		ldr	r2, [r7, #8]
 672 003e 1344     		add	r3, r3, r2
 673 0040 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 674 0042 4AB2     		sxtb	r2, r1
 675 0044 5BB2     		sxtb	r3, r3
 676 0046 9A42     		cmp	r2, r3
 677 0048 01D0     		beq	.L17
 678              	.L16:
 679              		.loc 1 31 0 discriminator 3
 680 004a 0023     		movs	r3, #0
 681 004c 07E0     		b	.L18
 682              	.L17:
  30:.\BFS/helper.h ****         if (arr1[i].x != arr2[i].x || arr1[i].y != arr2[i].y) return FALSE;
 683              		.loc 1 30 0 is_stmt 1 discriminator 2
 684 004e 7B69     		ldr	r3, [r7, #20]
 685 0050 0133     		adds	r3, r3, #1
 686 0052 7B61     		str	r3, [r7, #20]
 687              	.L15:
  30:.\BFS/helper.h ****         if (arr1[i].x != arr2[i].x || arr1[i].y != arr2[i].y) return FALSE;
 688              		.loc 1 30 0 is_stmt 0 discriminator 1
 689 0054 7A69     		ldr	r2, [r7, #20]
 690 0056 7B68     		ldr	r3, [r7, #4]
 691 0058 9A42     		cmp	r2, r3
 692 005a DADB     		blt	.L19
  32:.\BFS/helper.h ****     }
  33:.\BFS/helper.h ****     return TRUE;
 693              		.loc 1 33 0 is_stmt 1
 694 005c 0123     		movs	r3, #1
 695              	.L18:
  34:.\BFS/helper.h **** }
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 14


 696              		.loc 1 34 0
 697 005e 1846     		mov	r0, r3
 698 0060 1C37     		adds	r7, r7, #28
 699              		.cfi_def_cfa_offset 4
 700 0062 BD46     		mov	sp, r7
 701              		.cfi_def_cfa_register 13
 702              		@ sp needed
 703 0064 5DF8047B 		ldr	r7, [sp], #4
 704              		.cfi_restore 7
 705              		.cfi_def_cfa_offset 0
 706 0068 7047     		bx	lr
 707              		.cfi_endproc
 708              	.LFE66:
 709              		.size	isRouteEqual, .-isRouteEqual
 710 006a 00BF     		.section	.text.appendArray,"ax",%progbits
 711              		.align	2
 712              		.global	appendArray
 713              		.thumb
 714              		.thumb_func
 715              		.type	appendArray, %function
 716              	appendArray:
 717              	.LFB67:
  35:.\BFS/helper.h **** 
  36:.\BFS/helper.h **** void appendArray(void *source, void *addition){
 718              		.loc 1 36 0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 8
 721              		@ frame_needed = 1, uses_anonymous_args = 0
 722              		@ link register save eliminated.
 723 0000 80B4     		push	{r7}
 724              		.cfi_def_cfa_offset 4
 725              		.cfi_offset 7, -4
 726 0002 83B0     		sub	sp, sp, #12
 727              		.cfi_def_cfa_offset 16
 728 0004 00AF     		add	r7, sp, #0
 729              		.cfi_def_cfa_register 7
 730 0006 7860     		str	r0, [r7, #4]
 731 0008 3960     		str	r1, [r7]
  37:.\BFS/helper.h ****     // TODO: Implement
  38:.\BFS/helper.h **** }
 732              		.loc 1 38 0
 733 000a 0C37     		adds	r7, r7, #12
 734              		.cfi_def_cfa_offset 4
 735 000c BD46     		mov	sp, r7
 736              		.cfi_def_cfa_register 13
 737              		@ sp needed
 738 000e 5DF8047B 		ldr	r7, [sp], #4
 739              		.cfi_restore 7
 740              		.cfi_def_cfa_offset 0
 741 0012 7047     		bx	lr
 742              		.cfi_endproc
 743              	.LFE67:
 744              		.size	appendArray, .-appendArray
 745              		.section	.text.len,"ax",%progbits
 746              		.align	2
 747              		.global	len
 748              		.thumb
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 15


 749              		.thumb_func
 750              		.type	len, %function
 751              	len:
 752              	.LFB68:
 753              		.file 2 ".\\BFS/map_addons.h"
   1:.\BFS/map_addons.h **** #ifndef MAP_ADDONS_H
   2:.\BFS/map_addons.h **** #define MAP_ADDONS_H
   3:.\BFS/map_addons.h **** 
   4:.\BFS/map_addons.h **** // Dimensions of map and paths in map
   5:.\BFS/map_addons.h **** #define MAP_ROW 15
   6:.\BFS/map_addons.h **** #define MAP_COL 19
   7:.\BFS/map_addons.h **** #define MAX_PATH_LENGTH 500
   8:.\BFS/map_addons.h **** #define MAX_NUM_PATHS 15
   9:.\BFS/map_addons.h **** #define MAX_NODES 30
  10:.\BFS/map_addons.h **** #define MAX_STACK_SIZE 20
  11:.\BFS/map_addons.h **** #define MAX_EDGES 15
  12:.\BFS/map_addons.h **** 
  13:.\BFS/map_addons.h **** // Colours for printing
  14:.\BFS/map_addons.h **** #define RED "\033[0;31m"
  15:.\BFS/map_addons.h **** #define BLUE "\033[0;34m"
  16:.\BFS/map_addons.h **** #define BOLD_GREEN "\033[1;32m"
  17:.\BFS/map_addons.h **** #define BOLD_YELLOW "\033[1;33m"
  18:.\BFS/map_addons.h **** #define DEFAULT_COLOUR "\033[0m"
  19:.\BFS/map_addons.h **** 
  20:.\BFS/map_addons.h **** // Labels for vertices on the map
  21:.\BFS/map_addons.h **** #define UNVISITED 0
  22:.\BFS/map_addons.h **** #define WALL 1
  23:.\BFS/map_addons.h **** #define VISITED 2
  24:.\BFS/map_addons.h **** #define FINAL_PATH 3
  25:.\BFS/map_addons.h **** #define START_OR_END 4
  26:.\BFS/map_addons.h **** #define EMPTY_VAL -1
  27:.\BFS/map_addons.h **** 
  28:.\BFS/map_addons.h **** // Command Macros
  29:.\BFS/map_addons.h **** #define LEFT_TURN -1
  30:.\BFS/map_addons.h **** #define RIGHT_TURN -2
  31:.\BFS/map_addons.h **** #define U_TURN -3
  32:.\BFS/map_addons.h **** 
  33:.\BFS/map_addons.h **** // Parameters for creating the command list
  34:.\BFS/map_addons.h **** #define MAX_COMMAND_LENGTH 200
  35:.\BFS/map_addons.h **** #define EMPTY_COMMAND 0
  36:.\BFS/map_addons.h **** #define CMD_NULL -1
  37:.\BFS/map_addons.h **** #define CMD_RIGHT 0
  38:.\BFS/map_addons.h **** #define CMD_DOWN 1
  39:.\BFS/map_addons.h **** #define CMD_LEFT 2
  40:.\BFS/map_addons.h **** #define CMD_UP 3
  41:.\BFS/map_addons.h **** #define START_FACING CMD_RIGHT /*------------------ CHANGE THIS FOR STARTING ORIENATATION ---------
  42:.\BFS/map_addons.h **** 
  43:.\BFS/map_addons.h **** // Values that decide turning behaviour
  44:.\BFS/map_addons.h **** #define GO_STRAIGHT 0
  45:.\BFS/map_addons.h **** #define TURN_LEFT_1 -1
  46:.\BFS/map_addons.h **** #define TURN_LEFT_2 3
  47:.\BFS/map_addons.h **** #define TURN_RIGHT_1 1
  48:.\BFS/map_addons.h **** #define TURN_RIGHT_2 -3
  49:.\BFS/map_addons.h **** 
  50:.\BFS/map_addons.h **** // Debug
  51:.\BFS/map_addons.h **** // #define DEBUG_CMD
  52:.\BFS/map_addons.h **** 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 16


  53:.\BFS/map_addons.h **** // Includes
  54:.\BFS/map_addons.h **** #include <stdio.h>
  55:.\BFS/map_addons.h **** #include "helper.h"
  56:.\BFS/map_addons.h **** #include "point.h"
  57:.\BFS/map_addons.h **** #include "line_map.h"
  58:.\BFS/map_addons.h **** #include "defines.h"
  59:.\BFS/map_addons.h **** 
  60:.\BFS/map_addons.h **** /* Get the length of a path*/
  61:.\BFS/map_addons.h **** int len(point * path){
 754              		.loc 2 61 0
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 16
 757              		@ frame_needed = 1, uses_anonymous_args = 0
 758              		@ link register save eliminated.
 759 0000 80B4     		push	{r7}
 760              		.cfi_def_cfa_offset 4
 761              		.cfi_offset 7, -4
 762 0002 85B0     		sub	sp, sp, #20
 763              		.cfi_def_cfa_offset 24
 764 0004 00AF     		add	r7, sp, #0
 765              		.cfi_def_cfa_register 7
 766 0006 7860     		str	r0, [r7, #4]
  62:.\BFS/map_addons.h ****     int len = 0;
 767              		.loc 2 62 0
 768 0008 0023     		movs	r3, #0
 769 000a FB60     		str	r3, [r7, #12]
  63:.\BFS/map_addons.h ****     int i = 0;
 770              		.loc 2 63 0
 771 000c 0023     		movs	r3, #0
 772 000e BB60     		str	r3, [r7, #8]
  64:.\BFS/map_addons.h ****     for (; i < MAX_PATH_LENGTH; i++){
 773              		.loc 2 64 0
 774 0010 18E0     		b	.L22
 775              	.L25:
  65:.\BFS/map_addons.h ****         if (path[i].x == EMPTY_VAL && path[i].y == EMPTY_VAL) break;
 776              		.loc 2 65 0
 777 0012 BB68     		ldr	r3, [r7, #8]
 778 0014 5B00     		lsls	r3, r3, #1
 779 0016 7A68     		ldr	r2, [r7, #4]
 780 0018 1344     		add	r3, r3, r2
 781 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 782 001c 5BB2     		sxtb	r3, r3
 783 001e B3F1FF3F 		cmp	r3, #-1
 784 0022 09D1     		bne	.L23
 785              		.loc 2 65 0 is_stmt 0 discriminator 1
 786 0024 BB68     		ldr	r3, [r7, #8]
 787 0026 5B00     		lsls	r3, r3, #1
 788 0028 7A68     		ldr	r2, [r7, #4]
 789 002a 1344     		add	r3, r3, r2
 790 002c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 791 002e 5BB2     		sxtb	r3, r3
 792 0030 B3F1FF3F 		cmp	r3, #-1
 793 0034 00D1     		bne	.L23
 794              		.loc 2 65 0
 795 0036 09E0     		b	.L24
 796              	.L23:
  66:.\BFS/map_addons.h ****         len++;
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 17


 797              		.loc 2 66 0 is_stmt 1
 798 0038 FB68     		ldr	r3, [r7, #12]
 799 003a 0133     		adds	r3, r3, #1
 800 003c FB60     		str	r3, [r7, #12]
  64:.\BFS/map_addons.h ****     for (; i < MAX_PATH_LENGTH; i++){
 801              		.loc 2 64 0
 802 003e BB68     		ldr	r3, [r7, #8]
 803 0040 0133     		adds	r3, r3, #1
 804 0042 BB60     		str	r3, [r7, #8]
 805              	.L22:
  64:.\BFS/map_addons.h ****     for (; i < MAX_PATH_LENGTH; i++){
 806              		.loc 2 64 0 is_stmt 0 discriminator 1
 807 0044 BB68     		ldr	r3, [r7, #8]
 808 0046 B3F5FA7F 		cmp	r3, #500
 809 004a E2DB     		blt	.L25
 810              	.L24:
  67:.\BFS/map_addons.h ****     }
  68:.\BFS/map_addons.h ****     return len;
 811              		.loc 2 68 0 is_stmt 1
 812 004c FB68     		ldr	r3, [r7, #12]
  69:.\BFS/map_addons.h **** }
 813              		.loc 2 69 0
 814 004e 1846     		mov	r0, r3
 815 0050 1437     		adds	r7, r7, #20
 816              		.cfi_def_cfa_offset 4
 817 0052 BD46     		mov	sp, r7
 818              		.cfi_def_cfa_register 13
 819              		@ sp needed
 820 0054 5DF8047B 		ldr	r7, [sp], #4
 821              		.cfi_restore 7
 822              		.cfi_def_cfa_offset 0
 823 0058 7047     		bx	lr
 824              		.cfi_endproc
 825              	.LFE68:
 826              		.size	len, .-len
 827 005a 00BF     		.section	.text.isEmpty,"ax",%progbits
 828              		.align	2
 829              		.global	isEmpty
 830              		.thumb
 831              		.thumb_func
 832              		.type	isEmpty, %function
 833              	isEmpty:
 834              	.LFB69:
  70:.\BFS/map_addons.h **** 
  71:.\BFS/map_addons.h **** /* Check if a path is empty i.e. full of EMPTY_VAL */
  72:.\BFS/map_addons.h **** int isEmpty(point * path, int size){
 835              		.loc 2 72 0
 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 16
 838              		@ frame_needed = 1, uses_anonymous_args = 0
 839              		@ link register save eliminated.
 840 0000 80B4     		push	{r7}
 841              		.cfi_def_cfa_offset 4
 842              		.cfi_offset 7, -4
 843 0002 85B0     		sub	sp, sp, #20
 844              		.cfi_def_cfa_offset 24
 845 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 18


 846              		.cfi_def_cfa_register 7
 847 0006 7860     		str	r0, [r7, #4]
 848 0008 3960     		str	r1, [r7]
  73:.\BFS/map_addons.h ****     int i = 0;
 849              		.loc 2 73 0
 850 000a 0023     		movs	r3, #0
 851 000c FB60     		str	r3, [r7, #12]
  74:.\BFS/map_addons.h ****     for (;i<size;i++){
 852              		.loc 2 74 0
 853 000e 16E0     		b	.L28
 854              	.L31:
  75:.\BFS/map_addons.h ****         if (path[i].x != EMPTY_VAL && path[i].y != EMPTY_VAL) return FALSE;
 855              		.loc 2 75 0
 856 0010 FB68     		ldr	r3, [r7, #12]
 857 0012 5B00     		lsls	r3, r3, #1
 858 0014 7A68     		ldr	r2, [r7, #4]
 859 0016 1344     		add	r3, r3, r2
 860 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 861 001a 5BB2     		sxtb	r3, r3
 862 001c B3F1FF3F 		cmp	r3, #-1
 863 0020 0AD0     		beq	.L29
 864              		.loc 2 75 0 is_stmt 0 discriminator 1
 865 0022 FB68     		ldr	r3, [r7, #12]
 866 0024 5B00     		lsls	r3, r3, #1
 867 0026 7A68     		ldr	r2, [r7, #4]
 868 0028 1344     		add	r3, r3, r2
 869 002a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 870 002c 5BB2     		sxtb	r3, r3
 871 002e B3F1FF3F 		cmp	r3, #-1
 872 0032 01D0     		beq	.L29
 873              		.loc 2 75 0 discriminator 2
 874 0034 0023     		movs	r3, #0
 875 0036 07E0     		b	.L30
 876              	.L29:
  74:.\BFS/map_addons.h ****     for (;i<size;i++){
 877              		.loc 2 74 0 is_stmt 1
 878 0038 FB68     		ldr	r3, [r7, #12]
 879 003a 0133     		adds	r3, r3, #1
 880 003c FB60     		str	r3, [r7, #12]
 881              	.L28:
  74:.\BFS/map_addons.h ****     for (;i<size;i++){
 882              		.loc 2 74 0 is_stmt 0 discriminator 1
 883 003e FA68     		ldr	r2, [r7, #12]
 884 0040 3B68     		ldr	r3, [r7]
 885 0042 9A42     		cmp	r2, r3
 886 0044 E4DB     		blt	.L31
  76:.\BFS/map_addons.h ****     }
  77:.\BFS/map_addons.h ****     return TRUE;
 887              		.loc 2 77 0 is_stmt 1
 888 0046 0123     		movs	r3, #1
 889              	.L30:
  78:.\BFS/map_addons.h **** }
 890              		.loc 2 78 0
 891 0048 1846     		mov	r0, r3
 892 004a 1437     		adds	r7, r7, #20
 893              		.cfi_def_cfa_offset 4
 894 004c BD46     		mov	sp, r7
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 19


 895              		.cfi_def_cfa_register 13
 896              		@ sp needed
 897 004e 5DF8047B 		ldr	r7, [sp], #4
 898              		.cfi_restore 7
 899              		.cfi_def_cfa_offset 0
 900 0052 7047     		bx	lr
 901              		.cfi_endproc
 902              	.LFE69:
 903              		.size	isEmpty, .-isEmpty
 904              		.section	.text.isPointOnPath,"ax",%progbits
 905              		.align	2
 906              		.global	isPointOnPath
 907              		.thumb
 908              		.thumb_func
 909              		.type	isPointOnPath, %function
 910              	isPointOnPath:
 911              	.LFB70:
  79:.\BFS/map_addons.h **** 
  80:.\BFS/map_addons.h **** int isPointOnPath(point p, point * path, int size){
 912              		.loc 2 80 0
 913              		.cfi_startproc
 914              		@ args = 0, pretend = 0, frame = 24
 915              		@ frame_needed = 1, uses_anonymous_args = 0
 916              		@ link register save eliminated.
 917 0000 80B4     		push	{r7}
 918              		.cfi_def_cfa_offset 4
 919              		.cfi_offset 7, -4
 920 0002 87B0     		sub	sp, sp, #28
 921              		.cfi_def_cfa_offset 32
 922 0004 00AF     		add	r7, sp, #0
 923              		.cfi_def_cfa_register 7
 924 0006 B881     		strh	r0, [r7, #12]	@ movhi
 925 0008 B960     		str	r1, [r7, #8]
 926 000a 7A60     		str	r2, [r7, #4]
  81:.\BFS/map_addons.h ****     int i = 0;
 927              		.loc 2 81 0
 928 000c 0023     		movs	r3, #0
 929 000e 7B61     		str	r3, [r7, #20]
  82:.\BFS/map_addons.h ****     for (; i < size; i++){
 930              		.loc 2 82 0
 931 0010 18E0     		b	.L33
 932              	.L36:
  83:.\BFS/map_addons.h ****         if (path[i].x == p.x && path[i].y == p.y) return TRUE;   
 933              		.loc 2 83 0
 934 0012 7B69     		ldr	r3, [r7, #20]
 935 0014 5B00     		lsls	r3, r3, #1
 936 0016 BA68     		ldr	r2, [r7, #8]
 937 0018 1344     		add	r3, r3, r2
 938 001a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 939 001c 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 940 001e 52B2     		sxtb	r2, r2
 941 0020 5BB2     		sxtb	r3, r3
 942 0022 9A42     		cmp	r2, r3
 943 0024 0BD1     		bne	.L34
 944              		.loc 2 83 0 is_stmt 0 discriminator 1
 945 0026 7B69     		ldr	r3, [r7, #20]
 946 0028 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 20


 947 002a BA68     		ldr	r2, [r7, #8]
 948 002c 1344     		add	r3, r3, r2
 949 002e 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 950 0030 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 951 0032 52B2     		sxtb	r2, r2
 952 0034 5BB2     		sxtb	r3, r3
 953 0036 9A42     		cmp	r2, r3
 954 0038 01D1     		bne	.L34
 955              		.loc 2 83 0 discriminator 2
 956 003a 0123     		movs	r3, #1
 957 003c 07E0     		b	.L35
 958              	.L34:
  82:.\BFS/map_addons.h ****     for (; i < size; i++){
 959              		.loc 2 82 0 is_stmt 1
 960 003e 7B69     		ldr	r3, [r7, #20]
 961 0040 0133     		adds	r3, r3, #1
 962 0042 7B61     		str	r3, [r7, #20]
 963              	.L33:
  82:.\BFS/map_addons.h ****     for (; i < size; i++){
 964              		.loc 2 82 0 is_stmt 0 discriminator 1
 965 0044 7A69     		ldr	r2, [r7, #20]
 966 0046 7B68     		ldr	r3, [r7, #4]
 967 0048 9A42     		cmp	r2, r3
 968 004a E2DB     		blt	.L36
  84:.\BFS/map_addons.h ****     }
  85:.\BFS/map_addons.h ****     return FALSE;
 969              		.loc 2 85 0 is_stmt 1
 970 004c 0023     		movs	r3, #0
 971              	.L35:
  86:.\BFS/map_addons.h **** }
 972              		.loc 2 86 0
 973 004e 1846     		mov	r0, r3
 974 0050 1C37     		adds	r7, r7, #28
 975              		.cfi_def_cfa_offset 4
 976 0052 BD46     		mov	sp, r7
 977              		.cfi_def_cfa_register 13
 978              		@ sp needed
 979 0054 5DF8047B 		ldr	r7, [sp], #4
 980              		.cfi_restore 7
 981              		.cfi_def_cfa_offset 0
 982 0058 7047     		bx	lr
 983              		.cfi_endproc
 984              	.LFE70:
 985              		.size	isPointOnPath, .-isPointOnPath
 986 005a 00BF     		.section	.rodata
 987              		.align	2
 988              	.LC3:
 989 0000 2825642C 		.ascii	"(%d, %d)\000"
 989      20256429 
 989      00
 990 0009 000000   		.align	2
 991              	.LC4:
 992 000c 00       		.ascii	"\000"
 993              		.section	.text.printPath,"ax",%progbits
 994              		.align	2
 995              		.global	printPath
 996              		.thumb
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 21


 997              		.thumb_func
 998              		.type	printPath, %function
 999              	printPath:
 1000              	.LFB71:
  87:.\BFS/map_addons.h **** 
  88:.\BFS/map_addons.h **** /* Print a path */
  89:.\BFS/map_addons.h **** void printPath(point * path){
 1001              		.loc 2 89 0
 1002              		.cfi_startproc
 1003              		@ args = 0, pretend = 0, frame = 16
 1004              		@ frame_needed = 1, uses_anonymous_args = 0
 1005 0000 80B5     		push	{r7, lr}
 1006              		.cfi_def_cfa_offset 8
 1007              		.cfi_offset 7, -8
 1008              		.cfi_offset 14, -4
 1009 0002 84B0     		sub	sp, sp, #16
 1010              		.cfi_def_cfa_offset 24
 1011 0004 00AF     		add	r7, sp, #0
 1012              		.cfi_def_cfa_register 7
 1013 0006 7860     		str	r0, [r7, #4]
  90:.\BFS/map_addons.h ****     int i = 0;
 1014              		.loc 2 90 0
 1015 0008 0023     		movs	r3, #0
 1016 000a FB60     		str	r3, [r7, #12]
  91:.\BFS/map_addons.h ****     for (; i < MAX_PATH_LENGTH; i++){
 1017              		.loc 2 91 0
 1018 000c 29E0     		b	.L38
 1019              	.L43:
  92:.\BFS/map_addons.h ****         if (path[i].x == EMPTY_VAL && path[i].y == EMPTY_VAL){
 1020              		.loc 2 92 0
 1021 000e FB68     		ldr	r3, [r7, #12]
 1022 0010 5B00     		lsls	r3, r3, #1
 1023 0012 7A68     		ldr	r2, [r7, #4]
 1024 0014 1344     		add	r3, r3, r2
 1025 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1026 0018 5BB2     		sxtb	r3, r3
 1027 001a B3F1FF3F 		cmp	r3, #-1
 1028 001e 0DD1     		bne	.L39
 1029              		.loc 2 92 0 is_stmt 0 discriminator 1
 1030 0020 FB68     		ldr	r3, [r7, #12]
 1031 0022 5B00     		lsls	r3, r3, #1
 1032 0024 7A68     		ldr	r2, [r7, #4]
 1033 0026 1344     		add	r3, r3, r2
 1034 0028 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1035 002a 5BB2     		sxtb	r3, r3
 1036 002c B3F1FF3F 		cmp	r3, #-1
 1037 0030 04D1     		bne	.L39
  93:.\BFS/map_addons.h ****             if (i > 0) break;
 1038              		.loc 2 93 0 is_stmt 1
 1039 0032 FB68     		ldr	r3, [r7, #12]
 1040 0034 002B     		cmp	r3, #0
 1041 0036 00DD     		ble	.L40
 1042 0038 17E0     		b	.L41
 1043              	.L40:
  94:.\BFS/map_addons.h ****             return;
 1044              		.loc 2 94 0
 1045 003a 19E0     		b	.L37
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 22


 1046              	.L39:
  95:.\BFS/map_addons.h ****         }
  96:.\BFS/map_addons.h ****         printf("(%d, %d)",path[i].x,path[i].y);
 1047              		.loc 2 96 0
 1048 003c FB68     		ldr	r3, [r7, #12]
 1049 003e 5B00     		lsls	r3, r3, #1
 1050 0040 7A68     		ldr	r2, [r7, #4]
 1051 0042 1344     		add	r3, r3, r2
 1052 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1053 0046 59B2     		sxtb	r1, r3
 1054 0048 FB68     		ldr	r3, [r7, #12]
 1055 004a 5B00     		lsls	r3, r3, #1
 1056 004c 7A68     		ldr	r2, [r7, #4]
 1057 004e 1344     		add	r3, r3, r2
 1058 0050 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1059 0052 5BB2     		sxtb	r3, r3
 1060 0054 0848     		ldr	r0, .L44
 1061 0056 1A46     		mov	r2, r3
 1062 0058 FFF7FEFF 		bl	printf
  91:.\BFS/map_addons.h ****         if (path[i].x == EMPTY_VAL && path[i].y == EMPTY_VAL){
 1063              		.loc 2 91 0
 1064 005c FB68     		ldr	r3, [r7, #12]
 1065 005e 0133     		adds	r3, r3, #1
 1066 0060 FB60     		str	r3, [r7, #12]
 1067              	.L38:
  91:.\BFS/map_addons.h ****         if (path[i].x == EMPTY_VAL && path[i].y == EMPTY_VAL){
 1068              		.loc 2 91 0 is_stmt 0 discriminator 1
 1069 0062 FB68     		ldr	r3, [r7, #12]
 1070 0064 B3F5FA7F 		cmp	r3, #500
 1071 0068 D1DB     		blt	.L43
 1072              	.L41:
  97:.\BFS/map_addons.h ****     }
  98:.\BFS/map_addons.h ****     puts("");
 1073              		.loc 2 98 0 is_stmt 1
 1074 006a 0448     		ldr	r0, .L44+4
 1075 006c FFF7FEFF 		bl	puts
 1076              	.L37:
  99:.\BFS/map_addons.h **** }
 1077              		.loc 2 99 0
 1078 0070 1037     		adds	r7, r7, #16
 1079              		.cfi_def_cfa_offset 8
 1080 0072 BD46     		mov	sp, r7
 1081              		.cfi_def_cfa_register 13
 1082              		@ sp needed
 1083 0074 80BD     		pop	{r7, pc}
 1084              	.L45:
 1085 0076 00BF     		.align	2
 1086              	.L44:
 1087 0078 00000000 		.word	.LC3
 1088 007c 0C000000 		.word	.LC4
 1089              		.cfi_endproc
 1090              	.LFE71:
 1091              		.size	printPath, .-printPath
 1092              		.section	.rodata
 1093 000d 000000   		.align	2
 1094              	.LC5:
 1095 0010 436F6D6D 		.ascii	"Commands: (\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 23


 1095      616E6473 
 1095      3A202800 
 1096              		.align	2
 1097              	.LC6:
 1098 001c 256400   		.ascii	"%d\000"
 1099 001f 00       		.align	2
 1100              	.LC7:
 1101 0020 2900     		.ascii	")\000"
 1102              		.section	.text.printCommands,"ax",%progbits
 1103              		.align	2
 1104              		.global	printCommands
 1105              		.thumb
 1106              		.thumb_func
 1107              		.type	printCommands, %function
 1108              	printCommands:
 1109              	.LFB72:
 100:.\BFS/map_addons.h **** 
 101:.\BFS/map_addons.h **** /* Prints the commands */
 102:.\BFS/map_addons.h **** void printCommands(int *commands){
 1110              		.loc 2 102 0
 1111              		.cfi_startproc
 1112              		@ args = 0, pretend = 0, frame = 16
 1113              		@ frame_needed = 1, uses_anonymous_args = 0
 1114 0000 80B5     		push	{r7, lr}
 1115              		.cfi_def_cfa_offset 8
 1116              		.cfi_offset 7, -8
 1117              		.cfi_offset 14, -4
 1118 0002 84B0     		sub	sp, sp, #16
 1119              		.cfi_def_cfa_offset 24
 1120 0004 00AF     		add	r7, sp, #0
 1121              		.cfi_def_cfa_register 7
 1122 0006 7860     		str	r0, [r7, #4]
 103:.\BFS/map_addons.h ****     int i = 0;
 1123              		.loc 2 103 0
 1124 0008 0023     		movs	r3, #0
 1125 000a FB60     		str	r3, [r7, #12]
 104:.\BFS/map_addons.h ****     fputs("Commands: (",stdout);
 1126              		.loc 2 104 0
 1127 000c 284B     		ldr	r3, .L60
 1128 000e 1B68     		ldr	r3, [r3]
 1129 0010 9B68     		ldr	r3, [r3, #8]
 1130 0012 2848     		ldr	r0, .L60+4
 1131 0014 0121     		movs	r1, #1
 1132 0016 0B22     		movs	r2, #11
 1133 0018 FFF7FEFF 		bl	fwrite
 105:.\BFS/map_addons.h ****     for (; i < MAX_COMMAND_LENGTH; i++){
 1134              		.loc 2 105 0
 1135 001c 3EE0     		b	.L47
 1136              	.L58:
 106:.\BFS/map_addons.h ****         if (commands[i] == EMPTY_COMMAND){
 1137              		.loc 2 106 0
 1138 001e FB68     		ldr	r3, [r7, #12]
 1139 0020 9B00     		lsls	r3, r3, #2
 1140 0022 7A68     		ldr	r2, [r7, #4]
 1141 0024 1344     		add	r3, r3, r2
 1142 0026 1B68     		ldr	r3, [r3]
 1143 0028 002B     		cmp	r3, #0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 24


 1144 002a 04D1     		bne	.L48
 107:.\BFS/map_addons.h ****             if (i > 0) break;
 1145              		.loc 2 107 0
 1146 002c FB68     		ldr	r3, [r7, #12]
 1147 002e 002B     		cmp	r3, #0
 1148 0030 00DD     		ble	.L49
 1149 0032 36E0     		b	.L50
 1150              	.L49:
 108:.\BFS/map_addons.h ****             return;
 1151              		.loc 2 108 0
 1152 0034 38E0     		b	.L46
 1153              	.L48:
 109:.\BFS/map_addons.h ****         }
 110:.\BFS/map_addons.h ****         switch(commands[i]){
 1154              		.loc 2 110 0
 1155 0036 FB68     		ldr	r3, [r7, #12]
 1156 0038 9B00     		lsls	r3, r3, #2
 1157 003a 7A68     		ldr	r2, [r7, #4]
 1158 003c 1344     		add	r3, r3, r2
 1159 003e 1B68     		ldr	r3, [r3]
 1160 0040 13F1020F 		cmn	r3, #2
 1161 0044 0AD0     		beq	.L53
 1162 0046 B3F1FF3F 		cmp	r3, #-1
 1163 004a 03D0     		beq	.L54
 1164 004c 13F1030F 		cmn	r3, #3
 1165 0050 08D0     		beq	.L55
 1166 0052 0BE0     		b	.L59
 1167              	.L54:
 111:.\BFS/map_addons.h ****             case LEFT_TURN:
 112:.\BFS/map_addons.h ****                 printf("L");
 1168              		.loc 2 112 0
 1169 0054 4C20     		movs	r0, #76
 1170 0056 FFF7FEFF 		bl	putchar
 113:.\BFS/map_addons.h ****                 break;
 1171              		.loc 2 113 0
 1172 005a 11E0     		b	.L56
 1173              	.L53:
 114:.\BFS/map_addons.h ****             case RIGHT_TURN:
 115:.\BFS/map_addons.h ****                 printf("R");
 1174              		.loc 2 115 0
 1175 005c 5220     		movs	r0, #82
 1176 005e FFF7FEFF 		bl	putchar
 116:.\BFS/map_addons.h ****                 break;
 1177              		.loc 2 116 0
 1178 0062 0DE0     		b	.L56
 1179              	.L55:
 117:.\BFS/map_addons.h ****             case U_TURN:
 118:.\BFS/map_addons.h ****                 printf("U");
 1180              		.loc 2 118 0
 1181 0064 5520     		movs	r0, #85
 1182 0066 FFF7FEFF 		bl	putchar
 119:.\BFS/map_addons.h ****                 break;
 1183              		.loc 2 119 0
 1184 006a 09E0     		b	.L56
 1185              	.L59:
 120:.\BFS/map_addons.h ****             default:
 121:.\BFS/map_addons.h ****                 printf("%d", commands[i]);
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 25


 1186              		.loc 2 121 0
 1187 006c FB68     		ldr	r3, [r7, #12]
 1188 006e 9B00     		lsls	r3, r3, #2
 1189 0070 7A68     		ldr	r2, [r7, #4]
 1190 0072 1344     		add	r3, r3, r2
 1191 0074 1B68     		ldr	r3, [r3]
 1192 0076 1048     		ldr	r0, .L60+8
 1193 0078 1946     		mov	r1, r3
 1194 007a FFF7FEFF 		bl	printf
 122:.\BFS/map_addons.h ****                 break;
 1195              		.loc 2 122 0
 1196 007e 00BF     		nop
 1197              	.L56:
 123:.\BFS/map_addons.h ****         };
 124:.\BFS/map_addons.h ****         if (commands[i+1] != EMPTY_COMMAND) printf(",");
 1198              		.loc 2 124 0
 1199 0080 FB68     		ldr	r3, [r7, #12]
 1200 0082 0133     		adds	r3, r3, #1
 1201 0084 9B00     		lsls	r3, r3, #2
 1202 0086 7A68     		ldr	r2, [r7, #4]
 1203 0088 1344     		add	r3, r3, r2
 1204 008a 1B68     		ldr	r3, [r3]
 1205 008c 002B     		cmp	r3, #0
 1206 008e 02D0     		beq	.L57
 1207              		.loc 2 124 0 is_stmt 0 discriminator 1
 1208 0090 2C20     		movs	r0, #44
 1209 0092 FFF7FEFF 		bl	putchar
 1210              	.L57:
 105:.\BFS/map_addons.h ****         if (commands[i] == EMPTY_COMMAND){
 1211              		.loc 2 105 0 is_stmt 1
 1212 0096 FB68     		ldr	r3, [r7, #12]
 1213 0098 0133     		adds	r3, r3, #1
 1214 009a FB60     		str	r3, [r7, #12]
 1215              	.L47:
 105:.\BFS/map_addons.h ****         if (commands[i] == EMPTY_COMMAND){
 1216              		.loc 2 105 0 is_stmt 0 discriminator 1
 1217 009c FB68     		ldr	r3, [r7, #12]
 1218 009e C72B     		cmp	r3, #199
 1219 00a0 BDDD     		ble	.L58
 1220              	.L50:
 125:.\BFS/map_addons.h ****     }
 126:.\BFS/map_addons.h ****     puts(")");
 1221              		.loc 2 126 0 is_stmt 1
 1222 00a2 0648     		ldr	r0, .L60+12
 1223 00a4 FFF7FEFF 		bl	puts
 1224              	.L46:
 127:.\BFS/map_addons.h **** }
 1225              		.loc 2 127 0
 1226 00a8 1037     		adds	r7, r7, #16
 1227              		.cfi_def_cfa_offset 8
 1228 00aa BD46     		mov	sp, r7
 1229              		.cfi_def_cfa_register 13
 1230              		@ sp needed
 1231 00ac 80BD     		pop	{r7, pc}
 1232              	.L61:
 1233 00ae 00BF     		.align	2
 1234              	.L60:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 26


 1235 00b0 00000000 		.word	_impure_ptr
 1236 00b4 10000000 		.word	.LC5
 1237 00b8 1C000000 		.word	.LC6
 1238 00bc 20000000 		.word	.LC7
 1239              		.cfi_endproc
 1240              	.LFE72:
 1241              		.size	printCommands, .-printCommands
 1242              		.section	.rodata
 1243 0022 0000     		.align	2
 1244              	.LC8:
 1245 0024 2F2F2F2F 		.ascii	"////////////////BEGIN MAP////////////////\000"
 1245      2F2F2F2F 
 1245      2F2F2F2F 
 1245      2F2F2F2F 
 1245      42454749 
 1246 004e 0000     		.align	2
 1247              	.LC9:
 1248 0050 25642000 		.ascii	"%d \000"
 1249              		.align	2
 1250              	.LC10:
 1251 0054 1B5B303B 		.ascii	"\033[0;31m%d\033[0m \000"
 1251      33316D25 
 1251      641B5B30 
 1251      6D2000
 1252 0063 00       		.align	2
 1253              	.LC11:
 1254 0064 1B5B303B 		.ascii	"\033[0;34m%d\033[0m \000"
 1254      33346D25 
 1254      641B5B30 
 1254      6D2000
 1255 0073 00       		.align	2
 1256              	.LC12:
 1257 0074 1B5B313B 		.ascii	"\033[1;32m%d\033[0m \000"
 1257      33326D25 
 1257      641B5B30 
 1257      6D2000
 1258 0083 00       		.align	2
 1259              	.LC13:
 1260 0084 1B5B313B 		.ascii	"\033[1;33m%d\033[0m \000"
 1260      33336D25 
 1260      641B5B30 
 1260      6D2000
 1261 0093 00       		.align	2
 1262              	.LC14:
 1263 0094 2F2F2F2F 		.ascii	"/////////////////END MAP/////////////////\000"
 1263      2F2F2F2F 
 1263      2F2F2F2F 
 1263      2F2F2F2F 
 1263      2F454E44 
 1264              		.section	.text.printMap,"ax",%progbits
 1265              		.align	2
 1266              		.global	printMap
 1267              		.thumb
 1268              		.thumb_func
 1269              		.type	printMap, %function
 1270              	printMap:
 1271              	.LFB73:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 27


 128:.\BFS/map_addons.h **** 
 129:.\BFS/map_addons.h **** /* Now in colour! */
 130:.\BFS/map_addons.h **** void printMap(int map[MAP_ROW][MAP_COL]){
 1272              		.loc 2 130 0
 1273              		.cfi_startproc
 1274              		@ args = 0, pretend = 0, frame = 16
 1275              		@ frame_needed = 1, uses_anonymous_args = 0
 1276 0000 80B5     		push	{r7, lr}
 1277              		.cfi_def_cfa_offset 8
 1278              		.cfi_offset 7, -8
 1279              		.cfi_offset 14, -4
 1280 0002 84B0     		sub	sp, sp, #16
 1281              		.cfi_def_cfa_offset 24
 1282 0004 00AF     		add	r7, sp, #0
 1283              		.cfi_def_cfa_register 7
 1284 0006 7860     		str	r0, [r7, #4]
 131:.\BFS/map_addons.h **** 
 132:.\BFS/map_addons.h ****     int m, n;
 133:.\BFS/map_addons.h **** 
 134:.\BFS/map_addons.h ****     printf("////////////////BEGIN MAP////////////////\n");
 1285              		.loc 2 134 0
 1286 0008 3E48     		ldr	r0, .L76
 1287 000a FFF7FEFF 		bl	puts
 135:.\BFS/map_addons.h **** 
 136:.\BFS/map_addons.h ****     for (m = 0; m < MAP_ROW; m++){
 1288              		.loc 2 136 0
 1289 000e 0023     		movs	r3, #0
 1290 0010 FB60     		str	r3, [r7, #12]
 1291 0012 6EE0     		b	.L63
 1292              	.L74:
 137:.\BFS/map_addons.h ****         for (n = 0; n < MAP_COL; n++){
 1293              		.loc 2 137 0
 1294 0014 0023     		movs	r3, #0
 1295 0016 BB60     		str	r3, [r7, #8]
 1296 0018 62E0     		b	.L64
 1297              	.L73:
 138:.\BFS/map_addons.h ****             switch (map[m][n]){
 1298              		.loc 2 138 0
 1299 001a FB68     		ldr	r3, [r7, #12]
 1300 001c 4C22     		movs	r2, #76
 1301 001e 02FB03F3 		mul	r3, r2, r3
 1302 0022 7A68     		ldr	r2, [r7, #4]
 1303 0024 1344     		add	r3, r3, r2
 1304 0026 BA68     		ldr	r2, [r7, #8]
 1305 0028 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1306 002c 042B     		cmp	r3, #4
 1307 002e 53D8     		bhi	.L75
 1308 0030 01A2     		adr	r2, .L67
 1309 0032 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1310 0036 00BF     		.p2align 2
 1311              	.L67:
 1312 0038 4D000000 		.word	.L66+1
 1313 003c 69000000 		.word	.L68+1
 1314 0040 85000000 		.word	.L69+1
 1315 0044 A1000000 		.word	.L70+1
 1316 0048 BD000000 		.word	.L71+1
 1317              		.p2align 1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 28


 1318              	.L66:
 139:.\BFS/map_addons.h ****                 case UNVISITED:
 140:.\BFS/map_addons.h ****                     printf("%d ", map[m][n]);
 1319              		.loc 2 140 0
 1320 004c FB68     		ldr	r3, [r7, #12]
 1321 004e 4C22     		movs	r2, #76
 1322 0050 02FB03F3 		mul	r3, r2, r3
 1323 0054 7A68     		ldr	r2, [r7, #4]
 1324 0056 1344     		add	r3, r3, r2
 1325 0058 BA68     		ldr	r2, [r7, #8]
 1326 005a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1327 005e 2A48     		ldr	r0, .L76+4
 1328 0060 1946     		mov	r1, r3
 1329 0062 FFF7FEFF 		bl	printf
 141:.\BFS/map_addons.h ****                     break;
 1330              		.loc 2 141 0
 1331 0066 38E0     		b	.L72
 1332              	.L68:
 142:.\BFS/map_addons.h ****                 case WALL:
 143:.\BFS/map_addons.h ****                     // Prints red
 144:.\BFS/map_addons.h ****                     printf(RED "%d" DEFAULT_COLOUR " ", map[m][n]);
 1333              		.loc 2 144 0
 1334 0068 FB68     		ldr	r3, [r7, #12]
 1335 006a 4C22     		movs	r2, #76
 1336 006c 02FB03F3 		mul	r3, r2, r3
 1337 0070 7A68     		ldr	r2, [r7, #4]
 1338 0072 1344     		add	r3, r3, r2
 1339 0074 BA68     		ldr	r2, [r7, #8]
 1340 0076 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1341 007a 2448     		ldr	r0, .L76+8
 1342 007c 1946     		mov	r1, r3
 1343 007e FFF7FEFF 		bl	printf
 145:.\BFS/map_addons.h ****                     break;
 1344              		.loc 2 145 0
 1345 0082 2AE0     		b	.L72
 1346              	.L69:
 146:.\BFS/map_addons.h ****                 case VISITED:
 147:.\BFS/map_addons.h ****                     // Prints blue
 148:.\BFS/map_addons.h ****                     printf(BLUE "%d" DEFAULT_COLOUR " ", map[m][n]);
 1347              		.loc 2 148 0
 1348 0084 FB68     		ldr	r3, [r7, #12]
 1349 0086 4C22     		movs	r2, #76
 1350 0088 02FB03F3 		mul	r3, r2, r3
 1351 008c 7A68     		ldr	r2, [r7, #4]
 1352 008e 1344     		add	r3, r3, r2
 1353 0090 BA68     		ldr	r2, [r7, #8]
 1354 0092 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1355 0096 1E48     		ldr	r0, .L76+12
 1356 0098 1946     		mov	r1, r3
 1357 009a FFF7FEFF 		bl	printf
 149:.\BFS/map_addons.h ****                     break;
 1358              		.loc 2 149 0
 1359 009e 1CE0     		b	.L72
 1360              	.L70:
 150:.\BFS/map_addons.h ****                 case FINAL_PATH:
 151:.\BFS/map_addons.h ****                     // Prints bold green
 152:.\BFS/map_addons.h ****                     printf(BOLD_GREEN "%d" DEFAULT_COLOUR " ", map[m][n]);
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 29


 1361              		.loc 2 152 0
 1362 00a0 FB68     		ldr	r3, [r7, #12]
 1363 00a2 4C22     		movs	r2, #76
 1364 00a4 02FB03F3 		mul	r3, r2, r3
 1365 00a8 7A68     		ldr	r2, [r7, #4]
 1366 00aa 1344     		add	r3, r3, r2
 1367 00ac BA68     		ldr	r2, [r7, #8]
 1368 00ae 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1369 00b2 1848     		ldr	r0, .L76+16
 1370 00b4 1946     		mov	r1, r3
 1371 00b6 FFF7FEFF 		bl	printf
 153:.\BFS/map_addons.h ****                     break;
 1372              		.loc 2 153 0
 1373 00ba 0EE0     		b	.L72
 1374              	.L71:
 154:.\BFS/map_addons.h ****                 case START_OR_END:
 155:.\BFS/map_addons.h ****                     // Prints bold yellow
 156:.\BFS/map_addons.h ****                     printf(BOLD_YELLOW "%d" DEFAULT_COLOUR " ", map[m][n]);
 1375              		.loc 2 156 0
 1376 00bc FB68     		ldr	r3, [r7, #12]
 1377 00be 4C22     		movs	r2, #76
 1378 00c0 02FB03F3 		mul	r3, r2, r3
 1379 00c4 7A68     		ldr	r2, [r7, #4]
 1380 00c6 1344     		add	r3, r3, r2
 1381 00c8 BA68     		ldr	r2, [r7, #8]
 1382 00ca 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1383 00ce 1248     		ldr	r0, .L76+20
 1384 00d0 1946     		mov	r1, r3
 1385 00d2 FFF7FEFF 		bl	printf
 157:.\BFS/map_addons.h ****                     break;
 1386              		.loc 2 157 0
 1387 00d6 00E0     		b	.L72
 1388              	.L75:
 158:.\BFS/map_addons.h ****                 default:
 159:.\BFS/map_addons.h ****                     break;
 1389              		.loc 2 159 0
 1390 00d8 00BF     		nop
 1391              	.L72:
 137:.\BFS/map_addons.h ****             switch (map[m][n]){
 1392              		.loc 2 137 0 discriminator 2
 1393 00da BB68     		ldr	r3, [r7, #8]
 1394 00dc 0133     		adds	r3, r3, #1
 1395 00de BB60     		str	r3, [r7, #8]
 1396              	.L64:
 137:.\BFS/map_addons.h ****             switch (map[m][n]){
 1397              		.loc 2 137 0 is_stmt 0 discriminator 1
 1398 00e0 BB68     		ldr	r3, [r7, #8]
 1399 00e2 122B     		cmp	r3, #18
 1400 00e4 99DD     		ble	.L73
 160:.\BFS/map_addons.h ****             }
 161:.\BFS/map_addons.h ****         }
 162:.\BFS/map_addons.h ****         printf("\n");
 1401              		.loc 2 162 0 is_stmt 1 discriminator 2
 1402 00e6 0A20     		movs	r0, #10
 1403 00e8 FFF7FEFF 		bl	putchar
 136:.\BFS/map_addons.h ****         for (n = 0; n < MAP_COL; n++){
 1404              		.loc 2 136 0 discriminator 2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 30


 1405 00ec FB68     		ldr	r3, [r7, #12]
 1406 00ee 0133     		adds	r3, r3, #1
 1407 00f0 FB60     		str	r3, [r7, #12]
 1408              	.L63:
 136:.\BFS/map_addons.h ****         for (n = 0; n < MAP_COL; n++){
 1409              		.loc 2 136 0 is_stmt 0 discriminator 1
 1410 00f2 FB68     		ldr	r3, [r7, #12]
 1411 00f4 0E2B     		cmp	r3, #14
 1412 00f6 8DDD     		ble	.L74
 163:.\BFS/map_addons.h ****     }
 164:.\BFS/map_addons.h **** 
 165:.\BFS/map_addons.h ****     printf("/////////////////END MAP/////////////////\n");
 1413              		.loc 2 165 0 is_stmt 1
 1414 00f8 0848     		ldr	r0, .L76+24
 1415 00fa FFF7FEFF 		bl	puts
 166:.\BFS/map_addons.h **** 
 167:.\BFS/map_addons.h **** }
 1416              		.loc 2 167 0
 1417 00fe 1037     		adds	r7, r7, #16
 1418              		.cfi_def_cfa_offset 8
 1419 0100 BD46     		mov	sp, r7
 1420              		.cfi_def_cfa_register 13
 1421              		@ sp needed
 1422 0102 80BD     		pop	{r7, pc}
 1423              	.L77:
 1424              		.align	2
 1425              	.L76:
 1426 0104 24000000 		.word	.LC8
 1427 0108 50000000 		.word	.LC9
 1428 010c 54000000 		.word	.LC10
 1429 0110 64000000 		.word	.LC11
 1430 0114 74000000 		.word	.LC12
 1431 0118 84000000 		.word	.LC13
 1432 011c 94000000 		.word	.LC14
 1433              		.cfi_endproc
 1434              	.LFE73:
 1435              		.size	printMap, .-printMap
 1436              		.section	.text.updateMapWithPath,"ax",%progbits
 1437              		.align	2
 1438              		.global	updateMapWithPath
 1439              		.thumb
 1440              		.thumb_func
 1441              		.type	updateMapWithPath, %function
 1442              	updateMapWithPath:
 1443              	.LFB74:
 168:.\BFS/map_addons.h **** 
 169:.\BFS/map_addons.h **** /* Modify the map with the final path */
 170:.\BFS/map_addons.h **** void updateMapWithPath(int map[MAP_ROW][MAP_COL], point * path, int path_length){
 1444              		.loc 2 170 0
 1445              		.cfi_startproc
 1446              		@ args = 0, pretend = 0, frame = 24
 1447              		@ frame_needed = 1, uses_anonymous_args = 0
 1448              		@ link register save eliminated.
 1449 0000 80B4     		push	{r7}
 1450              		.cfi_def_cfa_offset 4
 1451              		.cfi_offset 7, -4
 1452 0002 87B0     		sub	sp, sp, #28
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 31


 1453              		.cfi_def_cfa_offset 32
 1454 0004 00AF     		add	r7, sp, #0
 1455              		.cfi_def_cfa_register 7
 1456 0006 F860     		str	r0, [r7, #12]
 1457 0008 B960     		str	r1, [r7, #8]
 1458 000a 7A60     		str	r2, [r7, #4]
 171:.\BFS/map_addons.h **** 
 172:.\BFS/map_addons.h ****     uint8_t i;
 173:.\BFS/map_addons.h **** 
 174:.\BFS/map_addons.h ****     // Set starting position
 175:.\BFS/map_addons.h ****     map[path[0].y][path[0].x] = 4;
 1459              		.loc 2 175 0
 1460 000c BB68     		ldr	r3, [r7, #8]
 1461 000e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1462 0010 5BB2     		sxtb	r3, r3
 1463 0012 4C22     		movs	r2, #76
 1464 0014 02FB03F3 		mul	r3, r2, r3
 1465 0018 FA68     		ldr	r2, [r7, #12]
 1466 001a 1344     		add	r3, r3, r2
 1467 001c BA68     		ldr	r2, [r7, #8]
 1468 001e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1469 0020 52B2     		sxtb	r2, r2
 1470 0022 0421     		movs	r1, #4
 1471 0024 43F82210 		str	r1, [r3, r2, lsl #2]
 176:.\BFS/map_addons.h **** 
 177:.\BFS/map_addons.h ****     // Fill up path
 178:.\BFS/map_addons.h ****     for (i = 1; i < path_length-1; i++){
 1472              		.loc 2 178 0
 1473 0028 0123     		movs	r3, #1
 1474 002a FB75     		strb	r3, [r7, #23]
 1475 002c 16E0     		b	.L79
 1476              	.L80:
 179:.\BFS/map_addons.h ****         map[path[i].y][path[i].x] = 3;
 1477              		.loc 2 179 0 discriminator 3
 1478 002e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1479 0030 5B00     		lsls	r3, r3, #1
 1480 0032 BA68     		ldr	r2, [r7, #8]
 1481 0034 1344     		add	r3, r3, r2
 1482 0036 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1483 0038 5BB2     		sxtb	r3, r3
 1484 003a 4C22     		movs	r2, #76
 1485 003c 02FB03F3 		mul	r3, r2, r3
 1486 0040 FA68     		ldr	r2, [r7, #12]
 1487 0042 1344     		add	r3, r3, r2
 1488 0044 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 1489 0046 5200     		lsls	r2, r2, #1
 1490 0048 B968     		ldr	r1, [r7, #8]
 1491 004a 0A44     		add	r2, r2, r1
 1492 004c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1493 004e 52B2     		sxtb	r2, r2
 1494 0050 0321     		movs	r1, #3
 1495 0052 43F82210 		str	r1, [r3, r2, lsl #2]
 178:.\BFS/map_addons.h ****         map[path[i].y][path[i].x] = 3;
 1496              		.loc 2 178 0 discriminator 3
 1497 0056 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1498 0058 0133     		adds	r3, r3, #1
 1499 005a FB75     		strb	r3, [r7, #23]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 32


 1500              	.L79:
 178:.\BFS/map_addons.h ****         map[path[i].y][path[i].x] = 3;
 1501              		.loc 2 178 0 is_stmt 0 discriminator 1
 1502 005c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 1503 005e 7B68     		ldr	r3, [r7, #4]
 1504 0060 013B     		subs	r3, r3, #1
 1505 0062 9A42     		cmp	r2, r3
 1506 0064 E3DB     		blt	.L80
 180:.\BFS/map_addons.h ****     }
 181:.\BFS/map_addons.h **** 
 182:.\BFS/map_addons.h ****     // Set ending position
 183:.\BFS/map_addons.h ****     map[path[path_length-1].y][path[path_length-1].x] = 4;
 1507              		.loc 2 183 0 is_stmt 1
 1508 0066 7B68     		ldr	r3, [r7, #4]
 1509 0068 03F10043 		add	r3, r3, #-2147483648
 1510 006c 013B     		subs	r3, r3, #1
 1511 006e 5B00     		lsls	r3, r3, #1
 1512 0070 BA68     		ldr	r2, [r7, #8]
 1513 0072 1344     		add	r3, r3, r2
 1514 0074 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1515 0076 5BB2     		sxtb	r3, r3
 1516 0078 4C22     		movs	r2, #76
 1517 007a 02FB03F3 		mul	r3, r2, r3
 1518 007e FA68     		ldr	r2, [r7, #12]
 1519 0080 1A44     		add	r2, r2, r3
 1520 0082 7B68     		ldr	r3, [r7, #4]
 1521 0084 03F10043 		add	r3, r3, #-2147483648
 1522 0088 013B     		subs	r3, r3, #1
 1523 008a 5B00     		lsls	r3, r3, #1
 1524 008c B968     		ldr	r1, [r7, #8]
 1525 008e 0B44     		add	r3, r3, r1
 1526 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1527 0092 5BB2     		sxtb	r3, r3
 1528 0094 0421     		movs	r1, #4
 1529 0096 42F82310 		str	r1, [r2, r3, lsl #2]
 184:.\BFS/map_addons.h **** }
 1530              		.loc 2 184 0
 1531 009a 1C37     		adds	r7, r7, #28
 1532              		.cfi_def_cfa_offset 4
 1533 009c BD46     		mov	sp, r7
 1534              		.cfi_def_cfa_register 13
 1535              		@ sp needed
 1536 009e 5DF8047B 		ldr	r7, [sp], #4
 1537              		.cfi_restore 7
 1538              		.cfi_def_cfa_offset 0
 1539 00a2 7047     		bx	lr
 1540              		.cfi_endproc
 1541              	.LFE74:
 1542              		.size	updateMapWithPath, .-updateMapWithPath
 1543              		.section	.text.getMapValAtPoint,"ax",%progbits
 1544              		.align	2
 1545              		.global	getMapValAtPoint
 1546              		.thumb
 1547              		.thumb_func
 1548              		.type	getMapValAtPoint, %function
 1549              	getMapValAtPoint:
 1550              	.LFB75:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 33


 185:.\BFS/map_addons.h **** 
 186:.\BFS/map_addons.h **** /* Retrieve the vertex at a specific point on the map */
 187:.\BFS/map_addons.h **** int getMapValAtPoint(point p){
 1551              		.loc 2 187 0
 1552              		.cfi_startproc
 1553              		@ args = 0, pretend = 0, frame = 8
 1554              		@ frame_needed = 1, uses_anonymous_args = 0
 1555              		@ link register save eliminated.
 1556 0000 80B4     		push	{r7}
 1557              		.cfi_def_cfa_offset 4
 1558              		.cfi_offset 7, -4
 1559 0002 83B0     		sub	sp, sp, #12
 1560              		.cfi_def_cfa_offset 16
 1561 0004 00AF     		add	r7, sp, #0
 1562              		.cfi_def_cfa_register 7
 1563 0006 B880     		strh	r0, [r7, #4]	@ movhi
 188:.\BFS/map_addons.h ****     if (p.x < 0 || p.x >= MAP_COL) return EMPTY_VAL;
 1564              		.loc 2 188 0
 1565 0008 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 1566 000a 5BB2     		sxtb	r3, r3
 1567 000c 002B     		cmp	r3, #0
 1568 000e 03DB     		blt	.L82
 1569              		.loc 2 188 0 is_stmt 0 discriminator 2
 1570 0010 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 1571 0012 5BB2     		sxtb	r3, r3
 1572 0014 122B     		cmp	r3, #18
 1573 0016 02DD     		ble	.L83
 1574              	.L82:
 1575              		.loc 2 188 0 discriminator 3
 1576 0018 4FF0FF33 		mov	r3, #-1
 1577 001c 17E0     		b	.L84
 1578              	.L83:
 189:.\BFS/map_addons.h ****     if (p.y < 0 || p.y >= MAP_ROW) return EMPTY_VAL;
 1579              		.loc 2 189 0 is_stmt 1
 1580 001e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1581 0020 5BB2     		sxtb	r3, r3
 1582 0022 002B     		cmp	r3, #0
 1583 0024 03DB     		blt	.L85
 1584              		.loc 2 189 0 is_stmt 0 discriminator 2
 1585 0026 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1586 0028 5BB2     		sxtb	r3, r3
 1587 002a 0E2B     		cmp	r3, #14
 1588 002c 02DD     		ble	.L86
 1589              	.L85:
 1590              		.loc 2 189 0 discriminator 3
 1591 002e 4FF0FF33 		mov	r3, #-1
 1592 0032 0CE0     		b	.L84
 1593              	.L86:
 190:.\BFS/map_addons.h ****     return map[p.y][p.x];
 1594              		.loc 2 190 0 is_stmt 1
 1595 0034 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1596 0036 5AB2     		sxtb	r2, r3
 1597 0038 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 1598 003a 59B2     		sxtb	r1, r3
 1599 003c 0748     		ldr	r0, .L87
 1600 003e 1346     		mov	r3, r2
 1601 0040 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 34


 1602 0042 1344     		add	r3, r3, r2
 1603 0044 5B00     		lsls	r3, r3, #1
 1604 0046 1344     		add	r3, r3, r2
 1605 0048 0B44     		add	r3, r3, r1
 1606 004a 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1607              	.L84:
 191:.\BFS/map_addons.h **** }
 1608              		.loc 2 191 0
 1609 004e 1846     		mov	r0, r3
 1610 0050 0C37     		adds	r7, r7, #12
 1611              		.cfi_def_cfa_offset 4
 1612 0052 BD46     		mov	sp, r7
 1613              		.cfi_def_cfa_register 13
 1614              		@ sp needed
 1615 0054 5DF8047B 		ldr	r7, [sp], #4
 1616              		.cfi_restore 7
 1617              		.cfi_def_cfa_offset 0
 1618 0058 7047     		bx	lr
 1619              	.L88:
 1620 005a 00BF     		.align	2
 1621              	.L87:
 1622 005c 00000000 		.word	map
 1623              		.cfi_endproc
 1624              	.LFE75:
 1625              		.size	getMapValAtPoint, .-getMapValAtPoint
 1626              		.section	.text.markPointAsVisited,"ax",%progbits
 1627              		.align	2
 1628              		.global	markPointAsVisited
 1629              		.thumb
 1630              		.thumb_func
 1631              		.type	markPointAsVisited, %function
 1632              	markPointAsVisited:
 1633              	.LFB76:
 192:.\BFS/map_addons.h **** 
 193:.\BFS/map_addons.h **** /* Mark a point on the map as visited */
 194:.\BFS/map_addons.h **** void markPointAsVisited(point p){ map[p.y][p.x] = VISITED; }
 1634              		.loc 2 194 0
 1635              		.cfi_startproc
 1636              		@ args = 0, pretend = 0, frame = 8
 1637              		@ frame_needed = 1, uses_anonymous_args = 0
 1638              		@ link register save eliminated.
 1639 0000 80B4     		push	{r7}
 1640              		.cfi_def_cfa_offset 4
 1641              		.cfi_offset 7, -4
 1642 0002 83B0     		sub	sp, sp, #12
 1643              		.cfi_def_cfa_offset 16
 1644 0004 00AF     		add	r7, sp, #0
 1645              		.cfi_def_cfa_register 7
 1646 0006 B880     		strh	r0, [r7, #4]	@ movhi
 1647              		.loc 2 194 0
 1648 0008 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1649 000a 5AB2     		sxtb	r2, r3
 1650 000c 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 1651 000e 59B2     		sxtb	r1, r3
 1652 0010 0748     		ldr	r0, .L90
 1653 0012 1346     		mov	r3, r2
 1654 0014 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 35


 1655 0016 1344     		add	r3, r3, r2
 1656 0018 5B00     		lsls	r3, r3, #1
 1657 001a 1344     		add	r3, r3, r2
 1658 001c 0B44     		add	r3, r3, r1
 1659 001e 0222     		movs	r2, #2
 1660 0020 40F82320 		str	r2, [r0, r3, lsl #2]
 1661 0024 0C37     		adds	r7, r7, #12
 1662              		.cfi_def_cfa_offset 4
 1663 0026 BD46     		mov	sp, r7
 1664              		.cfi_def_cfa_register 13
 1665              		@ sp needed
 1666 0028 5DF8047B 		ldr	r7, [sp], #4
 1667              		.cfi_restore 7
 1668              		.cfi_def_cfa_offset 0
 1669 002c 7047     		bx	lr
 1670              	.L91:
 1671 002e 00BF     		.align	2
 1672              	.L90:
 1673 0030 00000000 		.word	map
 1674              		.cfi_endproc
 1675              	.LFE76:
 1676              		.size	markPointAsVisited, .-markPointAsVisited
 1677              		.section	.text.convertCoordinatesToCommands,"ax",%progbits
 1678              		.align	2
 1679              		.global	convertCoordinatesToCommands
 1680              		.thumb
 1681              		.thumb_func
 1682              		.type	convertCoordinatesToCommands, %function
 1683              	convertCoordinatesToCommands:
 1684              	.LFB77:
 195:.\BFS/map_addons.h **** 
 196:.\BFS/map_addons.h **** /* Interpret coordinates of the final path and convert to commands for robot */
 197:.\BFS/map_addons.h **** void convertCoordinatesToCommands(point * concurrent_path, int8_t *commands){
 1685              		.loc 2 197 0
 1686              		.cfi_startproc
 1687              		@ args = 0, pretend = 0, frame = 40
 1688              		@ frame_needed = 1, uses_anonymous_args = 0
 1689 0000 80B5     		push	{r7, lr}
 1690              		.cfi_def_cfa_offset 8
 1691              		.cfi_offset 7, -8
 1692              		.cfi_offset 14, -4
 1693 0002 8AB0     		sub	sp, sp, #40
 1694              		.cfi_def_cfa_offset 48
 1695 0004 00AF     		add	r7, sp, #0
 1696              		.cfi_def_cfa_register 7
 1697 0006 7860     		str	r0, [r7, #4]
 1698 0008 3960     		str	r1, [r7]
 198:.\BFS/map_addons.h **** 
 199:.\BFS/map_addons.h ****     int8_t straight_count = -1;
 1699              		.loc 2 199 0
 1700 000a FF23     		movs	r3, #255
 1701 000c 87F82730 		strb	r3, [r7, #39]
 200:.\BFS/map_addons.h ****     point current, next;
 201:.\BFS/map_addons.h ****     int8_t current_orientation = START_FACING;
 1702              		.loc 2 201 0
 1703 0010 0023     		movs	r3, #0
 1704 0012 87F82630 		strb	r3, [r7, #38]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 36


 202:.\BFS/map_addons.h ****     int8_t next_orientation = CMD_NULL;
 1705              		.loc 2 202 0
 1706 0016 FF23     		movs	r3, #255
 1707 0018 87F82530 		strb	r3, [r7, #37]
 203:.\BFS/map_addons.h ****     int i;
 204:.\BFS/map_addons.h **** 
 205:.\BFS/map_addons.h ****     int cmd_length = 0;
 1708              		.loc 2 205 0
 1709 001c 0023     		movs	r3, #0
 1710 001e FB61     		str	r3, [r7, #28]
 206:.\BFS/map_addons.h ****     int path_length = len(concurrent_path);
 1711              		.loc 2 206 0
 1712 0020 7868     		ldr	r0, [r7, #4]
 1713 0022 FFF7FEFF 		bl	len
 1714 0026 B861     		str	r0, [r7, #24]
 207:.\BFS/map_addons.h **** 
 208:.\BFS/map_addons.h ****     #ifdef DEBUG_CMD
 209:.\BFS/map_addons.h ****         puts("## BEGIN CONVERT ##");
 210:.\BFS/map_addons.h ****     #endif
 211:.\BFS/map_addons.h **** 
 212:.\BFS/map_addons.h ****     for (i = 0; i < path_length - 1; i++){
 1715              		.loc 2 212 0
 1716 0028 0023     		movs	r3, #0
 1717 002a 3B62     		str	r3, [r7, #32]
 1718 002c 8BE0     		b	.L93
 1719              	.L109:
 1720              	.LBB2:
 213:.\BFS/map_addons.h **** 
 214:.\BFS/map_addons.h ****         #ifdef DEBUG_CMD
 215:.\BFS/map_addons.h ****             printf("[%d]\n",i);
 216:.\BFS/map_addons.h ****         #endif
 217:.\BFS/map_addons.h **** 
 218:.\BFS/map_addons.h ****         current = concurrent_path[i];
 1721              		.loc 2 218 0
 1722 002e 3B6A     		ldr	r3, [r7, #32]
 1723 0030 5B00     		lsls	r3, r3, #1
 1724 0032 7A68     		ldr	r2, [r7, #4]
 1725 0034 1A44     		add	r2, r2, r3
 1726 0036 07F11003 		add	r3, r7, #16
 1727 003a 1288     		ldrh	r2, [r2]	@ unaligned
 1728 003c 1A80     		strh	r2, [r3]	@ unaligned
 219:.\BFS/map_addons.h ****         next = concurrent_path[i+1];
 1729              		.loc 2 219 0
 1730 003e 3B6A     		ldr	r3, [r7, #32]
 1731 0040 0133     		adds	r3, r3, #1
 1732 0042 5B00     		lsls	r3, r3, #1
 1733 0044 7A68     		ldr	r2, [r7, #4]
 1734 0046 1A44     		add	r2, r2, r3
 1735 0048 07F10C03 		add	r3, r7, #12
 1736 004c 1288     		ldrh	r2, [r2]	@ unaligned
 1737 004e 1A80     		strh	r2, [r3]	@ unaligned
 220:.\BFS/map_addons.h **** 
 221:.\BFS/map_addons.h ****         #ifdef DEBUG_CMD
 222:.\BFS/map_addons.h ****             printf("-- Current: (%d, %d)\n-- Next: (%d,%d)\n",current.x,current.y,next.x,next.y);
 223:.\BFS/map_addons.h ****         #endif
 224:.\BFS/map_addons.h **** 
 225:.\BFS/map_addons.h ****         // Since the robot only moves one coord at a time, one of the following branches must evalu
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 37


 226:.\BFS/map_addons.h ****         if (current.x == next.x){
 1738              		.loc 2 226 0
 1739 0050 3A7C     		ldrb	r2, [r7, #16]	@ zero_extendqisi2
 1740 0052 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1741 0054 52B2     		sxtb	r2, r2
 1742 0056 5BB2     		sxtb	r3, r3
 1743 0058 9A42     		cmp	r2, r3
 1744 005a 0BD1     		bne	.L94
 227:.\BFS/map_addons.h ****             next_orientation = (current.y > next.y) ? CMD_UP:CMD_DOWN;
 1745              		.loc 2 227 0
 1746 005c 7A7C     		ldrb	r2, [r7, #17]	@ zero_extendqisi2
 1747 005e 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1748 0060 52B2     		sxtb	r2, r2
 1749 0062 5BB2     		sxtb	r3, r3
 1750 0064 9A42     		cmp	r2, r3
 1751 0066 01DD     		ble	.L95
 1752              		.loc 2 227 0 is_stmt 0 discriminator 1
 1753 0068 0323     		movs	r3, #3
 1754 006a 00E0     		b	.L96
 1755              	.L95:
 1756              		.loc 2 227 0 discriminator 2
 1757 006c 0123     		movs	r3, #1
 1758              	.L96:
 1759              		.loc 2 227 0 discriminator 4
 1760 006e 87F82530 		strb	r3, [r7, #37]
 1761 0072 10E0     		b	.L97
 1762              	.L94:
 228:.\BFS/map_addons.h ****         }
 229:.\BFS/map_addons.h ****         else if (current.y == next.y){
 1763              		.loc 2 229 0 is_stmt 1
 1764 0074 7A7C     		ldrb	r2, [r7, #17]	@ zero_extendqisi2
 1765 0076 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1766 0078 52B2     		sxtb	r2, r2
 1767 007a 5BB2     		sxtb	r3, r3
 1768 007c 9A42     		cmp	r2, r3
 1769 007e 0AD1     		bne	.L97
 230:.\BFS/map_addons.h ****             next_orientation = (current.x > next.x) ? CMD_LEFT:CMD_RIGHT;
 1770              		.loc 2 230 0
 1771 0080 3A7C     		ldrb	r2, [r7, #16]	@ zero_extendqisi2
 1772 0082 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1773 0084 52B2     		sxtb	r2, r2
 1774 0086 5BB2     		sxtb	r3, r3
 1775 0088 9A42     		cmp	r2, r3
 1776 008a 01DD     		ble	.L98
 1777              		.loc 2 230 0 is_stmt 0 discriminator 1
 1778 008c 0223     		movs	r3, #2
 1779 008e 00E0     		b	.L99
 1780              	.L98:
 1781              		.loc 2 230 0 discriminator 2
 1782 0090 0023     		movs	r3, #0
 1783              	.L99:
 1784              		.loc 2 230 0 discriminator 4
 1785 0092 87F82530 		strb	r3, [r7, #37]
 1786              	.L97:
 231:.\BFS/map_addons.h ****         }
 232:.\BFS/map_addons.h **** 
 233:.\BFS/map_addons.h ****         #ifdef DEBUG_CMD
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 38


 234:.\BFS/map_addons.h ****             if (next_orientation != CMD_NULL){
 235:.\BFS/map_addons.h ****                 printf("-- Current Orientation: %c\n", "RDLU"[current_orientation]);
 236:.\BFS/map_addons.h ****                 printf("-- Next Orientation: %c\n", "RDLU"[next_orientation]);
 237:.\BFS/map_addons.h ****             }
 238:.\BFS/map_addons.h ****         #endif
 239:.\BFS/map_addons.h **** 
 240:.\BFS/map_addons.h ****         // Evaluate change (or lack of change) in orientation based on diff
 241:.\BFS/map_addons.h ****         int diffMod4 = (next_orientation - current_orientation) % 4;
 1787              		.loc 2 241 0 is_stmt 1
 1788 0096 97F92520 		ldrsb	r2, [r7, #37]
 1789 009a 97F92630 		ldrsb	r3, [r7, #38]
 1790 009e D21A     		subs	r2, r2, r3
 1791 00a0 324B     		ldr	r3, .L110
 1792 00a2 1340     		ands	r3, r3, r2
 1793 00a4 002B     		cmp	r3, #0
 1794 00a6 03DA     		bge	.L100
 1795 00a8 013B     		subs	r3, r3, #1
 1796 00aa 63F00303 		orn	r3, r3, #3
 1797 00ae 0133     		adds	r3, r3, #1
 1798              	.L100:
 1799 00b0 7B61     		str	r3, [r7, #20]
 242:.\BFS/map_addons.h **** 
 243:.\BFS/map_addons.h ****         #ifdef DEBUG_CMD
 244:.\BFS/map_addons.h ****             printf("-- Diff \% 4\: %d\n",diffMod4);
 245:.\BFS/map_addons.h ****             if (diffMod4 == 1 || diffMod4 == -3) printf("-/- RIGHT TURN\n");
 246:.\BFS/map_addons.h ****             else if (diffMod4 == -1 || diffMod4 == 3) printf("-/- LEFT TURN\n");
 247:.\BFS/map_addons.h ****             else if (diffMod4 == 0) printf("-/- GO STRAIGHT\n");
 248:.\BFS/map_addons.h ****         #endif
 249:.\BFS/map_addons.h **** 
 250:.\BFS/map_addons.h ****         // Every iteration of the loop, the robot moves one square
 251:.\BFS/map_addons.h ****         straight_count++;
 1800              		.loc 2 251 0
 1801 00b2 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1802 00b6 DBB2     		uxtb	r3, r3
 1803 00b8 0133     		adds	r3, r3, #1
 1804 00ba DBB2     		uxtb	r3, r3
 1805 00bc 87F82730 		strb	r3, [r7, #39]
 252:.\BFS/map_addons.h **** 
 253:.\BFS/map_addons.h ****         // If the robot doesn't need to turn, just skip to the next iteration of the loop (i.e. nex
 254:.\BFS/map_addons.h ****         if (diffMod4 == GO_STRAIGHT){
 1806              		.loc 2 254 0
 1807 00c0 7B69     		ldr	r3, [r7, #20]
 1808 00c2 002B     		cmp	r3, #0
 1809 00c4 00D1     		bne	.L101
 255:.\BFS/map_addons.h ****             continue;
 1810              		.loc 2 255 0
 1811 00c6 3BE0     		b	.L102
 1812              	.L101:
 256:.\BFS/map_addons.h ****         }
 257:.\BFS/map_addons.h **** 
 258:.\BFS/map_addons.h ****         // At this point, the robot must turn, so need to print the count value up until now
 259:.\BFS/map_addons.h ****         if (straight_count) commands[cmd_length++] = straight_count;
 1813              		.loc 2 259 0
 1814 00c8 97F92730 		ldrsb	r3, [r7, #39]
 1815 00cc 002B     		cmp	r3, #0
 1816 00ce 08D0     		beq	.L103
 1817              		.loc 2 259 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 39


 1818 00d0 FB69     		ldr	r3, [r7, #28]
 1819 00d2 5A1C     		adds	r2, r3, #1
 1820 00d4 FA61     		str	r2, [r7, #28]
 1821 00d6 1A46     		mov	r2, r3
 1822 00d8 3B68     		ldr	r3, [r7]
 1823 00da 1344     		add	r3, r3, r2
 1824 00dc 97F82720 		ldrb	r2, [r7, #39]
 1825 00e0 1A70     		strb	r2, [r3]
 1826              	.L103:
 260:.\BFS/map_addons.h **** 
 261:.\BFS/map_addons.h ****         // A turn has been encountered, add it the commands
 262:.\BFS/map_addons.h ****         if (diffMod4 == TURN_LEFT_1 || diffMod4 == TURN_LEFT_2) { commands[cmd_length++] = LEFT_TUR
 1827              		.loc 2 262 0 is_stmt 1
 1828 00e2 7B69     		ldr	r3, [r7, #20]
 1829 00e4 B3F1FF3F 		cmp	r3, #-1
 1830 00e8 02D0     		beq	.L104
 1831              		.loc 2 262 0 is_stmt 0 discriminator 2
 1832 00ea 7B69     		ldr	r3, [r7, #20]
 1833 00ec 032B     		cmp	r3, #3
 1834 00ee 08D1     		bne	.L105
 1835              	.L104:
 1836              		.loc 2 262 0 discriminator 3
 1837 00f0 FB69     		ldr	r3, [r7, #28]
 1838 00f2 5A1C     		adds	r2, r3, #1
 1839 00f4 FA61     		str	r2, [r7, #28]
 1840 00f6 1A46     		mov	r2, r3
 1841 00f8 3B68     		ldr	r3, [r7]
 1842 00fa 1344     		add	r3, r3, r2
 1843 00fc FF22     		movs	r2, #255
 1844 00fe 1A70     		strb	r2, [r3]
 1845 0100 17E0     		b	.L106
 1846              	.L105:
 263:.\BFS/map_addons.h ****         else if (diffMod4 == TURN_RIGHT_1 || diffMod4 == TURN_RIGHT_2) { commands[cmd_length++] = R
 1847              		.loc 2 263 0 is_stmt 1
 1848 0102 7B69     		ldr	r3, [r7, #20]
 1849 0104 012B     		cmp	r3, #1
 1850 0106 03D0     		beq	.L107
 1851              		.loc 2 263 0 is_stmt 0 discriminator 2
 1852 0108 7B69     		ldr	r3, [r7, #20]
 1853 010a 13F1030F 		cmn	r3, #3
 1854 010e 08D1     		bne	.L108
 1855              	.L107:
 1856              		.loc 2 263 0 discriminator 3
 1857 0110 FB69     		ldr	r3, [r7, #28]
 1858 0112 5A1C     		adds	r2, r3, #1
 1859 0114 FA61     		str	r2, [r7, #28]
 1860 0116 1A46     		mov	r2, r3
 1861 0118 3B68     		ldr	r3, [r7]
 1862 011a 1344     		add	r3, r3, r2
 1863 011c FE22     		movs	r2, #254
 1864 011e 1A70     		strb	r2, [r3]
 1865 0120 07E0     		b	.L106
 1866              	.L108:
 264:.\BFS/map_addons.h ****         else { commands[cmd_length++] = U_TURN; }
 1867              		.loc 2 264 0 is_stmt 1
 1868 0122 FB69     		ldr	r3, [r7, #28]
 1869 0124 5A1C     		adds	r2, r3, #1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 40


 1870 0126 FA61     		str	r2, [r7, #28]
 1871 0128 1A46     		mov	r2, r3
 1872 012a 3B68     		ldr	r3, [r7]
 1873 012c 1344     		add	r3, r3, r2
 1874 012e FD22     		movs	r2, #253
 1875 0130 1A70     		strb	r2, [r3]
 1876              	.L106:
 265:.\BFS/map_addons.h **** 
 266:.\BFS/map_addons.h ****         // Reset the count
 267:.\BFS/map_addons.h ****         straight_count = 0;
 1877              		.loc 2 267 0
 1878 0132 0023     		movs	r3, #0
 1879 0134 87F82730 		strb	r3, [r7, #39]
 268:.\BFS/map_addons.h **** 
 269:.\BFS/map_addons.h ****         // Update orientation
 270:.\BFS/map_addons.h ****         current_orientation = next_orientation;
 1880              		.loc 2 270 0
 1881 0138 97F82530 		ldrb	r3, [r7, #37]
 1882 013c 87F82630 		strb	r3, [r7, #38]
 1883              	.L102:
 1884              	.LBE2:
 212:.\BFS/map_addons.h **** 
 1885              		.loc 2 212 0 discriminator 2
 1886 0140 3B6A     		ldr	r3, [r7, #32]
 1887 0142 0133     		adds	r3, r3, #1
 1888 0144 3B62     		str	r3, [r7, #32]
 1889              	.L93:
 212:.\BFS/map_addons.h **** 
 1890              		.loc 2 212 0 is_stmt 0 discriminator 1
 1891 0146 BB69     		ldr	r3, [r7, #24]
 1892 0148 5A1E     		subs	r2, r3, #1
 1893 014a 3B6A     		ldr	r3, [r7, #32]
 1894 014c 9A42     		cmp	r2, r3
 1895 014e 3FF76EAF 		bgt	.L109
 271:.\BFS/map_addons.h **** 
 272:.\BFS/map_addons.h ****     }
 273:.\BFS/map_addons.h **** 
 274:.\BFS/map_addons.h ****     commands[cmd_length] = straight_count+1;
 1896              		.loc 2 274 0 is_stmt 1
 1897 0152 FB69     		ldr	r3, [r7, #28]
 1898 0154 3A68     		ldr	r2, [r7]
 1899 0156 1344     		add	r3, r3, r2
 1900 0158 97F82720 		ldrb	r2, [r7, #39]	@ zero_extendqisi2
 1901 015c 0132     		adds	r2, r2, #1
 1902 015e D2B2     		uxtb	r2, r2
 1903 0160 D2B2     		uxtb	r2, r2
 1904 0162 1A70     		strb	r2, [r3]
 275:.\BFS/map_addons.h **** 
 276:.\BFS/map_addons.h **** }
 1905              		.loc 2 276 0
 1906 0164 2837     		adds	r7, r7, #40
 1907              		.cfi_def_cfa_offset 8
 1908 0166 BD46     		mov	sp, r7
 1909              		.cfi_def_cfa_register 13
 1910              		@ sp needed
 1911 0168 80BD     		pop	{r7, pc}
 1912              	.L111:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 41


 1913 016a 00BF     		.align	2
 1914              	.L110:
 1915 016c 03000080 		.word	-2147483645
 1916              		.cfi_endproc
 1917              	.LFE77:
 1918              		.size	convertCoordinatesToCommands, .-convertCoordinatesToCommands
 1919              		.section	.text.getNumOfSurroundingPoints,"ax",%progbits
 1920              		.align	2
 1921              		.global	getNumOfSurroundingPoints
 1922              		.thumb
 1923              		.thumb_func
 1924              		.type	getNumOfSurroundingPoints, %function
 1925              	getNumOfSurroundingPoints:
 1926              	.LFB78:
 277:.\BFS/map_addons.h **** 
 278:.\BFS/map_addons.h **** /* Get the number of valid points surrounding a given point on the map */
 279:.\BFS/map_addons.h **** int getNumOfSurroundingPoints(point p){
 1927              		.loc 2 279 0
 1928              		.cfi_startproc
 1929              		@ args = 0, pretend = 0, frame = 16
 1930              		@ frame_needed = 1, uses_anonymous_args = 0
 1931 0000 80B5     		push	{r7, lr}
 1932              		.cfi_def_cfa_offset 8
 1933              		.cfi_offset 7, -8
 1934              		.cfi_offset 14, -4
 1935 0002 84B0     		sub	sp, sp, #16
 1936              		.cfi_def_cfa_offset 24
 1937 0004 00AF     		add	r7, sp, #0
 1938              		.cfi_def_cfa_register 7
 1939 0006 B880     		strh	r0, [r7, #4]	@ movhi
 280:.\BFS/map_addons.h ****     int8_t num, mapval, i, j;
 281:.\BFS/map_addons.h ****     for (i = p.x-1; i < p.x+2; i++){
 1940              		.loc 2 281 0
 1941 0008 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 1942 000a DBB2     		uxtb	r3, r3
 1943 000c 013B     		subs	r3, r3, #1
 1944 000e DBB2     		uxtb	r3, r3
 1945 0010 BB73     		strb	r3, [r7, #14]
 1946 0012 39E0     		b	.L113
 1947              	.L119:
 282:.\BFS/map_addons.h ****         for (j = p.y-1; j < p.y+2; j++){
 1948              		.loc 2 282 0
 1949 0014 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1950 0016 DBB2     		uxtb	r3, r3
 1951 0018 013B     		subs	r3, r3, #1
 1952 001a DBB2     		uxtb	r3, r3
 1953 001c 7B73     		strb	r3, [r7, #13]
 1954 001e 27E0     		b	.L114
 1955              	.L118:
 283:.\BFS/map_addons.h ****             if (i == p.x && j == p.y) continue;
 1956              		.loc 2 283 0
 1957 0020 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 1958 0022 97F90E20 		ldrsb	r2, [r7, #14]
 1959 0026 5BB2     		sxtb	r3, r3
 1960 0028 9A42     		cmp	r2, r3
 1961 002a 06D1     		bne	.L115
 1962              		.loc 2 283 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 42


 1963 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1964 002e 97F90D20 		ldrsb	r2, [r7, #13]
 1965 0032 5BB2     		sxtb	r3, r3
 1966 0034 9A42     		cmp	r2, r3
 1967 0036 00D1     		bne	.L115
 1968              		.loc 2 283 0 discriminator 2
 1969 0038 15E0     		b	.L116
 1970              	.L115:
 284:.\BFS/map_addons.h ****             mapval = getMapValAtPoint((point){.x=i,.y=j});
 1971              		.loc 2 284 0 is_stmt 1
 1972 003a BB7B     		ldrb	r3, [r7, #14]
 1973 003c 3B72     		strb	r3, [r7, #8]
 1974 003e 7B7B     		ldrb	r3, [r7, #13]
 1975 0040 7B72     		strb	r3, [r7, #9]
 1976 0042 B868     		ldr	r0, [r7, #8]
 1977 0044 FFF7FEFF 		bl	getMapValAtPoint
 1978 0048 0346     		mov	r3, r0
 1979 004a 3B73     		strb	r3, [r7, #12]
 285:.\BFS/map_addons.h ****             if (mapval == UNVISITED || mapval == 3 /* different to FINAL_PATH */) 
 1980              		.loc 2 285 0
 1981 004c 97F90C30 		ldrsb	r3, [r7, #12]
 1982 0050 002B     		cmp	r3, #0
 1983 0052 03D0     		beq	.L117
 1984              		.loc 2 285 0 is_stmt 0 discriminator 1
 1985 0054 97F90C30 		ldrsb	r3, [r7, #12]
 1986 0058 032B     		cmp	r3, #3
 1987 005a 04D1     		bne	.L116
 1988              	.L117:
 286:.\BFS/map_addons.h ****                 num++;
 1989              		.loc 2 286 0 is_stmt 1
 1990 005c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1991 005e DBB2     		uxtb	r3, r3
 1992 0060 0133     		adds	r3, r3, #1
 1993 0062 DBB2     		uxtb	r3, r3
 1994 0064 FB73     		strb	r3, [r7, #15]
 1995              	.L116:
 282:.\BFS/map_addons.h ****             if (i == p.x && j == p.y) continue;
 1996              		.loc 2 282 0 discriminator 2
 1997 0066 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1998 0068 DBB2     		uxtb	r3, r3
 1999 006a 0133     		adds	r3, r3, #1
 2000 006c DBB2     		uxtb	r3, r3
 2001 006e 7B73     		strb	r3, [r7, #13]
 2002              	.L114:
 282:.\BFS/map_addons.h ****             if (i == p.x && j == p.y) continue;
 2003              		.loc 2 282 0 is_stmt 0 discriminator 1
 2004 0070 97F90D20 		ldrsb	r2, [r7, #13]
 2005 0074 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2006 0076 5BB2     		sxtb	r3, r3
 2007 0078 0233     		adds	r3, r3, #2
 2008 007a 9A42     		cmp	r2, r3
 2009 007c D0DB     		blt	.L118
 281:.\BFS/map_addons.h ****         for (j = p.y-1; j < p.y+2; j++){
 2010              		.loc 2 281 0 is_stmt 1 discriminator 2
 2011 007e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2012 0080 DBB2     		uxtb	r3, r3
 2013 0082 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 43


 2014 0084 DBB2     		uxtb	r3, r3
 2015 0086 BB73     		strb	r3, [r7, #14]
 2016              	.L113:
 281:.\BFS/map_addons.h ****         for (j = p.y-1; j < p.y+2; j++){
 2017              		.loc 2 281 0 is_stmt 0 discriminator 1
 2018 0088 97F90E20 		ldrsb	r2, [r7, #14]
 2019 008c 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 2020 008e 5BB2     		sxtb	r3, r3
 2021 0090 0233     		adds	r3, r3, #2
 2022 0092 9A42     		cmp	r2, r3
 2023 0094 BEDB     		blt	.L119
 287:.\BFS/map_addons.h ****         }
 288:.\BFS/map_addons.h ****     }
 289:.\BFS/map_addons.h **** 
 290:.\BFS/map_addons.h ****     return num;
 2024              		.loc 2 290 0 is_stmt 1
 2025 0096 97F90F30 		ldrsb	r3, [r7, #15]
 291:.\BFS/map_addons.h **** }
 2026              		.loc 2 291 0
 2027 009a 1846     		mov	r0, r3
 2028 009c 1037     		adds	r7, r7, #16
 2029              		.cfi_def_cfa_offset 8
 2030 009e BD46     		mov	sp, r7
 2031              		.cfi_def_cfa_register 13
 2032              		@ sp needed
 2033 00a0 80BD     		pop	{r7, pc}
 2034              		.cfi_endproc
 2035              	.LFE78:
 2036              		.size	getNumOfSurroundingPoints, .-getNumOfSurroundingPoints
 2037 00a2 00BF     		.section	.rodata
 2038 00be 0000     		.align	2
 2039              	.LC0:
 2040 00c0 FF       		.byte	-1
 2041 00c1 FF       		.byte	-1
 2042              		.section	.text.appendPath,"ax",%progbits
 2043              		.align	2
 2044              		.global	appendPath
 2045              		.thumb
 2046              		.thumb_func
 2047              		.type	appendPath, %function
 2048              	appendPath:
 2049              	.LFB79:
 292:.\BFS/map_addons.h **** 
 293:.\BFS/map_addons.h **** /* Chuck one path onto the end of another */
 294:.\BFS/map_addons.h **** int appendPath(point *path, int path_length, point *path_to_append){
 2050              		.loc 2 294 0
 2051              		.cfi_startproc
 2052              		@ args = 0, pretend = 0, frame = 24
 2053              		@ frame_needed = 1, uses_anonymous_args = 0
 2054              		@ link register save eliminated.
 2055 0000 80B4     		push	{r7}
 2056              		.cfi_def_cfa_offset 4
 2057              		.cfi_offset 7, -4
 2058 0002 87B0     		sub	sp, sp, #28
 2059              		.cfi_def_cfa_offset 32
 2060 0004 00AF     		add	r7, sp, #0
 2061              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 44


 2062 0006 F860     		str	r0, [r7, #12]
 2063 0008 B960     		str	r1, [r7, #8]
 2064 000a 7A60     		str	r2, [r7, #4]
 295:.\BFS/map_addons.h **** 
 296:.\BFS/map_addons.h ****     int i = 0;
 2065              		.loc 2 296 0
 2066 000c 0023     		movs	r3, #0
 2067 000e 7B61     		str	r3, [r7, #20]
 297:.\BFS/map_addons.h ****     int k = (path_length) ? 1:0;
 2068              		.loc 2 297 0
 2069 0010 BB68     		ldr	r3, [r7, #8]
 2070 0012 002B     		cmp	r3, #0
 2071 0014 14BF     		ite	ne
 2072 0016 0123     		movne	r3, #1
 2073 0018 0023     		moveq	r3, #0
 2074 001a DBB2     		uxtb	r3, r3
 2075 001c 3B61     		str	r3, [r7, #16]
 2076              	.L124:
 298:.\BFS/map_addons.h ****     
 299:.\BFS/map_addons.h ****     while (TRUE){
 300:.\BFS/map_addons.h ****         // Exit once end of path is reached
 301:.\BFS/map_addons.h ****         if (path_to_append[k].x == EMPTY_VAL && path_to_append[k].y == EMPTY_VAL) break;
 2077              		.loc 2 301 0
 2078 001e 3B69     		ldr	r3, [r7, #16]
 2079 0020 5B00     		lsls	r3, r3, #1
 2080 0022 7A68     		ldr	r2, [r7, #4]
 2081 0024 1344     		add	r3, r3, r2
 2082 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2083 0028 5BB2     		sxtb	r3, r3
 2084 002a B3F1FF3F 		cmp	r3, #-1
 2085 002e 09D1     		bne	.L122
 2086              		.loc 2 301 0 is_stmt 0 discriminator 1
 2087 0030 3B69     		ldr	r3, [r7, #16]
 2088 0032 5B00     		lsls	r3, r3, #1
 2089 0034 7A68     		ldr	r2, [r7, #4]
 2090 0036 1344     		add	r3, r3, r2
 2091 0038 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2092 003a 5BB2     		sxtb	r3, r3
 2093 003c B3F1FF3F 		cmp	r3, #-1
 2094 0040 00D1     		bne	.L122
 2095              		.loc 2 301 0
 2096 0042 13E0     		b	.L126
 2097              	.L122:
 302:.\BFS/map_addons.h **** 
 303:.\BFS/map_addons.h ****         // Overlap between end of one path and start of the other,
 304:.\BFS/map_addons.h ****         // so append to 1 less than expected
 305:.\BFS/map_addons.h ****         path[path_length + i] = path_to_append[k];
 2098              		.loc 2 305 0 is_stmt 1
 2099 0044 BA68     		ldr	r2, [r7, #8]
 2100 0046 7B69     		ldr	r3, [r7, #20]
 2101 0048 1344     		add	r3, r3, r2
 2102 004a 5B00     		lsls	r3, r3, #1
 2103 004c FA68     		ldr	r2, [r7, #12]
 2104 004e D118     		adds	r1, r2, r3
 2105 0050 3B69     		ldr	r3, [r7, #16]
 2106 0052 5B00     		lsls	r3, r3, #1
 2107 0054 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 45


 2108 0056 1344     		add	r3, r3, r2
 2109 0058 0A46     		mov	r2, r1
 2110 005a 1B88     		ldrh	r3, [r3]	@ unaligned
 2111 005c 1380     		strh	r3, [r2]	@ unaligned
 306:.\BFS/map_addons.h **** 
 307:.\BFS/map_addons.h ****         i++;
 2112              		.loc 2 307 0
 2113 005e 7B69     		ldr	r3, [r7, #20]
 2114 0060 0133     		adds	r3, r3, #1
 2115 0062 7B61     		str	r3, [r7, #20]
 308:.\BFS/map_addons.h ****         k++;
 2116              		.loc 2 308 0
 2117 0064 3B69     		ldr	r3, [r7, #16]
 2118 0066 0133     		adds	r3, r3, #1
 2119 0068 3B61     		str	r3, [r7, #16]
 309:.\BFS/map_addons.h ****     }
 2120              		.loc 2 309 0
 2121 006a D8E7     		b	.L124
 2122              	.L126:
 310:.\BFS/map_addons.h **** 
 311:.\BFS/map_addons.h ****     path[path_length + i] = (point){.x = -1, .y = -1};
 2123              		.loc 2 311 0
 2124 006c BA68     		ldr	r2, [r7, #8]
 2125 006e 7B69     		ldr	r3, [r7, #20]
 2126 0070 1344     		add	r3, r3, r2
 2127 0072 5B00     		lsls	r3, r3, #1
 2128 0074 FA68     		ldr	r2, [r7, #12]
 2129 0076 1344     		add	r3, r3, r2
 2130 0078 0649     		ldr	r1, .L127
 2131 007a 1A46     		mov	r2, r3
 2132 007c 0B46     		mov	r3, r1
 2133 007e 1B88     		ldrh	r3, [r3]	@ unaligned
 2134 0080 1380     		strh	r3, [r2]	@ unaligned
 312:.\BFS/map_addons.h **** 
 313:.\BFS/map_addons.h ****     #ifdef DEBUG_APPEND
 314:.\BFS/map_addons.h ****         printf("path_length: %d -> %d\n", path_length, path_length+i);
 315:.\BFS/map_addons.h ****     #endif
 316:.\BFS/map_addons.h **** 
 317:.\BFS/map_addons.h ****     return path_length + i;
 2135              		.loc 2 317 0
 2136 0082 BA68     		ldr	r2, [r7, #8]
 2137 0084 7B69     		ldr	r3, [r7, #20]
 2138 0086 1344     		add	r3, r3, r2
 318:.\BFS/map_addons.h **** }
 2139              		.loc 2 318 0
 2140 0088 1846     		mov	r0, r3
 2141 008a 1C37     		adds	r7, r7, #28
 2142              		.cfi_def_cfa_offset 4
 2143 008c BD46     		mov	sp, r7
 2144              		.cfi_def_cfa_register 13
 2145              		@ sp needed
 2146 008e 5DF8047B 		ldr	r7, [sp], #4
 2147              		.cfi_restore 7
 2148              		.cfi_def_cfa_offset 0
 2149 0092 7047     		bx	lr
 2150              	.L128:
 2151              		.align	2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 46


 2152              	.L127:
 2153 0094 C0000000 		.word	.LC0
 2154              		.cfi_endproc
 2155              	.LFE79:
 2156              		.size	appendPath, .-appendPath
 2157              		.section	.text.hasUnvisitedPoints,"ax",%progbits
 2158              		.align	2
 2159              		.global	hasUnvisitedPoints
 2160              		.thumb
 2161              		.thumb_func
 2162              		.type	hasUnvisitedPoints, %function
 2163              	hasUnvisitedPoints:
 2164              	.LFB80:
 319:.\BFS/map_addons.h **** 
 320:.\BFS/map_addons.h **** uint8_t hasUnvisitedPoints(int map[MAP_ROW][MAP_COL]){
 2165              		.loc 2 320 0
 2166              		.cfi_startproc
 2167              		@ args = 0, pretend = 0, frame = 16
 2168              		@ frame_needed = 1, uses_anonymous_args = 0
 2169              		@ link register save eliminated.
 2170 0000 80B4     		push	{r7}
 2171              		.cfi_def_cfa_offset 4
 2172              		.cfi_offset 7, -4
 2173 0002 85B0     		sub	sp, sp, #20
 2174              		.cfi_def_cfa_offset 24
 2175 0004 00AF     		add	r7, sp, #0
 2176              		.cfi_def_cfa_register 7
 2177 0006 7860     		str	r0, [r7, #4]
 321:.\BFS/map_addons.h ****     uint8_t i = 0;
 2178              		.loc 2 321 0
 2179 0008 0023     		movs	r3, #0
 2180 000a FB73     		strb	r3, [r7, #15]
 322:.\BFS/map_addons.h ****     uint8_t j = 0;
 2181              		.loc 2 322 0
 2182 000c 0023     		movs	r3, #0
 2183 000e BB73     		strb	r3, [r7, #14]
 323:.\BFS/map_addons.h ****     for (; i < MAP_ROW; i++){
 2184              		.loc 2 323 0
 2185 0010 18E0     		b	.L130
 2186              	.L135:
 324:.\BFS/map_addons.h ****         for(j = 0; j < MAP_COL; j++){
 2187              		.loc 2 324 0
 2188 0012 0023     		movs	r3, #0
 2189 0014 BB73     		strb	r3, [r7, #14]
 2190 0016 0FE0     		b	.L131
 2191              	.L134:
 325:.\BFS/map_addons.h ****             
 326:.\BFS/map_addons.h ****             if (map[i][j] == UNVISITED) return TRUE;
 2192              		.loc 2 326 0
 2193 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2194 001a 4C22     		movs	r2, #76
 2195 001c 02FB03F3 		mul	r3, r2, r3
 2196 0020 7A68     		ldr	r2, [r7, #4]
 2197 0022 1344     		add	r3, r3, r2
 2198 0024 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 2199 0026 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2200 002a 002B     		cmp	r3, #0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 47


 2201 002c 01D1     		bne	.L132
 2202              		.loc 2 326 0 is_stmt 0 discriminator 1
 2203 002e 0123     		movs	r3, #1
 2204 0030 0CE0     		b	.L133
 2205              	.L132:
 324:.\BFS/map_addons.h ****         for(j = 0; j < MAP_COL; j++){
 2206              		.loc 2 324 0 is_stmt 1 discriminator 2
 2207 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2208 0034 0133     		adds	r3, r3, #1
 2209 0036 BB73     		strb	r3, [r7, #14]
 2210              	.L131:
 324:.\BFS/map_addons.h ****         for(j = 0; j < MAP_COL; j++){
 2211              		.loc 2 324 0 is_stmt 0 discriminator 1
 2212 0038 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2213 003a 122B     		cmp	r3, #18
 2214 003c ECD9     		bls	.L134
 323:.\BFS/map_addons.h ****         for(j = 0; j < MAP_COL; j++){
 2215              		.loc 2 323 0 is_stmt 1
 2216 003e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2217 0040 0133     		adds	r3, r3, #1
 2218 0042 FB73     		strb	r3, [r7, #15]
 2219              	.L130:
 323:.\BFS/map_addons.h ****         for(j = 0; j < MAP_COL; j++){
 2220              		.loc 2 323 0 is_stmt 0 discriminator 1
 2221 0044 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2222 0046 0E2B     		cmp	r3, #14
 2223 0048 E3D9     		bls	.L135
 327:.\BFS/map_addons.h ****             
 328:.\BFS/map_addons.h ****         }
 329:.\BFS/map_addons.h ****     }
 330:.\BFS/map_addons.h ****     return FALSE;
 2224              		.loc 2 330 0 is_stmt 1
 2225 004a 0023     		movs	r3, #0
 2226              	.L133:
 331:.\BFS/map_addons.h **** }
 2227              		.loc 2 331 0
 2228 004c 1846     		mov	r0, r3
 2229 004e 1437     		adds	r7, r7, #20
 2230              		.cfi_def_cfa_offset 4
 2231 0050 BD46     		mov	sp, r7
 2232              		.cfi_def_cfa_register 13
 2233              		@ sp needed
 2234 0052 5DF8047B 		ldr	r7, [sp], #4
 2235              		.cfi_restore 7
 2236              		.cfi_def_cfa_offset 0
 2237 0056 7047     		bx	lr
 2238              		.cfi_endproc
 2239              	.LFE80:
 2240              		.size	hasUnvisitedPoints, .-hasUnvisitedPoints
 2241              		.section	.rodata
 2242 00c2 0000     		.align	2
 2243              	.LC15:
 2244 00c4 4D617020 		.ascii	"Map @ (%d,%d) = %d\012\000"
 2244      40202825 
 2244      642C2564 
 2244      29203D20 
 2244      25640A00 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 48


 2245              		.section	.text.checkPath,"ax",%progbits
 2246              		.align	2
 2247              		.global	checkPath
 2248              		.thumb
 2249              		.thumb_func
 2250              		.type	checkPath, %function
 2251              	checkPath:
 2252              	.LFB81:
 2253              		.file 3 ".\\BFS/bfs.h"
   1:.\BFS/bfs.h   **** #ifndef BFS_H
   2:.\BFS/bfs.h   **** #define BFS_H
   3:.\BFS/bfs.h   **** 
   4:.\BFS/bfs.h   **** #include <stdlib.h>
   5:.\BFS/bfs.h   **** #include <string.h>
   6:.\BFS/bfs.h   **** #include <stdint.h>
   7:.\BFS/bfs.h   **** #include "line_map.h"
   8:.\BFS/bfs.h   **** #include "map_addons.h"
   9:.\BFS/bfs.h   **** #include "point.h"
  10:.\BFS/bfs.h   **** #include "helper.h"
  11:.\BFS/bfs.h   **** #include "defines.h"
  12:.\BFS/bfs.h   **** 
  13:.\BFS/bfs.h   **** /* Verify a valid path and store it */
  14:.\BFS/bfs.h   **** void checkPath(point new_paths[MAX_NUM_PATHS][MAX_PATH_LENGTH], uint8_t * cnt,
  15:.\BFS/bfs.h   ****     point * concurrent_path, int length, point p){
 2254              		.loc 3 15 0
 2255              		.cfi_startproc
 2256              		@ args = 4, pretend = 0, frame = 24
 2257              		@ frame_needed = 1, uses_anonymous_args = 0
 2258 0000 80B5     		push	{r7, lr}
 2259              		.cfi_def_cfa_offset 8
 2260              		.cfi_offset 7, -8
 2261              		.cfi_offset 14, -4
 2262 0002 86B0     		sub	sp, sp, #24
 2263              		.cfi_def_cfa_offset 32
 2264 0004 00AF     		add	r7, sp, #0
 2265              		.cfi_def_cfa_register 7
 2266 0006 F860     		str	r0, [r7, #12]
 2267 0008 B960     		str	r1, [r7, #8]
 2268 000a 7A60     		str	r2, [r7, #4]
 2269 000c 3B60     		str	r3, [r7]
  16:.\BFS/bfs.h   **** 
  17:.\BFS/bfs.h   ****     uint8_t mapval = getMapValAtPoint(p);
 2270              		.loc 3 17 0
 2271 000e 386A     		ldr	r0, [r7, #32]
 2272 0010 FFF7FEFF 		bl	getMapValAtPoint
 2273 0014 0346     		mov	r3, r0
 2274 0016 FB75     		strb	r3, [r7, #23]
  18:.\BFS/bfs.h   ****     #ifdef DEBUG
  19:.\BFS/bfs.h   ****         printf("Map @ (%d,%d) = %d\n", p.x,p.y,mapval); // DEBUG
 2275              		.loc 3 19 0
 2276 0018 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 2277 001c 59B2     		sxtb	r1, r3
 2278 001e 97F82130 		ldrb	r3, [r7, #33]	@ zero_extendqisi2
 2279 0022 5AB2     		sxtb	r2, r3
 2280 0024 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2281 0026 1448     		ldr	r0, .L138
 2282 0028 FFF7FEFF 		bl	printf
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 49


  20:.\BFS/bfs.h   ****     #endif
  21:.\BFS/bfs.h   **** 
  22:.\BFS/bfs.h   ****     if (mapval == 0){
 2283              		.loc 3 22 0
 2284 002c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2285 002e 002B     		cmp	r3, #0
 2286 0030 1ED1     		bne	.L136
  23:.\BFS/bfs.h   ****         markPointAsVisited(p);
 2287              		.loc 3 23 0
 2288 0032 386A     		ldr	r0, [r7, #32]
 2289 0034 FFF7FEFF 		bl	markPointAsVisited
  24:.\BFS/bfs.h   ****         concurrent_path[length] = p;
 2290              		.loc 3 24 0
 2291 0038 3B68     		ldr	r3, [r7]
 2292 003a 5B00     		lsls	r3, r3, #1
 2293 003c 7A68     		ldr	r2, [r7, #4]
 2294 003e 1344     		add	r3, r3, r2
 2295 0040 1A46     		mov	r2, r3
 2296 0042 07F12003 		add	r3, r7, #32
 2297 0046 1B88     		ldrh	r3, [r3]	@ unaligned
 2298 0048 1380     		strh	r3, [r2]	@ unaligned
  25:.\BFS/bfs.h   ****         memcpy(new_paths[(*cnt)++],concurrent_path,MAX_PATH_LENGTH*sizeof(point));
 2299              		.loc 3 25 0
 2300 004a BB68     		ldr	r3, [r7, #8]
 2301 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2302 004e 5A1C     		adds	r2, r3, #1
 2303 0050 D1B2     		uxtb	r1, r2
 2304 0052 BA68     		ldr	r2, [r7, #8]
 2305 0054 1170     		strb	r1, [r2]
 2306 0056 1A46     		mov	r2, r3
 2307 0058 4FF47A73 		mov	r3, #1000
 2308 005c 03FB02F3 		mul	r3, r3, r2
 2309 0060 FA68     		ldr	r2, [r7, #12]
 2310 0062 1344     		add	r3, r3, r2
 2311 0064 1846     		mov	r0, r3
 2312 0066 7968     		ldr	r1, [r7, #4]
 2313 0068 4FF47A72 		mov	r2, #1000
 2314 006c FFF7FEFF 		bl	memcpy
 2315              	.L136:
  26:.\BFS/bfs.h   ****     }
  27:.\BFS/bfs.h   **** }
 2316              		.loc 3 27 0
 2317 0070 1837     		adds	r7, r7, #24
 2318              		.cfi_def_cfa_offset 8
 2319 0072 BD46     		mov	sp, r7
 2320              		.cfi_def_cfa_register 13
 2321              		@ sp needed
 2322 0074 80BD     		pop	{r7, pc}
 2323              	.L139:
 2324 0076 00BF     		.align	2
 2325              	.L138:
 2326 0078 C4000000 		.word	.LC15
 2327              		.cfi_endproc
 2328              	.LFE81:
 2329              		.size	checkPath, .-checkPath
 2330              		.section	.rodata
 2331              		.align	2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 50


 2332              	.LC16:
 2333 00d8 23232320 		.ascii	"### FINISHED INITIALISATIONS ###\000"
 2333      46494E49 
 2333      53484544 
 2333      20494E49 
 2333      5449414C 
 2334 00f9 000000   		.align	2
 2335              	.LC17:
 2336 00fc 23232320 		.ascii	"### BEGIN MAIN LOOP ###\000"
 2336      42454749 
 2336      4E204D41 
 2336      494E204C 
 2336      4F4F5020 
 2337              		.align	2
 2338              	.LC18:
 2339 0114 23232564 		.ascii	"##%d##\012\000"
 2339      23230A00 
 2340              		.align	2
 2341              	.LC19:
 2342 011c 5B25645D 		.ascii	"[%d]\012\000"
 2342      0A00
 2343 0122 0000     		.align	2
 2344              	.LC20:
 2345 0124 456E6420 		.ascii	"End node: (%d,%d)\012\000"
 2345      6E6F6465 
 2345      3A202825 
 2345      642C2564 
 2345      290A00
 2346 0137 00       		.align	2
 2347              	.LC21:
 2348 0138 23232320 		.ascii	"### FOUND PATH ###\000"
 2348      464F554E 
 2348      44205041 
 2348      54482023 
 2348      232300
 2349 014b 00       		.align	2
 2350              	.LC22:
 2351 014c 23232320 		.ascii	"### UPDATING PATHS ###\000"
 2351      55504441 
 2351      54494E47 
 2351      20504154 
 2351      48532023 
 2352 0163 00       		.align	2
 2353              	.LC23:
 2354 0164 4E756D62 		.ascii	"Number of paths: %d\012\000"
 2354      6572206F 
 2354      66207061 
 2354      7468733A 
 2354      2025640A 
 2355              		.section	.text.BFS,"ax",%progbits
 2356              		.align	2
 2357              		.global	BFS
 2358              		.thumb
 2359              		.thumb_func
 2360              		.type	BFS, %function
 2361              	BFS:
 2362              	.LFB82:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 51


  28:.\BFS/bfs.h   **** 
  29:.\BFS/bfs.h   **** /* Breadth First Search */
  30:.\BFS/bfs.h   **** void BFS(point start, point finish, point * concurrent_path){
 2363              		.loc 3 30 0
 2364              		.cfi_startproc
 2365              		@ args = 0, pretend = 0, frame = 30048
 2366              		@ frame_needed = 1, uses_anonymous_args = 0
 2367 0000 80B5     		push	{r7, lr}
 2368              		.cfi_def_cfa_offset 8
 2369              		.cfi_offset 7, -8
 2370              		.cfi_offset 14, -4
 2371 0002 ADF5EA4D 		sub	sp, sp, #29952
 2372              		.cfi_def_cfa_offset 29960
 2373 0006 9AB0     		sub	sp, sp, #104
 2374              		.cfi_def_cfa_offset 30064
 2375 0008 02AF     		add	r7, sp, #8
 2376              		.cfi_def_cfa 7, 30056
 2377 000a 07F16003 		add	r3, r7, #96
 2378 000e 543B     		subs	r3, r3, #84
 2379 0010 1880     		strh	r0, [r3]	@ movhi
 2380 0012 07F16003 		add	r3, r7, #96
 2381 0016 583B     		subs	r3, r3, #88
 2382 0018 1980     		strh	r1, [r3]	@ movhi
 2383 001a 07F16003 		add	r3, r7, #96
 2384 001e 5C3B     		subs	r3, r3, #92
 2385 0020 1A60     		str	r2, [r3]
  31:.\BFS/bfs.h   **** 
  32:.\BFS/bfs.h   ****     point paths[MAX_NUM_PATHS][MAX_PATH_LENGTH] = { 0 };
 2386              		.loc 3 32 0
 2387 0022 07F56B53 		add	r3, r7, #15040
 2388 0026 03F12003 		add	r3, r3, #32
 2389 002a 303B     		subs	r3, r3, #48
 2390 002c 1A46     		mov	r2, r3
 2391 002e 43F69823 		movw	r3, #15000
 2392 0032 1046     		mov	r0, r2
 2393 0034 0021     		movs	r1, #0
 2394 0036 1A46     		mov	r2, r3
 2395 0038 FFF7FEFF 		bl	memset
  33:.\BFS/bfs.h   ****     point new_paths[MAX_NUM_PATHS][MAX_PATH_LENGTH] = { 0 };
 2396              		.loc 3 33 0
 2397 003c 07F16003 		add	r3, r7, #96
 2398 0040 483B     		subs	r3, r3, #72
 2399 0042 1A46     		mov	r2, r3
 2400 0044 43F69823 		movw	r3, #15000
 2401 0048 1046     		mov	r0, r2
 2402 004a 0021     		movs	r1, #0
 2403 004c 1A46     		mov	r2, r3
 2404 004e FFF7FEFF 		bl	memset
  34:.\BFS/bfs.h   ****     uint8_t i; // For C90 compatibility
  35:.\BFS/bfs.h   **** 
  36:.\BFS/bfs.h   ****     // Initialise all paths as empty
  37:.\BFS/bfs.h   ****     memset(concurrent_path, EMPTY_VAL, MAX_PATH_LENGTH*sizeof(point));
 2405              		.loc 3 37 0
 2406 0052 07F16003 		add	r3, r7, #96
 2407 0056 5C3B     		subs	r3, r3, #92
 2408 0058 1868     		ldr	r0, [r3]
 2409 005a 4FF0FF31 		mov	r1, #-1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 52


 2410 005e 4FF47A72 		mov	r2, #1000
 2411 0062 FFF7FEFF 		bl	memset
  38:.\BFS/bfs.h   ****     for (i = 0; i < MAX_NUM_PATHS; i++){
 2412              		.loc 3 38 0
 2413 0066 0023     		movs	r3, #0
 2414 0068 07F5EA42 		add	r2, r7, #29952
 2415 006c 02F15F02 		add	r2, r2, #95
 2416 0070 1370     		strb	r3, [r2]
 2417 0072 34E0     		b	.L141
 2418              	.L142:
  39:.\BFS/bfs.h   ****         memset(paths[i], EMPTY_VAL, MAX_PATH_LENGTH*sizeof(point));
 2419              		.loc 3 39 0 discriminator 3
 2420 0074 07F5EA43 		add	r3, r7, #29952
 2421 0078 03F15F03 		add	r3, r3, #95
 2422 007c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2423 007e 07F56B53 		add	r3, r7, #15040
 2424 0082 03F12003 		add	r3, r3, #32
 2425 0086 303B     		subs	r3, r3, #48
 2426 0088 4FF47A71 		mov	r1, #1000
 2427 008c 01FB02F2 		mul	r2, r1, r2
 2428 0090 1344     		add	r3, r3, r2
 2429 0092 1846     		mov	r0, r3
 2430 0094 4FF0FF31 		mov	r1, #-1
 2431 0098 4FF47A72 		mov	r2, #1000
 2432 009c FFF7FEFF 		bl	memset
  40:.\BFS/bfs.h   ****         memset(new_paths[i], EMPTY_VAL, MAX_PATH_LENGTH*sizeof(point));
 2433              		.loc 3 40 0 discriminator 3
 2434 00a0 07F5EA43 		add	r3, r7, #29952
 2435 00a4 03F15F03 		add	r3, r3, #95
 2436 00a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2437 00aa 07F16003 		add	r3, r7, #96
 2438 00ae 483B     		subs	r3, r3, #72
 2439 00b0 4FF47A71 		mov	r1, #1000
 2440 00b4 01FB02F2 		mul	r2, r1, r2
 2441 00b8 1344     		add	r3, r3, r2
 2442 00ba 1846     		mov	r0, r3
 2443 00bc 4FF0FF31 		mov	r1, #-1
 2444 00c0 4FF47A72 		mov	r2, #1000
 2445 00c4 FFF7FEFF 		bl	memset
  38:.\BFS/bfs.h   ****     for (i = 0; i < MAX_NUM_PATHS; i++){
 2446              		.loc 3 38 0 discriminator 3
 2447 00c8 07F5EA43 		add	r3, r7, #29952
 2448 00cc 03F15F03 		add	r3, r3, #95
 2449 00d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2450 00d2 0133     		adds	r3, r3, #1
 2451 00d4 07F5EA42 		add	r2, r7, #29952
 2452 00d8 02F15F02 		add	r2, r2, #95
 2453 00dc 1370     		strb	r3, [r2]
 2454              	.L141:
  38:.\BFS/bfs.h   ****     for (i = 0; i < MAX_NUM_PATHS; i++){
 2455              		.loc 3 38 0 is_stmt 0 discriminator 1
 2456 00de 07F5EA43 		add	r3, r7, #29952
 2457 00e2 03F15F03 		add	r3, r3, #95
 2458 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2459 00e8 0E2B     		cmp	r3, #14
 2460 00ea C3D9     		bls	.L142
  41:.\BFS/bfs.h   ****     }
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 53


  42:.\BFS/bfs.h   **** 
  43:.\BFS/bfs.h   ****     #ifdef DEBUG
  44:.\BFS/bfs.h   ****         printf("### FINISHED INITIALISATIONS ###\n");
 2461              		.loc 3 44 0 is_stmt 1
 2462 00ec 7048     		ldr	r0, .L153
 2463 00ee FFF7FEFF 		bl	puts
  45:.\BFS/bfs.h   ****     #endif
  46:.\BFS/bfs.h   **** 
  47:.\BFS/bfs.h   ****     // Setup initial starting point
  48:.\BFS/bfs.h   ****     paths[0][0] = start;
 2464              		.loc 3 48 0
 2465 00f2 07F56B53 		add	r3, r7, #15040
 2466 00f6 03F12003 		add	r3, r3, #32
 2467 00fa 303B     		subs	r3, r3, #48
 2468 00fc 07F16002 		add	r2, r7, #96
 2469 0100 543A     		subs	r2, r2, #84
 2470 0102 1288     		ldrh	r2, [r2]	@ movhi
 2471 0104 1A80     		strh	r2, [r3]	@ movhi
  49:.\BFS/bfs.h   ****     markPointAsVisited(start);
 2472              		.loc 3 49 0
 2473 0106 07F16003 		add	r3, r7, #96
 2474 010a 543B     		subs	r3, r3, #84
 2475 010c 1868     		ldr	r0, [r3]
 2476 010e FFF7FEFF 		bl	markPointAsVisited
  50:.\BFS/bfs.h   ****     int length = 1; // relates to concurrent_path
 2477              		.loc 3 50 0
 2478 0112 0123     		movs	r3, #1
 2479 0114 07F5EA42 		add	r2, r7, #29952
 2480 0118 02F15802 		add	r2, r2, #88
 2481 011c 1360     		str	r3, [r2]
  51:.\BFS/bfs.h   ****     uint8_t cnt = 0;
 2482              		.loc 3 51 0
 2483 011e 07F16003 		add	r3, r7, #96
 2484 0122 493B     		subs	r3, r3, #73
 2485 0124 0022     		movs	r2, #0
 2486 0126 1A70     		strb	r2, [r3]
  52:.\BFS/bfs.h   **** 
  53:.\BFS/bfs.h   ****     #ifdef DEBUG
  54:.\BFS/bfs.h   ****         printf("### BEGIN MAIN LOOP ###\n"); // DEBUG
 2487              		.loc 3 54 0
 2488 0128 6248     		ldr	r0, .L153+4
 2489 012a FFF7FEFF 		bl	puts
  55:.\BFS/bfs.h   ****         map[start.y][start.x] = 4;
 2490              		.loc 3 55 0
 2491 012e 07F16003 		add	r3, r7, #96
 2492 0132 543B     		subs	r3, r3, #84
 2493 0134 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2494 0136 5AB2     		sxtb	r2, r3
 2495 0138 07F16003 		add	r3, r7, #96
 2496 013c 543B     		subs	r3, r3, #84
 2497 013e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2498 0140 59B2     		sxtb	r1, r3
 2499 0142 5D48     		ldr	r0, .L153+8
 2500 0144 1346     		mov	r3, r2
 2501 0146 DB00     		lsls	r3, r3, #3
 2502 0148 1344     		add	r3, r3, r2
 2503 014a 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 54


 2504 014c 1344     		add	r3, r3, r2
 2505 014e 0B44     		add	r3, r3, r1
 2506 0150 0422     		movs	r2, #4
 2507 0152 40F82320 		str	r2, [r0, r3, lsl #2]
 2508              	.L151:
  56:.\BFS/bfs.h   ****     #endif
  57:.\BFS/bfs.h   **** 
  58:.\BFS/bfs.h   ****     while (TRUE){
  59:.\BFS/bfs.h   ****         cnt = 0;
 2509              		.loc 3 59 0
 2510 0156 07F16003 		add	r3, r7, #96
 2511 015a 493B     		subs	r3, r3, #73
 2512 015c 0022     		movs	r2, #0
 2513 015e 1A70     		strb	r2, [r3]
  60:.\BFS/bfs.h   ****         #ifdef DEBUG
  61:.\BFS/bfs.h   ****             printf("##%d##\n",length);
 2514              		.loc 3 61 0
 2515 0160 5648     		ldr	r0, .L153+12
 2516 0162 07F5EA43 		add	r3, r7, #29952
 2517 0166 03F15803 		add	r3, r3, #88
 2518 016a 1968     		ldr	r1, [r3]
 2519 016c FFF7FEFF 		bl	printf
  62:.\BFS/bfs.h   ****         #endif
  63:.\BFS/bfs.h   ****         for (i = 0; i < MAX_NUM_PATHS; i++){
 2520              		.loc 3 63 0
 2521 0170 0023     		movs	r3, #0
 2522 0172 07F5EA42 		add	r2, r7, #29952
 2523 0176 02F15F02 		add	r2, r2, #95
 2524 017a 1370     		strb	r3, [r2]
 2525 017c 71E1     		b	.L143
 2526              	.L148:
 2527              	.LBB3:
  64:.\BFS/bfs.h   **** 
  65:.\BFS/bfs.h   ****             // Skip empty paths
  66:.\BFS/bfs.h   ****             if (isEmpty(paths[i],MAX_PATH_LENGTH)) continue;
 2528              		.loc 3 66 0
 2529 017e 07F5EA43 		add	r3, r7, #29952
 2530 0182 03F15F03 		add	r3, r3, #95
 2531 0186 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2532 0188 07F56B53 		add	r3, r7, #15040
 2533 018c 03F12003 		add	r3, r3, #32
 2534 0190 303B     		subs	r3, r3, #48
 2535 0192 4FF47A71 		mov	r1, #1000
 2536 0196 01FB02F2 		mul	r2, r1, r2
 2537 019a 1344     		add	r3, r3, r2
 2538 019c 1846     		mov	r0, r3
 2539 019e 4FF4FA71 		mov	r1, #500
 2540 01a2 FFF7FEFF 		bl	isEmpty
 2541 01a6 0346     		mov	r3, r0
 2542 01a8 002B     		cmp	r3, #0
 2543 01aa 40F04F81 		bne	.L145
  67:.\BFS/bfs.h   **** 
  68:.\BFS/bfs.h   ****             #ifdef DEBUG
  69:.\BFS/bfs.h   ****                 printf("[%d]\n",i); // DEBUG
 2544              		.loc 3 69 0
 2545 01ae 07F5EA43 		add	r3, r7, #29952
 2546 01b2 03F15F03 		add	r3, r3, #95
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 55


 2547 01b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2548 01b8 4148     		ldr	r0, .L153+16
 2549 01ba 1946     		mov	r1, r3
 2550 01bc FFF7FEFF 		bl	printf
  70:.\BFS/bfs.h   ****             #endif
  71:.\BFS/bfs.h   **** 
  72:.\BFS/bfs.h   ****             // Set the concurrent_path equal to path
  73:.\BFS/bfs.h   ****             memcpy(concurrent_path,paths[i],MAX_PATH_LENGTH*sizeof(point));
 2551              		.loc 3 73 0
 2552 01c0 07F5EA43 		add	r3, r7, #29952
 2553 01c4 03F15F03 		add	r3, r3, #95
 2554 01c8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2555 01ca 07F56B53 		add	r3, r7, #15040
 2556 01ce 03F12003 		add	r3, r3, #32
 2557 01d2 303B     		subs	r3, r3, #48
 2558 01d4 4FF47A71 		mov	r1, #1000
 2559 01d8 01FB02F2 		mul	r2, r1, r2
 2560 01dc 1A44     		add	r2, r2, r3
 2561 01de 07F16003 		add	r3, r7, #96
 2562 01e2 5C3B     		subs	r3, r3, #92
 2563 01e4 1B68     		ldr	r3, [r3]
 2564 01e6 1946     		mov	r1, r3
 2565 01e8 4FF47A73 		mov	r3, #1000
 2566 01ec 0846     		mov	r0, r1
 2567 01ee 1146     		mov	r1, r2
 2568 01f0 1A46     		mov	r2, r3
 2569 01f2 FFF7FEFF 		bl	memcpy
  74:.\BFS/bfs.h   **** 
  75:.\BFS/bfs.h   ****             #ifdef DEBUG
  76:.\BFS/bfs.h   ****                 printPath(concurrent_path); // DEBUG
 2570              		.loc 3 76 0
 2571 01f6 07F16003 		add	r3, r7, #96
 2572 01fa 5C3B     		subs	r3, r3, #92
 2573 01fc 1868     		ldr	r0, [r3]
 2574 01fe FFF7FEFF 		bl	printPath
  77:.\BFS/bfs.h   ****             #endif
  78:.\BFS/bfs.h   **** 
  79:.\BFS/bfs.h   ****             // Clear path
  80:.\BFS/bfs.h   ****             //clearArray(paths[i],MAX_PATH_LENGTH);
  81:.\BFS/bfs.h   ****             memset(paths[i],EMPTY_VAL,MAX_PATH_LENGTH*sizeof(point));
 2575              		.loc 3 81 0
 2576 0202 07F5EA43 		add	r3, r7, #29952
 2577 0206 03F15F03 		add	r3, r3, #95
 2578 020a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2579 020c 07F56B53 		add	r3, r7, #15040
 2580 0210 03F12003 		add	r3, r3, #32
 2581 0214 303B     		subs	r3, r3, #48
 2582 0216 4FF47A71 		mov	r1, #1000
 2583 021a 01FB02F2 		mul	r2, r1, r2
 2584 021e 1344     		add	r3, r3, r2
 2585 0220 1846     		mov	r0, r3
 2586 0222 4FF0FF31 		mov	r1, #-1
 2587 0226 4FF47A72 		mov	r2, #1000
 2588 022a FFF7FEFF 		bl	memset
  82:.\BFS/bfs.h   **** 
  83:.\BFS/bfs.h   ****             point p = concurrent_path[length-1];
 2589              		.loc 3 83 0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 56


 2590 022e 07F5EA43 		add	r3, r7, #29952
 2591 0232 03F15803 		add	r3, r3, #88
 2592 0236 1B68     		ldr	r3, [r3]
 2593 0238 03F10043 		add	r3, r3, #-2147483648
 2594 023c 013B     		subs	r3, r3, #1
 2595 023e 5A00     		lsls	r2, r3, #1
 2596 0240 07F16003 		add	r3, r7, #96
 2597 0244 5C3B     		subs	r3, r3, #92
 2598 0246 1B68     		ldr	r3, [r3]
 2599 0248 9918     		adds	r1, r3, r2
 2600 024a 07F16003 		add	r3, r7, #96
 2601 024e 4C3B     		subs	r3, r3, #76
 2602 0250 1A46     		mov	r2, r3
 2603 0252 0B46     		mov	r3, r1
 2604 0254 1B88     		ldrh	r3, [r3]	@ unaligned
 2605 0256 1380     		strh	r3, [r2]	@ unaligned
  84:.\BFS/bfs.h   **** 
  85:.\BFS/bfs.h   ****             #ifdef DEBUG
  86:.\BFS/bfs.h   ****                 printf("End node: (%d,%d)\n",p.x,p.y); // DEBUG
 2606              		.loc 3 86 0
 2607 0258 07F16003 		add	r3, r7, #96
 2608 025c 4C3B     		subs	r3, r3, #76
 2609 025e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2610 0260 5AB2     		sxtb	r2, r3
 2611 0262 07F16003 		add	r3, r7, #96
 2612 0266 4C3B     		subs	r3, r3, #76
 2613 0268 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2614 026a 5BB2     		sxtb	r3, r3
 2615 026c 1548     		ldr	r0, .L153+20
 2616 026e 1146     		mov	r1, r2
 2617 0270 1A46     		mov	r2, r3
 2618 0272 FFF7FEFF 		bl	printf
  87:.\BFS/bfs.h   ****             #endif
  88:.\BFS/bfs.h   **** 
  89:.\BFS/bfs.h   ****             // Path has been found
  90:.\BFS/bfs.h   ****             if (p.x == finish.x && p.y == finish.y) {
 2619              		.loc 3 90 0
 2620 0276 07F16003 		add	r3, r7, #96
 2621 027a 4C3B     		subs	r3, r3, #76
 2622 027c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2623 027e 07F16003 		add	r3, r7, #96
 2624 0282 583B     		subs	r3, r3, #88
 2625 0284 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2626 0286 52B2     		sxtb	r2, r2
 2627 0288 5BB2     		sxtb	r3, r3
 2628 028a 9A42     		cmp	r2, r3
 2629 028c 1ED1     		bne	.L146
 2630              		.loc 3 90 0 is_stmt 0 discriminator 1
 2631 028e 07F16003 		add	r3, r7, #96
 2632 0292 4C3B     		subs	r3, r3, #76
 2633 0294 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2634 0296 07F16003 		add	r3, r7, #96
 2635 029a 583B     		subs	r3, r3, #88
 2636 029c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2637 029e 52B2     		sxtb	r2, r2
 2638 02a0 5BB2     		sxtb	r3, r3
 2639 02a2 9A42     		cmp	r2, r3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 57


 2640 02a4 12D1     		bne	.L146
  91:.\BFS/bfs.h   ****                 #ifdef DEBUG
  92:.\BFS/bfs.h   ****                     printf("### FOUND PATH ###\n");
 2641              		.loc 3 92 0 is_stmt 1
 2642 02a6 0848     		ldr	r0, .L153+24
 2643 02a8 FFF7FEFF 		bl	puts
 2644 02ac 5FE1     		b	.L152
 2645              	.L154:
 2646 02ae 00BF     		.align	2
 2647              	.L153:
 2648 02b0 D8000000 		.word	.LC16
 2649 02b4 FC000000 		.word	.LC17
 2650 02b8 00000000 		.word	map
 2651 02bc 14010000 		.word	.LC18
 2652 02c0 1C010000 		.word	.LC19
 2653 02c4 24010000 		.word	.LC20
 2654 02c8 38010000 		.word	.LC21
 2655              	.L146:
  93:.\BFS/bfs.h   ****                 #endif
  94:.\BFS/bfs.h   ****                 return;
  95:.\BFS/bfs.h   ****             }
  96:.\BFS/bfs.h   **** 
  97:.\BFS/bfs.h   ****             // Check above
  98:.\BFS/bfs.h   ****             checkPath(new_paths,&cnt,concurrent_path,length,(point){.x=p.x,.y=p.y-1});
 2656              		.loc 3 98 0
 2657 02cc 07F16003 		add	r3, r7, #96
 2658 02d0 4C3B     		subs	r3, r3, #76
 2659 02d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2660 02d4 07F5EA42 		add	r2, r7, #29952
 2661 02d8 02F14802 		add	r2, r2, #72
 2662 02dc 1370     		strb	r3, [r2]
 2663 02de 07F16003 		add	r3, r7, #96
 2664 02e2 4C3B     		subs	r3, r3, #76
 2665 02e4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2666 02e6 DBB2     		uxtb	r3, r3
 2667 02e8 013B     		subs	r3, r3, #1
 2668 02ea DBB2     		uxtb	r3, r3
 2669 02ec DBB2     		uxtb	r3, r3
 2670 02ee 07F5EA42 		add	r2, r7, #29952
 2671 02f2 02F14902 		add	r2, r2, #73
 2672 02f6 1370     		strb	r3, [r2]
 2673 02f8 07F16001 		add	r1, r7, #96
 2674 02fc 4839     		subs	r1, r1, #72
 2675 02fe 07F16002 		add	r2, r7, #96
 2676 0302 493A     		subs	r2, r2, #73
 2677 0304 07F16003 		add	r3, r7, #96
 2678 0308 5C3B     		subs	r3, r3, #92
 2679 030a 07F5EA40 		add	r0, r7, #29952
 2680 030e 00F14800 		add	r0, r0, #72
 2681 0312 0088     		ldrh	r0, [r0]	@ movhi
 2682 0314 ADF80000 		strh	r0, [sp]	@ movhi
 2683 0318 0846     		mov	r0, r1
 2684 031a 1146     		mov	r1, r2
 2685 031c 1A68     		ldr	r2, [r3]
 2686 031e 07F5EA43 		add	r3, r7, #29952
 2687 0322 03F15803 		add	r3, r3, #88
 2688 0326 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 58


 2689 0328 FFF7FEFF 		bl	checkPath
  99:.\BFS/bfs.h   ****             // Check below
 100:.\BFS/bfs.h   ****             checkPath(new_paths,&cnt,concurrent_path,length,(point){.x=p.x,.y=p.y+1});
 2690              		.loc 3 100 0
 2691 032c 07F16003 		add	r3, r7, #96
 2692 0330 4C3B     		subs	r3, r3, #76
 2693 0332 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2694 0334 07F5EA42 		add	r2, r7, #29952
 2695 0338 02F14C02 		add	r2, r2, #76
 2696 033c 1370     		strb	r3, [r2]
 2697 033e 07F16003 		add	r3, r7, #96
 2698 0342 4C3B     		subs	r3, r3, #76
 2699 0344 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2700 0346 DBB2     		uxtb	r3, r3
 2701 0348 0133     		adds	r3, r3, #1
 2702 034a DBB2     		uxtb	r3, r3
 2703 034c DBB2     		uxtb	r3, r3
 2704 034e 07F5EA42 		add	r2, r7, #29952
 2705 0352 02F14D02 		add	r2, r2, #77
 2706 0356 1370     		strb	r3, [r2]
 2707 0358 07F16001 		add	r1, r7, #96
 2708 035c 4839     		subs	r1, r1, #72
 2709 035e 07F16002 		add	r2, r7, #96
 2710 0362 493A     		subs	r2, r2, #73
 2711 0364 07F16003 		add	r3, r7, #96
 2712 0368 5C3B     		subs	r3, r3, #92
 2713 036a 07F5EA40 		add	r0, r7, #29952
 2714 036e 00F14C00 		add	r0, r0, #76
 2715 0372 0088     		ldrh	r0, [r0]	@ movhi
 2716 0374 ADF80000 		strh	r0, [sp]	@ movhi
 2717 0378 0846     		mov	r0, r1
 2718 037a 1146     		mov	r1, r2
 2719 037c 1A68     		ldr	r2, [r3]
 2720 037e 07F5EA43 		add	r3, r7, #29952
 2721 0382 03F15803 		add	r3, r3, #88
 2722 0386 1B68     		ldr	r3, [r3]
 2723 0388 FFF7FEFF 		bl	checkPath
 101:.\BFS/bfs.h   ****             // Check left
 102:.\BFS/bfs.h   ****             checkPath(new_paths,&cnt,concurrent_path,length,(point){.x=p.x-1,.y=p.y});
 2724              		.loc 3 102 0
 2725 038c 07F16003 		add	r3, r7, #96
 2726 0390 4C3B     		subs	r3, r3, #76
 2727 0392 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2728 0394 DBB2     		uxtb	r3, r3
 2729 0396 013B     		subs	r3, r3, #1
 2730 0398 DBB2     		uxtb	r3, r3
 2731 039a DBB2     		uxtb	r3, r3
 2732 039c 07F5EA42 		add	r2, r7, #29952
 2733 03a0 02F15002 		add	r2, r2, #80
 2734 03a4 1370     		strb	r3, [r2]
 2735 03a6 07F16003 		add	r3, r7, #96
 2736 03aa 4C3B     		subs	r3, r3, #76
 2737 03ac 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2738 03ae 07F5EA42 		add	r2, r7, #29952
 2739 03b2 02F15102 		add	r2, r2, #81
 2740 03b6 1370     		strb	r3, [r2]
 2741 03b8 07F16001 		add	r1, r7, #96
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 59


 2742 03bc 4839     		subs	r1, r1, #72
 2743 03be 07F16002 		add	r2, r7, #96
 2744 03c2 493A     		subs	r2, r2, #73
 2745 03c4 07F16003 		add	r3, r7, #96
 2746 03c8 5C3B     		subs	r3, r3, #92
 2747 03ca 07F5EA40 		add	r0, r7, #29952
 2748 03ce 00F15000 		add	r0, r0, #80
 2749 03d2 0088     		ldrh	r0, [r0]	@ movhi
 2750 03d4 ADF80000 		strh	r0, [sp]	@ movhi
 2751 03d8 0846     		mov	r0, r1
 2752 03da 1146     		mov	r1, r2
 2753 03dc 1A68     		ldr	r2, [r3]
 2754 03de 07F5EA43 		add	r3, r7, #29952
 2755 03e2 03F15803 		add	r3, r3, #88
 2756 03e6 1B68     		ldr	r3, [r3]
 2757 03e8 FFF7FEFF 		bl	checkPath
 103:.\BFS/bfs.h   ****             // Check right
 104:.\BFS/bfs.h   ****             checkPath(new_paths,&cnt,concurrent_path,length,(point){.x=p.x+1,.y=p.y});
 2758              		.loc 3 104 0
 2759 03ec 07F16003 		add	r3, r7, #96
 2760 03f0 4C3B     		subs	r3, r3, #76
 2761 03f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2762 03f4 DBB2     		uxtb	r3, r3
 2763 03f6 0133     		adds	r3, r3, #1
 2764 03f8 DBB2     		uxtb	r3, r3
 2765 03fa DBB2     		uxtb	r3, r3
 2766 03fc 07F5EA42 		add	r2, r7, #29952
 2767 0400 02F15402 		add	r2, r2, #84
 2768 0404 1370     		strb	r3, [r2]
 2769 0406 07F16003 		add	r3, r7, #96
 2770 040a 4C3B     		subs	r3, r3, #76
 2771 040c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2772 040e 07F5EA42 		add	r2, r7, #29952
 2773 0412 02F15502 		add	r2, r2, #85
 2774 0416 1370     		strb	r3, [r2]
 2775 0418 07F16001 		add	r1, r7, #96
 2776 041c 4839     		subs	r1, r1, #72
 2777 041e 07F16002 		add	r2, r7, #96
 2778 0422 493A     		subs	r2, r2, #73
 2779 0424 07F16003 		add	r3, r7, #96
 2780 0428 5C3B     		subs	r3, r3, #92
 2781 042a 07F5EA40 		add	r0, r7, #29952
 2782 042e 00F15400 		add	r0, r0, #84
 2783 0432 0088     		ldrh	r0, [r0]	@ movhi
 2784 0434 ADF80000 		strh	r0, [sp]	@ movhi
 2785 0438 0846     		mov	r0, r1
 2786 043a 1146     		mov	r1, r2
 2787 043c 1A68     		ldr	r2, [r3]
 2788 043e 07F5EA43 		add	r3, r7, #29952
 2789 0442 03F15803 		add	r3, r3, #88
 2790 0446 1B68     		ldr	r3, [r3]
 2791 0448 FFF7FEFF 		bl	checkPath
 2792              	.L145:
 2793              	.LBE3:
  63:.\BFS/bfs.h   **** 
 2794              		.loc 3 63 0 discriminator 2
 2795 044c 07F5EA43 		add	r3, r7, #29952
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 60


 2796 0450 03F15F03 		add	r3, r3, #95
 2797 0454 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2798 0456 0133     		adds	r3, r3, #1
 2799 0458 07F5EA42 		add	r2, r7, #29952
 2800 045c 02F15F02 		add	r2, r2, #95
 2801 0460 1370     		strb	r3, [r2]
 2802              	.L143:
  63:.\BFS/bfs.h   **** 
 2803              		.loc 3 63 0 is_stmt 0 discriminator 1
 2804 0462 07F5EA43 		add	r3, r7, #29952
 2805 0466 03F15F03 		add	r3, r3, #95
 2806 046a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2807 046c 0E2B     		cmp	r3, #14
 2808 046e 7FF686AE 		bls	.L148
 105:.\BFS/bfs.h   **** 
 106:.\BFS/bfs.h   ****         }
 107:.\BFS/bfs.h   **** 
 108:.\BFS/bfs.h   ****         #ifdef DEBUG
 109:.\BFS/bfs.h   ****             printf("### UPDATING PATHS ###\n"); // DEBUG
 2809              		.loc 3 109 0 is_stmt 1
 2810 0472 4148     		ldr	r0, .L155
 2811 0474 FFF7FEFF 		bl	puts
 110:.\BFS/bfs.h   ****         #endif
 111:.\BFS/bfs.h   **** 
 112:.\BFS/bfs.h   ****         // Take new paths and put them into paths
 113:.\BFS/bfs.h   ****         for (i = 0; i < MAX_NUM_PATHS; i++){
 2812              		.loc 3 113 0
 2813 0478 0023     		movs	r3, #0
 2814 047a 07F5EA42 		add	r2, r7, #29952
 2815 047e 02F15F02 		add	r2, r2, #95
 2816 0482 1370     		strb	r3, [r2]
 2817 0484 53E0     		b	.L149
 2818              	.L150:
 114:.\BFS/bfs.h   ****             #ifdef DEBUG
 115:.\BFS/bfs.h   ****                 printPath(new_paths[i]);
 2819              		.loc 3 115 0 discriminator 3
 2820 0486 07F5EA43 		add	r3, r7, #29952
 2821 048a 03F15F03 		add	r3, r3, #95
 2822 048e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2823 0490 07F16003 		add	r3, r7, #96
 2824 0494 483B     		subs	r3, r3, #72
 2825 0496 4FF47A71 		mov	r1, #1000
 2826 049a 01FB02F2 		mul	r2, r1, r2
 2827 049e 1344     		add	r3, r3, r2
 2828 04a0 1846     		mov	r0, r3
 2829 04a2 FFF7FEFF 		bl	printPath
 116:.\BFS/bfs.h   ****             #endif
 117:.\BFS/bfs.h   ****             memcpy(paths[i],new_paths[i],MAX_PATH_LENGTH*sizeof(point)); // Copy new_paths to paths
 2830              		.loc 3 117 0 discriminator 3
 2831 04a6 07F5EA43 		add	r3, r7, #29952
 2832 04aa 03F15F03 		add	r3, r3, #95
 2833 04ae 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2834 04b0 07F56B53 		add	r3, r7, #15040
 2835 04b4 03F12003 		add	r3, r3, #32
 2836 04b8 303B     		subs	r3, r3, #48
 2837 04ba 4FF47A71 		mov	r1, #1000
 2838 04be 01FB02F2 		mul	r2, r1, r2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 61


 2839 04c2 9818     		adds	r0, r3, r2
 2840 04c4 07F5EA43 		add	r3, r7, #29952
 2841 04c8 03F15F03 		add	r3, r3, #95
 2842 04cc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2843 04ce 07F16003 		add	r3, r7, #96
 2844 04d2 483B     		subs	r3, r3, #72
 2845 04d4 4FF47A71 		mov	r1, #1000
 2846 04d8 01FB02F2 		mul	r2, r1, r2
 2847 04dc 1344     		add	r3, r3, r2
 2848 04de 0146     		mov	r1, r0
 2849 04e0 1A46     		mov	r2, r3
 2850 04e2 4FF47A73 		mov	r3, #1000
 2851 04e6 0846     		mov	r0, r1
 2852 04e8 1146     		mov	r1, r2
 2853 04ea 1A46     		mov	r2, r3
 2854 04ec FFF7FEFF 		bl	memcpy
 118:.\BFS/bfs.h   ****             memset(new_paths[i],EMPTY_VAL,MAX_PATH_LENGTH*sizeof(point)); // Empty new_paths
 2855              		.loc 3 118 0 discriminator 3
 2856 04f0 07F5EA43 		add	r3, r7, #29952
 2857 04f4 03F15F03 		add	r3, r3, #95
 2858 04f8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2859 04fa 07F16003 		add	r3, r7, #96
 2860 04fe 483B     		subs	r3, r3, #72
 2861 0500 4FF47A71 		mov	r1, #1000
 2862 0504 01FB02F2 		mul	r2, r1, r2
 2863 0508 1344     		add	r3, r3, r2
 2864 050a 1846     		mov	r0, r3
 2865 050c 4FF0FF31 		mov	r1, #-1
 2866 0510 4FF47A72 		mov	r2, #1000
 2867 0514 FFF7FEFF 		bl	memset
 113:.\BFS/bfs.h   ****             #ifdef DEBUG
 2868              		.loc 3 113 0 discriminator 3
 2869 0518 07F5EA43 		add	r3, r7, #29952
 2870 051c 03F15F03 		add	r3, r3, #95
 2871 0520 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2872 0522 0133     		adds	r3, r3, #1
 2873 0524 07F5EA42 		add	r2, r7, #29952
 2874 0528 02F15F02 		add	r2, r2, #95
 2875 052c 1370     		strb	r3, [r2]
 2876              	.L149:
 113:.\BFS/bfs.h   ****             #ifdef DEBUG
 2877              		.loc 3 113 0 is_stmt 0 discriminator 1
 2878 052e 07F5EA43 		add	r3, r7, #29952
 2879 0532 03F15F03 		add	r3, r3, #95
 2880 0536 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2881 0538 0E2B     		cmp	r3, #14
 2882 053a A4D9     		bls	.L150
 119:.\BFS/bfs.h   ****         }
 120:.\BFS/bfs.h   **** 
 121:.\BFS/bfs.h   ****         #ifdef DEBUG
 122:.\BFS/bfs.h   ****             printf("Number of paths: %d\n",cnt); // DEBUG
 2883              		.loc 3 122 0 is_stmt 1
 2884 053c 07F16003 		add	r3, r7, #96
 2885 0540 493B     		subs	r3, r3, #73
 2886 0542 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2887 0544 0D48     		ldr	r0, .L155+4
 2888 0546 1946     		mov	r1, r3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 62


 2889 0548 FFF7FEFF 		bl	printf
 123:.\BFS/bfs.h   ****             printMap(map);
 2890              		.loc 3 123 0
 2891 054c 0C48     		ldr	r0, .L155+8
 2892 054e FFF7FEFF 		bl	printMap
 124:.\BFS/bfs.h   ****             blockAndWait(); // DEBUG
 2893              		.loc 3 124 0
 2894 0552 FFF7FEFF 		bl	blockAndWait
 125:.\BFS/bfs.h   ****         #endif
 126:.\BFS/bfs.h   **** 
 127:.\BFS/bfs.h   ****         length++;
 2895              		.loc 3 127 0
 2896 0556 07F5EA43 		add	r3, r7, #29952
 2897 055a 03F15803 		add	r3, r3, #88
 2898 055e 1B68     		ldr	r3, [r3]
 2899 0560 0133     		adds	r3, r3, #1
 2900 0562 07F5EA42 		add	r2, r7, #29952
 2901 0566 02F15802 		add	r2, r2, #88
 2902 056a 1360     		str	r3, [r2]
 128:.\BFS/bfs.h   **** 
 129:.\BFS/bfs.h   ****     }
 2903              		.loc 3 129 0
 2904 056c F3E5     		b	.L151
 2905              	.L152:
 130:.\BFS/bfs.h   **** 
 131:.\BFS/bfs.h   **** }
 2906              		.loc 3 131 0
 2907 056e 07F5EA47 		add	r7, r7, #29952
 2908 0572 6037     		adds	r7, r7, #96
 2909              		.cfi_def_cfa_offset 8
 2910 0574 BD46     		mov	sp, r7
 2911              		.cfi_def_cfa_register 13
 2912              		@ sp needed
 2913 0576 80BD     		pop	{r7, pc}
 2914              	.L156:
 2915              		.align	2
 2916              	.L155:
 2917 0578 4C010000 		.word	.LC22
 2918 057c 64010000 		.word	.LC23
 2919 0580 00000000 		.word	map
 2920              		.cfi_endproc
 2921              	.LFE82:
 2922              		.size	BFS, .-BFS
 2923              		.section	.text.BFS_alternate,"ax",%progbits
 2924              		.align	2
 2925              		.global	BFS_alternate
 2926              		.thumb
 2927              		.thumb_func
 2928              		.type	BFS_alternate, %function
 2929              	BFS_alternate:
 2930              	.LFB83:
 132:.\BFS/bfs.h   **** 
 133:.\BFS/bfs.h   **** point BFS_alternate(point start, int marked_map[MAP_ROW][MAP_COL], point concurrent_path[MAX_PATH_L
 2931              		.loc 3 133 0
 2932              		.cfi_startproc
 2933              		@ args = 0, pretend = 0, frame = 31048
 2934              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 63


 2935 0000 80B5     		push	{r7, lr}
 2936              		.cfi_def_cfa_offset 8
 2937              		.cfi_offset 7, -8
 2938              		.cfi_offset 14, -4
 2939 0002 ADF5F24D 		sub	sp, sp, #30976
 2940              		.cfi_def_cfa_offset 30984
 2941 0006 94B0     		sub	sp, sp, #80
 2942              		.cfi_def_cfa_offset 31064
 2943 0008 02AF     		add	r7, sp, #8
 2944              		.cfi_def_cfa 7, 31056
 2945 000a 07F14803 		add	r3, r7, #72
 2946 000e 3C3B     		subs	r3, r3, #60
 2947 0010 1880     		strh	r0, [r3]	@ movhi
 2948 0012 07F14803 		add	r3, r7, #72
 2949 0016 403B     		subs	r3, r3, #64
 2950 0018 1960     		str	r1, [r3]
 2951 001a 07F14803 		add	r3, r7, #72
 2952 001e 443B     		subs	r3, r3, #68
 2953 0020 1A60     		str	r2, [r3]
 134:.\BFS/bfs.h   **** 
 135:.\BFS/bfs.h   ****     point paths[MAX_NUM_PATHS][MAX_PATH_LENGTH] = { 0 };
 2954              		.loc 3 135 0
 2955 0022 07F57B53 		add	r3, r7, #16064
 2956 0026 03F10803 		add	r3, r3, #8
 2957 002a 343B     		subs	r3, r3, #52
 2958 002c 1A46     		mov	r2, r3
 2959 002e 43F69823 		movw	r3, #15000
 2960 0032 1046     		mov	r0, r2
 2961 0034 0021     		movs	r1, #0
 2962 0036 1A46     		mov	r2, r3
 2963 0038 FFF7FEFF 		bl	memset
 136:.\BFS/bfs.h   ****     point new_paths[MAX_NUM_PATHS][MAX_PATH_LENGTH] = { 0 };
 2964              		.loc 3 136 0
 2965 003c 07F58963 		add	r3, r7, #1096
 2966 0040 4C3B     		subs	r3, r3, #76
 2967 0042 1A46     		mov	r2, r3
 2968 0044 43F69823 		movw	r3, #15000
 2969 0048 1046     		mov	r0, r2
 2970 004a 0021     		movs	r1, #0
 2971 004c 1A46     		mov	r2, r3
 2972 004e FFF7FEFF 		bl	memset
 137:.\BFS/bfs.h   ****     point temp_path[MAX_PATH_LENGTH] = { 0 };
 2973              		.loc 3 137 0
 2974 0052 07F14803 		add	r3, r7, #72
 2975 0056 343B     		subs	r3, r3, #52
 2976 0058 1A46     		mov	r2, r3
 2977 005a 4FF47A73 		mov	r3, #1000
 2978 005e 1046     		mov	r0, r2
 2979 0060 0021     		movs	r1, #0
 2980 0062 1A46     		mov	r2, r3
 2981 0064 FFF7FEFF 		bl	memset
 138:.\BFS/bfs.h   ****     uint8_t i; // For C90 compatibility
 139:.\BFS/bfs.h   **** 
 140:.\BFS/bfs.h   ****     // Initialise all paths as empty
 141:.\BFS/bfs.h   ****     memset(concurrent_path, EMPTY_VAL, MAX_PATH_LENGTH*sizeof(point));
 2982              		.loc 3 141 0
 2983 0068 07F14803 		add	r3, r7, #72
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 64


 2984 006c 443B     		subs	r3, r3, #68
 2985 006e 1868     		ldr	r0, [r3]
 2986 0070 4FF0FF31 		mov	r1, #-1
 2987 0074 4FF47A72 		mov	r2, #1000
 2988 0078 FFF7FEFF 		bl	memset
 142:.\BFS/bfs.h   ****     memset(temp_path, EMPTY_VAL, MAX_PATH_LENGTH*sizeof(point));
 2989              		.loc 3 142 0
 2990 007c 07F14803 		add	r3, r7, #72
 2991 0080 343B     		subs	r3, r3, #52
 2992 0082 1846     		mov	r0, r3
 2993 0084 4FF0FF31 		mov	r1, #-1
 2994 0088 4FF47A72 		mov	r2, #1000
 2995 008c FFF7FEFF 		bl	memset
 143:.\BFS/bfs.h   **** 
 144:.\BFS/bfs.h   ****     for (i = 0; i < MAX_NUM_PATHS; i++){
 2996              		.loc 3 144 0
 2997 0090 0023     		movs	r3, #0
 2998 0092 07F5F242 		add	r2, r7, #30976
 2999 0096 02F14702 		add	r2, r2, #71
 3000 009a 1370     		strb	r3, [r2]
 3001 009c 34E0     		b	.L158
 3002              	.L159:
 145:.\BFS/bfs.h   ****         memset(paths[i],EMPTY_VAL,MAX_PATH_LENGTH*sizeof(point));
 3003              		.loc 3 145 0 discriminator 3
 3004 009e 07F5F243 		add	r3, r7, #30976
 3005 00a2 03F14703 		add	r3, r3, #71
 3006 00a6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3007 00a8 07F57B53 		add	r3, r7, #16064
 3008 00ac 03F10803 		add	r3, r3, #8
 3009 00b0 343B     		subs	r3, r3, #52
 3010 00b2 4FF47A71 		mov	r1, #1000
 3011 00b6 01FB02F2 		mul	r2, r1, r2
 3012 00ba 1344     		add	r3, r3, r2
 3013 00bc 1846     		mov	r0, r3
 3014 00be 4FF0FF31 		mov	r1, #-1
 3015 00c2 4FF47A72 		mov	r2, #1000
 3016 00c6 FFF7FEFF 		bl	memset
 146:.\BFS/bfs.h   ****         memset(new_paths[i],EMPTY_VAL,MAX_PATH_LENGTH*sizeof(point));
 3017              		.loc 3 146 0 discriminator 3
 3018 00ca 07F5F243 		add	r3, r7, #30976
 3019 00ce 03F14703 		add	r3, r3, #71
 3020 00d2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3021 00d4 07F58963 		add	r3, r7, #1096
 3022 00d8 4C3B     		subs	r3, r3, #76
 3023 00da 4FF47A71 		mov	r1, #1000
 3024 00de 01FB02F2 		mul	r2, r1, r2
 3025 00e2 1344     		add	r3, r3, r2
 3026 00e4 1846     		mov	r0, r3
 3027 00e6 4FF0FF31 		mov	r1, #-1
 3028 00ea 4FF47A72 		mov	r2, #1000
 3029 00ee FFF7FEFF 		bl	memset
 144:.\BFS/bfs.h   ****         memset(paths[i],EMPTY_VAL,MAX_PATH_LENGTH*sizeof(point));
 3030              		.loc 3 144 0 discriminator 3
 3031 00f2 07F5F243 		add	r3, r7, #30976
 3032 00f6 03F14703 		add	r3, r3, #71
 3033 00fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3034 00fc 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 65


 3035 00fe 07F5F242 		add	r2, r7, #30976
 3036 0102 02F14702 		add	r2, r2, #71
 3037 0106 1370     		strb	r3, [r2]
 3038              	.L158:
 144:.\BFS/bfs.h   ****         memset(paths[i],EMPTY_VAL,MAX_PATH_LENGTH*sizeof(point));
 3039              		.loc 3 144 0 is_stmt 0 discriminator 1
 3040 0108 07F5F243 		add	r3, r7, #30976
 3041 010c 03F14703 		add	r3, r3, #71
 3042 0110 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3043 0112 0E2B     		cmp	r3, #14
 3044 0114 C3D9     		bls	.L159
 147:.\BFS/bfs.h   ****     }
 148:.\BFS/bfs.h   **** 
 149:.\BFS/bfs.h   ****     #ifdef DEBUG
 150:.\BFS/bfs.h   ****         printf("### FINISHED INITIALISATIONS ###\n");
 3045              		.loc 3 150 0 is_stmt 1
 3046 0116 7448     		ldr	r0, .L170
 3047 0118 FFF7FEFF 		bl	puts
 151:.\BFS/bfs.h   ****     #endif
 152:.\BFS/bfs.h   **** 
 153:.\BFS/bfs.h   ****     // Setup initial starting point
 154:.\BFS/bfs.h   ****     paths[0][0] = start;
 3048              		.loc 3 154 0
 3049 011c 07F57B53 		add	r3, r7, #16064
 3050 0120 03F10803 		add	r3, r3, #8
 3051 0124 343B     		subs	r3, r3, #52
 3052 0126 07F14802 		add	r2, r7, #72
 3053 012a 3C3A     		subs	r2, r2, #60
 3054 012c 1288     		ldrh	r2, [r2]	@ movhi
 3055 012e 1A80     		strh	r2, [r3]	@ movhi
 155:.\BFS/bfs.h   ****     markPointAsVisited(start);
 3056              		.loc 3 155 0
 3057 0130 07F14803 		add	r3, r7, #72
 3058 0134 3C3B     		subs	r3, r3, #60
 3059 0136 1868     		ldr	r0, [r3]
 3060 0138 FFF7FEFF 		bl	markPointAsVisited
 156:.\BFS/bfs.h   ****     int length = 1; // relates to concurrent_path
 3061              		.loc 3 156 0
 3062 013c 0123     		movs	r3, #1
 3063 013e 07F5F242 		add	r2, r7, #30976
 3064 0142 02F14002 		add	r2, r2, #64
 3065 0146 1360     		str	r3, [r2]
 157:.\BFS/bfs.h   ****     uint8_t cnt = 0;
 3066              		.loc 3 157 0
 3067 0148 07F14803 		add	r3, r7, #72
 3068 014c 353B     		subs	r3, r3, #53
 3069 014e 0022     		movs	r2, #0
 3070 0150 1A70     		strb	r2, [r3]
 158:.\BFS/bfs.h   **** 
 159:.\BFS/bfs.h   ****     #ifdef DEBUG
 160:.\BFS/bfs.h   ****         printf("### BEGIN MAIN LOOP ###\n"); // DEBUG
 3071              		.loc 3 160 0
 3072 0152 6648     		ldr	r0, .L170+4
 3073 0154 FFF7FEFF 		bl	puts
 161:.\BFS/bfs.h   ****         map[start.y][start.x] = 4;
 3074              		.loc 3 161 0
 3075 0158 07F14803 		add	r3, r7, #72
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 66


 3076 015c 3C3B     		subs	r3, r3, #60
 3077 015e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3078 0160 5AB2     		sxtb	r2, r3
 3079 0162 07F14803 		add	r3, r7, #72
 3080 0166 3C3B     		subs	r3, r3, #60
 3081 0168 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3082 016a 59B2     		sxtb	r1, r3
 3083 016c 6048     		ldr	r0, .L170+8
 3084 016e 1346     		mov	r3, r2
 3085 0170 DB00     		lsls	r3, r3, #3
 3086 0172 1344     		add	r3, r3, r2
 3087 0174 5B00     		lsls	r3, r3, #1
 3088 0176 1344     		add	r3, r3, r2
 3089 0178 0B44     		add	r3, r3, r1
 3090 017a 0422     		movs	r2, #4
 3091 017c 40F82320 		str	r2, [r0, r3, lsl #2]
 3092              	.L168:
 162:.\BFS/bfs.h   ****     #endif
 163:.\BFS/bfs.h   **** 
 164:.\BFS/bfs.h   ****     while (TRUE){
 165:.\BFS/bfs.h   ****         cnt = 0;
 3093              		.loc 3 165 0
 3094 0180 07F14803 		add	r3, r7, #72
 3095 0184 353B     		subs	r3, r3, #53
 3096 0186 0022     		movs	r2, #0
 3097 0188 1A70     		strb	r2, [r3]
 166:.\BFS/bfs.h   ****         #ifdef DEBUG
 167:.\BFS/bfs.h   ****             printf("##%d##\n",length);
 3098              		.loc 3 167 0
 3099 018a 5A48     		ldr	r0, .L170+12
 3100 018c 07F5F243 		add	r3, r7, #30976
 3101 0190 03F14003 		add	r3, r3, #64
 3102 0194 1968     		ldr	r1, [r3]
 3103 0196 FFF7FEFF 		bl	printf
 168:.\BFS/bfs.h   ****         #endif
 169:.\BFS/bfs.h   ****         for (i = 0; i < MAX_NUM_PATHS; i++){
 3104              		.loc 3 169 0
 3105 019a 0023     		movs	r3, #0
 3106 019c 07F5F242 		add	r2, r7, #30976
 3107 01a0 02F14702 		add	r2, r2, #71
 3108 01a4 1370     		strb	r3, [r2]
 3109 01a6 78E1     		b	.L160
 3110              	.L165:
 3111              	.LBB4:
 170:.\BFS/bfs.h   **** 
 171:.\BFS/bfs.h   ****             // Skip empty paths
 172:.\BFS/bfs.h   ****             if (isEmpty(paths[i],MAX_PATH_LENGTH)) continue;
 3112              		.loc 3 172 0
 3113 01a8 07F5F243 		add	r3, r7, #30976
 3114 01ac 03F14703 		add	r3, r3, #71
 3115 01b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3116 01b2 07F57B53 		add	r3, r7, #16064
 3117 01b6 03F10803 		add	r3, r3, #8
 3118 01ba 343B     		subs	r3, r3, #52
 3119 01bc 4FF47A71 		mov	r1, #1000
 3120 01c0 01FB02F2 		mul	r2, r1, r2
 3121 01c4 1344     		add	r3, r3, r2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 67


 3122 01c6 1846     		mov	r0, r3
 3123 01c8 4FF4FA71 		mov	r1, #500
 3124 01cc FFF7FEFF 		bl	isEmpty
 3125 01d0 0346     		mov	r3, r0
 3126 01d2 002B     		cmp	r3, #0
 3127 01d4 40F05681 		bne	.L162
 173:.\BFS/bfs.h   **** 
 174:.\BFS/bfs.h   ****             #ifdef DEBUG
 175:.\BFS/bfs.h   ****                 printf("[%d]\n",i); // DEBUG
 3128              		.loc 3 175 0
 3129 01d8 07F5F243 		add	r3, r7, #30976
 3130 01dc 03F14703 		add	r3, r3, #71
 3131 01e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3132 01e2 4548     		ldr	r0, .L170+16
 3133 01e4 1946     		mov	r1, r3
 3134 01e6 FFF7FEFF 		bl	printf
 176:.\BFS/bfs.h   ****             #endif
 177:.\BFS/bfs.h   **** 
 178:.\BFS/bfs.h   ****             // Set the concurrent_path equal to path
 179:.\BFS/bfs.h   ****             memcpy(concurrent_path,paths[i],MAX_PATH_LENGTH*sizeof(point));
 3135              		.loc 3 179 0
 3136 01ea 07F5F243 		add	r3, r7, #30976
 3137 01ee 03F14703 		add	r3, r3, #71
 3138 01f2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3139 01f4 07F57B53 		add	r3, r7, #16064
 3140 01f8 03F10803 		add	r3, r3, #8
 3141 01fc 343B     		subs	r3, r3, #52
 3142 01fe 4FF47A71 		mov	r1, #1000
 3143 0202 01FB02F2 		mul	r2, r1, r2
 3144 0206 1A44     		add	r2, r2, r3
 3145 0208 07F14803 		add	r3, r7, #72
 3146 020c 443B     		subs	r3, r3, #68
 3147 020e 1B68     		ldr	r3, [r3]
 3148 0210 1946     		mov	r1, r3
 3149 0212 4FF47A73 		mov	r3, #1000
 3150 0216 0846     		mov	r0, r1
 3151 0218 1146     		mov	r1, r2
 3152 021a 1A46     		mov	r2, r3
 3153 021c FFF7FEFF 		bl	memcpy
 180:.\BFS/bfs.h   **** 
 181:.\BFS/bfs.h   ****             #ifdef DEBUG
 182:.\BFS/bfs.h   ****                 printPath(concurrent_path); // DEBUG
 3154              		.loc 3 182 0
 3155 0220 07F14803 		add	r3, r7, #72
 3156 0224 443B     		subs	r3, r3, #68
 3157 0226 1868     		ldr	r0, [r3]
 3158 0228 FFF7FEFF 		bl	printPath
 183:.\BFS/bfs.h   ****             #endif
 184:.\BFS/bfs.h   **** 
 185:.\BFS/bfs.h   ****             // Clear path
 186:.\BFS/bfs.h   ****             //clearArray(paths[i],MAX_PATH_LENGTH);
 187:.\BFS/bfs.h   ****             memset(paths[i],EMPTY_VAL,MAX_PATH_LENGTH*sizeof(point));
 3159              		.loc 3 187 0
 3160 022c 07F5F243 		add	r3, r7, #30976
 3161 0230 03F14703 		add	r3, r3, #71
 3162 0234 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3163 0236 07F57B53 		add	r3, r7, #16064
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 68


 3164 023a 03F10803 		add	r3, r3, #8
 3165 023e 343B     		subs	r3, r3, #52
 3166 0240 4FF47A71 		mov	r1, #1000
 3167 0244 01FB02F2 		mul	r2, r1, r2
 3168 0248 1344     		add	r3, r3, r2
 3169 024a 1846     		mov	r0, r3
 3170 024c 4FF0FF31 		mov	r1, #-1
 3171 0250 4FF47A72 		mov	r2, #1000
 3172 0254 FFF7FEFF 		bl	memset
 188:.\BFS/bfs.h   **** 
 189:.\BFS/bfs.h   ****             point p = concurrent_path[length-1];
 3173              		.loc 3 189 0
 3174 0258 07F5F243 		add	r3, r7, #30976
 3175 025c 03F14003 		add	r3, r3, #64
 3176 0260 1B68     		ldr	r3, [r3]
 3177 0262 03F10043 		add	r3, r3, #-2147483648
 3178 0266 013B     		subs	r3, r3, #1
 3179 0268 5A00     		lsls	r2, r3, #1
 3180 026a 07F14803 		add	r3, r7, #72
 3181 026e 443B     		subs	r3, r3, #68
 3182 0270 1B68     		ldr	r3, [r3]
 3183 0272 9918     		adds	r1, r3, r2
 3184 0274 07F14803 		add	r3, r7, #72
 3185 0278 383B     		subs	r3, r3, #56
 3186 027a 1A46     		mov	r2, r3
 3187 027c 0B46     		mov	r3, r1
 3188 027e 1B88     		ldrh	r3, [r3]	@ unaligned
 3189 0280 1380     		strh	r3, [r2]	@ unaligned
 190:.\BFS/bfs.h   **** 
 191:.\BFS/bfs.h   ****             #ifdef DEBUG
 192:.\BFS/bfs.h   ****                 printf("End node: (%d,%d)\n",p.x,p.y); // DEBUG
 3190              		.loc 3 192 0
 3191 0282 07F14803 		add	r3, r7, #72
 3192 0286 383B     		subs	r3, r3, #56
 3193 0288 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3194 028a 5AB2     		sxtb	r2, r3
 3195 028c 07F14803 		add	r3, r7, #72
 3196 0290 383B     		subs	r3, r3, #56
 3197 0292 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3198 0294 5BB2     		sxtb	r3, r3
 3199 0296 1948     		ldr	r0, .L170+20
 3200 0298 1146     		mov	r1, r2
 3201 029a 1A46     		mov	r2, r3
 3202 029c FFF7FEFF 		bl	printf
 193:.\BFS/bfs.h   ****             #endif
 194:.\BFS/bfs.h   **** 
 195:.\BFS/bfs.h   ****             /* 
 196:.\BFS/bfs.h   ****             * Check to see if the point we found is on a list
 197:.\BFS/bfs.h   ****             * of unvisited points?
 198:.\BFS/bfs.h   ****             */
 199:.\BFS/bfs.h   ****             if (marked_map[p.y][p.x] == UNVISITED) {
 3203              		.loc 3 199 0
 3204 02a0 07F14803 		add	r3, r7, #72
 3205 02a4 383B     		subs	r3, r3, #56
 3206 02a6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3207 02a8 5BB2     		sxtb	r3, r3
 3208 02aa 4C22     		movs	r2, #76
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 69


 3209 02ac 02FB03F2 		mul	r2, r2, r3
 3210 02b0 07F14803 		add	r3, r7, #72
 3211 02b4 403B     		subs	r3, r3, #64
 3212 02b6 1B68     		ldr	r3, [r3]
 3213 02b8 1A44     		add	r2, r2, r3
 3214 02ba 07F14803 		add	r3, r7, #72
 3215 02be 383B     		subs	r3, r3, #56
 3216 02c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3217 02c2 5BB2     		sxtb	r3, r3
 3218 02c4 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3219 02c8 002B     		cmp	r3, #0
 3220 02ca 1BD1     		bne	.L163
 200:.\BFS/bfs.h   ****                 #ifdef DEBUG
 201:.\BFS/bfs.h   ****                     printf("### FOUND PATH ###\n");
 3221              		.loc 3 201 0
 3222 02cc 0C48     		ldr	r0, .L170+24
 3223 02ce FFF7FEFF 		bl	puts
 202:.\BFS/bfs.h   ****                 #endif
 203:.\BFS/bfs.h   ****                 return p;
 3224              		.loc 3 203 0
 3225 02d2 07F14803 		add	r3, r7, #72
 3226 02d6 383B     		subs	r3, r3, #56
 3227 02d8 1B88     		ldrh	r3, [r3]	@ movhi
 3228 02da 07F5F242 		add	r2, r7, #30976
 3229 02de 02F12C02 		add	r2, r2, #44
 3230 02e2 1380     		strh	r3, [r2]	@ movhi
 3231 02e4 5FE1     		b	.L169
 3232              	.L171:
 3233 02e6 00BF     		.align	2
 3234              	.L170:
 3235 02e8 D8000000 		.word	.LC16
 3236 02ec FC000000 		.word	.LC17
 3237 02f0 00000000 		.word	map
 3238 02f4 14010000 		.word	.LC18
 3239 02f8 1C010000 		.word	.LC19
 3240 02fc 24010000 		.word	.LC20
 3241 0300 38010000 		.word	.LC21
 3242              	.L163:
 204:.\BFS/bfs.h   ****             }
 205:.\BFS/bfs.h   **** 
 206:.\BFS/bfs.h   ****             // Check above
 207:.\BFS/bfs.h   ****             checkPath(new_paths,&cnt,concurrent_path,length,(point){.x=p.x,.y=p.y-1});
 3243              		.loc 3 207 0
 3244 0304 07F14803 		add	r3, r7, #72
 3245 0308 383B     		subs	r3, r3, #56
 3246 030a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3247 030c 07F5F242 		add	r2, r7, #30976
 3248 0310 02F13002 		add	r2, r2, #48
 3249 0314 1370     		strb	r3, [r2]
 3250 0316 07F14803 		add	r3, r7, #72
 3251 031a 383B     		subs	r3, r3, #56
 3252 031c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3253 031e DBB2     		uxtb	r3, r3
 3254 0320 013B     		subs	r3, r3, #1
 3255 0322 DBB2     		uxtb	r3, r3
 3256 0324 DBB2     		uxtb	r3, r3
 3257 0326 07F5F242 		add	r2, r7, #30976
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 70


 3258 032a 02F13102 		add	r2, r2, #49
 3259 032e 1370     		strb	r3, [r2]
 3260 0330 07F58961 		add	r1, r7, #1096
 3261 0334 4C39     		subs	r1, r1, #76
 3262 0336 07F14802 		add	r2, r7, #72
 3263 033a 353A     		subs	r2, r2, #53
 3264 033c 07F14803 		add	r3, r7, #72
 3265 0340 443B     		subs	r3, r3, #68
 3266 0342 07F5F240 		add	r0, r7, #30976
 3267 0346 00F13000 		add	r0, r0, #48
 3268 034a 0088     		ldrh	r0, [r0]	@ movhi
 3269 034c ADF80000 		strh	r0, [sp]	@ movhi
 3270 0350 0846     		mov	r0, r1
 3271 0352 1146     		mov	r1, r2
 3272 0354 1A68     		ldr	r2, [r3]
 3273 0356 07F5F243 		add	r3, r7, #30976
 3274 035a 03F14003 		add	r3, r3, #64
 3275 035e 1B68     		ldr	r3, [r3]
 3276 0360 FFF7FEFF 		bl	checkPath
 208:.\BFS/bfs.h   ****             // Check below
 209:.\BFS/bfs.h   ****             checkPath(new_paths,&cnt,concurrent_path,length,(point){.x=p.x,.y=p.y+1});
 3277              		.loc 3 209 0
 3278 0364 07F14803 		add	r3, r7, #72
 3279 0368 383B     		subs	r3, r3, #56
 3280 036a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3281 036c 07F5F242 		add	r2, r7, #30976
 3282 0370 02F13402 		add	r2, r2, #52
 3283 0374 1370     		strb	r3, [r2]
 3284 0376 07F14803 		add	r3, r7, #72
 3285 037a 383B     		subs	r3, r3, #56
 3286 037c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3287 037e DBB2     		uxtb	r3, r3
 3288 0380 0133     		adds	r3, r3, #1
 3289 0382 DBB2     		uxtb	r3, r3
 3290 0384 DBB2     		uxtb	r3, r3
 3291 0386 07F5F242 		add	r2, r7, #30976
 3292 038a 02F13502 		add	r2, r2, #53
 3293 038e 1370     		strb	r3, [r2]
 3294 0390 07F58961 		add	r1, r7, #1096
 3295 0394 4C39     		subs	r1, r1, #76
 3296 0396 07F14802 		add	r2, r7, #72
 3297 039a 353A     		subs	r2, r2, #53
 3298 039c 07F14803 		add	r3, r7, #72
 3299 03a0 443B     		subs	r3, r3, #68
 3300 03a2 07F5F240 		add	r0, r7, #30976
 3301 03a6 00F13400 		add	r0, r0, #52
 3302 03aa 0088     		ldrh	r0, [r0]	@ movhi
 3303 03ac ADF80000 		strh	r0, [sp]	@ movhi
 3304 03b0 0846     		mov	r0, r1
 3305 03b2 1146     		mov	r1, r2
 3306 03b4 1A68     		ldr	r2, [r3]
 3307 03b6 07F5F243 		add	r3, r7, #30976
 3308 03ba 03F14003 		add	r3, r3, #64
 3309 03be 1B68     		ldr	r3, [r3]
 3310 03c0 FFF7FEFF 		bl	checkPath
 210:.\BFS/bfs.h   ****             // Check left
 211:.\BFS/bfs.h   ****             checkPath(new_paths,&cnt,concurrent_path,length,(point){.x=p.x-1,.y=p.y});
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 71


 3311              		.loc 3 211 0
 3312 03c4 07F14803 		add	r3, r7, #72
 3313 03c8 383B     		subs	r3, r3, #56
 3314 03ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3315 03cc DBB2     		uxtb	r3, r3
 3316 03ce 013B     		subs	r3, r3, #1
 3317 03d0 DBB2     		uxtb	r3, r3
 3318 03d2 DBB2     		uxtb	r3, r3
 3319 03d4 07F5F242 		add	r2, r7, #30976
 3320 03d8 02F13802 		add	r2, r2, #56
 3321 03dc 1370     		strb	r3, [r2]
 3322 03de 07F14803 		add	r3, r7, #72
 3323 03e2 383B     		subs	r3, r3, #56
 3324 03e4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3325 03e6 07F5F242 		add	r2, r7, #30976
 3326 03ea 02F13902 		add	r2, r2, #57
 3327 03ee 1370     		strb	r3, [r2]
 3328 03f0 07F58961 		add	r1, r7, #1096
 3329 03f4 4C39     		subs	r1, r1, #76
 3330 03f6 07F14802 		add	r2, r7, #72
 3331 03fa 353A     		subs	r2, r2, #53
 3332 03fc 07F14803 		add	r3, r7, #72
 3333 0400 443B     		subs	r3, r3, #68
 3334 0402 07F5F240 		add	r0, r7, #30976
 3335 0406 00F13800 		add	r0, r0, #56
 3336 040a 0088     		ldrh	r0, [r0]	@ movhi
 3337 040c ADF80000 		strh	r0, [sp]	@ movhi
 3338 0410 0846     		mov	r0, r1
 3339 0412 1146     		mov	r1, r2
 3340 0414 1A68     		ldr	r2, [r3]
 3341 0416 07F5F243 		add	r3, r7, #30976
 3342 041a 03F14003 		add	r3, r3, #64
 3343 041e 1B68     		ldr	r3, [r3]
 3344 0420 FFF7FEFF 		bl	checkPath
 212:.\BFS/bfs.h   ****             // Check right
 213:.\BFS/bfs.h   ****             checkPath(new_paths,&cnt,concurrent_path,length,(point){.x=p.x+1,.y=p.y});
 3345              		.loc 3 213 0
 3346 0424 07F14803 		add	r3, r7, #72
 3347 0428 383B     		subs	r3, r3, #56
 3348 042a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3349 042c DBB2     		uxtb	r3, r3
 3350 042e 0133     		adds	r3, r3, #1
 3351 0430 DBB2     		uxtb	r3, r3
 3352 0432 DBB2     		uxtb	r3, r3
 3353 0434 07F5F242 		add	r2, r7, #30976
 3354 0438 02F13C02 		add	r2, r2, #60
 3355 043c 1370     		strb	r3, [r2]
 3356 043e 07F14803 		add	r3, r7, #72
 3357 0442 383B     		subs	r3, r3, #56
 3358 0444 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3359 0446 07F5F242 		add	r2, r7, #30976
 3360 044a 02F13D02 		add	r2, r2, #61
 3361 044e 1370     		strb	r3, [r2]
 3362 0450 07F58961 		add	r1, r7, #1096
 3363 0454 4C39     		subs	r1, r1, #76
 3364 0456 07F14802 		add	r2, r7, #72
 3365 045a 353A     		subs	r2, r2, #53
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 72


 3366 045c 07F14803 		add	r3, r7, #72
 3367 0460 443B     		subs	r3, r3, #68
 3368 0462 07F5F240 		add	r0, r7, #30976
 3369 0466 00F13C00 		add	r0, r0, #60
 3370 046a 0088     		ldrh	r0, [r0]	@ movhi
 3371 046c ADF80000 		strh	r0, [sp]	@ movhi
 3372 0470 0846     		mov	r0, r1
 3373 0472 1146     		mov	r1, r2
 3374 0474 1A68     		ldr	r2, [r3]
 3375 0476 07F5F243 		add	r3, r7, #30976
 3376 047a 03F14003 		add	r3, r3, #64
 3377 047e 1B68     		ldr	r3, [r3]
 3378 0480 FFF7FEFF 		bl	checkPath
 3379              	.L162:
 3380              	.LBE4:
 169:.\BFS/bfs.h   **** 
 3381              		.loc 3 169 0 discriminator 2
 3382 0484 07F5F243 		add	r3, r7, #30976
 3383 0488 03F14703 		add	r3, r3, #71
 3384 048c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3385 048e 0133     		adds	r3, r3, #1
 3386 0490 07F5F242 		add	r2, r7, #30976
 3387 0494 02F14702 		add	r2, r2, #71
 3388 0498 1370     		strb	r3, [r2]
 3389              	.L160:
 169:.\BFS/bfs.h   **** 
 3390              		.loc 3 169 0 is_stmt 0 discriminator 1
 3391 049a 07F5F243 		add	r3, r7, #30976
 3392 049e 03F14703 		add	r3, r3, #71
 3393 04a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3394 04a4 0E2B     		cmp	r3, #14
 3395 04a6 7FF67FAE 		bls	.L165
 214:.\BFS/bfs.h   **** 
 215:.\BFS/bfs.h   ****         }
 216:.\BFS/bfs.h   **** 
 217:.\BFS/bfs.h   ****         #ifdef DEBUG
 218:.\BFS/bfs.h   ****             printf("### UPDATING PATHS ###\n"); // DEBUG
 3396              		.loc 3 218 0 is_stmt 1
 3397 04aa 4948     		ldr	r0, .L172
 3398 04ac FFF7FEFF 		bl	puts
 219:.\BFS/bfs.h   ****         #endif
 220:.\BFS/bfs.h   **** 
 221:.\BFS/bfs.h   ****         // Take new paths and put them into paths
 222:.\BFS/bfs.h   ****         for (i = 0; i < MAX_NUM_PATHS; i++){
 3399              		.loc 3 222 0
 3400 04b0 0023     		movs	r3, #0
 3401 04b2 07F5F242 		add	r2, r7, #30976
 3402 04b6 02F14702 		add	r2, r2, #71
 3403 04ba 1370     		strb	r3, [r2]
 3404 04bc 53E0     		b	.L166
 3405              	.L167:
 223:.\BFS/bfs.h   ****             #ifdef DEBUG
 224:.\BFS/bfs.h   ****                 printPath(new_paths[i]);
 3406              		.loc 3 224 0 discriminator 3
 3407 04be 07F5F243 		add	r3, r7, #30976
 3408 04c2 03F14703 		add	r3, r3, #71
 3409 04c6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 73


 3410 04c8 07F58963 		add	r3, r7, #1096
 3411 04cc 4C3B     		subs	r3, r3, #76
 3412 04ce 4FF47A71 		mov	r1, #1000
 3413 04d2 01FB02F2 		mul	r2, r1, r2
 3414 04d6 1344     		add	r3, r3, r2
 3415 04d8 1846     		mov	r0, r3
 3416 04da FFF7FEFF 		bl	printPath
 225:.\BFS/bfs.h   ****             #endif
 226:.\BFS/bfs.h   ****             memcpy(paths[i],new_paths[i],MAX_PATH_LENGTH*sizeof(point)); // Copy new_paths to paths
 3417              		.loc 3 226 0 discriminator 3
 3418 04de 07F5F243 		add	r3, r7, #30976
 3419 04e2 03F14703 		add	r3, r3, #71
 3420 04e6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3421 04e8 07F57B53 		add	r3, r7, #16064
 3422 04ec 03F10803 		add	r3, r3, #8
 3423 04f0 343B     		subs	r3, r3, #52
 3424 04f2 4FF47A71 		mov	r1, #1000
 3425 04f6 01FB02F2 		mul	r2, r1, r2
 3426 04fa 9818     		adds	r0, r3, r2
 3427 04fc 07F5F243 		add	r3, r7, #30976
 3428 0500 03F14703 		add	r3, r3, #71
 3429 0504 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3430 0506 07F58963 		add	r3, r7, #1096
 3431 050a 4C3B     		subs	r3, r3, #76
 3432 050c 4FF47A71 		mov	r1, #1000
 3433 0510 01FB02F2 		mul	r2, r1, r2
 3434 0514 1344     		add	r3, r3, r2
 3435 0516 0146     		mov	r1, r0
 3436 0518 1A46     		mov	r2, r3
 3437 051a 4FF47A73 		mov	r3, #1000
 3438 051e 0846     		mov	r0, r1
 3439 0520 1146     		mov	r1, r2
 3440 0522 1A46     		mov	r2, r3
 3441 0524 FFF7FEFF 		bl	memcpy
 227:.\BFS/bfs.h   ****             memset(new_paths[i],EMPTY_VAL,MAX_PATH_LENGTH*sizeof(point)); // Empty new_paths
 3442              		.loc 3 227 0 discriminator 3
 3443 0528 07F5F243 		add	r3, r7, #30976
 3444 052c 03F14703 		add	r3, r3, #71
 3445 0530 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3446 0532 07F58963 		add	r3, r7, #1096
 3447 0536 4C3B     		subs	r3, r3, #76
 3448 0538 4FF47A71 		mov	r1, #1000
 3449 053c 01FB02F2 		mul	r2, r1, r2
 3450 0540 1344     		add	r3, r3, r2
 3451 0542 1846     		mov	r0, r3
 3452 0544 4FF0FF31 		mov	r1, #-1
 3453 0548 4FF47A72 		mov	r2, #1000
 3454 054c FFF7FEFF 		bl	memset
 222:.\BFS/bfs.h   ****             #ifdef DEBUG
 3455              		.loc 3 222 0 discriminator 3
 3456 0550 07F5F243 		add	r3, r7, #30976
 3457 0554 03F14703 		add	r3, r3, #71
 3458 0558 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3459 055a 0133     		adds	r3, r3, #1
 3460 055c 07F5F242 		add	r2, r7, #30976
 3461 0560 02F14702 		add	r2, r2, #71
 3462 0564 1370     		strb	r3, [r2]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 74


 3463              	.L166:
 222:.\BFS/bfs.h   ****             #ifdef DEBUG
 3464              		.loc 3 222 0 is_stmt 0 discriminator 1
 3465 0566 07F5F243 		add	r3, r7, #30976
 3466 056a 03F14703 		add	r3, r3, #71
 3467 056e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3468 0570 0E2B     		cmp	r3, #14
 3469 0572 A4D9     		bls	.L167
 228:.\BFS/bfs.h   ****         }
 229:.\BFS/bfs.h   **** 
 230:.\BFS/bfs.h   ****         #ifdef DEBUG
 231:.\BFS/bfs.h   ****             printf("Number of paths: %d\n",cnt); // DEBUG
 3470              		.loc 3 231 0 is_stmt 1
 3471 0574 07F14803 		add	r3, r7, #72
 3472 0578 353B     		subs	r3, r3, #53
 3473 057a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3474 057c 1548     		ldr	r0, .L172+4
 3475 057e 1946     		mov	r1, r3
 3476 0580 FFF7FEFF 		bl	printf
 232:.\BFS/bfs.h   ****             printMap(map);
 3477              		.loc 3 232 0
 3478 0584 1448     		ldr	r0, .L172+8
 3479 0586 FFF7FEFF 		bl	printMap
 233:.\BFS/bfs.h   ****             blockAndWait(); // DEBUG
 3480              		.loc 3 233 0
 3481 058a FFF7FEFF 		bl	blockAndWait
 234:.\BFS/bfs.h   ****         #endif
 235:.\BFS/bfs.h   **** 
 236:.\BFS/bfs.h   ****         length++;
 3482              		.loc 3 236 0
 3483 058e 07F5F243 		add	r3, r7, #30976
 3484 0592 03F14003 		add	r3, r3, #64
 3485 0596 1B68     		ldr	r3, [r3]
 3486 0598 0133     		adds	r3, r3, #1
 3487 059a 07F5F242 		add	r2, r7, #30976
 3488 059e 02F14002 		add	r2, r2, #64
 3489 05a2 1360     		str	r3, [r2]
 237:.\BFS/bfs.h   **** 
 238:.\BFS/bfs.h   ****     }   
 3490              		.loc 3 238 0
 3491 05a4 ECE5     		b	.L168
 3492              	.L169:
 3493              	.LBB5:
 203:.\BFS/bfs.h   ****             }
 3494              		.loc 3 203 0
 3495 05a6 0023     		movs	r3, #0
 3496 05a8 07F5F242 		add	r2, r7, #30976
 3497 05ac 02F12C02 		add	r2, r2, #44
 3498 05b0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3499 05b2 62F30703 		bfi	r3, r2, #0, #8
 3500 05b6 07F5F242 		add	r2, r7, #30976
 3501 05ba 02F12D02 		add	r2, r2, #45
 3502 05be 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3503 05c0 62F30F23 		bfi	r3, r2, #8, #8
 3504              	.LBE5:
 239:.\BFS/bfs.h   **** }
 3505              		.loc 3 239 0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 75


 3506 05c4 1846     		mov	r0, r3	@ movhi
 3507 05c6 07F5F247 		add	r7, r7, #30976
 3508 05ca 4837     		adds	r7, r7, #72
 3509              		.cfi_def_cfa_offset 8
 3510 05cc BD46     		mov	sp, r7
 3511              		.cfi_def_cfa_register 13
 3512              		@ sp needed
 3513 05ce 80BD     		pop	{r7, pc}
 3514              	.L173:
 3515              		.align	2
 3516              	.L172:
 3517 05d0 4C010000 		.word	.LC22
 3518 05d4 64010000 		.word	.LC23
 3519 05d8 00000000 		.word	map
 3520              		.cfi_endproc
 3521              	.LFE83:
 3522              		.size	BFS_alternate, .-BFS_alternate
 3523              		.section	.text.generateTargetPoints,"ax",%progbits
 3524              		.align	2
 3525              		.global	generateTargetPoints
 3526              		.thumb
 3527              		.thumb_func
 3528              		.type	generateTargetPoints, %function
 3529              	generateTargetPoints:
 3530              	.LFB84:
 3531              		.file 4 ".\\BFS/bfs_allpaths.h"
   1:.\BFS/bfs_allpaths.h **** #ifndef BFS_ALL_H
   2:.\BFS/bfs_allpaths.h **** #define BFS_ALL_H
   3:.\BFS/bfs_allpaths.h **** 
   4:.\BFS/bfs_allpaths.h **** #include <stdlib.h>
   5:.\BFS/bfs_allpaths.h **** #include <string.h>
   6:.\BFS/bfs_allpaths.h **** #include <stdint.h>
   7:.\BFS/bfs_allpaths.h **** #include "bfs.h"
   8:.\BFS/bfs_allpaths.h **** 
   9:.\BFS/bfs_allpaths.h **** // #define DEBUG_ALLPATH
  10:.\BFS/bfs_allpaths.h **** // #define DISPLAY_ALLPATH
  11:.\BFS/bfs_allpaths.h **** 
  12:.\BFS/bfs_allpaths.h **** int generateTargetPoints(point *targets){
 3532              		.loc 4 12 0
 3533              		.cfi_startproc
 3534              		@ args = 0, pretend = 0, frame = 16
 3535              		@ frame_needed = 1, uses_anonymous_args = 0
 3536              		@ link register save eliminated.
 3537 0000 80B4     		push	{r7}
 3538              		.cfi_def_cfa_offset 4
 3539              		.cfi_offset 7, -4
 3540 0002 85B0     		sub	sp, sp, #20
 3541              		.cfi_def_cfa_offset 24
 3542 0004 00AF     		add	r7, sp, #0
 3543              		.cfi_def_cfa_register 7
 3544 0006 7860     		str	r0, [r7, #4]
  13:.\BFS/bfs_allpaths.h **** 
  14:.\BFS/bfs_allpaths.h ****     uint8_t i, j;
  15:.\BFS/bfs_allpaths.h ****     uint16_t size = 0;
 3545              		.loc 4 15 0
 3546 0008 0023     		movs	r3, #0
 3547 000a BB81     		strh	r3, [r7, #12]	@ movhi
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 76


  16:.\BFS/bfs_allpaths.h **** 
  17:.\BFS/bfs_allpaths.h ****     for (i = 0; i < MAP_ROW; i++){
 3548              		.loc 4 17 0
 3549 000c 0023     		movs	r3, #0
 3550 000e FB73     		strb	r3, [r7, #15]
 3551 0010 23E0     		b	.L175
 3552              	.L179:
  18:.\BFS/bfs_allpaths.h ****         for (j = 0; j < MAP_COL; j++){
 3553              		.loc 4 18 0
 3554 0012 0023     		movs	r3, #0
 3555 0014 BB73     		strb	r3, [r7, #14]
 3556 0016 1AE0     		b	.L176
 3557              	.L178:
  19:.\BFS/bfs_allpaths.h ****             if (map[i][j] == UNVISITED){
 3558              		.loc 4 19 0
 3559 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3560 001a B97B     		ldrb	r1, [r7, #14]	@ zero_extendqisi2
 3561 001c 1948     		ldr	r0, .L181
 3562 001e 1346     		mov	r3, r2
 3563 0020 DB00     		lsls	r3, r3, #3
 3564 0022 1344     		add	r3, r3, r2
 3565 0024 5B00     		lsls	r3, r3, #1
 3566 0026 1344     		add	r3, r3, r2
 3567 0028 0B44     		add	r3, r3, r1
 3568 002a 50F82330 		ldr	r3, [r0, r3, lsl #2]
 3569 002e 002B     		cmp	r3, #0
 3570 0030 0AD1     		bne	.L177
  20:.\BFS/bfs_allpaths.h ****                 targets[size] = (point){.x=j,.y=i};
 3571              		.loc 4 20 0
 3572 0032 BB89     		ldrh	r3, [r7, #12]
 3573 0034 5B00     		lsls	r3, r3, #1
 3574 0036 7A68     		ldr	r2, [r7, #4]
 3575 0038 1344     		add	r3, r3, r2
 3576 003a B97B     		ldrb	r1, [r7, #14]	@ zero_extendqisi2
 3577 003c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3578 003e 1970     		strb	r1, [r3]
 3579 0040 5A70     		strb	r2, [r3, #1]
  21:.\BFS/bfs_allpaths.h ****                 size++;
 3580              		.loc 4 21 0
 3581 0042 BB89     		ldrh	r3, [r7, #12]
 3582 0044 0133     		adds	r3, r3, #1
 3583 0046 BB81     		strh	r3, [r7, #12]	@ movhi
 3584              	.L177:
  18:.\BFS/bfs_allpaths.h ****             if (map[i][j] == UNVISITED){
 3585              		.loc 4 18 0 discriminator 2
 3586 0048 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3587 004a 0133     		adds	r3, r3, #1
 3588 004c BB73     		strb	r3, [r7, #14]
 3589              	.L176:
  18:.\BFS/bfs_allpaths.h ****             if (map[i][j] == UNVISITED){
 3590              		.loc 4 18 0 is_stmt 0 discriminator 1
 3591 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3592 0050 122B     		cmp	r3, #18
 3593 0052 E1D9     		bls	.L178
  17:.\BFS/bfs_allpaths.h ****         for (j = 0; j < MAP_COL; j++){
 3594              		.loc 4 17 0 is_stmt 1 discriminator 2
 3595 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 77


 3596 0056 0133     		adds	r3, r3, #1
 3597 0058 FB73     		strb	r3, [r7, #15]
 3598              	.L175:
  17:.\BFS/bfs_allpaths.h ****         for (j = 0; j < MAP_COL; j++){
 3599              		.loc 4 17 0 is_stmt 0 discriminator 1
 3600 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3601 005c 0E2B     		cmp	r3, #14
 3602 005e D8D9     		bls	.L179
  22:.\BFS/bfs_allpaths.h ****             }
  23:.\BFS/bfs_allpaths.h ****         }
  24:.\BFS/bfs_allpaths.h ****     }
  25:.\BFS/bfs_allpaths.h **** 
  26:.\BFS/bfs_allpaths.h ****     targets[size+1] = (point){.x=EMPTY_VAL,.y=EMPTY_VAL};
 3603              		.loc 4 26 0 is_stmt 1
 3604 0060 BB89     		ldrh	r3, [r7, #12]
 3605 0062 0133     		adds	r3, r3, #1
 3606 0064 5B00     		lsls	r3, r3, #1
 3607 0066 7A68     		ldr	r2, [r7, #4]
 3608 0068 1344     		add	r3, r3, r2
 3609 006a 0749     		ldr	r1, .L181+4
 3610 006c 1A46     		mov	r2, r3
 3611 006e 0B46     		mov	r3, r1
 3612 0070 1B88     		ldrh	r3, [r3]	@ unaligned
 3613 0072 1380     		strh	r3, [r2]	@ unaligned
  27:.\BFS/bfs_allpaths.h **** 
  28:.\BFS/bfs_allpaths.h ****     return size;
 3614              		.loc 4 28 0
 3615 0074 BB89     		ldrh	r3, [r7, #12]
  29:.\BFS/bfs_allpaths.h **** 
  30:.\BFS/bfs_allpaths.h **** }
 3616              		.loc 4 30 0
 3617 0076 1846     		mov	r0, r3
 3618 0078 1437     		adds	r7, r7, #20
 3619              		.cfi_def_cfa_offset 4
 3620 007a BD46     		mov	sp, r7
 3621              		.cfi_def_cfa_register 13
 3622              		@ sp needed
 3623 007c 5DF8047B 		ldr	r7, [sp], #4
 3624              		.cfi_restore 7
 3625              		.cfi_def_cfa_offset 0
 3626 0080 7047     		bx	lr
 3627              	.L182:
 3628 0082 00BF     		.align	2
 3629              	.L181:
 3630 0084 00000000 		.word	map
 3631 0088 C0000000 		.word	.LC0
 3632              		.cfi_endproc
 3633              	.LFE84:
 3634              		.size	generateTargetPoints, .-generateTargetPoints
 3635              		.section	.text.getNextTarget,"ax",%progbits
 3636              		.align	2
 3637              		.global	getNextTarget
 3638              		.thumb
 3639              		.thumb_func
 3640              		.type	getNextTarget, %function
 3641              	getNextTarget:
 3642              	.LFB85:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 78


  31:.\BFS/bfs_allpaths.h **** 
  32:.\BFS/bfs_allpaths.h **** /* Currently deprecated */
  33:.\BFS/bfs_allpaths.h **** // /* Update and remove some targets if they have been traversed */
  34:.\BFS/bfs_allpaths.h **** // int updateTargets(int map[MAP_ROW][MAP_COL], point *targets, int start_index){
  35:.\BFS/bfs_allpaths.h **** 
  36:.\BFS/bfs_allpaths.h **** //     int i = start_index;
  37:.\BFS/bfs_allpaths.h **** 
  38:.\BFS/bfs_allpaths.h **** //     while (TRUE){
  39:.\BFS/bfs_allpaths.h **** //         if (targets[i].x == EMPTY_VAL && targets[i].y == EMPTY_VAL) break;
  40:.\BFS/bfs_allpaths.h **** 
  41:.\BFS/bfs_allpaths.h **** //         if (map[targets[i].y][targets[i].x] == FINAL_PATH
  42:.\BFS/bfs_allpaths.h **** //         || map[targets[i].y][targets[i].x] == START_OR_END){
  43:.\BFS/bfs_allpaths.h **** //             // Remove a target
  44:.\BFS/bfs_allpaths.h **** //             shiftArrayLeft(targets,len(targets),1);
  45:.\BFS/bfs_allpaths.h **** //             continue;
  46:.\BFS/bfs_allpaths.h **** //         }
  47:.\BFS/bfs_allpaths.h **** 
  48:.\BFS/bfs_allpaths.h **** //         i++;
  49:.\BFS/bfs_allpaths.h **** //     }
  50:.\BFS/bfs_allpaths.h **** 
  51:.\BFS/bfs_allpaths.h **** //     return i;
  52:.\BFS/bfs_allpaths.h **** // }
  53:.\BFS/bfs_allpaths.h **** 
  54:.\BFS/bfs_allpaths.h **** /* Get the next point from a pre-generated pool */
  55:.\BFS/bfs_allpaths.h **** point getNextTarget(int map[MAP_ROW][MAP_COL], point * targets){
 3643              		.loc 4 55 0
 3644              		.cfi_startproc
 3645              		@ args = 0, pretend = 0, frame = 16
 3646              		@ frame_needed = 1, uses_anonymous_args = 0
 3647              		@ link register save eliminated.
 3648 0000 80B4     		push	{r7}
 3649              		.cfi_def_cfa_offset 4
 3650              		.cfi_offset 7, -4
 3651 0002 85B0     		sub	sp, sp, #20
 3652              		.cfi_def_cfa_offset 24
 3653 0004 00AF     		add	r7, sp, #0
 3654              		.cfi_def_cfa_register 7
 3655 0006 7860     		str	r0, [r7, #4]
 3656 0008 3960     		str	r1, [r7]
  56:.\BFS/bfs_allpaths.h **** 
  57:.\BFS/bfs_allpaths.h ****     uint16_t i = 0;
 3657              		.loc 4 57 0
 3658 000a 0023     		movs	r3, #0
 3659 000c FB81     		strh	r3, [r7, #14]	@ movhi
 3660              	.L188:
  58:.\BFS/bfs_allpaths.h **** 
  59:.\BFS/bfs_allpaths.h ****     while (TRUE){
  60:.\BFS/bfs_allpaths.h **** 
  61:.\BFS/bfs_allpaths.h ****         if (targets[i].x == EMPTY_VAL && targets[i].y == EMPTY_VAL) break;
 3661              		.loc 4 61 0
 3662 000e FB89     		ldrh	r3, [r7, #14]
 3663 0010 5B00     		lsls	r3, r3, #1
 3664 0012 3A68     		ldr	r2, [r7]
 3665 0014 1344     		add	r3, r3, r2
 3666 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3667 0018 5BB2     		sxtb	r3, r3
 3668 001a B3F1FF3F 		cmp	r3, #-1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 79


 3669 001e 0FD1     		bne	.L184
 3670              		.loc 4 61 0 is_stmt 0 discriminator 1
 3671 0020 FB89     		ldrh	r3, [r7, #14]
 3672 0022 5B00     		lsls	r3, r3, #1
 3673 0024 3A68     		ldr	r2, [r7]
 3674 0026 1344     		add	r3, r3, r2
 3675 0028 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3676 002a 5BB2     		sxtb	r3, r3
 3677 002c B3F1FF3F 		cmp	r3, #-1
 3678 0030 06D1     		bne	.L184
 3679              		.loc 4 61 0
 3680 0032 00BF     		nop
  62:.\BFS/bfs_allpaths.h **** 
  63:.\BFS/bfs_allpaths.h ****         if (map[targets[i].y][targets[i].x] == UNVISITED){
  64:.\BFS/bfs_allpaths.h ****             return targets[i];
  65:.\BFS/bfs_allpaths.h ****         }
  66:.\BFS/bfs_allpaths.h **** 
  67:.\BFS/bfs_allpaths.h ****         i++;
  68:.\BFS/bfs_allpaths.h ****     }
  69:.\BFS/bfs_allpaths.h **** 
  70:.\BFS/bfs_allpaths.h ****     return (point){.x = EMPTY_VAL, .y = EMPTY_VAL};
 3681              		.loc 4 70 0 is_stmt 1
 3682 0034 1A4A     		ldr	r2, .L189
 3683 0036 07F10C03 		add	r3, r7, #12
 3684 003a 1288     		ldrh	r2, [r2]	@ unaligned
 3685 003c 1A80     		strh	r2, [r3]	@ unaligned
 3686 003e 21E0     		b	.L187
 3687              	.L184:
  63:.\BFS/bfs_allpaths.h ****             return targets[i];
 3688              		.loc 4 63 0
 3689 0040 FB89     		ldrh	r3, [r7, #14]
 3690 0042 5B00     		lsls	r3, r3, #1
 3691 0044 3A68     		ldr	r2, [r7]
 3692 0046 1344     		add	r3, r3, r2
 3693 0048 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3694 004a 5BB2     		sxtb	r3, r3
 3695 004c 4C22     		movs	r2, #76
 3696 004e 02FB03F3 		mul	r3, r2, r3
 3697 0052 7A68     		ldr	r2, [r7, #4]
 3698 0054 1344     		add	r3, r3, r2
 3699 0056 FA89     		ldrh	r2, [r7, #14]
 3700 0058 5200     		lsls	r2, r2, #1
 3701 005a 3968     		ldr	r1, [r7]
 3702 005c 0A44     		add	r2, r2, r1
 3703 005e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3704 0060 52B2     		sxtb	r2, r2
 3705 0062 53F82230 		ldr	r3, [r3, r2, lsl #2]
 3706 0066 002B     		cmp	r3, #0
 3707 0068 08D1     		bne	.L186
  64:.\BFS/bfs_allpaths.h ****         }
 3708              		.loc 4 64 0
 3709 006a FB89     		ldrh	r3, [r7, #14]
 3710 006c 5B00     		lsls	r3, r3, #1
 3711 006e 3A68     		ldr	r2, [r7]
 3712 0070 1A44     		add	r2, r2, r3
 3713 0072 07F10C03 		add	r3, r7, #12
 3714 0076 1288     		ldrh	r2, [r2]	@ unaligned
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 80


 3715 0078 1A80     		strh	r2, [r3]	@ unaligned
 3716 007a 03E0     		b	.L187
 3717              	.L186:
  67:.\BFS/bfs_allpaths.h ****     }
 3718              		.loc 4 67 0
 3719 007c FB89     		ldrh	r3, [r7, #14]
 3720 007e 0133     		adds	r3, r3, #1
 3721 0080 FB81     		strh	r3, [r7, #14]	@ movhi
  68:.\BFS/bfs_allpaths.h **** 
 3722              		.loc 4 68 0
 3723 0082 C4E7     		b	.L188
 3724              	.L187:
 3725 0084 0023     		movs	r3, #0
 3726 0086 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 3727 0088 62F30703 		bfi	r3, r2, #0, #8
 3728 008c 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 3729 008e 62F30F23 		bfi	r3, r2, #8, #8
  71:.\BFS/bfs_allpaths.h **** 
  72:.\BFS/bfs_allpaths.h **** }
 3730              		.loc 4 72 0
 3731 0092 1846     		mov	r0, r3	@ movhi
 3732 0094 1437     		adds	r7, r7, #20
 3733              		.cfi_def_cfa_offset 4
 3734 0096 BD46     		mov	sp, r7
 3735              		.cfi_def_cfa_register 13
 3736              		@ sp needed
 3737 0098 5DF8047B 		ldr	r7, [sp], #4
 3738              		.cfi_restore 7
 3739              		.cfi_def_cfa_offset 0
 3740 009c 7047     		bx	lr
 3741              	.L190:
 3742 009e 00BF     		.align	2
 3743              	.L189:
 3744 00a0 C0000000 		.word	.LC0
 3745              		.cfi_endproc
 3746              	.LFE85:
 3747              		.size	getNextTarget, .-getNextTarget
 3748              		.section	.text.filterPoints,"ax",%progbits
 3749              		.align	2
 3750              		.global	filterPoints
 3751              		.thumb
 3752              		.thumb_func
 3753              		.type	filterPoints, %function
 3754              	filterPoints:
 3755              	.LFB86:
  73:.\BFS/bfs_allpaths.h **** 
  74:.\BFS/bfs_allpaths.h **** /* Just a simple filter to remove garbage values */
  75:.\BFS/bfs_allpaths.h **** void filterPoints(point * points){
 3756              		.loc 4 75 0
 3757              		.cfi_startproc
 3758              		@ args = 0, pretend = 0, frame = 16
 3759              		@ frame_needed = 1, uses_anonymous_args = 0
 3760              		@ link register save eliminated.
 3761 0000 80B4     		push	{r7}
 3762              		.cfi_def_cfa_offset 4
 3763              		.cfi_offset 7, -4
 3764 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 81


 3765              		.cfi_def_cfa_offset 24
 3766 0004 00AF     		add	r7, sp, #0
 3767              		.cfi_def_cfa_register 7
 3768 0006 7860     		str	r0, [r7, #4]
  76:.\BFS/bfs_allpaths.h ****     
  77:.\BFS/bfs_allpaths.h ****     uint16_t i = 0;
 3769              		.loc 4 77 0
 3770 0008 0023     		movs	r3, #0
 3771 000a FB81     		strh	r3, [r7, #14]	@ movhi
 3772              	.L196:
  78:.\BFS/bfs_allpaths.h ****     
  79:.\BFS/bfs_allpaths.h ****     while (TRUE){
  80:.\BFS/bfs_allpaths.h **** 
  81:.\BFS/bfs_allpaths.h ****         if (points[i].x >= MAP_COL || points[i].y >= MAP_ROW
 3773              		.loc 4 81 0
 3774 000c FB89     		ldrh	r3, [r7, #14]
 3775 000e 5B00     		lsls	r3, r3, #1
 3776 0010 7A68     		ldr	r2, [r7, #4]
 3777 0012 1344     		add	r3, r3, r2
 3778 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3779 0016 5BB2     		sxtb	r3, r3
 3780 0018 122B     		cmp	r3, #18
 3781 001a 17DC     		bgt	.L192
 3782              		.loc 4 81 0 is_stmt 0 discriminator 1
 3783 001c FB89     		ldrh	r3, [r7, #14]
 3784 001e 5B00     		lsls	r3, r3, #1
 3785 0020 7A68     		ldr	r2, [r7, #4]
 3786 0022 1344     		add	r3, r3, r2
 3787 0024 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3788 0026 5BB2     		sxtb	r3, r3
 3789 0028 0E2B     		cmp	r3, #14
 3790 002a 0FDC     		bgt	.L192
  82:.\BFS/bfs_allpaths.h ****         || points[i].x <= 0 || points[i].y <= 0){
 3791              		.loc 4 82 0 is_stmt 1
 3792 002c FB89     		ldrh	r3, [r7, #14]
 3793 002e 5B00     		lsls	r3, r3, #1
 3794 0030 7A68     		ldr	r2, [r7, #4]
 3795 0032 1344     		add	r3, r3, r2
 3796 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3797 0036 5BB2     		sxtb	r3, r3
 3798 0038 002B     		cmp	r3, #0
 3799 003a 07DD     		ble	.L192
 3800              		.loc 4 82 0 is_stmt 0 discriminator 1
 3801 003c FB89     		ldrh	r3, [r7, #14]
 3802 003e 5B00     		lsls	r3, r3, #1
 3803 0040 7A68     		ldr	r2, [r7, #4]
 3804 0042 1344     		add	r3, r3, r2
 3805 0044 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3806 0046 5BB2     		sxtb	r3, r3
 3807 0048 002B     		cmp	r3, #0
 3808 004a 0CDC     		bgt	.L193
 3809              	.L192:
  83:.\BFS/bfs_allpaths.h ****             points[i].x = EMPTY_VAL; 
 3810              		.loc 4 83 0 is_stmt 1
 3811 004c FB89     		ldrh	r3, [r7, #14]
 3812 004e 5B00     		lsls	r3, r3, #1
 3813 0050 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 82


 3814 0052 1344     		add	r3, r3, r2
 3815 0054 FF22     		movs	r2, #255
 3816 0056 1A70     		strb	r2, [r3]
  84:.\BFS/bfs_allpaths.h ****             points[i].y = EMPTY_VAL;
 3817              		.loc 4 84 0
 3818 0058 FB89     		ldrh	r3, [r7, #14]
 3819 005a 5B00     		lsls	r3, r3, #1
 3820 005c 7A68     		ldr	r2, [r7, #4]
 3821 005e 1344     		add	r3, r3, r2
 3822 0060 FF22     		movs	r2, #255
 3823 0062 5A70     		strb	r2, [r3, #1]
  85:.\BFS/bfs_allpaths.h ****             break;
 3824              		.loc 4 85 0
 3825 0064 16E0     		b	.L191
 3826              	.L193:
  86:.\BFS/bfs_allpaths.h ****         }
  87:.\BFS/bfs_allpaths.h **** 
  88:.\BFS/bfs_allpaths.h ****         if (points[i].x == EMPTY_VAL && points[i].y == EMPTY_VAL) break;
 3827              		.loc 4 88 0
 3828 0066 FB89     		ldrh	r3, [r7, #14]
 3829 0068 5B00     		lsls	r3, r3, #1
 3830 006a 7A68     		ldr	r2, [r7, #4]
 3831 006c 1344     		add	r3, r3, r2
 3832 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3833 0070 5BB2     		sxtb	r3, r3
 3834 0072 B3F1FF3F 		cmp	r3, #-1
 3835 0076 09D1     		bne	.L195
 3836              		.loc 4 88 0 is_stmt 0 discriminator 1
 3837 0078 FB89     		ldrh	r3, [r7, #14]
 3838 007a 5B00     		lsls	r3, r3, #1
 3839 007c 7A68     		ldr	r2, [r7, #4]
 3840 007e 1344     		add	r3, r3, r2
 3841 0080 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3842 0082 5BB2     		sxtb	r3, r3
 3843 0084 B3F1FF3F 		cmp	r3, #-1
 3844 0088 00D1     		bne	.L195
 3845              		.loc 4 88 0
 3846 008a 03E0     		b	.L191
 3847              	.L195:
  89:.\BFS/bfs_allpaths.h **** 
  90:.\BFS/bfs_allpaths.h ****         i++;
 3848              		.loc 4 90 0 is_stmt 1
 3849 008c FB89     		ldrh	r3, [r7, #14]
 3850 008e 0133     		adds	r3, r3, #1
 3851 0090 FB81     		strh	r3, [r7, #14]	@ movhi
  91:.\BFS/bfs_allpaths.h ****     }
 3852              		.loc 4 91 0
 3853 0092 BBE7     		b	.L196
 3854              	.L191:
  92:.\BFS/bfs_allpaths.h **** }
 3855              		.loc 4 92 0
 3856 0094 1437     		adds	r7, r7, #20
 3857              		.cfi_def_cfa_offset 4
 3858 0096 BD46     		mov	sp, r7
 3859              		.cfi_def_cfa_register 13
 3860              		@ sp needed
 3861 0098 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 83


 3862              		.cfi_restore 7
 3863              		.cfi_def_cfa_offset 0
 3864 009c 7047     		bx	lr
 3865              		.cfi_endproc
 3866              	.LFE86:
 3867              		.size	filterPoints, .-filterPoints
 3868 009e 00BF     		.section	.text.getAllPath,"ax",%progbits
 3869              		.align	2
 3870              		.global	getAllPath
 3871              		.thumb
 3872              		.thumb_func
 3873              		.type	getAllPath, %function
 3874              	getAllPath:
 3875              	.LFB87:
  93:.\BFS/bfs_allpaths.h **** 
  94:.\BFS/bfs_allpaths.h **** /* BFS to go everywhere */
  95:.\BFS/bfs_allpaths.h **** /*
  96:.\BFS/bfs_allpaths.h **** * Leverages an alternate version of BFS, which goes until it hits an unvisited point.
  97:.\BFS/bfs_allpaths.h **** * This algorithm then repeats BFS until there are no unvisited points left in the map.
  98:.\BFS/bfs_allpaths.h **** */
  99:.\BFS/bfs_allpaths.h **** void getAllPath(point start, point allPath[MAX_PATH_LENGTH]){
 3876              		.loc 4 99 0
 3877              		.cfi_startproc
 3878              		@ args = 0, pretend = 0, frame = 3304
 3879              		@ frame_needed = 1, uses_anonymous_args = 0
 3880 0000 90B5     		push	{r4, r7, lr}
 3881              		.cfi_def_cfa_offset 12
 3882              		.cfi_offset 4, -12
 3883              		.cfi_offset 7, -8
 3884              		.cfi_offset 14, -4
 3885 0002 ADF6EC4D 		subw	sp, sp, #3308
 3886              		.cfi_def_cfa_offset 3320
 3887 0006 00AF     		add	r7, sp, #0
 3888              		.cfi_def_cfa_register 7
 3889 0008 3B1D     		adds	r3, r7, #4
 3890 000a 1880     		strh	r0, [r3]	@ movhi
 3891 000c 3B46     		mov	r3, r7
 3892 000e 1960     		str	r1, [r3]
 100:.\BFS/bfs_allpaths.h **** 
 101:.\BFS/bfs_allpaths.h ****     int i;
 102:.\BFS/bfs_allpaths.h **** 
 103:.\BFS/bfs_allpaths.h ****     // blockAndWait();
 104:.\BFS/bfs_allpaths.h **** 
 105:.\BFS/bfs_allpaths.h ****     #ifdef DEBUG_ALLPATH
 106:.\BFS/bfs_allpaths.h ****         printf("## Plotting paths through map ##\n");
 107:.\BFS/bfs_allpaths.h ****     #endif
 108:.\BFS/bfs_allpaths.h **** 
 109:.\BFS/bfs_allpaths.h ****     int marked_map[MAP_ROW][MAP_COL];
 110:.\BFS/bfs_allpaths.h ****     int clean_map[MAP_ROW][MAP_COL];
 111:.\BFS/bfs_allpaths.h **** 
 112:.\BFS/bfs_allpaths.h ****     /* Create copies of map */
 113:.\BFS/bfs_allpaths.h ****     for (i = 0; i < MAP_ROW; i++){
 3893              		.loc 4 113 0
 3894 0010 0023     		movs	r3, #0
 3895 0012 C7F8E43C 		str	r3, [r7, #3300]
 3896 0016 30E0     		b	.L198
 3897              	.L199:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 84


 114:.\BFS/bfs_allpaths.h ****         memcpy(marked_map[i],map[i],sizeof(int)*MAP_COL);
 3898              		.loc 4 114 0 discriminator 3
 3899 0018 07F66C02 		addw	r2, r7, #2156
 3900 001c D7F8E43C 		ldr	r3, [r7, #3300]
 3901 0020 4C21     		movs	r1, #76
 3902 0022 01FB03F3 		mul	r3, r1, r3
 3903 0026 D118     		adds	r1, r2, r3
 3904 0028 D7F8E43C 		ldr	r3, [r7, #3300]
 3905 002c 4C22     		movs	r2, #76
 3906 002e 02FB03F3 		mul	r3, r2, r3
 3907 0032 4D4A     		ldr	r2, .L204
 3908 0034 1344     		add	r3, r3, r2
 3909 0036 1A46     		mov	r2, r3
 3910 0038 4C23     		movs	r3, #76
 3911 003a 0846     		mov	r0, r1
 3912 003c 1146     		mov	r1, r2
 3913 003e 1A46     		mov	r2, r3
 3914 0040 FFF7FEFF 		bl	memcpy
 115:.\BFS/bfs_allpaths.h ****         memcpy(clean_map[i],map[i],sizeof(int)*MAP_COL);
 3915              		.loc 4 115 0 discriminator 3
 3916 0044 07F57E72 		add	r2, r7, #1016
 3917 0048 D7F8E43C 		ldr	r3, [r7, #3300]
 3918 004c 4C21     		movs	r1, #76
 3919 004e 01FB03F3 		mul	r3, r1, r3
 3920 0052 D118     		adds	r1, r2, r3
 3921 0054 D7F8E43C 		ldr	r3, [r7, #3300]
 3922 0058 4C22     		movs	r2, #76
 3923 005a 02FB03F3 		mul	r3, r2, r3
 3924 005e 424A     		ldr	r2, .L204
 3925 0060 1344     		add	r3, r3, r2
 3926 0062 1A46     		mov	r2, r3
 3927 0064 4C23     		movs	r3, #76
 3928 0066 0846     		mov	r0, r1
 3929 0068 1146     		mov	r1, r2
 3930 006a 1A46     		mov	r2, r3
 3931 006c FFF7FEFF 		bl	memcpy
 113:.\BFS/bfs_allpaths.h ****         memcpy(marked_map[i],map[i],sizeof(int)*MAP_COL);
 3932              		.loc 4 113 0 discriminator 3
 3933 0070 D7F8E43C 		ldr	r3, [r7, #3300]
 3934 0074 0133     		adds	r3, r3, #1
 3935 0076 C7F8E43C 		str	r3, [r7, #3300]
 3936              	.L198:
 113:.\BFS/bfs_allpaths.h ****         memcpy(marked_map[i],map[i],sizeof(int)*MAP_COL);
 3937              		.loc 4 113 0 is_stmt 0 discriminator 1
 3938 007a D7F8E43C 		ldr	r3, [r7, #3300]
 3939 007e 0E2B     		cmp	r3, #14
 3940 0080 CADD     		ble	.L199
 116:.\BFS/bfs_allpaths.h ****     }
 117:.\BFS/bfs_allpaths.h **** 
 118:.\BFS/bfs_allpaths.h ****     /* Iterate through all points and update the path */
 119:.\BFS/bfs_allpaths.h ****     int k;
 120:.\BFS/bfs_allpaths.h ****     point curr_point = start;//getNextTarget(marked_map,targets);
 3941              		.loc 4 120 0 is_stmt 1
 3942 0082 07F57D73 		add	r3, r7, #1012
 3943 0086 3A1D     		adds	r2, r7, #4
 3944 0088 1288     		ldrh	r2, [r2]	@ movhi
 3945 008a 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 85


 121:.\BFS/bfs_allpaths.h ****     point next_point;
 122:.\BFS/bfs_allpaths.h ****     markPointAsVisited(curr_point);
 3946              		.loc 4 122 0
 3947 008c 07F57D73 		add	r3, r7, #1012
 3948 0090 1868     		ldr	r0, [r3]
 3949 0092 FFF7FEFF 		bl	markPointAsVisited
 123:.\BFS/bfs_allpaths.h **** 
 124:.\BFS/bfs_allpaths.h ****     while (hasUnvisitedPoints(marked_map)) {
 3950              		.loc 4 124 0
 3951 0096 5AE0     		b	.L200
 3952              	.L203:
 3953              	.LBB6:
 125:.\BFS/bfs_allpaths.h **** 
 126:.\BFS/bfs_allpaths.h ****         point path[MAX_PATH_LENGTH] = { 0 };
 3954              		.loc 4 126 0
 3955 0098 07F10803 		add	r3, r7, #8
 3956 009c 1A46     		mov	r2, r3
 3957 009e 4FF47A73 		mov	r3, #1000
 3958 00a2 1046     		mov	r0, r2
 3959 00a4 0021     		movs	r1, #0
 3960 00a6 1A46     		mov	r2, r3
 3961 00a8 FFF7FEFF 		bl	memset
 127:.\BFS/bfs_allpaths.h ****         next_point = BFS_alternate(curr_point, marked_map, path);
 3962              		.loc 4 127 0
 3963 00ac 07F57D73 		add	r3, r7, #1012
 3964 00b0 07F66C01 		addw	r1, r7, #2156
 3965 00b4 07F10802 		add	r2, r7, #8
 3966 00b8 1868     		ldr	r0, [r3]
 3967 00ba FFF7FEFF 		bl	BFS_alternate
 3968 00be 0246     		mov	r2, r0	@ movhi
 3969 00c0 07F57C73 		add	r3, r7, #1008
 3970 00c4 1A80     		strh	r2, [r3]	@ movhi
 128:.\BFS/bfs_allpaths.h **** 
 129:.\BFS/bfs_allpaths.h ****         #ifdef DEBUG_ALLPATH
 130:.\BFS/bfs_allpaths.h ****             printf("### Map w/ (%d,%d)->(%d,%d) ###\n",curr_point.x,curr_point.y,next_point.x,next_
 131:.\BFS/bfs_allpaths.h ****             updateMapWithPath(map,path,len(path));
 132:.\BFS/bfs_allpaths.h ****             printMap(map);
 133:.\BFS/bfs_allpaths.h ****         #endif
 134:.\BFS/bfs_allpaths.h **** 
 135:.\BFS/bfs_allpaths.h ****         curr_point = next_point; // update current
 3971              		.loc 4 135 0
 3972 00c6 07F57D73 		add	r3, r7, #1012
 3973 00ca 07F57C72 		add	r2, r7, #1008
 3974 00ce 1288     		ldrh	r2, [r2]	@ movhi
 3975 00d0 1A80     		strh	r2, [r3]	@ movhi
 136:.\BFS/bfs_allpaths.h **** 
 137:.\BFS/bfs_allpaths.h ****         /* Clean up map from BFS */
 138:.\BFS/bfs_allpaths.h ****         for (k = 0; k < MAP_ROW; k++){
 3976              		.loc 4 138 0
 3977 00d2 0023     		movs	r3, #0
 3978 00d4 C7F8E03C 		str	r3, [r7, #3296]
 3979 00d8 1BE0     		b	.L201
 3980              	.L202:
 139:.\BFS/bfs_allpaths.h ****             memcpy(map[k], clean_map[k], sizeof(int)*MAP_COL);
 3981              		.loc 4 139 0 discriminator 3
 3982 00da D7F8E03C 		ldr	r3, [r7, #3296]
 3983 00de 4C22     		movs	r2, #76
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 86


 3984 00e0 02FB03F3 		mul	r3, r2, r3
 3985 00e4 204A     		ldr	r2, .L204
 3986 00e6 9818     		adds	r0, r3, r2
 3987 00e8 07F57E72 		add	r2, r7, #1016
 3988 00ec D7F8E03C 		ldr	r3, [r7, #3296]
 3989 00f0 4C21     		movs	r1, #76
 3990 00f2 01FB03F3 		mul	r3, r1, r3
 3991 00f6 1344     		add	r3, r3, r2
 3992 00f8 0146     		mov	r1, r0
 3993 00fa 1A46     		mov	r2, r3
 3994 00fc 4C23     		movs	r3, #76
 3995 00fe 0846     		mov	r0, r1
 3996 0100 1146     		mov	r1, r2
 3997 0102 1A46     		mov	r2, r3
 3998 0104 FFF7FEFF 		bl	memcpy
 138:.\BFS/bfs_allpaths.h ****             memcpy(map[k], clean_map[k], sizeof(int)*MAP_COL);
 3999              		.loc 4 138 0 discriminator 3
 4000 0108 D7F8E03C 		ldr	r3, [r7, #3296]
 4001 010c 0133     		adds	r3, r3, #1
 4002 010e C7F8E03C 		str	r3, [r7, #3296]
 4003              	.L201:
 138:.\BFS/bfs_allpaths.h ****             memcpy(map[k], clean_map[k], sizeof(int)*MAP_COL);
 4004              		.loc 4 138 0 is_stmt 0 discriminator 1
 4005 0112 D7F8E03C 		ldr	r3, [r7, #3296]
 4006 0116 0E2B     		cmp	r3, #14
 4007 0118 DFDD     		ble	.L202
 140:.\BFS/bfs_allpaths.h ****         }
 141:.\BFS/bfs_allpaths.h **** 
 142:.\BFS/bfs_allpaths.h ****         // #ifdef DEBUG_ALLPATH
 143:.\BFS/bfs_allpaths.h ****         //     puts("## Targets ##");
 144:.\BFS/bfs_allpaths.h ****         //     printPath(targets);
 145:.\BFS/bfs_allpaths.h ****         // #endif
 146:.\BFS/bfs_allpaths.h **** 
 147:.\BFS/bfs_allpaths.h ****         updateMapWithPath(marked_map, path, len(path));
 4008              		.loc 4 147 0 is_stmt 1
 4009 011a 07F10803 		add	r3, r7, #8
 4010 011e 1846     		mov	r0, r3
 4011 0120 FFF7FEFF 		bl	len
 4012 0124 0446     		mov	r4, r0
 4013 0126 07F66C02 		addw	r2, r7, #2156
 4014 012a 07F10803 		add	r3, r7, #8
 4015 012e 1046     		mov	r0, r2
 4016 0130 1946     		mov	r1, r3
 4017 0132 2246     		mov	r2, r4
 4018 0134 FFF7FEFF 		bl	updateMapWithPath
 148:.\BFS/bfs_allpaths.h ****         // num_points = updateTargets(marked_map, targets, i);
 149:.\BFS/bfs_allpaths.h ****         appendPath(allPath, len(allPath), path);
 4019              		.loc 4 149 0
 4020 0138 3B46     		mov	r3, r7
 4021 013a 1868     		ldr	r0, [r3]
 4022 013c FFF7FEFF 		bl	len
 4023 0140 0146     		mov	r1, r0
 4024 0142 3B46     		mov	r3, r7
 4025 0144 07F10802 		add	r2, r7, #8
 4026 0148 1868     		ldr	r0, [r3]
 4027 014a FFF7FEFF 		bl	appendPath
 4028              	.L200:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 87


 4029              	.LBE6:
 124:.\BFS/bfs_allpaths.h **** 
 4030              		.loc 4 124 0
 4031 014e 07F66C03 		addw	r3, r7, #2156
 4032 0152 1846     		mov	r0, r3
 4033 0154 FFF7FEFF 		bl	hasUnvisitedPoints
 4034 0158 0346     		mov	r3, r0
 4035 015a 002B     		cmp	r3, #0
 4036 015c 9CD1     		bne	.L203
 150:.\BFS/bfs_allpaths.h **** 
 151:.\BFS/bfs_allpaths.h ****         #ifdef DEBUG_ALLPATH
 152:.\BFS/bfs_allpaths.h ****             printf("Len: %d\n", len(allPath));
 153:.\BFS/bfs_allpaths.h ****             printPath(allPath);
 154:.\BFS/bfs_allpaths.h ****             printMap(marked_map);    
 155:.\BFS/bfs_allpaths.h ****             blockAndWait();
 156:.\BFS/bfs_allpaths.h ****         #endif
 157:.\BFS/bfs_allpaths.h ****         
 158:.\BFS/bfs_allpaths.h ****     }
 159:.\BFS/bfs_allpaths.h **** 
 160:.\BFS/bfs_allpaths.h ****     //blockAndWait();
 161:.\BFS/bfs_allpaths.h ****     //optimisePath(targets);
 162:.\BFS/bfs_allpaths.h **** 
 163:.\BFS/bfs_allpaths.h ****     #ifdef DISPLAY_ALLPATH
 164:.\BFS/bfs_allpaths.h ****         printMap(marked_map);
 165:.\BFS/bfs_allpaths.h ****         printf("## Length of All Path: %d ##\n",len(allPath));
 166:.\BFS/bfs_allpaths.h ****         printPath(allPath);
 167:.\BFS/bfs_allpaths.h ****     #endif
 168:.\BFS/bfs_allpaths.h **** }
 4037              		.loc 4 168 0
 4038 015e 07F6EC47 		addw	r7, r7, #3308
 4039              		.cfi_def_cfa_offset 12
 4040 0162 BD46     		mov	sp, r7
 4041              		.cfi_def_cfa_register 13
 4042              		@ sp needed
 4043 0164 90BD     		pop	{r4, r7, pc}
 4044              	.L205:
 4045 0166 00BF     		.align	2
 4046              	.L204:
 4047 0168 00000000 		.word	map
 4048              		.cfi_endproc
 4049              	.LFE87:
 4050              		.size	getAllPath, .-getAllPath
 4051              		.global	adc_flag
 4052              		.bss
 4053 0012 0000     		.align	2
 4054              		.type	adc_flag, %object
 4055              		.size	adc_flag, 4
 4056              	adc_flag:
 4057 0014 00000000 		.space	4
 4058              		.global	sensor_readings
 4059              		.align	2
 4060              		.type	sensor_readings, %object
 4061              		.size	sensor_readings, 6
 4062              	sensor_readings:
 4063 0018 00000000 		.space	6
 4063      0000
 4064              		.global	adc_readings
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 88


 4065 001e 0000     		.align	2
 4066              		.type	adc_readings, %object
 4067              		.size	adc_readings, 24
 4068              	adc_readings:
 4069 0020 00000000 		.space	24
 4069      00000000 
 4069      00000000 
 4069      00000000 
 4069      00000000 
 4070              		.global	sample_count
 4071              		.align	2
 4072              		.type	sample_count, %object
 4073              		.size	sample_count, 4
 4074              	sample_count:
 4075 0038 00000000 		.space	4
 4076              		.global	timer_flag
 4077              		.align	2
 4078              		.type	timer_flag, %object
 4079              		.size	timer_flag, 4
 4080              	timer_flag:
 4081 003c 00000000 		.space	4
 4082              		.global	countM1
 4083              		.align	2
 4084              		.type	countM1, %object
 4085              		.size	countM1, 4
 4086              	countM1:
 4087 0040 00000000 		.space	4
 4088              		.global	countM2
 4089              		.align	2
 4090              		.type	countM2, %object
 4091              		.size	countM2, 4
 4092              	countM2:
 4093 0044 00000000 		.space	4
 4094              		.global	prevCountM1
 4095              		.align	2
 4096              		.type	prevCountM1, %object
 4097              		.size	prevCountM1, 4
 4098              	prevCountM1:
 4099 0048 00000000 		.space	4
 4100              		.global	prevCountM2
 4101              		.align	2
 4102              		.type	prevCountM2, %object
 4103              		.size	prevCountM2, 4
 4104              	prevCountM2:
 4105 004c 00000000 		.space	4
 4106              		.section	.text.ENCODER_ISR,"ax",%progbits
 4107              		.align	2
 4108              		.global	ENCODER_ISR
 4109              		.thumb
 4110              		.thumb_func
 4111              		.type	ENCODER_ISR, %function
 4112              	ENCODER_ISR:
 4113              	.LFB88:
 4114              		.file 5 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  * 2019 COMPSYS 
   3:.\main.c      ****  * 302 GROUP 2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 89


   4:.\main.c      ****  * FLIK
   5:.\main.c      **** */
   6:.\main.c      **** // ================== INCLUDE ======================
   7:.\main.c      **** #include <stdio.h>
   8:.\main.c      **** #include <string.h>
   9:.\main.c      **** #include <stdlib.h>
  10:.\main.c      **** #include <project.h>
  11:.\main.c      **** 
  12:.\main.c      **** #include "defines.h"
  13:.\main.c      **** #include "vars.h"
  14:.\main.c      **** #include "BFS/bfs.h"
  15:.\main.c      **** #include "BFS/bfs_allpaths.h"
  16:.\main.c      **** // =================== MACROS =====================
  17:.\main.c      **** // SENSOR MAPPINGS
  18:.\main.c      **** #define TOP_LEFT_SENSOR 0
  19:.\main.c      **** #define TOP_MID_SENSOR 1
  20:.\main.c      **** #define TOP_RIGHT_SENSOR 2
  21:.\main.c      **** #define BOTTOM_LEFT_SENSOR 3
  22:.\main.c      **** #define BOTTOM_MID_SENSOR 4
  23:.\main.c      **** #define BOTTOM_RIGHT_SENSOR 5
  24:.\main.c      **** 
  25:.\main.c      **** // LIGHT SENSORS
  26:.\main.c      **** #define NUM_SENSORS 6
  27:.\main.c      **** #define LIGHT_LEVEL 300
  28:.\main.c      **** 
  29:.\main.c      **** // ADC
  30:.\main.c      **** #define ADC_READINGS_SIZE 200
  31:.\main.c      **** 
  32:.\main.c      **** // Speed calculations
  33:.\main.c      **** #define LINEAR_DISTANCE_PER_REV 20.42035225
  34:.\main.c      **** #define TICKS_PER_REV 228
  35:.\main.c      **** #define TIMER_PERIOD 0.03
  36:.\main.c      **** 
  37:.\main.c      **** // Speed control
  38:.\main.c      **** #define DESIRED_COUNT 8
  39:.\main.c      **** #define TURN_SPEED 450
  40:.\main.c      **** 
  41:.\main.c      **** // Distances
  42:.\main.c      **** #define GRID_SIZE 12
  43:.\main.c      **** #define HALF_ROBOT_LENGTH 8
  44:.\main.c      **** #define SMALL_FORWARD_DISTANCE 8
  45:.\main.c      **** 
  46:.\main.c      **** // Line following macros - require calibration
  47:.\main.c      **** #define ADJUST_SPEED_SMALL 1
  48:.\main.c      **** #define MAX_SPEED 9
  49:.\main.c      **** #define MIN_SPEED 4
  50:.\main.c      **** 
  51:.\main.c      **** // algorithms
  52:.\main.c      **** #define DISTANCE_THRESHOLD 20
  53:.\main.c      **** #define BFS_TEST 1
  54:.\main.c      **** #define FOOD_ROUTE 2
  55:.\main.c      **** #define TRAVERSE_ALL 3
  56:.\main.c      **** #define DEBUG_MODE 4
  57:.\main.c      **** #define CURRENT_MODE FOOD_ROUTE
  58:.\main.c      **** 
  59:.\main.c      **** #define START_X 1
  60:.\main.c      **** #define START_Y 1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 90


  61:.\main.c      **** #define FINISH_X 17
  62:.\main.c      **** #define FINISH_Y 13
  63:.\main.c      **** 
  64:.\main.c      **** // Debug flag - uncomment when debugging
  65:.\main.c      **** //#define PUTTY
  66:.\main.c      **** //#define GO_SLOW
  67:.\main.c      **** //* ================= FUNCTIONS =======================
  68:.\main.c      **** void usbPutString(char *s);
  69:.\main.c      **** void getRouteToFood(point start, point path[MAX_PATH_LENGTH]);
  70:.\main.c      **** 
  71:.\main.c      **** // sensors
  72:.\main.c      **** int32 getValForChannel(int16 n);
  73:.\main.c      **** void updateSensorValues();
  74:.\main.c      **** 
  75:.\main.c      **** // general
  76:.\main.c      **** void changeRightWheelSpeed(int amount);
  77:.\main.c      **** void changeLeftWheelSpeed(int amount);
  78:.\main.c      **** void invertWheels();
  79:.\main.c      **** void startWheels();
  80:.\main.c      **** void stopWheels();
  81:.\main.c      **** void setWheelDirection(int isLeftForward, int isRightForward);
  82:.\main.c      **** void correctSpeed(int prevCount, int count, int desired_count, int isLeftWheel);
  83:.\main.c      **** float getDistance(int prevCountM1, int prevCountM2);
  84:.\main.c      **** 
  85:.\main.c      **** // straight
  86:.\main.c      **** void turnRight();
  87:.\main.c      **** void turnLeft();
  88:.\main.c      **** void goStraightForBlock(int desired_blocks, int *right_speed_count, int *left_wheel_count);
  89:.\main.c      **** void goForwardWithoutTracking(int *left_wheel_count, int *right_wheel_count, int distance_to_travel
  90:.\main.c      **** 
  91:.\main.c      **** // turning
  92:.\main.c      **** void turnForDegrees(int degrees);
  93:.\main.c      **** void sharpTurnRight();
  94:.\main.c      **** void sharpTurnLeft();
  95:.\main.c      **** void uTurn(int *left_wheel_count, int *right_wheel_count);
  96:.\main.c      **** 
  97:.\main.c      **** // debugging
  98:.\main.c      **** void printCommandsUSB(int8_t *commands);
  99:.\main.c      **** void printSingleCommandUSB(int8_t command);
 100:.\main.c      **** //* ================= GLOBAL VARIABLES =======================
 101:.\main.c      **** // ADC
 102:.\main.c      **** volatile int adc_flag = FALSE;
 103:.\main.c      **** int8 sensor_readings[NUM_SENSORS] = { 0 };
 104:.\main.c      **** int adc_readings[NUM_SENSORS] = { 0 };
 105:.\main.c      **** int sample_count = 0;
 106:.\main.c      **** // Encoder
 107:.\main.c      **** volatile int timer_flag = FALSE;
 108:.\main.c      **** volatile int countM1 = 0;
 109:.\main.c      **** volatile int countM2 = 0;
 110:.\main.c      **** int prevCountM1 = 0;
 111:.\main.c      **** int prevCountM2 = 0;
 112:.\main.c      **** //* ================== ISR ======================
 113:.\main.c      **** CY_ISR(ENCODER_ISR) {
 4115              		.loc 5 113 0
 4116              		.cfi_startproc
 4117              		@ args = 0, pretend = 0, frame = 0
 4118              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 91


 4119 0000 80B5     		push	{r7, lr}
 4120              		.cfi_def_cfa_offset 8
 4121              		.cfi_offset 7, -8
 4122              		.cfi_offset 14, -4
 4123 0002 00AF     		add	r7, sp, #0
 4124              		.cfi_def_cfa_register 7
 114:.\main.c      ****     countM1 = QuadDec_M1_GetCounter();
 4125              		.loc 5 114 0
 4126 0004 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 4127 0008 0346     		mov	r3, r0
 4128 000a 1A46     		mov	r2, r3
 4129 000c 054B     		ldr	r3, .L207
 4130 000e 1A60     		str	r2, [r3]
 115:.\main.c      ****     countM2 = QuadDec_M2_GetCounter();
 4131              		.loc 5 115 0
 4132 0010 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 4133 0014 0346     		mov	r3, r0
 4134 0016 1A46     		mov	r2, r3
 4135 0018 034B     		ldr	r3, .L207+4
 4136 001a 1A60     		str	r2, [r3]
 116:.\main.c      ****     timer_flag = TRUE;
 4137              		.loc 5 116 0
 4138 001c 034B     		ldr	r3, .L207+8
 4139 001e 0122     		movs	r2, #1
 4140 0020 1A60     		str	r2, [r3]
 117:.\main.c      **** }
 4141              		.loc 5 117 0
 4142 0022 80BD     		pop	{r7, pc}
 4143              	.L208:
 4144              		.align	2
 4145              	.L207:
 4146 0024 00000000 		.word	countM1
 4147 0028 00000000 		.word	countM2
 4148 002c 00000000 		.word	timer_flag
 4149              		.cfi_endproc
 4150              	.LFE88:
 4151              		.size	ENCODER_ISR, .-ENCODER_ISR
 4152              		.section	.text.ADC_ISR,"ax",%progbits
 4153              		.align	2
 4154              		.global	ADC_ISR
 4155              		.thumb
 4156              		.thumb_func
 4157              		.type	ADC_ISR, %function
 4158              	ADC_ISR:
 4159              	.LFB89:
 118:.\main.c      **** 
 119:.\main.c      **** /* ### Retrieve and Store Measurements ### */
 120:.\main.c      **** CY_ISR(ADC_ISR) {
 4160              		.loc 5 120 0
 4161              		.cfi_startproc
 4162              		@ args = 0, pretend = 0, frame = 0
 4163              		@ frame_needed = 1, uses_anonymous_args = 0
 4164              		@ link register save eliminated.
 4165 0000 80B4     		push	{r7}
 4166              		.cfi_def_cfa_offset 4
 4167              		.cfi_offset 7, -4
 4168 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 92


 4169              		.cfi_def_cfa_register 7
 121:.\main.c      ****     adc_flag = TRUE;
 4170              		.loc 5 121 0
 4171 0004 034B     		ldr	r3, .L210
 4172 0006 0122     		movs	r2, #1
 4173 0008 1A60     		str	r2, [r3]
 122:.\main.c      **** }
 4174              		.loc 5 122 0
 4175 000a BD46     		mov	sp, r7
 4176              		.cfi_def_cfa_register 13
 4177              		@ sp needed
 4178 000c 5DF8047B 		ldr	r7, [sp], #4
 4179              		.cfi_restore 7
 4180              		.cfi_def_cfa_offset 0
 4181 0010 7047     		bx	lr
 4182              	.L211:
 4183 0012 00BF     		.align	2
 4184              	.L210:
 4185 0014 00000000 		.word	adc_flag
 4186              		.cfi_endproc
 4187              	.LFE89:
 4188              		.size	ADC_ISR, .-ADC_ISR
 4189              		.section	.rodata
 4190 0179 000000   		.align	2
 4191              	.LC24:
 4192 017c 23232053 		.ascii	"## Selected BFS_TEST\015\012\000"
 4192      656C6563 
 4192      74656420 
 4192      4246535F 
 4192      54455354 
 4193 0193 00       		.align	2
 4194              	.LC25:
 4195 0194 23232053 		.ascii	"## Selected FOOD_ROUTE\015\012\000"
 4195      656C6563 
 4195      74656420 
 4195      464F4F44 
 4195      5F524F55 
 4196 01ad 000000   		.align	2
 4197              	.LC26:
 4198 01b0 23232053 		.ascii	"## Selected TRAVERSE_ALL\015\012\000"
 4198      656C6563 
 4198      74656420 
 4198      54524156 
 4198      45525345 
 4199 01cb 00       		.align	2
 4200              	.LC1:
 4201 01cc 01       		.byte	1
 4202 01cd 01       		.byte	1
 4203 01ce 0000     		.align	2
 4204              	.LC2:
 4205 01d0 11       		.byte	17
 4206 01d1 0D       		.byte	13
 4207              		.section	.text.main,"ax",%progbits
 4208              		.align	2
 4209              		.global	main
 4210              		.thumb
 4211              		.thumb_func
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 93


 4212              		.type	main, %function
 4213              	main:
 4214              	.LFB90:
 123:.\main.c      **** 
 124:.\main.c      **** /** ## Notes
 125:.\main.c      ****     
 126:.\main.c      ****     Ratio of linear distance to quad decoder ticks
 127:.\main.c      ****     One revolution gives a linear distance (in cm)
 128:.\main.c      ****     Each revolution is 57 ticks (228 for 4x mode)
 129:.\main.c      ****     Centimetres per tick = linear distance / countM(1|2)
 130:.\main.c      ****     
 131:.\main.c      ****     Decoder use a 4x count, so each revolution gives 4 counts
 132:.\main.c      ****     Sampling rate is determined by our 100ms timer (might be a little slow)
 133:.\main.c      ****     
 134:.\main.c      ****     ## Algorithm Control Flow
 135:.\main.c      ****     - Get ADC value for each channel
 136:.\main.c      ****     - Get decoder val for M1 & M2
 137:.\main.c      ****     - Use these values to drive the movement of the robot
 138:.\main.c      ****     
 139:.\main.c      **** */
 140:.\main.c      **** 
 141:.\main.c      **** int main()
 142:.\main.c      **** {
 4215              		.loc 5 142 0
 4216              		.cfi_startproc
 4217              		@ args = 0, pretend = 0, frame = 1232
 4218              		@ frame_needed = 1, uses_anonymous_args = 0
 4219 0000 80B5     		push	{r7, lr}
 4220              		.cfi_def_cfa_offset 8
 4221              		.cfi_offset 7, -8
 4222              		.cfi_offset 14, -4
 4223 0002 ADF59A6D 		sub	sp, sp, #1232
 4224              		.cfi_def_cfa_offset 1240
 4225 0006 00AF     		add	r7, sp, #0
 4226              		.cfi_def_cfa_register 7
 143:.\main.c      **** 
 144:.\main.c      ****     // delay
 145:.\main.c      ****     CyDelay(2000);
 4227              		.loc 5 145 0
 4228 0008 4FF4FA60 		mov	r0, #2000
 4229 000c FFF7FEFF 		bl	CyDelay
 146:.\main.c      ****     
 147:.\main.c      ****     // --------------------------------
 148:.\main.c      ****     // ----- INITIALIZATIONS ----------
 149:.\main.c      ****     // ================================
 150:.\main.c      ****     CYGlobalIntEnable;
 4230              		.loc 5 150 0
 4231              	@ 150 ".\main.c" 1
 4232 0010 62B6     		CPSIE   i
 4233              	@ 0 "" 2
 151:.\main.c      ****     
 152:.\main.c      ****     // ------------ USB SETUP ------------    
 153:.\main.c      ****     #ifdef USE_USB    
 154:.\main.c      ****         USBUART_Start(0, USBUART_5V_OPERATION);
 4234              		.loc 5 154 0
 4235              		.thumb
 4236 0012 0020     		movs	r0, #0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 94


 4237 0014 0121     		movs	r1, #1
 4238 0016 FFF7FEFF 		bl	USBUART_Start
 155:.\main.c      ****     #endif
 156:.\main.c      ****     
 157:.\main.c      ****     // PWMs
 158:.\main.c      ****     PWM_1_Start();
 4239              		.loc 5 158 0
 4240 001a FFF7FEFF 		bl	PWM_1_Start
 159:.\main.c      ****     PWM_2_Start();
 4241              		.loc 5 159 0
 4242 001e FFF7FEFF 		bl	PWM_2_Start
 160:.\main.c      ****     
 161:.\main.c      ****     stopWheels();
 4243              		.loc 5 161 0
 4244 0022 FFF7FEFF 		bl	stopWheels
 162:.\main.c      ****     
 163:.\main.c      ****     // Timer for encoder
 164:.\main.c      ****     Timer_TS_Start();
 4245              		.loc 5 164 0
 4246 0026 FFF7FEFF 		bl	Timer_TS_Start
 165:.\main.c      ****     isr_TS_Start(); // Timer interrupts need to be started independently
 4247              		.loc 5 165 0
 4248 002a FFF7FEFF 		bl	isr_TS_Start
 166:.\main.c      ****     isr_TS_StartEx(ENCODER_ISR);
 4249              		.loc 5 166 0
 4250 002e 8748     		ldr	r0, .L228
 4251 0030 FFF7FEFF 		bl	isr_TS_StartEx
 167:.\main.c      ****     
 168:.\main.c      ****     // Quad Decoders
 169:.\main.c      ****     QuadDec_M1_Start();
 4252              		.loc 5 169 0
 4253 0034 FFF7FEFF 		bl	QuadDec_M1_Start
 170:.\main.c      ****     QuadDec_M2_Start();
 4254              		.loc 5 170 0
 4255 0038 FFF7FEFF 		bl	QuadDec_M2_Start
 171:.\main.c      ****     
 172:.\main.c      ****     // ADC
 173:.\main.c      ****     ADC_Start(); // Start ADC
 4256              		.loc 5 173 0
 4257 003c FFF7FEFF 		bl	ADC_Start
 174:.\main.c      ****     ADC_IRQ_Enable(); // Enable ADC interrupts
 4258              		.loc 5 174 0
 4259 0040 FFF7FEFF 		bl	ADC_IRQ_Enable
 175:.\main.c      ****     ADC_StartConvert(); // Start conversions
 4260              		.loc 5 175 0
 4261 0044 FFF7FEFF 		bl	ADC_StartConvert
 176:.\main.c      ****     isr_eoc_StartEx(ADC_ISR); // link interrupt for ADC
 4262              		.loc 5 176 0
 4263 0048 8148     		ldr	r0, .L228+4
 4264 004a FFF7FEFF 		bl	isr_eoc_StartEx
 177:.\main.c      ****     
 178:.\main.c      ****     // To make sure wheels rotate in the same direction i.e. forward
 179:.\main.c      ****     INV2_Write(1);
 4265              		.loc 5 179 0
 4266 004e 0120     		movs	r0, #1
 4267 0050 FFF7FEFF 		bl	INV2_Write
 180:.\main.c      ****     
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 95


 181:.\main.c      ****     int right_wheel_count = DESIRED_COUNT;
 4268              		.loc 5 181 0
 4269 0054 0823     		movs	r3, #8
 4270 0056 C7F8C034 		str	r3, [r7, #1216]
 182:.\main.c      ****     int left_wheel_count = DESIRED_COUNT;
 4271              		.loc 5 182 0
 4272 005a 0823     		movs	r3, #8
 4273 005c C7F8BC34 		str	r3, [r7, #1212]
 183:.\main.c      ****     
 184:.\main.c      ****     //int directions[30] = {2, RIGHT_TURN, 2, RIGHT_TURN, 4, RIGHT_TURN,2, LEFT_TURN, 4, LEFT_TURN,
 185:.\main.c      ****     //int8_t directions[2] = {RIGHT_TURN, EMPTY_COMMAND};
 186:.\main.c      ****     
 187:.\main.c      ****     #ifdef PUTTY
 188:.\main.c      ****         usbPutString("## Testing Algorithm ##\r\n");
 189:.\main.c      ****     #endif
 190:.\main.c      ****     
 191:.\main.c      ****     // Change these for pathing
 192:.\main.c      ****     point start = {.x = START_X, .y = START_Y};         //17,5; 1,1; 3,13
 4274              		.loc 5 192 0
 4275 0060 7C4A     		ldr	r2, .L228+8
 4276 0062 07F59763 		add	r3, r7, #1208
 4277 0066 1288     		ldrh	r2, [r2]	@ unaligned
 4278 0068 1A80     		strh	r2, [r3]	@ unaligned
 193:.\main.c      ****     point destination = {.x = FINISH_X, .y = FINISH_Y}; //3,13; 17,13;11,13
 4279              		.loc 5 193 0
 4280 006a 7B4A     		ldr	r2, .L228+12
 4281 006c 07F2B443 		addw	r3, r7, #1204
 4282 0070 1288     		ldrh	r2, [r2]	@ unaligned
 4283 0072 1A80     		strh	r2, [r3]	@ unaligned
 194:.\main.c      ****     point route[MAX_PATH_LENGTH] = { 0 };               //facing up; right; left
 4284              		.loc 5 194 0
 4285 0074 07F1CC03 		add	r3, r7, #204
 4286 0078 1A46     		mov	r2, r3
 4287 007a 4FF47A73 		mov	r3, #1000
 4288 007e 1046     		mov	r0, r2
 4289 0080 0021     		movs	r1, #0
 4290 0082 1A46     		mov	r2, r3
 4291 0084 FFF7FEFF 		bl	memset
 195:.\main.c      ****     route[0] = (point){.x = EMPTY_VAL, .y = EMPTY_VAL};
 4292              		.loc 5 195 0
 4293 0088 07F1CC03 		add	r3, r7, #204
 4294 008c 7349     		ldr	r1, .L228+16
 4295 008e 1A46     		mov	r2, r3
 4296 0090 0B46     		mov	r3, r1
 4297 0092 1B88     		ldrh	r3, [r3]	@ unaligned
 4298 0094 1380     		strh	r3, [r2]	@ unaligned
 196:.\main.c      ****     int8_t directions[MAX_COMMAND_LENGTH] = { 0 };
 4299              		.loc 5 196 0
 4300 0096 3B1D     		adds	r3, r7, #4
 4301 0098 1A46     		mov	r2, r3
 4302 009a C823     		movs	r3, #200
 4303 009c 1046     		mov	r0, r2
 4304 009e 0021     		movs	r1, #0
 4305 00a0 1A46     		mov	r2, r3
 4306 00a2 FFF7FEFF 		bl	memset
 197:.\main.c      ****     
 198:.\main.c      ****     uint8_t mode = CURRENT_MODE;
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 96


 4307              		.loc 5 198 0
 4308 00a6 0223     		movs	r3, #2
 4309 00a8 87F8CB34 		strb	r3, [r7, #1227]
 199:.\main.c      ****     
 200:.\main.c      ****     LED_ON; // Indicates algorithm starting
 4310              		.loc 5 200 0
 4311 00ac 0120     		movs	r0, #1
 4312 00ae FFF7FEFF 		bl	LED_Write
 201:.\main.c      ****     CyDelay(500);
 4313              		.loc 5 201 0
 4314 00b2 4FF4FA70 		mov	r0, #500
 4315 00b6 FFF7FEFF 		bl	CyDelay
 202:.\main.c      ****     
 203:.\main.c      ****     switch (mode){
 4316              		.loc 5 203 0
 4317 00ba 97F8CB34 		ldrb	r3, [r7, #1227]	@ zero_extendqisi2
 4318 00be 013B     		subs	r3, r3, #1
 4319 00c0 032B     		cmp	r3, #3
 4320 00c2 35D8     		bhi	.L213
 4321 00c4 01A2     		adr	r2, .L215
 4322 00c6 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4323 00ca 00BF     		.p2align 2
 4324              	.L215:
 4325 00cc DD000000 		.word	.L214+1
 4326 00d0 F7000000 		.word	.L216+1
 4327 00d4 0D010000 		.word	.L217+1
 4328 00d8 23010000 		.word	.L218+1
 4329              		.p2align 1
 4330              	.L214:
 204:.\main.c      ****         case BFS_TEST:
 205:.\main.c      ****             usbPutString("## Selected BFS_TEST\r\n");
 4331              		.loc 5 205 0
 4332 00dc 6048     		ldr	r0, .L228+20
 4333 00de FFF7FEFF 		bl	usbPutString
 206:.\main.c      ****             BFS(start, destination, route);
 4334              		.loc 5 206 0
 4335 00e2 07F1CC03 		add	r3, r7, #204
 4336 00e6 D7F8B804 		ldr	r0, [r7, #1208]
 4337 00ea D7F8B414 		ldr	r1, [r7, #1204]
 4338 00ee 1A46     		mov	r2, r3
 4339 00f0 FFF7FEFF 		bl	BFS
 207:.\main.c      ****             break;
 4340              		.loc 5 207 0
 4341 00f4 1CE0     		b	.L213
 4342              	.L216:
 208:.\main.c      ****         case FOOD_ROUTE:
 209:.\main.c      ****             usbPutString("## Selected FOOD_ROUTE\r\n");
 4343              		.loc 5 209 0
 4344 00f6 5B48     		ldr	r0, .L228+24
 4345 00f8 FFF7FEFF 		bl	usbPutString
 210:.\main.c      ****             getRouteToFood(start,route);
 4346              		.loc 5 210 0
 4347 00fc 07F1CC03 		add	r3, r7, #204
 4348 0100 D7F8B804 		ldr	r0, [r7, #1208]
 4349 0104 1946     		mov	r1, r3
 4350 0106 FFF7FEFF 		bl	getRouteToFood
 211:.\main.c      ****             break;
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 97


 4351              		.loc 5 211 0
 4352 010a 11E0     		b	.L213
 4353              	.L217:
 212:.\main.c      ****         case TRAVERSE_ALL:
 213:.\main.c      ****             usbPutString("## Selected TRAVERSE_ALL\r\n");
 4354              		.loc 5 213 0
 4355 010c 5648     		ldr	r0, .L228+28
 4356 010e FFF7FEFF 		bl	usbPutString
 214:.\main.c      ****             getAllPath(start,route);
 4357              		.loc 5 214 0
 4358 0112 07F1CC03 		add	r3, r7, #204
 4359 0116 D7F8B804 		ldr	r0, [r7, #1208]
 4360 011a 1946     		mov	r1, r3
 4361 011c FFF7FEFF 		bl	getAllPath
 215:.\main.c      ****             break;
 4362              		.loc 5 215 0
 4363 0120 06E0     		b	.L213
 4364              	.L218:
 216:.\main.c      ****         case DEBUG_MODE:
 217:.\main.c      **** //            startWheels();
 218:.\main.c      **** //            sharpTurnRight();
 219:.\main.c      **** //            PWM_1_WriteCompare(0);
 220:.\main.c      **** //            PWM_2_WriteCompare(0);
 221:.\main.c      **** //            return 0;
 222:.\main.c      ****             directions[0] = 8;
 4365              		.loc 5 222 0
 4366 0122 3B1D     		adds	r3, r7, #4
 4367 0124 0822     		movs	r2, #8
 4368 0126 1A70     		strb	r2, [r3]
 223:.\main.c      ****             directions[1] = EMPTY_COMMAND;
 4369              		.loc 5 223 0
 4370 0128 3B1D     		adds	r3, r7, #4
 4371 012a 0022     		movs	r2, #0
 4372 012c 5A70     		strb	r2, [r3, #1]
 224:.\main.c      ****             break;
 4373              		.loc 5 224 0
 4374 012e 00BF     		nop
 4375              	.L213:
 225:.\main.c      ****     }
 226:.\main.c      ****     
 227:.\main.c      ****     convertCoordinatesToCommands(route,directions);
 4376              		.loc 5 227 0
 4377 0130 07F1CC02 		add	r2, r7, #204
 4378 0134 3B1D     		adds	r3, r7, #4
 4379 0136 1046     		mov	r0, r2
 4380 0138 1946     		mov	r1, r3
 4381 013a FFF7FEFF 		bl	convertCoordinatesToCommands
 228:.\main.c      ****     printCommandsUSB(directions);
 4382              		.loc 5 228 0
 4383 013e 3B1D     		adds	r3, r7, #4
 4384 0140 1846     		mov	r0, r3
 4385 0142 FFF7FEFF 		bl	printCommandsUSB
 229:.\main.c      ****     
 230:.\main.c      ****     LED_OFF; // Indicates algorithm finishing
 4386              		.loc 5 230 0
 4387 0146 0020     		movs	r0, #0
 4388 0148 FFF7FEFF 		bl	LED_Write
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 98


 231:.\main.c      ****     CyDelay(500);
 4389              		.loc 5 231 0
 4390 014c 4FF4FA70 		mov	r0, #500
 4391 0150 FFF7FEFF 		bl	CyDelay
 232:.\main.c      ****     
 233:.\main.c      ****     startWheels();
 4392              		.loc 5 233 0
 4393 0154 FFF7FEFF 		bl	startWheels
 234:.\main.c      ****         
 235:.\main.c      ****     int direction_index = 0;
 4394              		.loc 5 235 0
 4395 0158 0023     		movs	r3, #0
 4396 015a C7F8CC34 		str	r3, [r7, #1228]
 236:.\main.c      ****     while (directions[direction_index] != 0) {
 4397              		.loc 5 236 0
 4398 015e 51E0     		b	.L219
 4399              	.L226:
 237:.\main.c      ****         
 238:.\main.c      ****         if (directions[direction_index] > DISTANCE_THRESHOLD) break;
 4400              		.loc 5 238 0
 4401 0160 3A1D     		adds	r2, r7, #4
 4402 0162 D7F8CC34 		ldr	r3, [r7, #1228]
 4403 0166 1344     		add	r3, r3, r2
 4404 0168 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4405 016a 5BB2     		sxtb	r3, r3
 4406 016c 142B     		cmp	r3, #20
 4407 016e 00DD     		ble	.L220
 4408 0170 4FE0     		b	.L221
 4409              	.L220:
 239:.\main.c      ****         
 240:.\main.c      ****         if (directions[direction_index] == RIGHT_TURN) {
 4410              		.loc 5 240 0
 4411 0172 3A1D     		adds	r2, r7, #4
 4412 0174 D7F8CC34 		ldr	r3, [r7, #1228]
 4413 0178 1344     		add	r3, r3, r2
 4414 017a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4415 017c 5BB2     		sxtb	r3, r3
 4416 017e 13F1020F 		cmn	r3, #2
 4417 0182 02D1     		bne	.L222
 241:.\main.c      ****             sharpTurnRight();
 4418              		.loc 5 241 0
 4419 0184 FFF7FEFF 		bl	sharpTurnRight
 4420 0188 37E0     		b	.L223
 4421              	.L222:
 242:.\main.c      ****         } else if (directions[direction_index] == LEFT_TURN) {
 4422              		.loc 5 242 0
 4423 018a 3A1D     		adds	r2, r7, #4
 4424 018c D7F8CC34 		ldr	r3, [r7, #1228]
 4425 0190 1344     		add	r3, r3, r2
 4426 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4427 0194 5BB2     		sxtb	r3, r3
 4428 0196 B3F1FF3F 		cmp	r3, #-1
 4429 019a 02D1     		bne	.L224
 243:.\main.c      ****             sharpTurnLeft();
 4430              		.loc 5 243 0
 4431 019c FFF7FEFF 		bl	sharpTurnLeft
 4432 01a0 2BE0     		b	.L223
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 99


 4433              	.L224:
 244:.\main.c      ****         } else if (directions[direction_index] == U_TURN) {
 4434              		.loc 5 244 0
 4435 01a2 3A1D     		adds	r2, r7, #4
 4436 01a4 D7F8CC34 		ldr	r3, [r7, #1228]
 4437 01a8 1344     		add	r3, r3, r2
 4438 01aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4439 01ac 5BB2     		sxtb	r3, r3
 4440 01ae 13F1030F 		cmn	r3, #3
 4441 01b2 08D1     		bne	.L225
 245:.\main.c      ****             uTurn(&right_wheel_count, &left_wheel_count);
 4442              		.loc 5 245 0
 4443 01b4 07F59862 		add	r2, r7, #1216
 4444 01b8 07F2BC43 		addw	r3, r7, #1212
 4445 01bc 1046     		mov	r0, r2
 4446 01be 1946     		mov	r1, r3
 4447 01c0 FFF7FEFF 		bl	uTurn
 4448 01c4 19E0     		b	.L223
 4449              	.L225:
 246:.\main.c      ****         } else if (directions[direction_index] <= DISTANCE_THRESHOLD){
 4450              		.loc 5 246 0
 4451 01c6 3A1D     		adds	r2, r7, #4
 4452 01c8 D7F8CC34 		ldr	r3, [r7, #1228]
 4453 01cc 1344     		add	r3, r3, r2
 4454 01ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4455 01d0 5BB2     		sxtb	r3, r3
 4456 01d2 142B     		cmp	r3, #20
 4457 01d4 11DC     		bgt	.L223
 4458              	.LBB7:
 247:.\main.c      ****             int num_coords = directions[direction_index];
 4459              		.loc 5 247 0
 4460 01d6 3A1D     		adds	r2, r7, #4
 4461 01d8 D7F8CC34 		ldr	r3, [r7, #1228]
 4462 01dc 1344     		add	r3, r3, r2
 4463 01de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4464 01e0 5BB2     		sxtb	r3, r3
 4465 01e2 C7F8C434 		str	r3, [r7, #1220]
 248:.\main.c      ****             goStraightForBlock(num_coords, &right_wheel_count, &left_wheel_count);
 4466              		.loc 5 248 0
 4467 01e6 07F59862 		add	r2, r7, #1216
 4468 01ea 07F2BC43 		addw	r3, r7, #1212
 4469 01ee D7F8C404 		ldr	r0, [r7, #1220]
 4470 01f2 1146     		mov	r1, r2
 4471 01f4 1A46     		mov	r2, r3
 4472 01f6 FFF7FEFF 		bl	goStraightForBlock
 4473              	.L223:
 4474              	.LBE7:
 249:.\main.c      ****         }
 250:.\main.c      ****         
 251:.\main.c      ****         #ifdef GO_SLOW
 252:.\main.c      ****             stopWheels();
 253:.\main.c      ****             printSingleCommandUSB(directions[direction_index]);
 254:.\main.c      ****             CyDelay(1000);
 255:.\main.c      ****             startWheels();
 256:.\main.c      ****         #endif
 257:.\main.c      ****         
 258:.\main.c      ****         direction_index++;
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 100


 4475              		.loc 5 258 0
 4476 01fa D7F8CC34 		ldr	r3, [r7, #1228]
 4477 01fe 0133     		adds	r3, r3, #1
 4478 0200 C7F8CC34 		str	r3, [r7, #1228]
 4479              	.L219:
 236:.\main.c      ****         
 4480              		.loc 5 236 0
 4481 0204 3A1D     		adds	r2, r7, #4
 4482 0206 D7F8CC34 		ldr	r3, [r7, #1228]
 4483 020a 1344     		add	r3, r3, r2
 4484 020c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4485 020e 002B     		cmp	r3, #0
 4486 0210 A6D1     		bne	.L226
 4487              	.L221:
 259:.\main.c      ****     }
 260:.\main.c      ****     
 261:.\main.c      ****     goForwardWithoutTracking(&left_wheel_count, &right_wheel_count, SMALL_FORWARD_DISTANCE);
 4488              		.loc 5 261 0
 4489 0212 07F2BC42 		addw	r2, r7, #1212
 4490 0216 07F59863 		add	r3, r7, #1216
 4491 021a 1046     		mov	r0, r2
 4492 021c 1946     		mov	r1, r3
 4493 021e 0822     		movs	r2, #8
 4494 0220 FFF7FEFF 		bl	goForwardWithoutTracking
 262:.\main.c      ****     
 263:.\main.c      ****     LED_Write(1);
 4495              		.loc 5 263 0
 4496 0224 0120     		movs	r0, #1
 4497 0226 FFF7FEFF 		bl	LED_Write
 264:.\main.c      ****     
 265:.\main.c      ****     PWM_1_WriteCompare(0);
 4498              		.loc 5 265 0
 4499 022a 0020     		movs	r0, #0
 4500 022c FFF7FEFF 		bl	PWM_1_WriteCompare
 266:.\main.c      ****     PWM_2_WriteCompare(0);
 4501              		.loc 5 266 0
 4502 0230 0020     		movs	r0, #0
 4503 0232 FFF7FEFF 		bl	PWM_2_WriteCompare
 267:.\main.c      ****     
 268:.\main.c      ****     // delay
 269:.\main.c      ****     CyDelay(20000);
 4504              		.loc 5 269 0
 4505 0236 44F62060 		movw	r0, #20000
 4506 023a FFF7FEFF 		bl	CyDelay
 270:.\main.c      ****     
 271:.\main.c      ****     return 0;
 4507              		.loc 5 271 0
 4508 023e 0023     		movs	r3, #0
 272:.\main.c      **** }
 4509              		.loc 5 272 0
 4510 0240 1846     		mov	r0, r3
 4511 0242 07F59A67 		add	r7, r7, #1232
 4512              		.cfi_def_cfa_offset 8
 4513 0246 BD46     		mov	sp, r7
 4514              		.cfi_def_cfa_register 13
 4515              		@ sp needed
 4516 0248 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 101


 4517              	.L229:
 4518 024a 00BF     		.align	2
 4519              	.L228:
 4520 024c 00000000 		.word	ENCODER_ISR
 4521 0250 00000000 		.word	ADC_ISR
 4522 0254 CC010000 		.word	.LC1
 4523 0258 D0010000 		.word	.LC2
 4524 025c C0000000 		.word	.LC0
 4525 0260 7C010000 		.word	.LC24
 4526 0264 94010000 		.word	.LC25
 4527 0268 B0010000 		.word	.LC26
 4528              		.cfi_endproc
 4529              	.LFE90:
 4530              		.size	main, .-main
 4531              		.section	.text.getValForChannel,"ax",%progbits
 4532              		.align	2
 4533              		.global	getValForChannel
 4534              		.thumb
 4535              		.thumb_func
 4536              		.type	getValForChannel, %function
 4537              	getValForChannel:
 4538              	.LFB91:
 273:.\main.c      **** 
 274:.\main.c      **** // --------------------------------------------- ADC ------------------------------------------
 275:.\main.c      **** // Simple ADC conversion
 276:.\main.c      **** int32 getValForChannel(int16 n){
 4539              		.loc 5 276 0
 4540              		.cfi_startproc
 4541              		@ args = 0, pretend = 0, frame = 8
 4542              		@ frame_needed = 1, uses_anonymous_args = 0
 4543 0000 80B5     		push	{r7, lr}
 4544              		.cfi_def_cfa_offset 8
 4545              		.cfi_offset 7, -8
 4546              		.cfi_offset 14, -4
 4547 0002 82B0     		sub	sp, sp, #8
 4548              		.cfi_def_cfa_offset 16
 4549 0004 00AF     		add	r7, sp, #0
 4550              		.cfi_def_cfa_register 7
 4551 0006 0346     		mov	r3, r0
 4552 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 277:.\main.c      ****     return ADC_CountsTo_mVolts(ADC_GetResult16(n));
 4553              		.loc 5 277 0
 4554 000a FB88     		ldrh	r3, [r7, #6]
 4555 000c 1846     		mov	r0, r3
 4556 000e FFF7FEFF 		bl	ADC_GetResult16
 4557 0012 0346     		mov	r3, r0
 4558 0014 1846     		mov	r0, r3
 4559 0016 FFF7FEFF 		bl	ADC_CountsTo_mVolts
 4560 001a 0346     		mov	r3, r0
 278:.\main.c      **** }
 4561              		.loc 5 278 0
 4562 001c 1846     		mov	r0, r3
 4563 001e 0837     		adds	r7, r7, #8
 4564              		.cfi_def_cfa_offset 8
 4565 0020 BD46     		mov	sp, r7
 4566              		.cfi_def_cfa_register 13
 4567              		@ sp needed
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 102


 4568 0022 80BD     		pop	{r7, pc}
 4569              		.cfi_endproc
 4570              	.LFE91:
 4571              		.size	getValForChannel, .-getValForChannel
 4572              		.section	.text.updateSensorValues,"ax",%progbits
 4573              		.align	2
 4574              		.global	updateSensorValues
 4575              		.thumb
 4576              		.thumb_func
 4577              		.type	updateSensorValues, %function
 4578              	updateSensorValues:
 4579              	.LFB92:
 279:.\main.c      **** 
 280:.\main.c      **** void updateSensorValues(){
 4580              		.loc 5 280 0
 4581              		.cfi_startproc
 4582              		@ args = 0, pretend = 0, frame = 40
 4583              		@ frame_needed = 1, uses_anonymous_args = 0
 4584 0000 80B5     		push	{r7, lr}
 4585              		.cfi_def_cfa_offset 8
 4586              		.cfi_offset 7, -8
 4587              		.cfi_offset 14, -4
 4588 0002 8AB0     		sub	sp, sp, #40
 4589              		.cfi_def_cfa_offset 48
 4590 0004 00AF     		add	r7, sp, #0
 4591              		.cfi_def_cfa_register 7
 281:.\main.c      ****     // update each sensor with the maximum reading so far
 282:.\main.c      ****     int i;
 283:.\main.c      ****     for (i = 0; i < NUM_SENSORS; i++){
 4592              		.loc 5 283 0
 4593 0006 0023     		movs	r3, #0
 4594 0008 7B62     		str	r3, [r7, #36]
 4595 000a 15E0     		b	.L233
 4596              	.L235:
 4597              	.LBB8:
 284:.\main.c      ****         int reading = getValForChannel(i);
 4598              		.loc 5 284 0
 4599 000c 7B6A     		ldr	r3, [r7, #36]
 4600 000e 9BB2     		uxth	r3, r3
 4601 0010 1BB2     		sxth	r3, r3
 4602 0012 1846     		mov	r0, r3
 4603 0014 FFF7FEFF 		bl	getValForChannel
 4604 0018 3862     		str	r0, [r7, #32]
 285:.\main.c      ****         if (reading > adc_readings[i]) {
 4605              		.loc 5 285 0
 4606 001a 234A     		ldr	r2, .L240
 4607 001c 7B6A     		ldr	r3, [r7, #36]
 4608 001e 52F82320 		ldr	r2, [r2, r3, lsl #2]
 4609 0022 3B6A     		ldr	r3, [r7, #32]
 4610 0024 9A42     		cmp	r2, r3
 4611 0026 04DA     		bge	.L234
 286:.\main.c      ****             adc_readings[i] = reading;
 4612              		.loc 5 286 0
 4613 0028 1F49     		ldr	r1, .L240
 4614 002a 7B6A     		ldr	r3, [r7, #36]
 4615 002c 3A6A     		ldr	r2, [r7, #32]
 4616 002e 41F82320 		str	r2, [r1, r3, lsl #2]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 103


 4617              	.L234:
 4618              	.LBE8:
 283:.\main.c      ****         int reading = getValForChannel(i);
 4619              		.loc 5 283 0 discriminator 2
 4620 0032 7B6A     		ldr	r3, [r7, #36]
 4621 0034 0133     		adds	r3, r3, #1
 4622 0036 7B62     		str	r3, [r7, #36]
 4623              	.L233:
 283:.\main.c      ****         int reading = getValForChannel(i);
 4624              		.loc 5 283 0 is_stmt 0 discriminator 1
 4625 0038 7B6A     		ldr	r3, [r7, #36]
 4626 003a 052B     		cmp	r3, #5
 4627 003c E6DD     		ble	.L235
 287:.\main.c      ****         }
 288:.\main.c      ****     }
 289:.\main.c      **** 
 290:.\main.c      ****     char buff[32];
 291:.\main.c      ****     
 292:.\main.c      ****     sample_count++;
 4628              		.loc 5 292 0 is_stmt 1
 4629 003e 1B4B     		ldr	r3, .L240+4
 4630 0040 1B68     		ldr	r3, [r3]
 4631 0042 0133     		adds	r3, r3, #1
 4632 0044 194A     		ldr	r2, .L240+4
 4633 0046 1360     		str	r3, [r2]
 293:.\main.c      ****     if (sample_count == ADC_READINGS_SIZE){
 4634              		.loc 5 293 0
 4635 0048 184B     		ldr	r3, .L240+4
 4636 004a 1B68     		ldr	r3, [r3]
 4637 004c C82B     		cmp	r3, #200
 4638 004e 25D1     		bne	.L236
 294:.\main.c      ****         // Black = 1 (high voltage level)
 295:.\main.c      ****         for (i = 0; i < NUM_SENSORS; i++){
 4639              		.loc 5 295 0
 4640 0050 0023     		movs	r3, #0
 4641 0052 7B62     		str	r3, [r7, #36]
 4642 0054 18E0     		b	.L237
 4643              	.L238:
 296:.\main.c      ****             sensor_readings[i] = !!(adc_readings[i] < LIGHT_LEVEL);
 4644              		.loc 5 296 0 discriminator 3
 4645 0056 144A     		ldr	r2, .L240
 4646 0058 7B6A     		ldr	r3, [r7, #36]
 4647 005a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4648 005e 40F22B12 		movw	r2, #299
 4649 0062 9342     		cmp	r3, r2
 4650 0064 D4BF     		ite	le
 4651 0066 0123     		movle	r3, #1
 4652 0068 0023     		movgt	r3, #0
 4653 006a DBB2     		uxtb	r3, r3
 4654 006c D9B2     		uxtb	r1, r3
 4655 006e 104A     		ldr	r2, .L240+8
 4656 0070 7B6A     		ldr	r3, [r7, #36]
 4657 0072 1344     		add	r3, r3, r2
 4658 0074 0A46     		mov	r2, r1
 4659 0076 1A70     		strb	r2, [r3]
 297:.\main.c      ****             adc_readings[i] = 0; // Reset max value from samples
 4660              		.loc 5 297 0 discriminator 3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 104


 4661 0078 0B4A     		ldr	r2, .L240
 4662 007a 7B6A     		ldr	r3, [r7, #36]
 4663 007c 0021     		movs	r1, #0
 4664 007e 42F82310 		str	r1, [r2, r3, lsl #2]
 295:.\main.c      ****             sensor_readings[i] = !!(adc_readings[i] < LIGHT_LEVEL);
 4665              		.loc 5 295 0 discriminator 3
 4666 0082 7B6A     		ldr	r3, [r7, #36]
 4667 0084 0133     		adds	r3, r3, #1
 4668 0086 7B62     		str	r3, [r7, #36]
 4669              	.L237:
 295:.\main.c      ****             sensor_readings[i] = !!(adc_readings[i] < LIGHT_LEVEL);
 4670              		.loc 5 295 0 is_stmt 0 discriminator 1
 4671 0088 7B6A     		ldr	r3, [r7, #36]
 4672 008a 052B     		cmp	r3, #5
 4673 008c E3DD     		ble	.L238
 298:.\main.c      ****         }
 299:.\main.c      ****         
 300:.\main.c      ****         ADC_DEBUG_Write(1);
 4674              		.loc 5 300 0 is_stmt 1
 4675 008e 0120     		movs	r0, #1
 4676 0090 FFF7FEFF 		bl	ADC_DEBUG_Write
 301:.\main.c      ****         sample_count = 0;
 4677              		.loc 5 301 0
 4678 0094 054B     		ldr	r3, .L240+4
 4679 0096 0022     		movs	r2, #0
 4680 0098 1A60     		str	r2, [r3]
 4681 009a 02E0     		b	.L232
 4682              	.L236:
 302:.\main.c      ****     }
 303:.\main.c      ****     else ADC_DEBUG_Write(0);
 4683              		.loc 5 303 0
 4684 009c 0020     		movs	r0, #0
 4685 009e FFF7FEFF 		bl	ADC_DEBUG_Write
 4686              	.L232:
 304:.\main.c      ****     
 305:.\main.c      **** }
 4687              		.loc 5 305 0
 4688 00a2 2837     		adds	r7, r7, #40
 4689              		.cfi_def_cfa_offset 8
 4690 00a4 BD46     		mov	sp, r7
 4691              		.cfi_def_cfa_register 13
 4692              		@ sp needed
 4693 00a6 80BD     		pop	{r7, pc}
 4694              	.L241:
 4695              		.align	2
 4696              	.L240:
 4697 00a8 00000000 		.word	adc_readings
 4698 00ac 00000000 		.word	sample_count
 4699 00b0 00000000 		.word	sensor_readings
 4700              		.cfi_endproc
 4701              	.LFE92:
 4702              		.size	updateSensorValues, .-updateSensorValues
 4703              		.global	__aeabi_fadd
 4704              		.global	__aeabi_i2f
 4705              		.global	__aeabi_fcmpgt
 4706              		.section	.text.goStraightForBlock,"ax",%progbits
 4707              		.align	2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 105


 4708              		.global	goStraightForBlock
 4709              		.thumb
 4710              		.thumb_func
 4711              		.type	goStraightForBlock, %function
 4712              	goStraightForBlock:
 4713              	.LFB93:
 306:.\main.c      **** 
 307:.\main.c      **** // --------------------------------------------- STRAIGHT -----------------------------------------
 308:.\main.c      **** void goStraightForBlock(int desired_blocks, int *right_wheel_count, int *left_wheel_count) {
 4714              		.loc 5 308 0
 4715              		.cfi_startproc
 4716              		@ args = 0, pretend = 0, frame = 56
 4717              		@ frame_needed = 1, uses_anonymous_args = 0
 4718 0000 80B5     		push	{r7, lr}
 4719              		.cfi_def_cfa_offset 8
 4720              		.cfi_offset 7, -8
 4721              		.cfi_offset 14, -4
 4722 0002 8EB0     		sub	sp, sp, #56
 4723              		.cfi_def_cfa_offset 64
 4724 0004 00AF     		add	r7, sp, #0
 4725              		.cfi_def_cfa_register 7
 4726 0006 F860     		str	r0, [r7, #12]
 4727 0008 B960     		str	r1, [r7, #8]
 4728 000a 7A60     		str	r2, [r7, #4]
 309:.\main.c      ****     
 310:.\main.c      ****     *right_wheel_count = DESIRED_COUNT;
 4729              		.loc 5 310 0
 4730 000c BB68     		ldr	r3, [r7, #8]
 4731 000e 0822     		movs	r2, #8
 4732 0010 1A60     		str	r2, [r3]
 311:.\main.c      ****     *left_wheel_count = DESIRED_COUNT;
 4733              		.loc 5 311 0
 4734 0012 7B68     		ldr	r3, [r7, #4]
 4735 0014 0822     		movs	r2, #8
 4736 0016 1A60     		str	r2, [r3]
 312:.\main.c      ****     
 313:.\main.c      ****     float distance = 0;
 4737              		.loc 5 313 0
 4738 0018 4FF00003 		mov	r3, #0
 4739 001c 7B63     		str	r3, [r7, #52]	@ float
 314:.\main.c      ****     int desired_distance = GRID_SIZE * desired_blocks - HALF_ROBOT_LENGTH;
 4740              		.loc 5 314 0
 4741 001e FA68     		ldr	r2, [r7, #12]
 4742 0020 1346     		mov	r3, r2
 4743 0022 5B00     		lsls	r3, r3, #1
 4744 0024 1344     		add	r3, r3, r2
 4745 0026 9B00     		lsls	r3, r3, #2
 4746 0028 083B     		subs	r3, r3, #8
 4747 002a 3B63     		str	r3, [r7, #48]
 315:.\main.c      ****     
 316:.\main.c      ****     char buff[32];
 317:.\main.c      ****     
 318:.\main.c      ****     while (distance < desired_distance) {
 4748              		.loc 5 318 0
 4749 002c 9DE0     		b	.L243
 4750              	.L254:
 319:.\main.c      ****         
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 106


 320:.\main.c      ****         if (adc_flag) {
 4751              		.loc 5 320 0
 4752 002e 564B     		ldr	r3, .L255
 4753 0030 1B68     		ldr	r3, [r3]
 4754 0032 002B     		cmp	r3, #0
 4755 0034 04D0     		beq	.L244
 321:.\main.c      ****             updateSensorValues();
 4756              		.loc 5 321 0
 4757 0036 FFF7FEFF 		bl	updateSensorValues
 322:.\main.c      ****             adc_flag = FALSE;
 4758              		.loc 5 322 0
 4759 003a 534B     		ldr	r3, .L255
 4760 003c 0022     		movs	r2, #0
 4761 003e 1A60     		str	r2, [r3]
 4762              	.L244:
 323:.\main.c      ****         }
 324:.\main.c      ****         
 325:.\main.c      ****          // New count values from encoder are ready
 326:.\main.c      ****         if (timer_flag){
 4763              		.loc 5 326 0
 4764 0040 524B     		ldr	r3, .L255+4
 4765 0042 1B68     		ldr	r3, [r3]
 4766 0044 002B     		cmp	r3, #0
 4767 0046 35D0     		beq	.L245
 327:.\main.c      ****             isr_TS_Disable();
 4768              		.loc 5 327 0
 4769 0048 FFF7FEFF 		bl	isr_TS_Disable
 328:.\main.c      ****             
 329:.\main.c      ****             // update distance
 330:.\main.c      ****             distance += getDistance(prevCountM1, prevCountM2);
 4770              		.loc 5 330 0
 4771 004c 504B     		ldr	r3, .L255+8
 4772 004e 1A68     		ldr	r2, [r3]
 4773 0050 504B     		ldr	r3, .L255+12
 4774 0052 1B68     		ldr	r3, [r3]
 4775 0054 1046     		mov	r0, r2
 4776 0056 1946     		mov	r1, r3
 4777 0058 FFF7FEFF 		bl	getDistance
 4778 005c 0346     		mov	r3, r0
 4779 005e 786B     		ldr	r0, [r7, #52]	@ float
 4780 0060 1946     		mov	r1, r3
 4781 0062 FFF7FEFF 		bl	__aeabi_fadd
 4782 0066 0346     		mov	r3, r0
 4783 0068 7B63     		str	r3, [r7, #52]	@ float
 331:.\main.c      ****             
 332:.\main.c      ****             // Correct speed
 333:.\main.c      ****             correctSpeed(prevCountM1,countM1,*left_wheel_count,TRUE);
 4784              		.loc 5 333 0
 4785 006a 494B     		ldr	r3, .L255+8
 4786 006c 1968     		ldr	r1, [r3]
 4787 006e 4A4B     		ldr	r3, .L255+16
 4788 0070 1A68     		ldr	r2, [r3]
 4789 0072 7B68     		ldr	r3, [r7, #4]
 4790 0074 1B68     		ldr	r3, [r3]
 4791 0076 0846     		mov	r0, r1
 4792 0078 1146     		mov	r1, r2
 4793 007a 1A46     		mov	r2, r3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 107


 4794 007c 0123     		movs	r3, #1
 4795 007e FFF7FEFF 		bl	correctSpeed
 334:.\main.c      ****             correctSpeed(prevCountM2,countM2,*right_wheel_count,FALSE);
 4796              		.loc 5 334 0
 4797 0082 444B     		ldr	r3, .L255+12
 4798 0084 1968     		ldr	r1, [r3]
 4799 0086 454B     		ldr	r3, .L255+20
 4800 0088 1A68     		ldr	r2, [r3]
 4801 008a BB68     		ldr	r3, [r7, #8]
 4802 008c 1B68     		ldr	r3, [r3]
 4803 008e 0846     		mov	r0, r1
 4804 0090 1146     		mov	r1, r2
 4805 0092 1A46     		mov	r2, r3
 4806 0094 0023     		movs	r3, #0
 4807 0096 FFF7FEFF 		bl	correctSpeed
 335:.\main.c      ****             
 336:.\main.c      ****             // Update previous values
 337:.\main.c      ****             prevCountM1 = countM1;
 4808              		.loc 5 337 0
 4809 009a 3F4B     		ldr	r3, .L255+16
 4810 009c 1B68     		ldr	r3, [r3]
 4811 009e 3C4A     		ldr	r2, .L255+8
 4812 00a0 1360     		str	r3, [r2]
 338:.\main.c      ****             prevCountM2 = countM2;
 4813              		.loc 5 338 0
 4814 00a2 3E4B     		ldr	r3, .L255+20
 4815 00a4 1B68     		ldr	r3, [r3]
 4816 00a6 3B4A     		ldr	r2, .L255+12
 4817 00a8 1360     		str	r3, [r2]
 339:.\main.c      ****             
 340:.\main.c      ****             // Reset flag
 341:.\main.c      ****             timer_flag = FALSE;
 4818              		.loc 5 341 0
 4819 00aa 384B     		ldr	r3, .L255+4
 4820 00ac 0022     		movs	r2, #0
 4821 00ae 1A60     		str	r2, [r3]
 342:.\main.c      ****             isr_TS_Enable();
 4822              		.loc 5 342 0
 4823 00b0 FFF7FEFF 		bl	isr_TS_Enable
 4824              	.L245:
 343:.\main.c      ****         }
 344:.\main.c      ****         
 345:.\main.c      ****         // follow a line algorithm
 346:.\main.c      ****         if (sensor_readings[TOP_MID_SENSOR]) { // on line
 4825              		.loc 5 346 0
 4826 00b4 3A4B     		ldr	r3, .L255+24
 4827 00b6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 4828 00b8 002B     		cmp	r3, #0
 4829 00ba 25D0     		beq	.L246
 347:.\main.c      ****             if (!sensor_readings[TOP_LEFT_SENSOR] && sensor_readings[TOP_RIGHT_SENSOR]) {// Deviate
 4830              		.loc 5 347 0
 4831 00bc 384B     		ldr	r3, .L255+24
 4832 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4833 00c0 002B     		cmp	r3, #0
 4834 00c2 0ED1     		bne	.L247
 4835              		.loc 5 347 0 is_stmt 0 discriminator 1
 4836 00c4 364B     		ldr	r3, .L255+24
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 108


 4837 00c6 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 4838 00c8 002B     		cmp	r3, #0
 4839 00ca 0AD0     		beq	.L247
 348:.\main.c      ****                 *right_wheel_count -= ADJUST_SPEED_SMALL;
 4840              		.loc 5 348 0 is_stmt 1
 4841 00cc BB68     		ldr	r3, [r7, #8]
 4842 00ce 1B68     		ldr	r3, [r3]
 4843 00d0 5A1E     		subs	r2, r3, #1
 4844 00d2 BB68     		ldr	r3, [r7, #8]
 4845 00d4 1A60     		str	r2, [r3]
 349:.\main.c      ****                 *left_wheel_count += ADJUST_SPEED_SMALL;
 4846              		.loc 5 349 0
 4847 00d6 7B68     		ldr	r3, [r7, #4]
 4848 00d8 1B68     		ldr	r3, [r3]
 4849 00da 5A1C     		adds	r2, r3, #1
 4850 00dc 7B68     		ldr	r3, [r7, #4]
 4851 00de 1A60     		str	r2, [r3]
 4852 00e0 27E0     		b	.L249
 4853              	.L247:
 350:.\main.c      ****             } else if (sensor_readings[TOP_LEFT_SENSOR] && !sensor_readings[TOP_RIGHT_SENSOR]) { //
 4854              		.loc 5 350 0
 4855 00e2 2F4B     		ldr	r3, .L255+24
 4856 00e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4857 00e6 002B     		cmp	r3, #0
 4858 00e8 23D0     		beq	.L249
 4859              		.loc 5 350 0 is_stmt 0 discriminator 1
 4860 00ea 2D4B     		ldr	r3, .L255+24
 4861 00ec 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 4862 00ee 002B     		cmp	r3, #0
 4863 00f0 1FD1     		bne	.L249
 351:.\main.c      ****                 *right_wheel_count += ADJUST_SPEED_SMALL;
 4864              		.loc 5 351 0 is_stmt 1
 4865 00f2 BB68     		ldr	r3, [r7, #8]
 4866 00f4 1B68     		ldr	r3, [r3]
 4867 00f6 5A1C     		adds	r2, r3, #1
 4868 00f8 BB68     		ldr	r3, [r7, #8]
 4869 00fa 1A60     		str	r2, [r3]
 352:.\main.c      ****                 *left_wheel_count -= ADJUST_SPEED_SMALL;
 4870              		.loc 5 352 0
 4871 00fc 7B68     		ldr	r3, [r7, #4]
 4872 00fe 1B68     		ldr	r3, [r3]
 4873 0100 5A1E     		subs	r2, r3, #1
 4874 0102 7B68     		ldr	r3, [r7, #4]
 4875 0104 1A60     		str	r2, [r3]
 4876 0106 14E0     		b	.L249
 4877              	.L246:
 353:.\main.c      ****             }
 354:.\main.c      ****         } else { // moved off
 355:.\main.c      ****             if (!sensor_readings[TOP_LEFT_SENSOR] && sensor_readings[TOP_RIGHT_SENSOR]) {// Deviate
 4878              		.loc 5 355 0
 4879 0108 254B     		ldr	r3, .L255+24
 4880 010a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4881 010c 002B     		cmp	r3, #0
 4882 010e 06D1     		bne	.L250
 4883              		.loc 5 355 0 is_stmt 0 discriminator 1
 4884 0110 234B     		ldr	r3, .L255+24
 4885 0112 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 109


 4886 0114 002B     		cmp	r3, #0
 4887 0116 02D0     		beq	.L250
 356:.\main.c      ****                 turnRight();
 4888              		.loc 5 356 0 is_stmt 1
 4889 0118 FFF7FEFF 		bl	turnRight
 4890 011c 09E0     		b	.L249
 4891              	.L250:
 357:.\main.c      ****             } else if (sensor_readings[TOP_LEFT_SENSOR] && !sensor_readings[TOP_RIGHT_SENSOR]) {// 
 4892              		.loc 5 357 0
 4893 011e 204B     		ldr	r3, .L255+24
 4894 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4895 0122 002B     		cmp	r3, #0
 4896 0124 05D0     		beq	.L249
 4897              		.loc 5 357 0 is_stmt 0 discriminator 1
 4898 0126 1E4B     		ldr	r3, .L255+24
 4899 0128 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 4900 012a 002B     		cmp	r3, #0
 4901 012c 01D1     		bne	.L249
 358:.\main.c      **** 				turnLeft();
 4902              		.loc 5 358 0 is_stmt 1
 4903 012e FFF7FEFF 		bl	turnLeft
 4904              	.L249:
 359:.\main.c      ****             }
 360:.\main.c      ****         }
 361:.\main.c      ****         
 362:.\main.c      ****         if (*right_wheel_count > MAX_SPEED) {
 4905              		.loc 5 362 0
 4906 0132 BB68     		ldr	r3, [r7, #8]
 4907 0134 1B68     		ldr	r3, [r3]
 4908 0136 092B     		cmp	r3, #9
 4909 0138 02DD     		ble	.L251
 363:.\main.c      ****             *right_wheel_count = MAX_SPEED;
 4910              		.loc 5 363 0
 4911 013a BB68     		ldr	r3, [r7, #8]
 4912 013c 0922     		movs	r2, #9
 4913 013e 1A60     		str	r2, [r3]
 4914              	.L251:
 364:.\main.c      ****         }
 365:.\main.c      ****         if (*left_wheel_count > MAX_SPEED) {
 4915              		.loc 5 365 0
 4916 0140 7B68     		ldr	r3, [r7, #4]
 4917 0142 1B68     		ldr	r3, [r3]
 4918 0144 092B     		cmp	r3, #9
 4919 0146 02DD     		ble	.L252
 366:.\main.c      ****             *left_wheel_count = MAX_SPEED;
 4920              		.loc 5 366 0
 4921 0148 7B68     		ldr	r3, [r7, #4]
 4922 014a 0922     		movs	r2, #9
 4923 014c 1A60     		str	r2, [r3]
 4924              	.L252:
 367:.\main.c      ****         }
 368:.\main.c      ****         if (*right_wheel_count < MIN_SPEED) {
 4925              		.loc 5 368 0
 4926 014e BB68     		ldr	r3, [r7, #8]
 4927 0150 1B68     		ldr	r3, [r3]
 4928 0152 032B     		cmp	r3, #3
 4929 0154 02DC     		bgt	.L253
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 110


 369:.\main.c      ****             *right_wheel_count = MIN_SPEED;
 4930              		.loc 5 369 0
 4931 0156 BB68     		ldr	r3, [r7, #8]
 4932 0158 0422     		movs	r2, #4
 4933 015a 1A60     		str	r2, [r3]
 4934              	.L253:
 370:.\main.c      ****         }
 371:.\main.c      ****         if (*left_wheel_count < MIN_SPEED) {
 4935              		.loc 5 371 0
 4936 015c 7B68     		ldr	r3, [r7, #4]
 4937 015e 1B68     		ldr	r3, [r3]
 4938 0160 032B     		cmp	r3, #3
 4939 0162 02DC     		bgt	.L243
 372:.\main.c      ****             *left_wheel_count = MIN_SPEED;
 4940              		.loc 5 372 0
 4941 0164 7B68     		ldr	r3, [r7, #4]
 4942 0166 0422     		movs	r2, #4
 4943 0168 1A60     		str	r2, [r3]
 4944              	.L243:
 318:.\main.c      ****         
 4945              		.loc 5 318 0
 4946 016a 386B     		ldr	r0, [r7, #48]
 4947 016c FFF7FEFF 		bl	__aeabi_i2f
 4948 0170 0346     		mov	r3, r0
 4949 0172 1846     		mov	r0, r3
 4950 0174 796B     		ldr	r1, [r7, #52]	@ float
 4951 0176 FFF7FEFF 		bl	__aeabi_fcmpgt
 4952 017a 0346     		mov	r3, r0
 4953 017c 002B     		cmp	r3, #0
 4954 017e 7FF456AF 		bne	.L254
 373:.\main.c      ****         }
 374:.\main.c      ****     }
 375:.\main.c      **** }
 4955              		.loc 5 375 0
 4956 0182 3837     		adds	r7, r7, #56
 4957              		.cfi_def_cfa_offset 8
 4958 0184 BD46     		mov	sp, r7
 4959              		.cfi_def_cfa_register 13
 4960              		@ sp needed
 4961 0186 80BD     		pop	{r7, pc}
 4962              	.L256:
 4963              		.align	2
 4964              	.L255:
 4965 0188 00000000 		.word	adc_flag
 4966 018c 00000000 		.word	timer_flag
 4967 0190 00000000 		.word	prevCountM1
 4968 0194 00000000 		.word	prevCountM2
 4969 0198 00000000 		.word	countM1
 4970 019c 00000000 		.word	countM2
 4971 01a0 00000000 		.word	sensor_readings
 4972              		.cfi_endproc
 4973              	.LFE93:
 4974              		.size	goStraightForBlock, .-goStraightForBlock
 4975              		.section	.text.turnLeft,"ax",%progbits
 4976              		.align	2
 4977              		.global	turnLeft
 4978              		.thumb
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 111


 4979              		.thumb_func
 4980              		.type	turnLeft, %function
 4981              	turnLeft:
 4982              	.LFB94:
 376:.\main.c      **** 
 377:.\main.c      **** void turnLeft() {
 4983              		.loc 5 377 0
 4984              		.cfi_startproc
 4985              		@ args = 0, pretend = 0, frame = 8
 4986              		@ frame_needed = 1, uses_anonymous_args = 0
 4987 0000 80B5     		push	{r7, lr}
 4988              		.cfi_def_cfa_offset 8
 4989              		.cfi_offset 7, -8
 4990              		.cfi_offset 14, -4
 4991 0002 82B0     		sub	sp, sp, #8
 4992              		.cfi_def_cfa_offset 16
 4993 0004 00AF     		add	r7, sp, #0
 4994              		.cfi_def_cfa_register 7
 378:.\main.c      ****     isr_TS_Disable();
 4995              		.loc 5 378 0
 4996 0006 FFF7FEFF 		bl	isr_TS_Disable
 379:.\main.c      ****     int prevCountM1 = QuadDec_M1_GetCounter();
 4997              		.loc 5 379 0
 4998 000a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 4999 000e 0346     		mov	r3, r0
 5000 0010 7B60     		str	r3, [r7, #4]
 380:.\main.c      ****     int prevCountM2 = QuadDec_M2_GetCounter();
 5001              		.loc 5 380 0
 5002 0012 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 5003 0016 0346     		mov	r3, r0
 5004 0018 3B60     		str	r3, [r7]
 381:.\main.c      ****     PWM_1_WriteCompare(0);
 5005              		.loc 5 381 0
 5006 001a 0020     		movs	r0, #0
 5007 001c FFF7FEFF 		bl	PWM_1_WriteCompare
 382:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 5008              		.loc 5 382 0
 5009 0020 4FF4E170 		mov	r0, #450
 5010 0024 FFF7FEFF 		bl	PWM_2_WriteCompare
 383:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 5011              		.loc 5 383 0
 5012 0028 08E0     		b	.L258
 5013              	.L259:
 384:.\main.c      ****         if (adc_flag) {
 5014              		.loc 5 384 0
 5015 002a 114B     		ldr	r3, .L260
 5016 002c 1B68     		ldr	r3, [r3]
 5017 002e 002B     		cmp	r3, #0
 5018 0030 04D0     		beq	.L258
 385:.\main.c      ****             updateSensorValues();
 5019              		.loc 5 385 0
 5020 0032 FFF7FEFF 		bl	updateSensorValues
 386:.\main.c      ****             adc_flag = FALSE;
 5021              		.loc 5 386 0
 5022 0036 0E4B     		ldr	r3, .L260
 5023 0038 0022     		movs	r2, #0
 5024 003a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 112


 5025              	.L258:
 383:.\main.c      ****         if (adc_flag) {
 5026              		.loc 5 383 0
 5027 003c 0D4B     		ldr	r3, .L260+4
 5028 003e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5029 0040 002B     		cmp	r3, #0
 5030 0042 F2D0     		beq	.L259
 387:.\main.c      ****         }
 388:.\main.c      ****     }
 389:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 5031              		.loc 5 389 0
 5032 0044 4FF4E170 		mov	r0, #450
 5033 0048 FFF7FEFF 		bl	PWM_1_WriteCompare
 390:.\main.c      ****     QuadDec_M1_SetCounter(prevCountM1);
 5034              		.loc 5 390 0
 5035 004c 7B68     		ldr	r3, [r7, #4]
 5036 004e 9BB2     		uxth	r3, r3
 5037 0050 1BB2     		sxth	r3, r3
 5038 0052 1846     		mov	r0, r3
 5039 0054 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 391:.\main.c      ****     QuadDec_M2_SetCounter(prevCountM2);
 5040              		.loc 5 391 0
 5041 0058 3B68     		ldr	r3, [r7]
 5042 005a 9BB2     		uxth	r3, r3
 5043 005c 1BB2     		sxth	r3, r3
 5044 005e 1846     		mov	r0, r3
 5045 0060 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 392:.\main.c      ****     isr_TS_Enable();
 5046              		.loc 5 392 0
 5047 0064 FFF7FEFF 		bl	isr_TS_Enable
 393:.\main.c      **** }
 5048              		.loc 5 393 0
 5049 0068 0837     		adds	r7, r7, #8
 5050              		.cfi_def_cfa_offset 8
 5051 006a BD46     		mov	sp, r7
 5052              		.cfi_def_cfa_register 13
 5053              		@ sp needed
 5054 006c 80BD     		pop	{r7, pc}
 5055              	.L261:
 5056 006e 00BF     		.align	2
 5057              	.L260:
 5058 0070 00000000 		.word	adc_flag
 5059 0074 00000000 		.word	sensor_readings
 5060              		.cfi_endproc
 5061              	.LFE94:
 5062              		.size	turnLeft, .-turnLeft
 5063              		.section	.text.turnRight,"ax",%progbits
 5064              		.align	2
 5065              		.global	turnRight
 5066              		.thumb
 5067              		.thumb_func
 5068              		.type	turnRight, %function
 5069              	turnRight:
 5070              	.LFB95:
 394:.\main.c      **** 
 395:.\main.c      **** void turnRight() {
 5071              		.loc 5 395 0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 113


 5072              		.cfi_startproc
 5073              		@ args = 0, pretend = 0, frame = 8
 5074              		@ frame_needed = 1, uses_anonymous_args = 0
 5075 0000 80B5     		push	{r7, lr}
 5076              		.cfi_def_cfa_offset 8
 5077              		.cfi_offset 7, -8
 5078              		.cfi_offset 14, -4
 5079 0002 82B0     		sub	sp, sp, #8
 5080              		.cfi_def_cfa_offset 16
 5081 0004 00AF     		add	r7, sp, #0
 5082              		.cfi_def_cfa_register 7
 396:.\main.c      ****     isr_TS_Disable();
 5083              		.loc 5 396 0
 5084 0006 FFF7FEFF 		bl	isr_TS_Disable
 397:.\main.c      ****     int prevCountM1 = QuadDec_M1_GetCounter();
 5085              		.loc 5 397 0
 5086 000a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 5087 000e 0346     		mov	r3, r0
 5088 0010 7B60     		str	r3, [r7, #4]
 398:.\main.c      ****     int prevCountM2 = QuadDec_M2_GetCounter();
 5089              		.loc 5 398 0
 5090 0012 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 5091 0016 0346     		mov	r3, r0
 5092 0018 3B60     		str	r3, [r7]
 399:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 5093              		.loc 5 399 0
 5094 001a 4FF4E170 		mov	r0, #450
 5095 001e FFF7FEFF 		bl	PWM_1_WriteCompare
 400:.\main.c      ****     PWM_2_WriteCompare(0);
 5096              		.loc 5 400 0
 5097 0022 0020     		movs	r0, #0
 5098 0024 FFF7FEFF 		bl	PWM_2_WriteCompare
 401:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 5099              		.loc 5 401 0
 5100 0028 08E0     		b	.L263
 5101              	.L264:
 402:.\main.c      ****         if (adc_flag) {
 5102              		.loc 5 402 0
 5103 002a 114B     		ldr	r3, .L265
 5104 002c 1B68     		ldr	r3, [r3]
 5105 002e 002B     		cmp	r3, #0
 5106 0030 04D0     		beq	.L263
 403:.\main.c      ****             updateSensorValues();
 5107              		.loc 5 403 0
 5108 0032 FFF7FEFF 		bl	updateSensorValues
 404:.\main.c      ****             adc_flag = FALSE;
 5109              		.loc 5 404 0
 5110 0036 0E4B     		ldr	r3, .L265
 5111 0038 0022     		movs	r2, #0
 5112 003a 1A60     		str	r2, [r3]
 5113              	.L263:
 401:.\main.c      ****         if (adc_flag) {
 5114              		.loc 5 401 0
 5115 003c 0D4B     		ldr	r3, .L265+4
 5116 003e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5117 0040 002B     		cmp	r3, #0
 5118 0042 F2D0     		beq	.L264
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 114


 405:.\main.c      ****         }
 406:.\main.c      ****     }
 407:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 5119              		.loc 5 407 0
 5120 0044 4FF4E170 		mov	r0, #450
 5121 0048 FFF7FEFF 		bl	PWM_2_WriteCompare
 408:.\main.c      ****     QuadDec_M1_SetCounter(prevCountM1);
 5122              		.loc 5 408 0
 5123 004c 7B68     		ldr	r3, [r7, #4]
 5124 004e 9BB2     		uxth	r3, r3
 5125 0050 1BB2     		sxth	r3, r3
 5126 0052 1846     		mov	r0, r3
 5127 0054 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 409:.\main.c      ****     QuadDec_M2_SetCounter(prevCountM2);
 5128              		.loc 5 409 0
 5129 0058 3B68     		ldr	r3, [r7]
 5130 005a 9BB2     		uxth	r3, r3
 5131 005c 1BB2     		sxth	r3, r3
 5132 005e 1846     		mov	r0, r3
 5133 0060 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 410:.\main.c      ****     isr_TS_Enable();
 5134              		.loc 5 410 0
 5135 0064 FFF7FEFF 		bl	isr_TS_Enable
 411:.\main.c      **** }
 5136              		.loc 5 411 0
 5137 0068 0837     		adds	r7, r7, #8
 5138              		.cfi_def_cfa_offset 8
 5139 006a BD46     		mov	sp, r7
 5140              		.cfi_def_cfa_register 13
 5141              		@ sp needed
 5142 006c 80BD     		pop	{r7, pc}
 5143              	.L266:
 5144 006e 00BF     		.align	2
 5145              	.L265:
 5146 0070 00000000 		.word	adc_flag
 5147 0074 00000000 		.word	sensor_readings
 5148              		.cfi_endproc
 5149              	.LFE95:
 5150              		.size	turnRight, .-turnRight
 5151              		.global	__aeabi_fcmplt
 5152              		.section	.text.turnForDegrees,"ax",%progbits
 5153              		.align	2
 5154              		.global	turnForDegrees
 5155              		.thumb
 5156              		.thumb_func
 5157              		.type	turnForDegrees, %function
 5158              	turnForDegrees:
 5159              	.LFB96:
 412:.\main.c      **** 
 413:.\main.c      **** // --------------------------------------------- TURNS ------------------------------------------
 414:.\main.c      **** void turnForDegrees(int degrees) {
 5160              		.loc 5 414 0
 5161              		.cfi_startproc
 5162              		@ args = 0, pretend = 0, frame = 16
 5163              		@ frame_needed = 1, uses_anonymous_args = 0
 5164 0000 80B5     		push	{r7, lr}
 5165              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 115


 5166              		.cfi_offset 7, -8
 5167              		.cfi_offset 14, -4
 5168 0002 84B0     		sub	sp, sp, #16
 5169              		.cfi_def_cfa_offset 24
 5170 0004 00AF     		add	r7, sp, #0
 5171              		.cfi_def_cfa_register 7
 5172 0006 7860     		str	r0, [r7, #4]
 415:.\main.c      ****     float distance_to_turn = degrees / 13;
 5173              		.loc 5 415 0
 5174 0008 7B68     		ldr	r3, [r7, #4]
 5175 000a 224A     		ldr	r2, .L271
 5176 000c 82FB0312 		smull	r1, r2, r2, r3
 5177 0010 9210     		asrs	r2, r2, #2
 5178 0012 DB17     		asrs	r3, r3, #31
 5179 0014 D31A     		subs	r3, r2, r3
 5180 0016 1846     		mov	r0, r3
 5181 0018 FFF7FEFF 		bl	__aeabi_i2f
 5182 001c 0346     		mov	r3, r0
 5183 001e BB60     		str	r3, [r7, #8]	@ float
 416:.\main.c      ****     float distance_turned = 0;
 5184              		.loc 5 416 0
 5185 0020 4FF00003 		mov	r3, #0
 5186 0024 FB60     		str	r3, [r7, #12]	@ float
 417:.\main.c      ****     
 418:.\main.c      ****     while (distance_turned < distance_to_turn) {
 5187              		.loc 5 418 0
 5188 0026 2AE0     		b	.L268
 5189              	.L270:
 419:.\main.c      ****         // update sensor values so they're not 'stuck' when we leave function
 420:.\main.c      ****         if (adc_flag) {
 5190              		.loc 5 420 0
 5191 0028 1B4B     		ldr	r3, .L271+4
 5192 002a 1B68     		ldr	r3, [r3]
 5193 002c 002B     		cmp	r3, #0
 5194 002e 04D0     		beq	.L269
 421:.\main.c      ****             updateSensorValues();
 5195              		.loc 5 421 0
 5196 0030 FFF7FEFF 		bl	updateSensorValues
 422:.\main.c      ****             adc_flag = FALSE;
 5197              		.loc 5 422 0
 5198 0034 184B     		ldr	r3, .L271+4
 5199 0036 0022     		movs	r2, #0
 5200 0038 1A60     		str	r2, [r3]
 5201              	.L269:
 423:.\main.c      ****         }
 424:.\main.c      ****         
 425:.\main.c      ****          // New count values from encoder are ready
 426:.\main.c      ****         if (timer_flag){
 5202              		.loc 5 426 0
 5203 003a 184B     		ldr	r3, .L271+8
 5204 003c 1B68     		ldr	r3, [r3]
 5205 003e 002B     		cmp	r3, #0
 5206 0040 1DD0     		beq	.L268
 427:.\main.c      ****             isr_TS_Disable();
 5207              		.loc 5 427 0
 5208 0042 FFF7FEFF 		bl	isr_TS_Disable
 428:.\main.c      ****             
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 116


 429:.\main.c      ****             distance_turned += getDistance(prevCountM1, prevCountM2);
 5209              		.loc 5 429 0
 5210 0046 164B     		ldr	r3, .L271+12
 5211 0048 1A68     		ldr	r2, [r3]
 5212 004a 164B     		ldr	r3, .L271+16
 5213 004c 1B68     		ldr	r3, [r3]
 5214 004e 1046     		mov	r0, r2
 5215 0050 1946     		mov	r1, r3
 5216 0052 FFF7FEFF 		bl	getDistance
 5217 0056 0346     		mov	r3, r0
 5218 0058 F868     		ldr	r0, [r7, #12]	@ float
 5219 005a 1946     		mov	r1, r3
 5220 005c FFF7FEFF 		bl	__aeabi_fadd
 5221 0060 0346     		mov	r3, r0
 5222 0062 FB60     		str	r3, [r7, #12]	@ float
 430:.\main.c      ****             
 431:.\main.c      ****             // Update previous values
 432:.\main.c      ****             prevCountM1 = countM1;
 5223              		.loc 5 432 0
 5224 0064 104B     		ldr	r3, .L271+20
 5225 0066 1B68     		ldr	r3, [r3]
 5226 0068 0D4A     		ldr	r2, .L271+12
 5227 006a 1360     		str	r3, [r2]
 433:.\main.c      ****             prevCountM2 = countM2;
 5228              		.loc 5 433 0
 5229 006c 0F4B     		ldr	r3, .L271+24
 5230 006e 1B68     		ldr	r3, [r3]
 5231 0070 0C4A     		ldr	r2, .L271+16
 5232 0072 1360     		str	r3, [r2]
 434:.\main.c      ****             
 435:.\main.c      ****             // Reset flag
 436:.\main.c      ****             timer_flag = FALSE;
 5233              		.loc 5 436 0
 5234 0074 094B     		ldr	r3, .L271+8
 5235 0076 0022     		movs	r2, #0
 5236 0078 1A60     		str	r2, [r3]
 437:.\main.c      ****             
 438:.\main.c      ****             isr_TS_Enable();
 5237              		.loc 5 438 0
 5238 007a FFF7FEFF 		bl	isr_TS_Enable
 5239              	.L268:
 418:.\main.c      ****         // update sensor values so they're not 'stuck' when we leave function
 5240              		.loc 5 418 0
 5241 007e F868     		ldr	r0, [r7, #12]	@ float
 5242 0080 B968     		ldr	r1, [r7, #8]	@ float
 5243 0082 FFF7FEFF 		bl	__aeabi_fcmplt
 5244 0086 0346     		mov	r3, r0
 5245 0088 002B     		cmp	r3, #0
 5246 008a CDD1     		bne	.L270
 439:.\main.c      ****         }
 440:.\main.c      ****     }
 441:.\main.c      **** }
 5247              		.loc 5 441 0
 5248 008c 1037     		adds	r7, r7, #16
 5249              		.cfi_def_cfa_offset 8
 5250 008e BD46     		mov	sp, r7
 5251              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 117


 5252              		@ sp needed
 5253 0090 80BD     		pop	{r7, pc}
 5254              	.L272:
 5255 0092 00BF     		.align	2
 5256              	.L271:
 5257 0094 4FECC44E 		.word	1321528399
 5258 0098 00000000 		.word	adc_flag
 5259 009c 00000000 		.word	timer_flag
 5260 00a0 00000000 		.word	prevCountM1
 5261 00a4 00000000 		.word	prevCountM2
 5262 00a8 00000000 		.word	countM1
 5263 00ac 00000000 		.word	countM2
 5264              		.cfi_endproc
 5265              	.LFE96:
 5266              		.size	turnForDegrees, .-turnForDegrees
 5267              		.section	.text.sharpTurnLeft,"ax",%progbits
 5268              		.align	2
 5269              		.global	sharpTurnLeft
 5270              		.thumb
 5271              		.thumb_func
 5272              		.type	sharpTurnLeft, %function
 5273              	sharpTurnLeft:
 5274              	.LFB97:
 442:.\main.c      **** 
 443:.\main.c      **** void sharpTurnLeft() {
 5275              		.loc 5 443 0
 5276              		.cfi_startproc
 5277              		@ args = 0, pretend = 0, frame = 8
 5278              		@ frame_needed = 1, uses_anonymous_args = 0
 5279 0000 80B5     		push	{r7, lr}
 5280              		.cfi_def_cfa_offset 8
 5281              		.cfi_offset 7, -8
 5282              		.cfi_offset 14, -4
 5283 0002 82B0     		sub	sp, sp, #8
 5284              		.cfi_def_cfa_offset 16
 5285 0004 00AF     		add	r7, sp, #0
 5286              		.cfi_def_cfa_register 7
 444:.\main.c      ****     isr_TS_Disable();
 5287              		.loc 5 444 0
 5288 0006 FFF7FEFF 		bl	isr_TS_Disable
 445:.\main.c      ****     int prevCountM1 = QuadDec_M1_GetCounter();
 5289              		.loc 5 445 0
 5290 000a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 5291 000e 0346     		mov	r3, r0
 5292 0010 7B60     		str	r3, [r7, #4]
 446:.\main.c      ****     int prevCountM2 = QuadDec_M2_GetCounter();
 5293              		.loc 5 446 0
 5294 0012 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 5295 0016 0346     		mov	r3, r0
 5296 0018 3B60     		str	r3, [r7]
 447:.\main.c      ****     
 448:.\main.c      ****     // go until we reach the junction
 449:.\main.c      ****     while (!sensor_readings[BOTTOM_LEFT_SENSOR]) {
 5297              		.loc 5 449 0
 5298 001a 08E0     		b	.L274
 5299              	.L275:
 450:.\main.c      ****         if (adc_flag) {
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 118


 5300              		.loc 5 450 0
 5301 001c 1F4B     		ldr	r3, .L278
 5302 001e 1B68     		ldr	r3, [r3]
 5303 0020 002B     		cmp	r3, #0
 5304 0022 04D0     		beq	.L274
 451:.\main.c      ****             updateSensorValues();
 5305              		.loc 5 451 0
 5306 0024 FFF7FEFF 		bl	updateSensorValues
 452:.\main.c      ****             adc_flag = FALSE;
 5307              		.loc 5 452 0
 5308 0028 1C4B     		ldr	r3, .L278
 5309 002a 0022     		movs	r2, #0
 5310 002c 1A60     		str	r2, [r3]
 5311              	.L274:
 449:.\main.c      ****         if (adc_flag) {
 5312              		.loc 5 449 0
 5313 002e 1C4B     		ldr	r3, .L278+4
 5314 0030 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 5315 0032 002B     		cmp	r3, #0
 5316 0034 F2D0     		beq	.L275
 453:.\main.c      ****         }
 454:.\main.c      ****     }
 455:.\main.c      ****     
 456:.\main.c      ****     // make the turn
 457:.\main.c      ****     setWheelDirection(FALSE, TRUE);
 5317              		.loc 5 457 0
 5318 0036 0020     		movs	r0, #0
 5319 0038 0121     		movs	r1, #1
 5320 003a FFF7FEFF 		bl	setWheelDirection
 458:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 5321              		.loc 5 458 0
 5322 003e 4FF4E170 		mov	r0, #450
 5323 0042 FFF7FEFF 		bl	PWM_1_WriteCompare
 459:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 5324              		.loc 5 459 0
 5325 0046 4FF4E170 		mov	r0, #450
 5326 004a FFF7FEFF 		bl	PWM_2_WriteCompare
 460:.\main.c      ****     QuadDec_M1_SetCounter(prevCountM1);
 5327              		.loc 5 460 0
 5328 004e 7B68     		ldr	r3, [r7, #4]
 5329 0050 9BB2     		uxth	r3, r3
 5330 0052 1BB2     		sxth	r3, r3
 5331 0054 1846     		mov	r0, r3
 5332 0056 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 461:.\main.c      ****     QuadDec_M2_SetCounter(prevCountM2);
 5333              		.loc 5 461 0
 5334 005a 3B68     		ldr	r3, [r7]
 5335 005c 9BB2     		uxth	r3, r3
 5336 005e 1BB2     		sxth	r3, r3
 5337 0060 1846     		mov	r0, r3
 5338 0062 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 462:.\main.c      ****     isr_TS_Enable();
 5339              		.loc 5 462 0
 5340 0066 FFF7FEFF 		bl	isr_TS_Enable
 463:.\main.c      ****     
 464:.\main.c      ****     turnForDegrees(60); // so that it doesn't stop if it's already on a line
 5341              		.loc 5 464 0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 119


 5342 006a 3C20     		movs	r0, #60
 5343 006c FFF7FEFF 		bl	turnForDegrees
 465:.\main.c      ****     
 466:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 5344              		.loc 5 466 0
 5345 0070 08E0     		b	.L276
 5346              	.L277:
 467:.\main.c      ****         if (adc_flag) {
 5347              		.loc 5 467 0
 5348 0072 0A4B     		ldr	r3, .L278
 5349 0074 1B68     		ldr	r3, [r3]
 5350 0076 002B     		cmp	r3, #0
 5351 0078 04D0     		beq	.L276
 468:.\main.c      ****             updateSensorValues();
 5352              		.loc 5 468 0
 5353 007a FFF7FEFF 		bl	updateSensorValues
 469:.\main.c      ****             adc_flag = FALSE;
 5354              		.loc 5 469 0
 5355 007e 074B     		ldr	r3, .L278
 5356 0080 0022     		movs	r2, #0
 5357 0082 1A60     		str	r2, [r3]
 5358              	.L276:
 466:.\main.c      ****         if (adc_flag) {
 5359              		.loc 5 466 0
 5360 0084 064B     		ldr	r3, .L278+4
 5361 0086 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5362 0088 002B     		cmp	r3, #0
 5363 008a F2D0     		beq	.L277
 470:.\main.c      ****         }
 471:.\main.c      ****     }
 472:.\main.c      ****     setWheelDirection(TRUE, TRUE);
 5364              		.loc 5 472 0
 5365 008c 0120     		movs	r0, #1
 5366 008e 0121     		movs	r1, #1
 5367 0090 FFF7FEFF 		bl	setWheelDirection
 473:.\main.c      **** }
 5368              		.loc 5 473 0
 5369 0094 0837     		adds	r7, r7, #8
 5370              		.cfi_def_cfa_offset 8
 5371 0096 BD46     		mov	sp, r7
 5372              		.cfi_def_cfa_register 13
 5373              		@ sp needed
 5374 0098 80BD     		pop	{r7, pc}
 5375              	.L279:
 5376 009a 00BF     		.align	2
 5377              	.L278:
 5378 009c 00000000 		.word	adc_flag
 5379 00a0 00000000 		.word	sensor_readings
 5380              		.cfi_endproc
 5381              	.LFE97:
 5382              		.size	sharpTurnLeft, .-sharpTurnLeft
 5383              		.section	.text.sharpTurnRight,"ax",%progbits
 5384              		.align	2
 5385              		.global	sharpTurnRight
 5386              		.thumb
 5387              		.thumb_func
 5388              		.type	sharpTurnRight, %function
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 120


 5389              	sharpTurnRight:
 5390              	.LFB98:
 474:.\main.c      **** 
 475:.\main.c      **** void sharpTurnRight() {
 5391              		.loc 5 475 0
 5392              		.cfi_startproc
 5393              		@ args = 0, pretend = 0, frame = 8
 5394              		@ frame_needed = 1, uses_anonymous_args = 0
 5395 0000 80B5     		push	{r7, lr}
 5396              		.cfi_def_cfa_offset 8
 5397              		.cfi_offset 7, -8
 5398              		.cfi_offset 14, -4
 5399 0002 82B0     		sub	sp, sp, #8
 5400              		.cfi_def_cfa_offset 16
 5401 0004 00AF     		add	r7, sp, #0
 5402              		.cfi_def_cfa_register 7
 476:.\main.c      ****     isr_TS_Disable();
 5403              		.loc 5 476 0
 5404 0006 FFF7FEFF 		bl	isr_TS_Disable
 477:.\main.c      ****     int prevCountM1 = QuadDec_M1_GetCounter();
 5405              		.loc 5 477 0
 5406 000a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 5407 000e 0346     		mov	r3, r0
 5408 0010 7B60     		str	r3, [r7, #4]
 478:.\main.c      ****     int prevCountM2 = QuadDec_M2_GetCounter();
 5409              		.loc 5 478 0
 5410 0012 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 5411 0016 0346     		mov	r3, r0
 5412 0018 3B60     		str	r3, [r7]
 479:.\main.c      ****     
 480:.\main.c      ****     // go until we reach the junction
 481:.\main.c      ****     while (!sensor_readings[BOTTOM_RIGHT_SENSOR]) {
 5413              		.loc 5 481 0
 5414 001a 08E0     		b	.L281
 5415              	.L282:
 482:.\main.c      ****         if (adc_flag) {
 5416              		.loc 5 482 0
 5417 001c 1F4B     		ldr	r3, .L285
 5418 001e 1B68     		ldr	r3, [r3]
 5419 0020 002B     		cmp	r3, #0
 5420 0022 04D0     		beq	.L281
 483:.\main.c      ****             updateSensorValues();
 5421              		.loc 5 483 0
 5422 0024 FFF7FEFF 		bl	updateSensorValues
 484:.\main.c      ****             adc_flag = FALSE;
 5423              		.loc 5 484 0
 5424 0028 1C4B     		ldr	r3, .L285
 5425 002a 0022     		movs	r2, #0
 5426 002c 1A60     		str	r2, [r3]
 5427              	.L281:
 481:.\main.c      ****         if (adc_flag) {
 5428              		.loc 5 481 0
 5429 002e 1C4B     		ldr	r3, .L285+4
 5430 0030 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 5431 0032 002B     		cmp	r3, #0
 5432 0034 F2D0     		beq	.L282
 485:.\main.c      ****         }
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 121


 486:.\main.c      ****     }
 487:.\main.c      ****     
 488:.\main.c      ****     // make the turn
 489:.\main.c      ****     setWheelDirection(TRUE, FALSE);
 5433              		.loc 5 489 0
 5434 0036 0120     		movs	r0, #1
 5435 0038 0021     		movs	r1, #0
 5436 003a FFF7FEFF 		bl	setWheelDirection
 490:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 5437              		.loc 5 490 0
 5438 003e 4FF4E170 		mov	r0, #450
 5439 0042 FFF7FEFF 		bl	PWM_1_WriteCompare
 491:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 5440              		.loc 5 491 0
 5441 0046 4FF4E170 		mov	r0, #450
 5442 004a FFF7FEFF 		bl	PWM_2_WriteCompare
 492:.\main.c      ****     
 493:.\main.c      ****     QuadDec_M1_SetCounter(prevCountM1);
 5443              		.loc 5 493 0
 5444 004e 7B68     		ldr	r3, [r7, #4]
 5445 0050 9BB2     		uxth	r3, r3
 5446 0052 1BB2     		sxth	r3, r3
 5447 0054 1846     		mov	r0, r3
 5448 0056 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 494:.\main.c      ****     QuadDec_M2_SetCounter(prevCountM2);
 5449              		.loc 5 494 0
 5450 005a 3B68     		ldr	r3, [r7]
 5451 005c 9BB2     		uxth	r3, r3
 5452 005e 1BB2     		sxth	r3, r3
 5453 0060 1846     		mov	r0, r3
 5454 0062 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 495:.\main.c      ****     isr_TS_Enable();
 5455              		.loc 5 495 0
 5456 0066 FFF7FEFF 		bl	isr_TS_Enable
 496:.\main.c      ****     
 497:.\main.c      ****     //45 may be too small.  Will try 60
 498:.\main.c      ****     turnForDegrees(60); // so that it doesn't stop if it's already on a line
 5457              		.loc 5 498 0
 5458 006a 3C20     		movs	r0, #60
 5459 006c FFF7FEFF 		bl	turnForDegrees
 499:.\main.c      ****     
 500:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 5460              		.loc 5 500 0
 5461 0070 08E0     		b	.L283
 5462              	.L284:
 501:.\main.c      ****         if (adc_flag) {
 5463              		.loc 5 501 0
 5464 0072 0A4B     		ldr	r3, .L285
 5465 0074 1B68     		ldr	r3, [r3]
 5466 0076 002B     		cmp	r3, #0
 5467 0078 04D0     		beq	.L283
 502:.\main.c      ****             updateSensorValues();
 5468              		.loc 5 502 0
 5469 007a FFF7FEFF 		bl	updateSensorValues
 503:.\main.c      ****             adc_flag = FALSE;
 5470              		.loc 5 503 0
 5471 007e 074B     		ldr	r3, .L285
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 122


 5472 0080 0022     		movs	r2, #0
 5473 0082 1A60     		str	r2, [r3]
 5474              	.L283:
 500:.\main.c      ****         if (adc_flag) {
 5475              		.loc 5 500 0
 5476 0084 064B     		ldr	r3, .L285+4
 5477 0086 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5478 0088 002B     		cmp	r3, #0
 5479 008a F2D0     		beq	.L284
 504:.\main.c      ****         }
 505:.\main.c      ****     }
 506:.\main.c      ****     setWheelDirection(TRUE, TRUE);
 5480              		.loc 5 506 0
 5481 008c 0120     		movs	r0, #1
 5482 008e 0121     		movs	r1, #1
 5483 0090 FFF7FEFF 		bl	setWheelDirection
 507:.\main.c      **** }
 5484              		.loc 5 507 0
 5485 0094 0837     		adds	r7, r7, #8
 5486              		.cfi_def_cfa_offset 8
 5487 0096 BD46     		mov	sp, r7
 5488              		.cfi_def_cfa_register 13
 5489              		@ sp needed
 5490 0098 80BD     		pop	{r7, pc}
 5491              	.L286:
 5492 009a 00BF     		.align	2
 5493              	.L285:
 5494 009c 00000000 		.word	adc_flag
 5495 00a0 00000000 		.word	sensor_readings
 5496              		.cfi_endproc
 5497              	.LFE98:
 5498              		.size	sharpTurnRight, .-sharpTurnRight
 5499              		.section	.text.goForwardWithoutTracking,"ax",%progbits
 5500              		.align	2
 5501              		.global	goForwardWithoutTracking
 5502              		.thumb
 5503              		.thumb_func
 5504              		.type	goForwardWithoutTracking, %function
 5505              	goForwardWithoutTracking:
 5506              	.LFB99:
 508:.\main.c      **** 
 509:.\main.c      **** void goForwardWithoutTracking(int *left_wheel_count, int *right_wheel_count, int distance_to_travel
 5507              		.loc 5 509 0
 5508              		.cfi_startproc
 5509              		@ args = 0, pretend = 0, frame = 24
 5510              		@ frame_needed = 1, uses_anonymous_args = 0
 5511 0000 80B5     		push	{r7, lr}
 5512              		.cfi_def_cfa_offset 8
 5513              		.cfi_offset 7, -8
 5514              		.cfi_offset 14, -4
 5515 0002 86B0     		sub	sp, sp, #24
 5516              		.cfi_def_cfa_offset 32
 5517 0004 00AF     		add	r7, sp, #0
 5518              		.cfi_def_cfa_register 7
 5519 0006 F860     		str	r0, [r7, #12]
 5520 0008 B960     		str	r1, [r7, #8]
 5521 000a 7A60     		str	r2, [r7, #4]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 123


 510:.\main.c      ****     // go forward slightly
 511:.\main.c      ****     float distance = 0;
 5522              		.loc 5 511 0
 5523 000c 4FF00003 		mov	r3, #0
 5524 0010 7B61     		str	r3, [r7, #20]	@ float
 512:.\main.c      ****     while (distance < distance_to_travel) {
 5525              		.loc 5 512 0
 5526 0012 42E0     		b	.L288
 5527              	.L290:
 513:.\main.c      ****         
 514:.\main.c      ****         if (adc_flag) {
 5528              		.loc 5 514 0
 5529 0014 284B     		ldr	r3, .L291
 5530 0016 1B68     		ldr	r3, [r3]
 5531 0018 002B     		cmp	r3, #0
 5532 001a 04D0     		beq	.L289
 515:.\main.c      ****             updateSensorValues();
 5533              		.loc 5 515 0
 5534 001c FFF7FEFF 		bl	updateSensorValues
 516:.\main.c      ****             adc_flag = FALSE;
 5535              		.loc 5 516 0
 5536 0020 254B     		ldr	r3, .L291
 5537 0022 0022     		movs	r2, #0
 5538 0024 1A60     		str	r2, [r3]
 5539              	.L289:
 517:.\main.c      ****         }
 518:.\main.c      ****         
 519:.\main.c      ****          // New count values from encoder are ready
 520:.\main.c      ****         if (timer_flag){
 5540              		.loc 5 520 0
 5541 0026 254B     		ldr	r3, .L291+4
 5542 0028 1B68     		ldr	r3, [r3]
 5543 002a 002B     		cmp	r3, #0
 5544 002c 35D0     		beq	.L288
 521:.\main.c      ****             isr_TS_Disable();
 5545              		.loc 5 521 0
 5546 002e FFF7FEFF 		bl	isr_TS_Disable
 522:.\main.c      ****             
 523:.\main.c      ****             // update distance
 524:.\main.c      ****             distance += getDistance(prevCountM1, prevCountM2);
 5547              		.loc 5 524 0
 5548 0032 234B     		ldr	r3, .L291+8
 5549 0034 1A68     		ldr	r2, [r3]
 5550 0036 234B     		ldr	r3, .L291+12
 5551 0038 1B68     		ldr	r3, [r3]
 5552 003a 1046     		mov	r0, r2
 5553 003c 1946     		mov	r1, r3
 5554 003e FFF7FEFF 		bl	getDistance
 5555 0042 0346     		mov	r3, r0
 5556 0044 7869     		ldr	r0, [r7, #20]	@ float
 5557 0046 1946     		mov	r1, r3
 5558 0048 FFF7FEFF 		bl	__aeabi_fadd
 5559 004c 0346     		mov	r3, r0
 5560 004e 7B61     		str	r3, [r7, #20]	@ float
 525:.\main.c      ****             
 526:.\main.c      ****             // Correct speed
 527:.\main.c      ****             correctSpeed(prevCountM1,countM1,*left_wheel_count,TRUE);
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 124


 5561              		.loc 5 527 0
 5562 0050 1B4B     		ldr	r3, .L291+8
 5563 0052 1968     		ldr	r1, [r3]
 5564 0054 1C4B     		ldr	r3, .L291+16
 5565 0056 1A68     		ldr	r2, [r3]
 5566 0058 FB68     		ldr	r3, [r7, #12]
 5567 005a 1B68     		ldr	r3, [r3]
 5568 005c 0846     		mov	r0, r1
 5569 005e 1146     		mov	r1, r2
 5570 0060 1A46     		mov	r2, r3
 5571 0062 0123     		movs	r3, #1
 5572 0064 FFF7FEFF 		bl	correctSpeed
 528:.\main.c      ****             correctSpeed(prevCountM2,countM2,*right_wheel_count,FALSE);
 5573              		.loc 5 528 0
 5574 0068 164B     		ldr	r3, .L291+12
 5575 006a 1968     		ldr	r1, [r3]
 5576 006c 174B     		ldr	r3, .L291+20
 5577 006e 1A68     		ldr	r2, [r3]
 5578 0070 BB68     		ldr	r3, [r7, #8]
 5579 0072 1B68     		ldr	r3, [r3]
 5580 0074 0846     		mov	r0, r1
 5581 0076 1146     		mov	r1, r2
 5582 0078 1A46     		mov	r2, r3
 5583 007a 0023     		movs	r3, #0
 5584 007c FFF7FEFF 		bl	correctSpeed
 529:.\main.c      ****             
 530:.\main.c      ****             // Update previous values
 531:.\main.c      ****             prevCountM1 = countM1;
 5585              		.loc 5 531 0
 5586 0080 114B     		ldr	r3, .L291+16
 5587 0082 1B68     		ldr	r3, [r3]
 5588 0084 0E4A     		ldr	r2, .L291+8
 5589 0086 1360     		str	r3, [r2]
 532:.\main.c      ****             prevCountM2 = countM2;
 5590              		.loc 5 532 0
 5591 0088 104B     		ldr	r3, .L291+20
 5592 008a 1B68     		ldr	r3, [r3]
 5593 008c 0D4A     		ldr	r2, .L291+12
 5594 008e 1360     		str	r3, [r2]
 533:.\main.c      ****             
 534:.\main.c      ****             // Reset flag
 535:.\main.c      ****             timer_flag = FALSE;
 5595              		.loc 5 535 0
 5596 0090 0A4B     		ldr	r3, .L291+4
 5597 0092 0022     		movs	r2, #0
 5598 0094 1A60     		str	r2, [r3]
 536:.\main.c      ****             
 537:.\main.c      ****             isr_TS_Enable();
 5599              		.loc 5 537 0
 5600 0096 FFF7FEFF 		bl	isr_TS_Enable
 5601              	.L288:
 512:.\main.c      ****         
 5602              		.loc 5 512 0
 5603 009a 7868     		ldr	r0, [r7, #4]
 5604 009c FFF7FEFF 		bl	__aeabi_i2f
 5605 00a0 0346     		mov	r3, r0
 5606 00a2 1846     		mov	r0, r3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 125


 5607 00a4 7969     		ldr	r1, [r7, #20]	@ float
 5608 00a6 FFF7FEFF 		bl	__aeabi_fcmpgt
 5609 00aa 0346     		mov	r3, r0
 5610 00ac 002B     		cmp	r3, #0
 5611 00ae B1D1     		bne	.L290
 538:.\main.c      ****         }
 539:.\main.c      ****     }
 540:.\main.c      **** }
 5612              		.loc 5 540 0
 5613 00b0 1837     		adds	r7, r7, #24
 5614              		.cfi_def_cfa_offset 8
 5615 00b2 BD46     		mov	sp, r7
 5616              		.cfi_def_cfa_register 13
 5617              		@ sp needed
 5618 00b4 80BD     		pop	{r7, pc}
 5619              	.L292:
 5620 00b6 00BF     		.align	2
 5621              	.L291:
 5622 00b8 00000000 		.word	adc_flag
 5623 00bc 00000000 		.word	timer_flag
 5624 00c0 00000000 		.word	prevCountM1
 5625 00c4 00000000 		.word	prevCountM2
 5626 00c8 00000000 		.word	countM1
 5627 00cc 00000000 		.word	countM2
 5628              		.cfi_endproc
 5629              	.LFE99:
 5630              		.size	goForwardWithoutTracking, .-goForwardWithoutTracking
 5631              		.section	.text.uTurn,"ax",%progbits
 5632              		.align	2
 5633              		.global	uTurn
 5634              		.thumb
 5635              		.thumb_func
 5636              		.type	uTurn, %function
 5637              	uTurn:
 5638              	.LFB100:
 541:.\main.c      ****     
 542:.\main.c      **** void uTurn(int *left_wheel_count, int *right_wheel_count) {
 5639              		.loc 5 542 0
 5640              		.cfi_startproc
 5641              		@ args = 0, pretend = 0, frame = 16
 5642              		@ frame_needed = 1, uses_anonymous_args = 0
 5643 0000 80B5     		push	{r7, lr}
 5644              		.cfi_def_cfa_offset 8
 5645              		.cfi_offset 7, -8
 5646              		.cfi_offset 14, -4
 5647 0002 84B0     		sub	sp, sp, #16
 5648              		.cfi_def_cfa_offset 24
 5649 0004 00AF     		add	r7, sp, #0
 5650              		.cfi_def_cfa_register 7
 5651 0006 7860     		str	r0, [r7, #4]
 5652 0008 3960     		str	r1, [r7]
 543:.\main.c      ****     goForwardWithoutTracking(left_wheel_count, right_wheel_count, SMALL_FORWARD_DISTANCE);
 5653              		.loc 5 543 0
 5654 000a 7868     		ldr	r0, [r7, #4]
 5655 000c 3968     		ldr	r1, [r7]
 5656 000e 0822     		movs	r2, #8
 5657 0010 FFF7FEFF 		bl	goForwardWithoutTracking
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 126


 544:.\main.c      ****     
 545:.\main.c      ****     isr_TS_Disable();
 5658              		.loc 5 545 0
 5659 0014 FFF7FEFF 		bl	isr_TS_Disable
 546:.\main.c      ****     int prevCountM1 = QuadDec_M1_GetCounter();
 5660              		.loc 5 546 0
 5661 0018 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 5662 001c 0346     		mov	r3, r0
 5663 001e FB60     		str	r3, [r7, #12]
 547:.\main.c      ****     int prevCountM2 = QuadDec_M2_GetCounter();
 5664              		.loc 5 547 0
 5665 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 5666 0024 0346     		mov	r3, r0
 5667 0026 BB60     		str	r3, [r7, #8]
 548:.\main.c      ****     
 549:.\main.c      ****     // go until we reach the junction
 550:.\main.c      ****     while (!sensor_readings[BOTTOM_RIGHT_SENSOR] && !sensor_readings[BOTTOM_LEFT_SENSOR] && sensor_
 5668              		.loc 5 550 0
 5669 0028 08E0     		b	.L294
 5670              	.L296:
 551:.\main.c      ****         if (adc_flag) {
 5671              		.loc 5 551 0
 5672 002a 234B     		ldr	r3, .L299
 5673 002c 1B68     		ldr	r3, [r3]
 5674 002e 002B     		cmp	r3, #0
 5675 0030 04D0     		beq	.L294
 552:.\main.c      ****             updateSensorValues();
 5676              		.loc 5 552 0
 5677 0032 FFF7FEFF 		bl	updateSensorValues
 553:.\main.c      ****             adc_flag = FALSE;
 5678              		.loc 5 553 0
 5679 0036 204B     		ldr	r3, .L299
 5680 0038 0022     		movs	r2, #0
 5681 003a 1A60     		str	r2, [r3]
 5682              	.L294:
 550:.\main.c      ****         if (adc_flag) {
 5683              		.loc 5 550 0
 5684 003c 1F4B     		ldr	r3, .L299+4
 5685 003e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 5686 0040 002B     		cmp	r3, #0
 5687 0042 07D1     		bne	.L295
 550:.\main.c      ****         if (adc_flag) {
 5688              		.loc 5 550 0 is_stmt 0 discriminator 1
 5689 0044 1D4B     		ldr	r3, .L299+4
 5690 0046 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 5691 0048 002B     		cmp	r3, #0
 5692 004a 03D1     		bne	.L295
 550:.\main.c      ****         if (adc_flag) {
 5693              		.loc 5 550 0 discriminator 2
 5694 004c 1B4B     		ldr	r3, .L299+4
 5695 004e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 5696 0050 002B     		cmp	r3, #0
 5697 0052 EAD1     		bne	.L296
 5698              	.L295:
 554:.\main.c      ****         }
 555:.\main.c      ****     }
 556:.\main.c      ****     
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 127


 557:.\main.c      ****     // make the turn
 558:.\main.c      ****     setWheelDirection(TRUE, FALSE);
 5699              		.loc 5 558 0 is_stmt 1
 5700 0054 0120     		movs	r0, #1
 5701 0056 0021     		movs	r1, #0
 5702 0058 FFF7FEFF 		bl	setWheelDirection
 559:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 5703              		.loc 5 559 0
 5704 005c 4FF4E170 		mov	r0, #450
 5705 0060 FFF7FEFF 		bl	PWM_1_WriteCompare
 560:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 5706              		.loc 5 560 0
 5707 0064 4FF4E170 		mov	r0, #450
 5708 0068 FFF7FEFF 		bl	PWM_2_WriteCompare
 561:.\main.c      ****     
 562:.\main.c      ****     QuadDec_M1_SetCounter(prevCountM1);
 5709              		.loc 5 562 0
 5710 006c FB68     		ldr	r3, [r7, #12]
 5711 006e 9BB2     		uxth	r3, r3
 5712 0070 1BB2     		sxth	r3, r3
 5713 0072 1846     		mov	r0, r3
 5714 0074 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 563:.\main.c      ****     QuadDec_M2_SetCounter(prevCountM2);
 5715              		.loc 5 563 0
 5716 0078 BB68     		ldr	r3, [r7, #8]
 5717 007a 9BB2     		uxth	r3, r3
 5718 007c 1BB2     		sxth	r3, r3
 5719 007e 1846     		mov	r0, r3
 5720 0080 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 564:.\main.c      ****     isr_TS_Enable();
 5721              		.loc 5 564 0
 5722 0084 FFF7FEFF 		bl	isr_TS_Enable
 565:.\main.c      ****     
 566:.\main.c      ****     
 567:.\main.c      ****     // the number 180 is roughly a 135 degree turn
 568:.\main.c      ****     turnForDegrees(180); // so that it doesn't stop if it's already on a line
 5723              		.loc 5 568 0
 5724 0088 B420     		movs	r0, #180
 5725 008a FFF7FEFF 		bl	turnForDegrees
 569:.\main.c      ****     
 570:.\main.c      ****     // finish turn
 571:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 5726              		.loc 5 571 0
 5727 008e 08E0     		b	.L297
 5728              	.L298:
 572:.\main.c      ****         if (adc_flag) {
 5729              		.loc 5 572 0
 5730 0090 094B     		ldr	r3, .L299
 5731 0092 1B68     		ldr	r3, [r3]
 5732 0094 002B     		cmp	r3, #0
 5733 0096 04D0     		beq	.L297
 573:.\main.c      ****             updateSensorValues();
 5734              		.loc 5 573 0
 5735 0098 FFF7FEFF 		bl	updateSensorValues
 574:.\main.c      ****             adc_flag = FALSE;
 5736              		.loc 5 574 0
 5737 009c 064B     		ldr	r3, .L299
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 128


 5738 009e 0022     		movs	r2, #0
 5739 00a0 1A60     		str	r2, [r3]
 5740              	.L297:
 571:.\main.c      ****         if (adc_flag) {
 5741              		.loc 5 571 0
 5742 00a2 064B     		ldr	r3, .L299+4
 5743 00a4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5744 00a6 002B     		cmp	r3, #0
 5745 00a8 F2D0     		beq	.L298
 575:.\main.c      ****         }
 576:.\main.c      ****     }
 577:.\main.c      ****     setWheelDirection(TRUE, TRUE);
 5746              		.loc 5 577 0
 5747 00aa 0120     		movs	r0, #1
 5748 00ac 0121     		movs	r1, #1
 5749 00ae FFF7FEFF 		bl	setWheelDirection
 578:.\main.c      **** }
 5750              		.loc 5 578 0
 5751 00b2 1037     		adds	r7, r7, #16
 5752              		.cfi_def_cfa_offset 8
 5753 00b4 BD46     		mov	sp, r7
 5754              		.cfi_def_cfa_register 13
 5755              		@ sp needed
 5756 00b6 80BD     		pop	{r7, pc}
 5757              	.L300:
 5758              		.align	2
 5759              	.L299:
 5760 00b8 00000000 		.word	adc_flag
 5761 00bc 00000000 		.word	sensor_readings
 5762              		.cfi_endproc
 5763              	.LFE100:
 5764              		.size	uTurn, .-uTurn
 5765              		.section	.text.changeLeftWheelSpeed,"ax",%progbits
 5766              		.align	2
 5767              		.global	changeLeftWheelSpeed
 5768              		.thumb
 5769              		.thumb_func
 5770              		.type	changeLeftWheelSpeed, %function
 5771              	changeLeftWheelSpeed:
 5772              	.LFB101:
 579:.\main.c      **** 
 580:.\main.c      **** // --------------------------------------------- HELPERS ------------------------------------------
 581:.\main.c      **** void changeLeftWheelSpeed(int amount) {
 5773              		.loc 5 581 0
 5774              		.cfi_startproc
 5775              		@ args = 0, pretend = 0, frame = 16
 5776              		@ frame_needed = 1, uses_anonymous_args = 0
 5777 0000 80B5     		push	{r7, lr}
 5778              		.cfi_def_cfa_offset 8
 5779              		.cfi_offset 7, -8
 5780              		.cfi_offset 14, -4
 5781 0002 84B0     		sub	sp, sp, #16
 5782              		.cfi_def_cfa_offset 24
 5783 0004 00AF     		add	r7, sp, #0
 5784              		.cfi_def_cfa_register 7
 5785 0006 7860     		str	r0, [r7, #4]
 582:.\main.c      ****     int new_value = PWM_1_ReadCompare() + amount;
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 129


 5786              		.loc 5 582 0
 5787 0008 FFF7FEFF 		bl	PWM_1_ReadCompare
 5788 000c 0346     		mov	r3, r0
 5789 000e 1A46     		mov	r2, r3
 5790 0010 7B68     		ldr	r3, [r7, #4]
 5791 0012 1344     		add	r3, r3, r2
 5792 0014 FB60     		str	r3, [r7, #12]
 583:.\main.c      ****     PWM_1_WriteCompare((new_value > 0) ? new_value:0); // account for underflow
 5793              		.loc 5 583 0
 5794 0016 FB68     		ldr	r3, [r7, #12]
 5795 0018 23EAE373 		bic	r3, r3, r3, asr #31
 5796 001c 9BB2     		uxth	r3, r3
 5797 001e 1846     		mov	r0, r3
 5798 0020 FFF7FEFF 		bl	PWM_1_WriteCompare
 584:.\main.c      **** }
 5799              		.loc 5 584 0
 5800 0024 1037     		adds	r7, r7, #16
 5801              		.cfi_def_cfa_offset 8
 5802 0026 BD46     		mov	sp, r7
 5803              		.cfi_def_cfa_register 13
 5804              		@ sp needed
 5805 0028 80BD     		pop	{r7, pc}
 5806              		.cfi_endproc
 5807              	.LFE101:
 5808              		.size	changeLeftWheelSpeed, .-changeLeftWheelSpeed
 5809 002a 00BF     		.section	.text.changeRightWheelSpeed,"ax",%progbits
 5810              		.align	2
 5811              		.global	changeRightWheelSpeed
 5812              		.thumb
 5813              		.thumb_func
 5814              		.type	changeRightWheelSpeed, %function
 5815              	changeRightWheelSpeed:
 5816              	.LFB102:
 585:.\main.c      **** 
 586:.\main.c      **** void changeRightWheelSpeed(int amount){
 5817              		.loc 5 586 0
 5818              		.cfi_startproc
 5819              		@ args = 0, pretend = 0, frame = 16
 5820              		@ frame_needed = 1, uses_anonymous_args = 0
 5821 0000 80B5     		push	{r7, lr}
 5822              		.cfi_def_cfa_offset 8
 5823              		.cfi_offset 7, -8
 5824              		.cfi_offset 14, -4
 5825 0002 84B0     		sub	sp, sp, #16
 5826              		.cfi_def_cfa_offset 24
 5827 0004 00AF     		add	r7, sp, #0
 5828              		.cfi_def_cfa_register 7
 5829 0006 7860     		str	r0, [r7, #4]
 587:.\main.c      ****     int new_value = PWM_2_ReadCompare() + amount;
 5830              		.loc 5 587 0
 5831 0008 FFF7FEFF 		bl	PWM_2_ReadCompare
 5832 000c 0346     		mov	r3, r0
 5833 000e 1A46     		mov	r2, r3
 5834 0010 7B68     		ldr	r3, [r7, #4]
 5835 0012 1344     		add	r3, r3, r2
 5836 0014 FB60     		str	r3, [r7, #12]
 588:.\main.c      ****     PWM_2_WriteCompare((new_value > 0) ? new_value:0); // account for underflow
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 130


 5837              		.loc 5 588 0
 5838 0016 FB68     		ldr	r3, [r7, #12]
 5839 0018 23EAE373 		bic	r3, r3, r3, asr #31
 5840 001c 9BB2     		uxth	r3, r3
 5841 001e 1846     		mov	r0, r3
 5842 0020 FFF7FEFF 		bl	PWM_2_WriteCompare
 589:.\main.c      **** }
 5843              		.loc 5 589 0
 5844 0024 1037     		adds	r7, r7, #16
 5845              		.cfi_def_cfa_offset 8
 5846 0026 BD46     		mov	sp, r7
 5847              		.cfi_def_cfa_register 13
 5848              		@ sp needed
 5849 0028 80BD     		pop	{r7, pc}
 5850              		.cfi_endproc
 5851              	.LFE102:
 5852              		.size	changeRightWheelSpeed, .-changeRightWheelSpeed
 5853 002a 00BF     		.section	.text.startWheels,"ax",%progbits
 5854              		.align	2
 5855              		.global	startWheels
 5856              		.thumb
 5857              		.thumb_func
 5858              		.type	startWheels, %function
 5859              	startWheels:
 5860              	.LFB103:
 590:.\main.c      **** 
 591:.\main.c      **** void startWheels() {
 5861              		.loc 5 591 0
 5862              		.cfi_startproc
 5863              		@ args = 0, pretend = 0, frame = 0
 5864              		@ frame_needed = 1, uses_anonymous_args = 0
 5865 0000 80B5     		push	{r7, lr}
 5866              		.cfi_def_cfa_offset 8
 5867              		.cfi_offset 7, -8
 5868              		.cfi_offset 14, -4
 5869 0002 00AF     		add	r7, sp, #0
 5870              		.cfi_def_cfa_register 7
 592:.\main.c      ****     PWM_1_WriteCompare(300);
 5871              		.loc 5 592 0
 5872 0004 4FF49670 		mov	r0, #300
 5873 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
 593:.\main.c      ****     PWM_2_WriteCompare(300);
 5874              		.loc 5 593 0
 5875 000c 4FF49670 		mov	r0, #300
 5876 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
 594:.\main.c      **** }
 5877              		.loc 5 594 0
 5878 0014 80BD     		pop	{r7, pc}
 5879              		.cfi_endproc
 5880              	.LFE103:
 5881              		.size	startWheels, .-startWheels
 5882 0016 00BF     		.section	.text.stopWheels,"ax",%progbits
 5883              		.align	2
 5884              		.global	stopWheels
 5885              		.thumb
 5886              		.thumb_func
 5887              		.type	stopWheels, %function
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 131


 5888              	stopWheels:
 5889              	.LFB104:
 595:.\main.c      **** 
 596:.\main.c      **** void stopWheels() {
 5890              		.loc 5 596 0
 5891              		.cfi_startproc
 5892              		@ args = 0, pretend = 0, frame = 0
 5893              		@ frame_needed = 1, uses_anonymous_args = 0
 5894 0000 80B5     		push	{r7, lr}
 5895              		.cfi_def_cfa_offset 8
 5896              		.cfi_offset 7, -8
 5897              		.cfi_offset 14, -4
 5898 0002 00AF     		add	r7, sp, #0
 5899              		.cfi_def_cfa_register 7
 597:.\main.c      ****     PWM_1_WriteCompare(0);
 5900              		.loc 5 597 0
 5901 0004 0020     		movs	r0, #0
 5902 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 598:.\main.c      ****     PWM_2_WriteCompare(0);
 5903              		.loc 5 598 0
 5904 000a 0020     		movs	r0, #0
 5905 000c FFF7FEFF 		bl	PWM_2_WriteCompare
 599:.\main.c      **** }
 5906              		.loc 5 599 0
 5907 0010 80BD     		pop	{r7, pc}
 5908              		.cfi_endproc
 5909              	.LFE104:
 5910              		.size	stopWheels, .-stopWheels
 5911              		.global	__aeabi_fdiv
 5912              		.global	__aeabi_f2d
 5913              		.global	__aeabi_dmul
 5914              		.global	__aeabi_d2f
 5915 0012 00BF     		.section	.text.getDistance,"ax",%progbits
 5916              		.align	2
 5917              		.global	getDistance
 5918              		.thumb
 5919              		.thumb_func
 5920              		.type	getDistance, %function
 5921              	getDistance:
 5922              	.LFB105:
 600:.\main.c      **** 
 601:.\main.c      **** float getDistance(int prevCountM1, int prevCountM2) {
 5923              		.loc 5 601 0
 5924              		.cfi_startproc
 5925              		@ args = 0, pretend = 0, frame = 16
 5926              		@ frame_needed = 1, uses_anonymous_args = 0
 5927 0000 80B5     		push	{r7, lr}
 5928              		.cfi_def_cfa_offset 8
 5929              		.cfi_offset 7, -8
 5930              		.cfi_offset 14, -4
 5931 0002 84B0     		sub	sp, sp, #16
 5932              		.cfi_def_cfa_offset 24
 5933 0004 00AF     		add	r7, sp, #0
 5934              		.cfi_def_cfa_register 7
 5935 0006 7860     		str	r0, [r7, #4]
 5936 0008 3960     		str	r1, [r7]
 602:.\main.c      ****     float m1_dist = ((float)abs(countM1 - prevCountM1) / TICKS_PER_REV) * LINEAR_DISTANCE_PER_REV;
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 132


 5937              		.loc 5 602 0
 5938 000a 2D4B     		ldr	r3, .L307+8
 5939 000c 1A68     		ldr	r2, [r3]
 5940 000e 7B68     		ldr	r3, [r7, #4]
 5941 0010 D31A     		subs	r3, r2, r3
 5942 0012 002B     		cmp	r3, #0
 5943 0014 B8BF     		it	lt
 5944 0016 5B42     		rsblt	r3, r3, #0
 5945 0018 1846     		mov	r0, r3
 5946 001a FFF7FEFF 		bl	__aeabi_i2f
 5947 001e 0346     		mov	r3, r0
 5948 0020 1846     		mov	r0, r3
 5949 0022 2849     		ldr	r1, .L307+12
 5950 0024 FFF7FEFF 		bl	__aeabi_fdiv
 5951 0028 0346     		mov	r3, r0
 5952 002a 1846     		mov	r0, r3
 5953 002c FFF7FEFF 		bl	__aeabi_f2d
 5954 0030 0246     		mov	r2, r0
 5955 0032 0B46     		mov	r3, r1
 5956 0034 1046     		mov	r0, r2
 5957 0036 1946     		mov	r1, r3
 5958 0038 1FA3     		adr	r3, .L307
 5959 003a D3E90023 		ldrd	r2, [r3]
 5960 003e FFF7FEFF 		bl	__aeabi_dmul
 5961 0042 0246     		mov	r2, r0
 5962 0044 0B46     		mov	r3, r1
 5963 0046 1046     		mov	r0, r2
 5964 0048 1946     		mov	r1, r3
 5965 004a FFF7FEFF 		bl	__aeabi_d2f
 5966 004e 0346     		mov	r3, r0
 5967 0050 FB60     		str	r3, [r7, #12]	@ float
 603:.\main.c      ****     float m2_dist = ((float)abs(countM2 - prevCountM2) / TICKS_PER_REV) * LINEAR_DISTANCE_PER_REV;
 5968              		.loc 5 603 0
 5969 0052 1D4B     		ldr	r3, .L307+16
 5970 0054 1A68     		ldr	r2, [r3]
 5971 0056 3B68     		ldr	r3, [r7]
 5972 0058 D31A     		subs	r3, r2, r3
 5973 005a 002B     		cmp	r3, #0
 5974 005c B8BF     		it	lt
 5975 005e 5B42     		rsblt	r3, r3, #0
 5976 0060 1846     		mov	r0, r3
 5977 0062 FFF7FEFF 		bl	__aeabi_i2f
 5978 0066 0346     		mov	r3, r0
 5979 0068 1846     		mov	r0, r3
 5980 006a 1649     		ldr	r1, .L307+12
 5981 006c FFF7FEFF 		bl	__aeabi_fdiv
 5982 0070 0346     		mov	r3, r0
 5983 0072 1846     		mov	r0, r3
 5984 0074 FFF7FEFF 		bl	__aeabi_f2d
 5985 0078 0246     		mov	r2, r0
 5986 007a 0B46     		mov	r3, r1
 5987 007c 1046     		mov	r0, r2
 5988 007e 1946     		mov	r1, r3
 5989 0080 0DA3     		adr	r3, .L307
 5990 0082 D3E90023 		ldrd	r2, [r3]
 5991 0086 FFF7FEFF 		bl	__aeabi_dmul
 5992 008a 0246     		mov	r2, r0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 133


 5993 008c 0B46     		mov	r3, r1
 5994 008e 1046     		mov	r0, r2
 5995 0090 1946     		mov	r1, r3
 5996 0092 FFF7FEFF 		bl	__aeabi_d2f
 5997 0096 0346     		mov	r3, r0
 5998 0098 BB60     		str	r3, [r7, #8]	@ float
 604:.\main.c      ****     return (m1_dist + m2_dist) / 2;
 5999              		.loc 5 604 0
 6000 009a F868     		ldr	r0, [r7, #12]	@ float
 6001 009c B968     		ldr	r1, [r7, #8]	@ float
 6002 009e FFF7FEFF 		bl	__aeabi_fadd
 6003 00a2 0346     		mov	r3, r0
 6004 00a4 1846     		mov	r0, r3
 6005 00a6 4FF08041 		mov	r1, #1073741824
 6006 00aa FFF7FEFF 		bl	__aeabi_fdiv
 6007 00ae 0346     		mov	r3, r0
 605:.\main.c      **** };
 6008              		.loc 5 605 0
 6009 00b0 1846     		mov	r0, r3
 6010 00b2 1037     		adds	r7, r7, #16
 6011              		.cfi_def_cfa_offset 8
 6012 00b4 BD46     		mov	sp, r7
 6013              		.cfi_def_cfa_register 13
 6014              		@ sp needed
 6015 00b6 80BD     		pop	{r7, pc}
 6016              	.L308:
 6017              		.align	3
 6018              	.L307:
 6019 00b8 CE8C7E34 		.word	880708814
 6020 00bc 9C6B3440 		.word	1077177244
 6021 00c0 00000000 		.word	countM1
 6022 00c4 00006443 		.word	1130627072
 6023 00c8 00000000 		.word	countM2
 6024              		.cfi_endproc
 6025              	.LFE105:
 6026              		.size	getDistance, .-getDistance
 6027 00cc AFF30080 		.section	.text.correctSpeed,"ax",%progbits
 6028              		.align	2
 6029              		.global	correctSpeed
 6030              		.thumb
 6031              		.thumb_func
 6032              		.type	correctSpeed, %function
 6033              	correctSpeed:
 6034              	.LFB106:
 606:.\main.c      **** 
 607:.\main.c      **** /* ## SPEED CONTROL ## 
 608:.\main.c      **** * Gets difference between counts, compares to difference we expect. Add correction to PWM.*/
 609:.\main.c      **** void correctSpeed(int prevCount, int count, int desired_count, int isLeftWheel){    
 6035              		.loc 5 609 0
 6036              		.cfi_startproc
 6037              		@ args = 0, pretend = 0, frame = 24
 6038              		@ frame_needed = 1, uses_anonymous_args = 0
 6039 0000 80B5     		push	{r7, lr}
 6040              		.cfi_def_cfa_offset 8
 6041              		.cfi_offset 7, -8
 6042              		.cfi_offset 14, -4
 6043 0002 86B0     		sub	sp, sp, #24
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 134


 6044              		.cfi_def_cfa_offset 32
 6045 0004 00AF     		add	r7, sp, #0
 6046              		.cfi_def_cfa_register 7
 6047 0006 F860     		str	r0, [r7, #12]
 6048 0008 B960     		str	r1, [r7, #8]
 6049 000a 7A60     		str	r2, [r7, #4]
 6050 000c 3B60     		str	r3, [r7]
 610:.\main.c      ****     // Account for overflow edge or other unknown error
 611:.\main.c      **** //    if (prevCount > count) return;
 612:.\main.c      ****     
 613:.\main.c      ****     // Account for when PSoc is powered but wheels aren't moving
 614:.\main.c      ****     int diff_count = abs(count - prevCount);
 6051              		.loc 5 614 0
 6052 000e BA68     		ldr	r2, [r7, #8]
 6053 0010 FB68     		ldr	r3, [r7, #12]
 6054 0012 D31A     		subs	r3, r2, r3
 6055 0014 002B     		cmp	r3, #0
 6056 0016 B8BF     		it	lt
 6057 0018 5B42     		rsblt	r3, r3, #0
 6058 001a 7B61     		str	r3, [r7, #20]
 615:.\main.c      ****     if (diff_count == 0) return;
 6059              		.loc 5 615 0
 6060 001c 7B69     		ldr	r3, [r7, #20]
 6061 001e 002B     		cmp	r3, #0
 6062 0020 00D1     		bne	.L310
 6063 0022 0EE0     		b	.L309
 6064              	.L310:
 616:.\main.c      ****         
 617:.\main.c      ****     /* Determine correction that must be applied to the wheel
 618:.\main.c      ****     * desired_count > diff_count :-> wheel is slow; increase PWM
 619:.\main.c      ****     * desired_count < diff_count :-> wheel is fast; decrease PWM
 620:.\main.c      ****     * desired_count == diff_count :-> wheel is stable; do nothing
 621:.\main.c      ****     */
 622:.\main.c      ****     int correction = desired_count-diff_count;
 6065              		.loc 5 622 0
 6066 0024 7A68     		ldr	r2, [r7, #4]
 6067 0026 7B69     		ldr	r3, [r7, #20]
 6068 0028 D31A     		subs	r3, r2, r3
 6069 002a 3B61     		str	r3, [r7, #16]
 623:.\main.c      ****     
 624:.\main.c      ****     // Apply the speed correction to the appropriate wheel          
 625:.\main.c      ****     if (isLeftWheel) changeLeftWheelSpeed(correction);
 6070              		.loc 5 625 0
 6071 002c 3B68     		ldr	r3, [r7]
 6072 002e 002B     		cmp	r3, #0
 6073 0030 03D0     		beq	.L312
 6074              		.loc 5 625 0 is_stmt 0 discriminator 1
 6075 0032 3869     		ldr	r0, [r7, #16]
 6076 0034 FFF7FEFF 		bl	changeLeftWheelSpeed
 6077 0038 02E0     		b	.L313
 6078              	.L312:
 626:.\main.c      ****     else changeRightWheelSpeed(correction);
 6079              		.loc 5 626 0 is_stmt 1
 6080 003a 3869     		ldr	r0, [r7, #16]
 6081 003c FFF7FEFF 		bl	changeRightWheelSpeed
 6082              	.L313:
 627:.\main.c      ****     
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 135


 628:.\main.c      ****     return;
 6083              		.loc 5 628 0 discriminator 2
 6084 0040 00BF     		nop
 6085              	.L309:
 629:.\main.c      **** }
 6086              		.loc 5 629 0
 6087 0042 1837     		adds	r7, r7, #24
 6088              		.cfi_def_cfa_offset 8
 6089 0044 BD46     		mov	sp, r7
 6090              		.cfi_def_cfa_register 13
 6091              		@ sp needed
 6092 0046 80BD     		pop	{r7, pc}
 6093              		.cfi_endproc
 6094              	.LFE106:
 6095              		.size	correctSpeed, .-correctSpeed
 6096              		.section	.text.setWheelDirection,"ax",%progbits
 6097              		.align	2
 6098              		.global	setWheelDirection
 6099              		.thumb
 6100              		.thumb_func
 6101              		.type	setWheelDirection, %function
 6102              	setWheelDirection:
 6103              	.LFB107:
 630:.\main.c      **** 
 631:.\main.c      **** void setWheelDirection(int leftIsForward, int rightIsForward){
 6104              		.loc 5 631 0
 6105              		.cfi_startproc
 6106              		@ args = 0, pretend = 0, frame = 8
 6107              		@ frame_needed = 1, uses_anonymous_args = 0
 6108 0000 80B5     		push	{r7, lr}
 6109              		.cfi_def_cfa_offset 8
 6110              		.cfi_offset 7, -8
 6111              		.cfi_offset 14, -4
 6112 0002 82B0     		sub	sp, sp, #8
 6113              		.cfi_def_cfa_offset 16
 6114 0004 00AF     		add	r7, sp, #0
 6115              		.cfi_def_cfa_register 7
 6116 0006 7860     		str	r0, [r7, #4]
 6117 0008 3960     		str	r1, [r7]
 632:.\main.c      ****     INV1_Write(!leftIsForward);
 6118              		.loc 5 632 0
 6119 000a 7B68     		ldr	r3, [r7, #4]
 6120 000c 002B     		cmp	r3, #0
 6121 000e 0CBF     		ite	eq
 6122 0010 0123     		moveq	r3, #1
 6123 0012 0023     		movne	r3, #0
 6124 0014 DBB2     		uxtb	r3, r3
 6125 0016 1846     		mov	r0, r3
 6126 0018 FFF7FEFF 		bl	INV1_Write
 633:.\main.c      ****     INV2_Write(rightIsForward);
 6127              		.loc 5 633 0
 6128 001c 3B68     		ldr	r3, [r7]
 6129 001e DBB2     		uxtb	r3, r3
 6130 0020 1846     		mov	r0, r3
 6131 0022 FFF7FEFF 		bl	INV2_Write
 634:.\main.c      **** }
 6132              		.loc 5 634 0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 136


 6133 0026 0837     		adds	r7, r7, #8
 6134              		.cfi_def_cfa_offset 8
 6135 0028 BD46     		mov	sp, r7
 6136              		.cfi_def_cfa_register 13
 6137              		@ sp needed
 6138 002a 80BD     		pop	{r7, pc}
 6139              		.cfi_endproc
 6140              	.LFE107:
 6141              		.size	setWheelDirection, .-setWheelDirection
 6142              		.section	.text.usbPutString,"ax",%progbits
 6143              		.align	2
 6144              		.global	usbPutString
 6145              		.thumb
 6146              		.thumb_func
 6147              		.type	usbPutString, %function
 6148              	usbPutString:
 6149              	.LFB108:
 635:.\main.c      **** 
 636:.\main.c      **** //* ========================================
 637:.\main.c      **** void usbPutString(char *s) {
 6150              		.loc 5 637 0
 6151              		.cfi_startproc
 6152              		@ args = 0, pretend = 0, frame = 8
 6153              		@ frame_needed = 1, uses_anonymous_args = 0
 6154              		@ link register save eliminated.
 6155 0000 80B4     		push	{r7}
 6156              		.cfi_def_cfa_offset 4
 6157              		.cfi_offset 7, -4
 6158 0002 83B0     		sub	sp, sp, #12
 6159              		.cfi_def_cfa_offset 16
 6160 0004 00AF     		add	r7, sp, #0
 6161              		.cfi_def_cfa_register 7
 6162 0006 7860     		str	r0, [r7, #4]
 638:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
 639:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 640:.\main.c      **** //  length to 62 char (63rd char is a '!')
 641:.\main.c      ****     
 642:.\main.c      **** #ifdef PUTTY
 643:.\main.c      ****     while (USBUART_CDCIsReady() == 0){ };
 644:.\main.c      ****     USBUART_PutData((uint8 *)s, strlen(s));
 645:.\main.c      **** #endif
 646:.\main.c      ****     (void)s;
 647:.\main.c      ****     return;
 6163              		.loc 5 647 0
 6164 0008 00BF     		nop
 648:.\main.c      **** }
 6165              		.loc 5 648 0
 6166 000a 0C37     		adds	r7, r7, #12
 6167              		.cfi_def_cfa_offset 4
 6168 000c BD46     		mov	sp, r7
 6169              		.cfi_def_cfa_register 13
 6170              		@ sp needed
 6171 000e 5DF8047B 		ldr	r7, [sp], #4
 6172              		.cfi_restore 7
 6173              		.cfi_def_cfa_offset 0
 6174 0012 7047     		bx	lr
 6175              		.cfi_endproc
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 137


 6176              	.LFE108:
 6177              		.size	usbPutString, .-usbPutString
 6178              		.section	.rodata
 6179 01d2 0000     		.align	2
 6180              	.LC27:
 6181 01d4 4C00     		.ascii	"L\000"
 6182 01d6 0000     		.align	2
 6183              	.LC28:
 6184 01d8 5200     		.ascii	"R\000"
 6185 01da 0000     		.align	2
 6186              	.LC29:
 6187 01dc 5500     		.ascii	"U\000"
 6188 01de 0000     		.align	2
 6189              	.LC30:
 6190 01e0 2C00     		.ascii	",\000"
 6191 01e2 0000     		.align	2
 6192              	.LC31:
 6193 01e4 290D0A00 		.ascii	")\015\012\000"
 6194              		.section	.text.printCommandsUSB,"ax",%progbits
 6195              		.align	2
 6196              		.global	printCommandsUSB
 6197              		.thumb
 6198              		.thumb_func
 6199              		.type	printCommandsUSB, %function
 6200              	printCommandsUSB:
 6201              	.LFB109:
 649:.\main.c      **** 
 650:.\main.c      **** /* Prints the commands */
 651:.\main.c      **** void printCommandsUSB(int8_t *commands){
 6202              		.loc 5 651 0
 6203              		.cfi_startproc
 6204              		@ args = 0, pretend = 0, frame = 48
 6205              		@ frame_needed = 1, uses_anonymous_args = 0
 6206 0000 80B5     		push	{r7, lr}
 6207              		.cfi_def_cfa_offset 8
 6208              		.cfi_offset 7, -8
 6209              		.cfi_offset 14, -4
 6210 0002 8CB0     		sub	sp, sp, #48
 6211              		.cfi_def_cfa_offset 56
 6212 0004 00AF     		add	r7, sp, #0
 6213              		.cfi_def_cfa_register 7
 6214 0006 7860     		str	r0, [r7, #4]
 652:.\main.c      ****     //fputs("Commands: (",stdout);
 653:.\main.c      ****     usbPutString("Commands: (");
 6215              		.loc 5 653 0
 6216 0008 2948     		ldr	r0, .L331
 6217 000a FFF7FEFF 		bl	usbPutString
 654:.\main.c      ****     int i;
 655:.\main.c      ****     char buff[32];
 656:.\main.c      ****     for (i = 0; i < MAX_COMMAND_LENGTH; i++){
 6218              		.loc 5 656 0
 6219 000e 0023     		movs	r3, #0
 6220 0010 FB62     		str	r3, [r7, #44]
 6221 0012 43E0     		b	.L318
 6222              	.L329:
 657:.\main.c      ****         if (commands[i] == EMPTY_COMMAND){
 6223              		.loc 5 657 0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 138


 6224 0014 FB6A     		ldr	r3, [r7, #44]
 6225 0016 7A68     		ldr	r2, [r7, #4]
 6226 0018 1344     		add	r3, r3, r2
 6227 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6228 001c 002B     		cmp	r3, #0
 6229 001e 03D1     		bne	.L319
 658:.\main.c      ****             if (i > 0) break;
 6230              		.loc 5 658 0
 6231 0020 FB6A     		ldr	r3, [r7, #44]
 6232 0022 002B     		cmp	r3, #0
 6233 0024 40DD     		ble	.L317
 6234 0026 3CE0     		b	.L321
 6235              	.L319:
 659:.\main.c      ****             return;
 660:.\main.c      ****         }
 661:.\main.c      ****         switch(commands[i]){
 6236              		.loc 5 661 0
 6237 0028 FB6A     		ldr	r3, [r7, #44]
 6238 002a 7A68     		ldr	r2, [r7, #4]
 6239 002c 1344     		add	r3, r3, r2
 6240 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6241 0030 5BB2     		sxtb	r3, r3
 6242 0032 13F1020F 		cmn	r3, #2
 6243 0036 0AD0     		beq	.L324
 6244 0038 B3F1FF3F 		cmp	r3, #-1
 6245 003c 03D0     		beq	.L325
 6246 003e 13F1030F 		cmn	r3, #3
 6247 0042 08D0     		beq	.L326
 6248 0044 0BE0     		b	.L330
 6249              	.L325:
 662:.\main.c      ****             case LEFT_TURN:
 663:.\main.c      ****                 usbPutString("L");
 6250              		.loc 5 663 0
 6251 0046 1B48     		ldr	r0, .L331+4
 6252 0048 FFF7FEFF 		bl	usbPutString
 664:.\main.c      ****                 break;
 6253              		.loc 5 664 0
 6254 004c 19E0     		b	.L327
 6255              	.L324:
 665:.\main.c      ****             case RIGHT_TURN:
 666:.\main.c      ****                 usbPutString("R");
 6256              		.loc 5 666 0
 6257 004e 1A48     		ldr	r0, .L331+8
 6258 0050 FFF7FEFF 		bl	usbPutString
 667:.\main.c      ****                 break;
 6259              		.loc 5 667 0
 6260 0054 15E0     		b	.L327
 6261              	.L326:
 668:.\main.c      ****             case U_TURN:
 669:.\main.c      ****                 usbPutString("U");
 6262              		.loc 5 669 0
 6263 0056 1948     		ldr	r0, .L331+12
 6264 0058 FFF7FEFF 		bl	usbPutString
 670:.\main.c      ****                 break;
 6265              		.loc 5 670 0
 6266 005c 11E0     		b	.L327
 6267              	.L330:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 139


 671:.\main.c      ****             default:
 672:.\main.c      ****                 itoa(commands[i], buff, 10);
 6268              		.loc 5 672 0
 6269 005e FB6A     		ldr	r3, [r7, #44]
 6270 0060 7A68     		ldr	r2, [r7, #4]
 6271 0062 1344     		add	r3, r3, r2
 6272 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6273 0066 5AB2     		sxtb	r2, r3
 6274 0068 07F10C03 		add	r3, r7, #12
 6275 006c 1046     		mov	r0, r2
 6276 006e 1946     		mov	r1, r3
 6277 0070 0A22     		movs	r2, #10
 6278 0072 FFF7FEFF 		bl	itoa
 673:.\main.c      ****                 usbPutString(buff);
 6279              		.loc 5 673 0
 6280 0076 07F10C03 		add	r3, r7, #12
 6281 007a 1846     		mov	r0, r3
 6282 007c FFF7FEFF 		bl	usbPutString
 674:.\main.c      ****                 break;
 6283              		.loc 5 674 0
 6284 0080 00BF     		nop
 6285              	.L327:
 675:.\main.c      ****         };
 676:.\main.c      ****         if (commands[i+1] != EMPTY_COMMAND) usbPutString(",");
 6286              		.loc 5 676 0
 6287 0082 FB6A     		ldr	r3, [r7, #44]
 6288 0084 0133     		adds	r3, r3, #1
 6289 0086 7A68     		ldr	r2, [r7, #4]
 6290 0088 1344     		add	r3, r3, r2
 6291 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6292 008c 002B     		cmp	r3, #0
 6293 008e 02D0     		beq	.L328
 6294              		.loc 5 676 0 is_stmt 0 discriminator 1
 6295 0090 0B48     		ldr	r0, .L331+16
 6296 0092 FFF7FEFF 		bl	usbPutString
 6297              	.L328:
 656:.\main.c      ****         if (commands[i] == EMPTY_COMMAND){
 6298              		.loc 5 656 0 is_stmt 1 discriminator 2
 6299 0096 FB6A     		ldr	r3, [r7, #44]
 6300 0098 0133     		adds	r3, r3, #1
 6301 009a FB62     		str	r3, [r7, #44]
 6302              	.L318:
 656:.\main.c      ****         if (commands[i] == EMPTY_COMMAND){
 6303              		.loc 5 656 0 is_stmt 0 discriminator 1
 6304 009c FB6A     		ldr	r3, [r7, #44]
 6305 009e C72B     		cmp	r3, #199
 6306 00a0 B8DD     		ble	.L329
 6307              	.L321:
 677:.\main.c      ****     }
 678:.\main.c      ****     usbPutString(")\r\n");
 6308              		.loc 5 678 0 is_stmt 1 discriminator 1
 6309 00a2 0848     		ldr	r0, .L331+20
 6310 00a4 FFF7FEFF 		bl	usbPutString
 6311              	.L317:
 679:.\main.c      **** }
 6312              		.loc 5 679 0
 6313 00a8 3037     		adds	r7, r7, #48
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 140


 6314              		.cfi_def_cfa_offset 8
 6315 00aa BD46     		mov	sp, r7
 6316              		.cfi_def_cfa_register 13
 6317              		@ sp needed
 6318 00ac 80BD     		pop	{r7, pc}
 6319              	.L332:
 6320 00ae 00BF     		.align	2
 6321              	.L331:
 6322 00b0 10000000 		.word	.LC5
 6323 00b4 D4010000 		.word	.LC27
 6324 00b8 D8010000 		.word	.LC28
 6325 00bc DC010000 		.word	.LC29
 6326 00c0 E0010000 		.word	.LC30
 6327 00c4 E4010000 		.word	.LC31
 6328              		.cfi_endproc
 6329              	.LFE109:
 6330              		.size	printCommandsUSB, .-printCommandsUSB
 6331              		.section	.rodata
 6332              		.align	2
 6333              	.LC32:
 6334 01e8 0D0A00   		.ascii	"\015\012\000"
 6335 01eb 00       		.section	.text.printSingleCommandUSB,"ax",%progbits
 6336              		.align	2
 6337              		.global	printSingleCommandUSB
 6338              		.thumb
 6339              		.thumb_func
 6340              		.type	printSingleCommandUSB, %function
 6341              	printSingleCommandUSB:
 6342              	.LFB110:
 680:.\main.c      **** 
 681:.\main.c      **** void printSingleCommandUSB(int8_t command){
 6343              		.loc 5 681 0
 6344              		.cfi_startproc
 6345              		@ args = 0, pretend = 0, frame = 40
 6346              		@ frame_needed = 1, uses_anonymous_args = 0
 6347 0000 80B5     		push	{r7, lr}
 6348              		.cfi_def_cfa_offset 8
 6349              		.cfi_offset 7, -8
 6350              		.cfi_offset 14, -4
 6351 0002 8AB0     		sub	sp, sp, #40
 6352              		.cfi_def_cfa_offset 48
 6353 0004 00AF     		add	r7, sp, #0
 6354              		.cfi_def_cfa_register 7
 6355 0006 0346     		mov	r3, r0
 6356 0008 FB71     		strb	r3, [r7, #7]
 682:.\main.c      ****     char buff[32];
 683:.\main.c      ****     switch(command){
 6357              		.loc 5 683 0
 6358 000a 97F90730 		ldrsb	r3, [r7, #7]
 6359 000e 13F1020F 		cmn	r3, #2
 6360 0012 0AD0     		beq	.L335
 6361 0014 B3F1FF3F 		cmp	r3, #-1
 6362 0018 03D0     		beq	.L336
 6363 001a 13F1030F 		cmn	r3, #3
 6364 001e 08D0     		beq	.L337
 6365 0020 0BE0     		b	.L339
 6366              	.L336:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 141


 684:.\main.c      ****         case LEFT_TURN:
 685:.\main.c      ****             usbPutString("L");
 6367              		.loc 5 685 0
 6368 0022 1048     		ldr	r0, .L340
 6369 0024 FFF7FEFF 		bl	usbPutString
 686:.\main.c      ****             break;
 6370              		.loc 5 686 0
 6371 0028 16E0     		b	.L338
 6372              	.L335:
 687:.\main.c      ****         case RIGHT_TURN:
 688:.\main.c      ****             usbPutString("R");
 6373              		.loc 5 688 0
 6374 002a 0F48     		ldr	r0, .L340+4
 6375 002c FFF7FEFF 		bl	usbPutString
 689:.\main.c      ****             break;
 6376              		.loc 5 689 0
 6377 0030 12E0     		b	.L338
 6378              	.L337:
 690:.\main.c      ****         case U_TURN:
 691:.\main.c      ****             usbPutString("U");
 6379              		.loc 5 691 0
 6380 0032 0E48     		ldr	r0, .L340+8
 6381 0034 FFF7FEFF 		bl	usbPutString
 692:.\main.c      ****             break;
 6382              		.loc 5 692 0
 6383 0038 0EE0     		b	.L338
 6384              	.L339:
 693:.\main.c      ****         default:
 694:.\main.c      ****             itoa(command, buff, 10);
 6385              		.loc 5 694 0
 6386 003a 97F90720 		ldrsb	r2, [r7, #7]
 6387 003e 07F10803 		add	r3, r7, #8
 6388 0042 1046     		mov	r0, r2
 6389 0044 1946     		mov	r1, r3
 6390 0046 0A22     		movs	r2, #10
 6391 0048 FFF7FEFF 		bl	itoa
 695:.\main.c      ****             usbPutString(buff);
 6392              		.loc 5 695 0
 6393 004c 07F10803 		add	r3, r7, #8
 6394 0050 1846     		mov	r0, r3
 6395 0052 FFF7FEFF 		bl	usbPutString
 696:.\main.c      ****             break;
 6396              		.loc 5 696 0
 6397 0056 00BF     		nop
 6398              	.L338:
 697:.\main.c      ****     };
 698:.\main.c      ****     usbPutString("\r\n");
 6399              		.loc 5 698 0
 6400 0058 0548     		ldr	r0, .L340+12
 6401 005a FFF7FEFF 		bl	usbPutString
 699:.\main.c      **** }
 6402              		.loc 5 699 0
 6403 005e 2837     		adds	r7, r7, #40
 6404              		.cfi_def_cfa_offset 8
 6405 0060 BD46     		mov	sp, r7
 6406              		.cfi_def_cfa_register 13
 6407              		@ sp needed
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 142


 6408 0062 80BD     		pop	{r7, pc}
 6409              	.L341:
 6410              		.align	2
 6411              	.L340:
 6412 0064 D4010000 		.word	.LC27
 6413 0068 D8010000 		.word	.LC28
 6414 006c DC010000 		.word	.LC29
 6415 0070 E8010000 		.word	.LC32
 6416              		.cfi_endproc
 6417              	.LFE110:
 6418              		.size	printSingleCommandUSB, .-printSingleCommandUSB
 6419              		.section	.text.getRouteToFood,"ax",%progbits
 6420              		.align	2
 6421              		.global	getRouteToFood
 6422              		.thumb
 6423              		.thumb_func
 6424              		.type	getRouteToFood, %function
 6425              	getRouteToFood:
 6426              	.LFB111:
 700:.\main.c      **** 
 701:.\main.c      **** /* Wrapper for BFS that gets a route connecting all food pellets in order */
 702:.\main.c      **** void getRouteToFood(point start, point path[MAX_PATH_LENGTH]){
 6427              		.loc 5 702 0
 6428              		.cfi_startproc
 6429              		@ args = 0, pretend = 0, frame = 2168
 6430              		@ frame_needed = 1, uses_anonymous_args = 0
 6431 0000 90B5     		push	{r4, r7, lr}
 6432              		.cfi_def_cfa_offset 12
 6433              		.cfi_offset 4, -12
 6434              		.cfi_offset 7, -8
 6435              		.cfi_offset 14, -4
 6436 0002 ADF67C0D 		subw	sp, sp, #2172
 6437              		.cfi_def_cfa_offset 2184
 6438 0006 00AF     		add	r7, sp, #0
 6439              		.cfi_def_cfa_register 7
 6440 0008 3B1D     		adds	r3, r7, #4
 6441 000a 1880     		strh	r0, [r3]	@ movhi
 6442 000c 3B46     		mov	r3, r7
 6443 000e 1960     		str	r1, [r3]
 703:.\main.c      ****     
 704:.\main.c      ****     #ifdef PUTTY
 705:.\main.c      ****         usbPutString("Navigating food\r\n");
 706:.\main.c      ****     #endif
 707:.\main.c      ****     
 708:.\main.c      ****     uint8_t i; // C90 is outdated smh
 709:.\main.c      **** 
 710:.\main.c      ****     /* Setup locations to use for BFS */
 711:.\main.c      ****     point locations[6] = { 0 };
 6444              		.loc 5 711 0
 6445 0010 07F66803 		addw	r3, r7, #2152
 6446 0014 0022     		movs	r2, #0
 6447 0016 1A60     		str	r2, [r3]
 6448 0018 0433     		adds	r3, r3, #4
 6449 001a 0022     		movs	r2, #0
 6450 001c 1A60     		str	r2, [r3]
 6451 001e 0433     		adds	r3, r3, #4
 6452 0020 0022     		movs	r2, #0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 143


 6453 0022 1A60     		str	r2, [r3]
 6454 0024 0433     		adds	r3, r3, #4
 712:.\main.c      ****     locations[0] = (point){.x = start.x, .y = start.y};
 6455              		.loc 5 712 0
 6456 0026 3B1D     		adds	r3, r7, #4
 6457 0028 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6458 002a 3B1D     		adds	r3, r7, #4
 6459 002c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 6460 002e 87F86828 		strb	r2, [r7, #2152]
 6461 0032 87F86938 		strb	r3, [r7, #2153]
 713:.\main.c      ****     
 714:.\main.c      ****     #ifdef PUTTY
 715:.\main.c      ****         usbPutString("-- Locations set up\r\n");
 716:.\main.c      ****     #endif
 717:.\main.c      **** 
 718:.\main.c      ****     /* Intialise path */
 719:.\main.c      ****     memset(path, EMPTY_VAL, MAX_PATH_LENGTH*sizeof(point));
 6462              		.loc 5 719 0
 6463 0036 3B46     		mov	r3, r7
 6464 0038 1868     		ldr	r0, [r3]
 6465 003a 4FF0FF31 		mov	r1, #-1
 6466 003e 4FF47A72 		mov	r2, #1000
 6467 0042 FFF7FEFF 		bl	memset
 720:.\main.c      **** 
 721:.\main.c      ****     /* Setup map for cleaning after BFS is done */
 722:.\main.c      ****     int clean_map[MAP_ROW][MAP_COL] = { 0 };
 6468              		.loc 5 722 0
 6469 0046 07F57D73 		add	r3, r7, #1012
 6470 004a 1A46     		mov	r2, r3
 6471 004c 40F27443 		movw	r3, #1140
 6472 0050 1046     		mov	r0, r2
 6473 0052 0021     		movs	r1, #0
 6474 0054 1A46     		mov	r2, r3
 6475 0056 FFF7FEFF 		bl	memset
 723:.\main.c      **** 
 724:.\main.c      ****     for (i = 0; i < MAP_ROW; i++){
 6476              		.loc 5 724 0
 6477 005a 0023     		movs	r3, #0
 6478 005c 87F87738 		strb	r3, [r7, #2167]
 6479 0060 1AE0     		b	.L343
 6480              	.L344:
 725:.\main.c      ****         memcpy(clean_map[i], map[i], sizeof(int)*MAP_COL);
 6481              		.loc 5 725 0 discriminator 3
 6482 0062 97F87738 		ldrb	r3, [r7, #2167]	@ zero_extendqisi2
 6483 0066 07F57D72 		add	r2, r7, #1012
 6484 006a 4C21     		movs	r1, #76
 6485 006c 01FB03F3 		mul	r3, r1, r3
 6486 0070 D118     		adds	r1, r2, r3
 6487 0072 97F87738 		ldrb	r3, [r7, #2167]	@ zero_extendqisi2
 6488 0076 4C22     		movs	r2, #76
 6489 0078 02FB03F3 		mul	r3, r2, r3
 6490 007c 534A     		ldr	r2, .L349
 6491 007e 1344     		add	r3, r3, r2
 6492 0080 1A46     		mov	r2, r3
 6493 0082 4C23     		movs	r3, #76
 6494 0084 0846     		mov	r0, r1
 6495 0086 1146     		mov	r1, r2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 144


 6496 0088 1A46     		mov	r2, r3
 6497 008a FFF7FEFF 		bl	memcpy
 724:.\main.c      ****         memcpy(clean_map[i], map[i], sizeof(int)*MAP_COL);
 6498              		.loc 5 724 0 discriminator 3
 6499 008e 97F87738 		ldrb	r3, [r7, #2167]	@ zero_extendqisi2
 6500 0092 0133     		adds	r3, r3, #1
 6501 0094 87F87738 		strb	r3, [r7, #2167]
 6502              	.L343:
 724:.\main.c      ****         memcpy(clean_map[i], map[i], sizeof(int)*MAP_COL);
 6503              		.loc 5 724 0 is_stmt 0 discriminator 1
 6504 0098 97F87738 		ldrb	r3, [r7, #2167]	@ zero_extendqisi2
 6505 009c 0E2B     		cmp	r3, #14
 6506 009e E0D9     		bls	.L344
 726:.\main.c      ****     }
 727:.\main.c      ****     
 728:.\main.c      ****     #ifdef PUTTY
 729:.\main.c      ****         usbPutString("-- Clean map initialised\r\n");
 730:.\main.c      ****     #endif
 731:.\main.c      ****     
 732:.\main.c      ****     uint8_t k; // Wishing it wasn't C90
 733:.\main.c      **** 
 734:.\main.c      ****     #ifdef PUTTY
 735:.\main.c      ****         char buff[32];
 736:.\main.c      ****     #endif
 737:.\main.c      ****     
 738:.\main.c      ****     for (i = 0; i < 5; i++){
 6507              		.loc 5 738 0 is_stmt 1
 6508 00a0 0023     		movs	r3, #0
 6509 00a2 87F87738 		strb	r3, [r7, #2167]
 6510 00a6 88E0     		b	.L345
 6511              	.L348:
 6512              	.LBB9:
 739:.\main.c      ****         
 740:.\main.c      ****         #ifdef PUTTY
 741:.\main.c      ****             itoa(i,buff,10);
 742:.\main.c      ****             usbPutString(buff);
 743:.\main.c      ****             usbPutString("\r\n");
 744:.\main.c      ****         #endif
 745:.\main.c      **** 
 746:.\main.c      ****         // Take next location from the food_list
 747:.\main.c      ****         locations[i+1] = (point){.x = food_list[i][0], .y = food_list[i][1]};
 6513              		.loc 5 747 0
 6514 00a8 97F87738 		ldrb	r3, [r7, #2167]	@ zero_extendqisi2
 6515 00ac 5A1C     		adds	r2, r3, #1
 6516 00ae 97F87738 		ldrb	r3, [r7, #2167]	@ zero_extendqisi2
 6517 00b2 4749     		ldr	r1, .L349+4
 6518 00b4 51F83330 		ldr	r3, [r1, r3, lsl #3]
 6519 00b8 D8B2     		uxtb	r0, r3
 6520 00ba 97F87738 		ldrb	r3, [r7, #2167]	@ zero_extendqisi2
 6521 00be 4449     		ldr	r1, .L349+4
 6522 00c0 DB00     		lsls	r3, r3, #3
 6523 00c2 0B44     		add	r3, r3, r1
 6524 00c4 5B68     		ldr	r3, [r3, #4]
 6525 00c6 D9B2     		uxtb	r1, r3
 6526 00c8 5300     		lsls	r3, r2, #1
 6527 00ca 07F67804 		addw	r4, r7, #2168
 6528 00ce 2344     		add	r3, r3, r4
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 145


 6529 00d0 03F8100C 		strb	r0, [r3, #-16]
 6530 00d4 5300     		lsls	r3, r2, #1
 6531 00d6 07F67802 		addw	r2, r7, #2168
 6532 00da 1344     		add	r3, r3, r2
 6533 00dc 0A46     		mov	r2, r1
 6534 00de 03F80F2C 		strb	r2, [r3, #-15]
 748:.\main.c      **** 
 749:.\main.c      ****         // Setup the path to store the BFS result
 750:.\main.c      ****         point temp_path[MAX_PATH_LENGTH] = { 0 };
 6535              		.loc 5 750 0
 6536 00e2 07F10C03 		add	r3, r7, #12
 6537 00e6 1A46     		mov	r2, r3
 6538 00e8 4FF47A73 		mov	r3, #1000
 6539 00ec 1046     		mov	r0, r2
 6540 00ee 0021     		movs	r1, #0
 6541 00f0 1A46     		mov	r2, r3
 6542 00f2 FFF7FEFF 		bl	memset
 751:.\main.c      ****         temp_path[0] = (point){.x = EMPTY_VAL, .y = EMPTY_VAL};
 6543              		.loc 5 751 0
 6544 00f6 07F10C03 		add	r3, r7, #12
 6545 00fa 3649     		ldr	r1, .L349+8
 6546 00fc 1A46     		mov	r2, r3
 6547 00fe 0B46     		mov	r3, r1
 6548 0100 1B88     		ldrh	r3, [r3]	@ unaligned
 6549 0102 1380     		strh	r3, [r2]	@ unaligned
 752:.\main.c      ****         memset(temp_path, EMPTY_VAL, MAX_PATH_LENGTH*sizeof(point));
 6550              		.loc 5 752 0
 6551 0104 07F10C03 		add	r3, r7, #12
 6552 0108 1846     		mov	r0, r3
 6553 010a 4FF0FF31 		mov	r1, #-1
 6554 010e 4FF47A72 		mov	r2, #1000
 6555 0112 FFF7FEFF 		bl	memset
 753:.\main.c      **** 
 754:.\main.c      ****         // Big Fat Search
 755:.\main.c      ****         BFS(locations[i],locations[i+1],temp_path);
 6556              		.loc 5 755 0
 6557 0116 97F87728 		ldrb	r2, [r7, #2167]	@ zero_extendqisi2
 6558 011a 97F87738 		ldrb	r3, [r7, #2167]	@ zero_extendqisi2
 6559 011e 0133     		adds	r3, r3, #1
 6560 0120 5200     		lsls	r2, r2, #1
 6561 0122 07F67801 		addw	r1, r7, #2168
 6562 0126 0A44     		add	r2, r2, r1
 6563 0128 5B00     		lsls	r3, r3, #1
 6564 012a 07F67801 		addw	r1, r7, #2168
 6565 012e 0B44     		add	r3, r3, r1
 6566 0130 07F10C04 		add	r4, r7, #12
 6567 0134 32F8101C 		ldrh	r1, [r2, #-16]
 6568 0138 0022     		movs	r2, #0
 6569 013a 61F30F02 		bfi	r2, r1, #0, #16
 6570 013e 33F8101C 		ldrh	r1, [r3, #-16]
 6571 0142 0023     		movs	r3, #0
 6572 0144 61F30F03 		bfi	r3, r1, #0, #16
 6573 0148 1046     		mov	r0, r2
 6574 014a 1946     		mov	r1, r3
 6575 014c 2246     		mov	r2, r4
 6576 014e FFF7FEFF 		bl	BFS
 756:.\main.c      ****         
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 146


 757:.\main.c      ****         #ifdef PUTTY
 758:.\main.c      ****             usbPutString("BFS Finished\r\n");
 759:.\main.c      ****         #endif
 760:.\main.c      **** 
 761:.\main.c      ****         /* Clean up map from BFS */
 762:.\main.c      ****         for (k = 0; k < MAP_ROW; k++){
 6577              		.loc 5 762 0
 6578 0152 0023     		movs	r3, #0
 6579 0154 87F87638 		strb	r3, [r7, #2166]
 6580 0158 1BE0     		b	.L346
 6581              	.L347:
 763:.\main.c      ****             memcpy(map[k], clean_map[k], sizeof(int)*MAP_COL);
 6582              		.loc 5 763 0 discriminator 3
 6583 015a 97F87638 		ldrb	r3, [r7, #2166]	@ zero_extendqisi2
 6584 015e 4C22     		movs	r2, #76
 6585 0160 02FB03F3 		mul	r3, r2, r3
 6586 0164 194A     		ldr	r2, .L349
 6587 0166 9818     		adds	r0, r3, r2
 6588 0168 97F87638 		ldrb	r3, [r7, #2166]	@ zero_extendqisi2
 6589 016c 07F57D72 		add	r2, r7, #1012
 6590 0170 4C21     		movs	r1, #76
 6591 0172 01FB03F3 		mul	r3, r1, r3
 6592 0176 1344     		add	r3, r3, r2
 6593 0178 0146     		mov	r1, r0
 6594 017a 1A46     		mov	r2, r3
 6595 017c 4C23     		movs	r3, #76
 6596 017e 0846     		mov	r0, r1
 6597 0180 1146     		mov	r1, r2
 6598 0182 1A46     		mov	r2, r3
 6599 0184 FFF7FEFF 		bl	memcpy
 762:.\main.c      ****             memcpy(map[k], clean_map[k], sizeof(int)*MAP_COL);
 6600              		.loc 5 762 0 discriminator 3
 6601 0188 97F87638 		ldrb	r3, [r7, #2166]	@ zero_extendqisi2
 6602 018c 0133     		adds	r3, r3, #1
 6603 018e 87F87638 		strb	r3, [r7, #2166]
 6604              	.L346:
 762:.\main.c      ****             memcpy(map[k], clean_map[k], sizeof(int)*MAP_COL);
 6605              		.loc 5 762 0 is_stmt 0 discriminator 1
 6606 0192 97F87638 		ldrb	r3, [r7, #2166]	@ zero_extendqisi2
 6607 0196 0E2B     		cmp	r3, #14
 6608 0198 DFD9     		bls	.L347
 764:.\main.c      ****         }
 765:.\main.c      **** 
 766:.\main.c      ****         appendPath(path,len(path),temp_path);
 6609              		.loc 5 766 0 is_stmt 1 discriminator 2
 6610 019a 3B46     		mov	r3, r7
 6611 019c 1868     		ldr	r0, [r3]
 6612 019e FFF7FEFF 		bl	len
 6613 01a2 0146     		mov	r1, r0
 6614 01a4 3B46     		mov	r3, r7
 6615 01a6 07F10C02 		add	r2, r7, #12
 6616 01aa 1868     		ldr	r0, [r3]
 6617 01ac FFF7FEFF 		bl	appendPath
 6618              	.LBE9:
 738:.\main.c      ****         
 6619              		.loc 5 738 0 discriminator 2
 6620 01b0 97F87738 		ldrb	r3, [r7, #2167]	@ zero_extendqisi2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 147


 6621 01b4 0133     		adds	r3, r3, #1
 6622 01b6 87F87738 		strb	r3, [r7, #2167]
 6623              	.L345:
 738:.\main.c      ****         
 6624              		.loc 5 738 0 is_stmt 0 discriminator 1
 6625 01ba 97F87738 		ldrb	r3, [r7, #2167]	@ zero_extendqisi2
 6626 01be 042B     		cmp	r3, #4
 6627 01c0 7FF672AF 		bls	.L348
 767:.\main.c      ****     }
 768:.\main.c      **** 
 769:.\main.c      **** }
 6628              		.loc 5 769 0 is_stmt 1
 6629 01c4 07F67C07 		addw	r7, r7, #2172
 6630              		.cfi_def_cfa_offset 12
 6631 01c8 BD46     		mov	sp, r7
 6632              		.cfi_def_cfa_register 13
 6633              		@ sp needed
 6634 01ca 90BD     		pop	{r4, r7, pc}
 6635              	.L350:
 6636              		.align	2
 6637              	.L349:
 6638 01cc 00000000 		.word	map
 6639 01d0 00000000 		.word	food_list
 6640 01d4 C0000000 		.word	.LC0
 6641              		.cfi_endproc
 6642              	.LFE111:
 6643              		.size	getRouteToFood, .-getRouteToFood
 6644              		.text
 6645              	.Letext0:
 6646              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 6647              		.file 7 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 6648              		.file 8 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 6649              		.file 9 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 6650              		.file 10 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9
 6651              		.file 11 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9
 6652              		.file 12 "Generated_Source\\PSoC5/cytypes.h"
 6653              		.file 13 ".\\vars.h"
 6654              		.file 14 ".\\BFS/point.h"
 6655              		.file 15 "Generated_Source\\PSoC5/core_cm3.h"
 6656              		.file 16 ".\\BFS/map4.h"
 6657              		.section	.debug_info,"",%progbits
 6658              	.Ldebug_info0:
 6659 0000 501B0000 		.4byte	0x1b50
 6660 0004 0400     		.2byte	0x4
 6661 0006 00000000 		.4byte	.Ldebug_abbrev0
 6662 000a 04       		.byte	0x4
 6663 000b 01       		.uleb128 0x1
 6664 000c 74060000 		.4byte	.LASF289
 6665 0010 01       		.byte	0x1
 6666 0011 0A0D0000 		.4byte	.LASF290
 6667 0015 A8090000 		.4byte	.LASF291
 6668 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 6669 001d 00000000 		.4byte	0
 6670 0021 00000000 		.4byte	.Ldebug_line0
 6671 0025 02       		.uleb128 0x2
 6672 0026 EE070000 		.4byte	.LASF0
 6673 002a 06       		.byte	0x6
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 148


 6674 002b 1B       		.byte	0x1b
 6675 002c 30000000 		.4byte	0x30
 6676 0030 03       		.uleb128 0x3
 6677 0031 01       		.byte	0x1
 6678 0032 06       		.byte	0x6
 6679 0033 220C0000 		.4byte	.LASF2
 6680 0037 02       		.uleb128 0x2
 6681 0038 97090000 		.4byte	.LASF1
 6682 003c 06       		.byte	0x6
 6683 003d 1D       		.byte	0x1d
 6684 003e 42000000 		.4byte	0x42
 6685 0042 03       		.uleb128 0x3
 6686 0043 01       		.byte	0x1
 6687 0044 08       		.byte	0x8
 6688 0045 3D0B0000 		.4byte	.LASF3
 6689 0049 03       		.uleb128 0x3
 6690 004a 02       		.byte	0x2
 6691 004b 05       		.byte	0x5
 6692 004c 97080000 		.4byte	.LASF4
 6693 0050 02       		.uleb128 0x2
 6694 0051 25030000 		.4byte	.LASF5
 6695 0055 06       		.byte	0x6
 6696 0056 2B       		.byte	0x2b
 6697 0057 5B000000 		.4byte	0x5b
 6698 005b 03       		.uleb128 0x3
 6699 005c 02       		.byte	0x2
 6700 005d 07       		.byte	0x7
 6701 005e 350C0000 		.4byte	.LASF6
 6702 0062 02       		.uleb128 0x2
 6703 0063 0A010000 		.4byte	.LASF7
 6704 0067 06       		.byte	0x6
 6705 0068 3F       		.byte	0x3f
 6706 0069 6D000000 		.4byte	0x6d
 6707 006d 03       		.uleb128 0x3
 6708 006e 04       		.byte	0x4
 6709 006f 05       		.byte	0x5
 6710 0070 D3080000 		.4byte	.LASF8
 6711 0074 03       		.uleb128 0x3
 6712 0075 04       		.byte	0x4
 6713 0076 07       		.byte	0x7
 6714 0077 CE0A0000 		.4byte	.LASF9
 6715 007b 03       		.uleb128 0x3
 6716 007c 08       		.byte	0x8
 6717 007d 05       		.byte	0x5
 6718 007e DA050000 		.4byte	.LASF10
 6719 0082 03       		.uleb128 0x3
 6720 0083 08       		.byte	0x8
 6721 0084 07       		.byte	0x7
 6722 0085 DC020000 		.4byte	.LASF11
 6723 0089 04       		.uleb128 0x4
 6724 008a 04       		.byte	0x4
 6725 008b 05       		.byte	0x5
 6726 008c 696E7400 		.ascii	"int\000"
 6727 0090 03       		.uleb128 0x3
 6728 0091 04       		.byte	0x4
 6729 0092 07       		.byte	0x7
 6730 0093 C0000000 		.4byte	.LASF12
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 149


 6731 0097 05       		.uleb128 0x5
 6732 0098 04       		.byte	0x4
 6733 0099 02       		.uleb128 0x2
 6734 009a 42010000 		.4byte	.LASF13
 6735 009e 07       		.byte	0x7
 6736 009f 07       		.byte	0x7
 6737 00a0 89000000 		.4byte	0x89
 6738 00a4 02       		.uleb128 0x2
 6739 00a5 8A0C0000 		.4byte	.LASF14
 6740 00a9 08       		.byte	0x8
 6741 00aa 10       		.byte	0x10
 6742 00ab 6D000000 		.4byte	0x6d
 6743 00af 02       		.uleb128 0x2
 6744 00b0 BA010000 		.4byte	.LASF15
 6745 00b4 08       		.byte	0x8
 6746 00b5 27       		.byte	0x27
 6747 00b6 6D000000 		.4byte	0x6d
 6748 00ba 06       		.uleb128 0x6
 6749 00bb FB0A0000 		.4byte	.LASF16
 6750 00bf 09       		.byte	0x9
 6751 00c0 6101     		.2byte	0x161
 6752 00c2 90000000 		.4byte	0x90
 6753 00c6 07       		.uleb128 0x7
 6754 00c7 04       		.byte	0x4
 6755 00c8 08       		.byte	0x8
 6756 00c9 4A       		.byte	0x4a
 6757 00ca E5000000 		.4byte	0xe5
 6758 00ce 08       		.uleb128 0x8
 6759 00cf 2F050000 		.4byte	.LASF17
 6760 00d3 08       		.byte	0x8
 6761 00d4 4C       		.byte	0x4c
 6762 00d5 BA000000 		.4byte	0xba
 6763 00d9 08       		.uleb128 0x8
 6764 00da 4E090000 		.4byte	.LASF18
 6765 00de 08       		.byte	0x8
 6766 00df 4D       		.byte	0x4d
 6767 00e0 E5000000 		.4byte	0xe5
 6768 00e4 00       		.byte	0
 6769 00e5 09       		.uleb128 0x9
 6770 00e6 42000000 		.4byte	0x42
 6771 00ea F5000000 		.4byte	0xf5
 6772 00ee 0A       		.uleb128 0xa
 6773 00ef F5000000 		.4byte	0xf5
 6774 00f3 03       		.byte	0x3
 6775 00f4 00       		.byte	0
 6776 00f5 03       		.uleb128 0x3
 6777 00f6 04       		.byte	0x4
 6778 00f7 07       		.byte	0x7
 6779 00f8 AB0A0000 		.4byte	.LASF19
 6780 00fc 0B       		.uleb128 0xb
 6781 00fd 08       		.byte	0x8
 6782 00fe 08       		.byte	0x8
 6783 00ff 47       		.byte	0x47
 6784 0100 1D010000 		.4byte	0x11d
 6785 0104 0C       		.uleb128 0xc
 6786 0105 65020000 		.4byte	.LASF20
 6787 0109 08       		.byte	0x8
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 150


 6788 010a 49       		.byte	0x49
 6789 010b 89000000 		.4byte	0x89
 6790 010f 00       		.byte	0
 6791 0110 0C       		.uleb128 0xc
 6792 0111 6E040000 		.4byte	.LASF21
 6793 0115 08       		.byte	0x8
 6794 0116 4E       		.byte	0x4e
 6795 0117 C6000000 		.4byte	0xc6
 6796 011b 04       		.byte	0x4
 6797 011c 00       		.byte	0
 6798 011d 02       		.uleb128 0x2
 6799 011e 28070000 		.4byte	.LASF22
 6800 0122 08       		.byte	0x8
 6801 0123 4F       		.byte	0x4f
 6802 0124 FC000000 		.4byte	0xfc
 6803 0128 02       		.uleb128 0x2
 6804 0129 14050000 		.4byte	.LASF23
 6805 012d 08       		.byte	0x8
 6806 012e 53       		.byte	0x53
 6807 012f 99000000 		.4byte	0x99
 6808 0133 02       		.uleb128 0x2
 6809 0134 06060000 		.4byte	.LASF24
 6810 0138 0A       		.byte	0xa
 6811 0139 16       		.byte	0x16
 6812 013a 74000000 		.4byte	0x74
 6813 013e 0D       		.uleb128 0xd
 6814 013f F9010000 		.4byte	.LASF29
 6815 0143 18       		.byte	0x18
 6816 0144 0A       		.byte	0xa
 6817 0145 2D       		.byte	0x2d
 6818 0146 91010000 		.4byte	0x191
 6819 014a 0C       		.uleb128 0xc
 6820 014b 30040000 		.4byte	.LASF25
 6821 014f 0A       		.byte	0xa
 6822 0150 2F       		.byte	0x2f
 6823 0151 91010000 		.4byte	0x191
 6824 0155 00       		.byte	0
 6825 0156 0E       		.uleb128 0xe
 6826 0157 5F6B00   		.ascii	"_k\000"
 6827 015a 0A       		.byte	0xa
 6828 015b 30       		.byte	0x30
 6829 015c 89000000 		.4byte	0x89
 6830 0160 04       		.byte	0x4
 6831 0161 0C       		.uleb128 0xc
 6832 0162 3A0A0000 		.4byte	.LASF26
 6833 0166 0A       		.byte	0xa
 6834 0167 30       		.byte	0x30
 6835 0168 89000000 		.4byte	0x89
 6836 016c 08       		.byte	0x8
 6837 016d 0C       		.uleb128 0xc
 6838 016e 0F090000 		.4byte	.LASF27
 6839 0172 0A       		.byte	0xa
 6840 0173 30       		.byte	0x30
 6841 0174 89000000 		.4byte	0x89
 6842 0178 0C       		.byte	0xc
 6843 0179 0C       		.uleb128 0xc
 6844 017a 14030000 		.4byte	.LASF28
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 151


 6845 017e 0A       		.byte	0xa
 6846 017f 30       		.byte	0x30
 6847 0180 89000000 		.4byte	0x89
 6848 0184 10       		.byte	0x10
 6849 0185 0E       		.uleb128 0xe
 6850 0186 5F7800   		.ascii	"_x\000"
 6851 0189 0A       		.byte	0xa
 6852 018a 31       		.byte	0x31
 6853 018b 97010000 		.4byte	0x197
 6854 018f 14       		.byte	0x14
 6855 0190 00       		.byte	0
 6856 0191 0F       		.uleb128 0xf
 6857 0192 04       		.byte	0x4
 6858 0193 3E010000 		.4byte	0x13e
 6859 0197 09       		.uleb128 0x9
 6860 0198 33010000 		.4byte	0x133
 6861 019c A7010000 		.4byte	0x1a7
 6862 01a0 0A       		.uleb128 0xa
 6863 01a1 F5000000 		.4byte	0xf5
 6864 01a5 00       		.byte	0
 6865 01a6 00       		.byte	0
 6866 01a7 0D       		.uleb128 0xd
 6867 01a8 A00A0000 		.4byte	.LASF30
 6868 01ac 24       		.byte	0x24
 6869 01ad 0A       		.byte	0xa
 6870 01ae 35       		.byte	0x35
 6871 01af 20020000 		.4byte	0x220
 6872 01b3 0C       		.uleb128 0xc
 6873 01b4 E9030000 		.4byte	.LASF31
 6874 01b8 0A       		.byte	0xa
 6875 01b9 37       		.byte	0x37
 6876 01ba 89000000 		.4byte	0x89
 6877 01be 00       		.byte	0
 6878 01bf 0C       		.uleb128 0xc
 6879 01c0 85020000 		.4byte	.LASF32
 6880 01c4 0A       		.byte	0xa
 6881 01c5 38       		.byte	0x38
 6882 01c6 89000000 		.4byte	0x89
 6883 01ca 04       		.byte	0x4
 6884 01cb 0C       		.uleb128 0xc
 6885 01cc 4E020000 		.4byte	.LASF33
 6886 01d0 0A       		.byte	0xa
 6887 01d1 39       		.byte	0x39
 6888 01d2 89000000 		.4byte	0x89
 6889 01d6 08       		.byte	0x8
 6890 01d7 0C       		.uleb128 0xc
 6891 01d8 D7040000 		.4byte	.LASF34
 6892 01dc 0A       		.byte	0xa
 6893 01dd 3A       		.byte	0x3a
 6894 01de 89000000 		.4byte	0x89
 6895 01e2 0C       		.byte	0xc
 6896 01e3 0C       		.uleb128 0xc
 6897 01e4 00080000 		.4byte	.LASF35
 6898 01e8 0A       		.byte	0xa
 6899 01e9 3B       		.byte	0x3b
 6900 01ea 89000000 		.4byte	0x89
 6901 01ee 10       		.byte	0x10
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 152


 6902 01ef 0C       		.uleb128 0xc
 6903 01f0 76090000 		.4byte	.LASF36
 6904 01f4 0A       		.byte	0xa
 6905 01f5 3C       		.byte	0x3c
 6906 01f6 89000000 		.4byte	0x89
 6907 01fa 14       		.byte	0x14
 6908 01fb 0C       		.uleb128 0xc
 6909 01fc 19020000 		.4byte	.LASF37
 6910 0200 0A       		.byte	0xa
 6911 0201 3D       		.byte	0x3d
 6912 0202 89000000 		.4byte	0x89
 6913 0206 18       		.byte	0x18
 6914 0207 0C       		.uleb128 0xc
 6915 0208 00040000 		.4byte	.LASF38
 6916 020c 0A       		.byte	0xa
 6917 020d 3E       		.byte	0x3e
 6918 020e 89000000 		.4byte	0x89
 6919 0212 1C       		.byte	0x1c
 6920 0213 0C       		.uleb128 0xc
 6921 0214 6A070000 		.4byte	.LASF39
 6922 0218 0A       		.byte	0xa
 6923 0219 3F       		.byte	0x3f
 6924 021a 89000000 		.4byte	0x89
 6925 021e 20       		.byte	0x20
 6926 021f 00       		.byte	0
 6927 0220 10       		.uleb128 0x10
 6928 0221 66000000 		.4byte	.LASF40
 6929 0225 0801     		.2byte	0x108
 6930 0227 0A       		.byte	0xa
 6931 0228 48       		.byte	0x48
 6932 0229 60020000 		.4byte	0x260
 6933 022d 0C       		.uleb128 0xc
 6934 022e 1A0C0000 		.4byte	.LASF41
 6935 0232 0A       		.byte	0xa
 6936 0233 49       		.byte	0x49
 6937 0234 60020000 		.4byte	0x260
 6938 0238 00       		.byte	0
 6939 0239 0C       		.uleb128 0xc
 6940 023a 0A0B0000 		.4byte	.LASF42
 6941 023e 0A       		.byte	0xa
 6942 023f 4A       		.byte	0x4a
 6943 0240 60020000 		.4byte	0x260
 6944 0244 80       		.byte	0x80
 6945 0245 11       		.uleb128 0x11
 6946 0246 6C0C0000 		.4byte	.LASF43
 6947 024a 0A       		.byte	0xa
 6948 024b 4C       		.byte	0x4c
 6949 024c 33010000 		.4byte	0x133
 6950 0250 0001     		.2byte	0x100
 6951 0252 11       		.uleb128 0x11
 6952 0253 BD0C0000 		.4byte	.LASF44
 6953 0257 0A       		.byte	0xa
 6954 0258 4F       		.byte	0x4f
 6955 0259 33010000 		.4byte	0x133
 6956 025d 0401     		.2byte	0x104
 6957 025f 00       		.byte	0
 6958 0260 09       		.uleb128 0x9
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 153


 6959 0261 97000000 		.4byte	0x97
 6960 0265 70020000 		.4byte	0x270
 6961 0269 0A       		.uleb128 0xa
 6962 026a F5000000 		.4byte	0xf5
 6963 026e 1F       		.byte	0x1f
 6964 026f 00       		.byte	0
 6965 0270 10       		.uleb128 0x10
 6966 0271 69080000 		.4byte	.LASF45
 6967 0275 9001     		.2byte	0x190
 6968 0277 0A       		.byte	0xa
 6969 0278 5B       		.byte	0x5b
 6970 0279 AE020000 		.4byte	0x2ae
 6971 027d 0C       		.uleb128 0xc
 6972 027e 30040000 		.4byte	.LASF25
 6973 0282 0A       		.byte	0xa
 6974 0283 5C       		.byte	0x5c
 6975 0284 AE020000 		.4byte	0x2ae
 6976 0288 00       		.byte	0
 6977 0289 0C       		.uleb128 0xc
 6978 028a 0F040000 		.4byte	.LASF46
 6979 028e 0A       		.byte	0xa
 6980 028f 5D       		.byte	0x5d
 6981 0290 89000000 		.4byte	0x89
 6982 0294 04       		.byte	0x4
 6983 0295 0C       		.uleb128 0xc
 6984 0296 C2010000 		.4byte	.LASF47
 6985 029a 0A       		.byte	0xa
 6986 029b 5F       		.byte	0x5f
 6987 029c B4020000 		.4byte	0x2b4
 6988 02a0 08       		.byte	0x8
 6989 02a1 0C       		.uleb128 0xc
 6990 02a2 66000000 		.4byte	.LASF40
 6991 02a6 0A       		.byte	0xa
 6992 02a7 60       		.byte	0x60
 6993 02a8 20020000 		.4byte	0x220
 6994 02ac 88       		.byte	0x88
 6995 02ad 00       		.byte	0
 6996 02ae 0F       		.uleb128 0xf
 6997 02af 04       		.byte	0x4
 6998 02b0 70020000 		.4byte	0x270
 6999 02b4 09       		.uleb128 0x9
 7000 02b5 C4020000 		.4byte	0x2c4
 7001 02b9 C4020000 		.4byte	0x2c4
 7002 02bd 0A       		.uleb128 0xa
 7003 02be F5000000 		.4byte	0xf5
 7004 02c2 1F       		.byte	0x1f
 7005 02c3 00       		.byte	0
 7006 02c4 0F       		.uleb128 0xf
 7007 02c5 04       		.byte	0x4
 7008 02c6 CA020000 		.4byte	0x2ca
 7009 02ca 12       		.uleb128 0x12
 7010 02cb 0D       		.uleb128 0xd
 7011 02cc CF0B0000 		.4byte	.LASF48
 7012 02d0 08       		.byte	0x8
 7013 02d1 0A       		.byte	0xa
 7014 02d2 73       		.byte	0x73
 7015 02d3 F0020000 		.4byte	0x2f0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 154


 7016 02d7 0C       		.uleb128 0xc
 7017 02d8 F0050000 		.4byte	.LASF49
 7018 02dc 0A       		.byte	0xa
 7019 02dd 74       		.byte	0x74
 7020 02de F0020000 		.4byte	0x2f0
 7021 02e2 00       		.byte	0
 7022 02e3 0C       		.uleb128 0xc
 7023 02e4 750C0000 		.4byte	.LASF50
 7024 02e8 0A       		.byte	0xa
 7025 02e9 75       		.byte	0x75
 7026 02ea 89000000 		.4byte	0x89
 7027 02ee 04       		.byte	0x4
 7028 02ef 00       		.byte	0
 7029 02f0 0F       		.uleb128 0xf
 7030 02f1 04       		.byte	0x4
 7031 02f2 42000000 		.4byte	0x42
 7032 02f6 0D       		.uleb128 0xd
 7033 02f7 0C030000 		.4byte	.LASF51
 7034 02fb 68       		.byte	0x68
 7035 02fc 0A       		.byte	0xa
 7036 02fd B3       		.byte	0xb3
 7037 02fe 20040000 		.4byte	0x420
 7038 0302 0E       		.uleb128 0xe
 7039 0303 5F7000   		.ascii	"_p\000"
 7040 0306 0A       		.byte	0xa
 7041 0307 B4       		.byte	0xb4
 7042 0308 F0020000 		.4byte	0x2f0
 7043 030c 00       		.byte	0
 7044 030d 0E       		.uleb128 0xe
 7045 030e 5F7200   		.ascii	"_r\000"
 7046 0311 0A       		.byte	0xa
 7047 0312 B5       		.byte	0xb5
 7048 0313 89000000 		.4byte	0x89
 7049 0317 04       		.byte	0x4
 7050 0318 0E       		.uleb128 0xe
 7051 0319 5F7700   		.ascii	"_w\000"
 7052 031c 0A       		.byte	0xa
 7053 031d B6       		.byte	0xb6
 7054 031e 89000000 		.4byte	0x89
 7055 0322 08       		.byte	0x8
 7056 0323 0C       		.uleb128 0xc
 7057 0324 FD000000 		.4byte	.LASF52
 7058 0328 0A       		.byte	0xa
 7059 0329 B7       		.byte	0xb7
 7060 032a 49000000 		.4byte	0x49
 7061 032e 0C       		.byte	0xc
 7062 032f 0C       		.uleb128 0xc
 7063 0330 3A060000 		.4byte	.LASF53
 7064 0334 0A       		.byte	0xa
 7065 0335 B8       		.byte	0xb8
 7066 0336 49000000 		.4byte	0x49
 7067 033a 0E       		.byte	0xe
 7068 033b 0E       		.uleb128 0xe
 7069 033c 5F626600 		.ascii	"_bf\000"
 7070 0340 0A       		.byte	0xa
 7071 0341 B9       		.byte	0xb9
 7072 0342 CB020000 		.4byte	0x2cb
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 155


 7073 0346 10       		.byte	0x10
 7074 0347 0C       		.uleb128 0xc
 7075 0348 F4000000 		.4byte	.LASF54
 7076 034c 0A       		.byte	0xa
 7077 034d BA       		.byte	0xba
 7078 034e 89000000 		.4byte	0x89
 7079 0352 18       		.byte	0x18
 7080 0353 0C       		.uleb128 0xc
 7081 0354 C7010000 		.4byte	.LASF55
 7082 0358 0A       		.byte	0xa
 7083 0359 C1       		.byte	0xc1
 7084 035a 97000000 		.4byte	0x97
 7085 035e 1C       		.byte	0x1c
 7086 035f 0C       		.uleb128 0xc
 7087 0360 60010000 		.4byte	.LASF56
 7088 0364 0A       		.byte	0xa
 7089 0365 C3       		.byte	0xc3
 7090 0366 83050000 		.4byte	0x583
 7091 036a 20       		.byte	0x20
 7092 036b 0C       		.uleb128 0xc
 7093 036c 4C080000 		.4byte	.LASF57
 7094 0370 0A       		.byte	0xa
 7095 0371 C5       		.byte	0xc5
 7096 0372 B2050000 		.4byte	0x5b2
 7097 0376 24       		.byte	0x24
 7098 0377 0C       		.uleb128 0xc
 7099 0378 E30C0000 		.4byte	.LASF58
 7100 037c 0A       		.byte	0xa
 7101 037d C8       		.byte	0xc8
 7102 037e D6050000 		.4byte	0x5d6
 7103 0382 28       		.byte	0x28
 7104 0383 0C       		.uleb128 0xc
 7105 0384 7D050000 		.4byte	.LASF59
 7106 0388 0A       		.byte	0xa
 7107 0389 C9       		.byte	0xc9
 7108 038a F0050000 		.4byte	0x5f0
 7109 038e 2C       		.byte	0x2c
 7110 038f 0E       		.uleb128 0xe
 7111 0390 5F756200 		.ascii	"_ub\000"
 7112 0394 0A       		.byte	0xa
 7113 0395 CC       		.byte	0xcc
 7114 0396 CB020000 		.4byte	0x2cb
 7115 039a 30       		.byte	0x30
 7116 039b 0E       		.uleb128 0xe
 7117 039c 5F757000 		.ascii	"_up\000"
 7118 03a0 0A       		.byte	0xa
 7119 03a1 CD       		.byte	0xcd
 7120 03a2 F0020000 		.4byte	0x2f0
 7121 03a6 38       		.byte	0x38
 7122 03a7 0E       		.uleb128 0xe
 7123 03a8 5F757200 		.ascii	"_ur\000"
 7124 03ac 0A       		.byte	0xa
 7125 03ad CE       		.byte	0xce
 7126 03ae 89000000 		.4byte	0x89
 7127 03b2 3C       		.byte	0x3c
 7128 03b3 0C       		.uleb128 0xc
 7129 03b4 040D0000 		.4byte	.LASF60
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 156


 7130 03b8 0A       		.byte	0xa
 7131 03b9 D1       		.byte	0xd1
 7132 03ba F6050000 		.4byte	0x5f6
 7133 03be 40       		.byte	0x40
 7134 03bf 0C       		.uleb128 0xc
 7135 03c0 910C0000 		.4byte	.LASF61
 7136 03c4 0A       		.byte	0xa
 7137 03c5 D2       		.byte	0xd2
 7138 03c6 06060000 		.4byte	0x606
 7139 03ca 43       		.byte	0x43
 7140 03cb 0E       		.uleb128 0xe
 7141 03cc 5F6C6200 		.ascii	"_lb\000"
 7142 03d0 0A       		.byte	0xa
 7143 03d1 D5       		.byte	0xd5
 7144 03d2 CB020000 		.4byte	0x2cb
 7145 03d6 44       		.byte	0x44
 7146 03d7 0C       		.uleb128 0xc
 7147 03d8 970A0000 		.4byte	.LASF62
 7148 03dc 0A       		.byte	0xa
 7149 03dd D8       		.byte	0xd8
 7150 03de 89000000 		.4byte	0x89
 7151 03e2 4C       		.byte	0x4c
 7152 03e3 0C       		.uleb128 0xc
 7153 03e4 47030000 		.4byte	.LASF63
 7154 03e8 0A       		.byte	0xa
 7155 03e9 D9       		.byte	0xd9
 7156 03ea A4000000 		.4byte	0xa4
 7157 03ee 50       		.byte	0x50
 7158 03ef 0C       		.uleb128 0xc
 7159 03f0 48090000 		.4byte	.LASF64
 7160 03f4 0A       		.byte	0xa
 7161 03f5 DC       		.byte	0xdc
 7162 03f6 3E040000 		.4byte	0x43e
 7163 03fa 54       		.byte	0x54
 7164 03fb 0C       		.uleb128 0xc
 7165 03fc A50A0000 		.4byte	.LASF65
 7166 0400 0A       		.byte	0xa
 7167 0401 E0       		.byte	0xe0
 7168 0402 28010000 		.4byte	0x128
 7169 0406 58       		.byte	0x58
 7170 0407 0C       		.uleb128 0xc
 7171 0408 71080000 		.4byte	.LASF66
 7172 040c 0A       		.byte	0xa
 7173 040d E2       		.byte	0xe2
 7174 040e 1D010000 		.4byte	0x11d
 7175 0412 5C       		.byte	0x5c
 7176 0413 0C       		.uleb128 0xc
 7177 0414 B50C0000 		.4byte	.LASF67
 7178 0418 0A       		.byte	0xa
 7179 0419 E3       		.byte	0xe3
 7180 041a 89000000 		.4byte	0x89
 7181 041e 64       		.byte	0x64
 7182 041f 00       		.byte	0
 7183 0420 13       		.uleb128 0x13
 7184 0421 89000000 		.4byte	0x89
 7185 0425 3E040000 		.4byte	0x43e
 7186 0429 14       		.uleb128 0x14
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 157


 7187 042a 3E040000 		.4byte	0x43e
 7188 042e 14       		.uleb128 0x14
 7189 042f 97000000 		.4byte	0x97
 7190 0433 14       		.uleb128 0x14
 7191 0434 76050000 		.4byte	0x576
 7192 0438 14       		.uleb128 0x14
 7193 0439 89000000 		.4byte	0x89
 7194 043d 00       		.byte	0
 7195 043e 0F       		.uleb128 0xf
 7196 043f 04       		.byte	0x4
 7197 0440 44040000 		.4byte	0x444
 7198 0444 15       		.uleb128 0x15
 7199 0445 2E0C0000 		.4byte	.LASF68
 7200 0449 2804     		.2byte	0x428
 7201 044b 0A       		.byte	0xa
 7202 044c 3902     		.2byte	0x239
 7203 044e 76050000 		.4byte	0x576
 7204 0452 16       		.uleb128 0x16
 7205 0453 1A010000 		.4byte	.LASF69
 7206 0457 0A       		.byte	0xa
 7207 0458 3B02     		.2byte	0x23b
 7208 045a 89000000 		.4byte	0x89
 7209 045e 00       		.byte	0
 7210 045f 16       		.uleb128 0x16
 7211 0460 B1050000 		.4byte	.LASF70
 7212 0464 0A       		.byte	0xa
 7213 0465 4002     		.2byte	0x240
 7214 0467 5D060000 		.4byte	0x65d
 7215 046b 04       		.byte	0x4
 7216 046c 16       		.uleb128 0x16
 7217 046d B2010000 		.4byte	.LASF71
 7218 0471 0A       		.byte	0xa
 7219 0472 4002     		.2byte	0x240
 7220 0474 5D060000 		.4byte	0x65d
 7221 0478 08       		.byte	0x8
 7222 0479 16       		.uleb128 0x16
 7223 047a F30C0000 		.4byte	.LASF72
 7224 047e 0A       		.byte	0xa
 7225 047f 4002     		.2byte	0x240
 7226 0481 5D060000 		.4byte	0x65d
 7227 0485 0C       		.byte	0xc
 7228 0486 16       		.uleb128 0x16
 7229 0487 0A040000 		.4byte	.LASF73
 7230 048b 0A       		.byte	0xa
 7231 048c 4202     		.2byte	0x242
 7232 048e 89000000 		.4byte	0x89
 7233 0492 10       		.byte	0x10
 7234 0493 16       		.uleb128 0x16
 7235 0494 89030000 		.4byte	.LASF74
 7236 0498 0A       		.byte	0xa
 7237 0499 4302     		.2byte	0x243
 7238 049b 3F080000 		.4byte	0x83f
 7239 049f 14       		.byte	0x14
 7240 04a0 16       		.uleb128 0x16
 7241 04a1 4C0A0000 		.4byte	.LASF75
 7242 04a5 0A       		.byte	0xa
 7243 04a6 4502     		.2byte	0x245
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 158


 7244 04a8 89000000 		.4byte	0x89
 7245 04ac 30       		.byte	0x30
 7246 04ad 16       		.uleb128 0x16
 7247 04ae 28090000 		.4byte	.LASF76
 7248 04b2 0A       		.byte	0xa
 7249 04b3 4602     		.2byte	0x246
 7250 04b5 A7050000 		.4byte	0x5a7
 7251 04b9 34       		.byte	0x34
 7252 04ba 16       		.uleb128 0x16
 7253 04bb 84050000 		.4byte	.LASF77
 7254 04bf 0A       		.byte	0xa
 7255 04c0 4802     		.2byte	0x248
 7256 04c2 89000000 		.4byte	0x89
 7257 04c6 38       		.byte	0x38
 7258 04c7 16       		.uleb128 0x16
 7259 04c8 1E070000 		.4byte	.LASF78
 7260 04cc 0A       		.byte	0xa
 7261 04cd 4A02     		.2byte	0x24a
 7262 04cf 5A080000 		.4byte	0x85a
 7263 04d3 3C       		.byte	0x3c
 7264 04d4 16       		.uleb128 0x16
 7265 04d5 3F020000 		.4byte	.LASF79
 7266 04d9 0A       		.byte	0xa
 7267 04da 4D02     		.2byte	0x24d
 7268 04dc 91010000 		.4byte	0x191
 7269 04e0 40       		.byte	0x40
 7270 04e1 16       		.uleb128 0x16
 7271 04e2 C9020000 		.4byte	.LASF80
 7272 04e6 0A       		.byte	0xa
 7273 04e7 4E02     		.2byte	0x24e
 7274 04e9 89000000 		.4byte	0x89
 7275 04ed 44       		.byte	0x44
 7276 04ee 16       		.uleb128 0x16
 7277 04ef 82040000 		.4byte	.LASF81
 7278 04f3 0A       		.byte	0xa
 7279 04f4 4F02     		.2byte	0x24f
 7280 04f6 91010000 		.4byte	0x191
 7281 04fa 48       		.byte	0x48
 7282 04fb 16       		.uleb128 0x16
 7283 04fc F6050000 		.4byte	.LASF82
 7284 0500 0A       		.byte	0xa
 7285 0501 5002     		.2byte	0x250
 7286 0503 60080000 		.4byte	0x860
 7287 0507 4C       		.byte	0x4c
 7288 0508 16       		.uleb128 0x16
 7289 0509 320A0000 		.4byte	.LASF83
 7290 050d 0A       		.byte	0xa
 7291 050e 5302     		.2byte	0x253
 7292 0510 89000000 		.4byte	0x89
 7293 0514 50       		.byte	0x50
 7294 0515 16       		.uleb128 0x16
 7295 0516 350B0000 		.4byte	.LASF84
 7296 051a 0A       		.byte	0xa
 7297 051b 5402     		.2byte	0x254
 7298 051d 76050000 		.4byte	0x576
 7299 0521 54       		.byte	0x54
 7300 0522 16       		.uleb128 0x16
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 159


 7301 0523 9C010000 		.4byte	.LASF85
 7302 0527 0A       		.byte	0xa
 7303 0528 7702     		.2byte	0x277
 7304 052a 1D080000 		.4byte	0x81d
 7305 052e 58       		.byte	0x58
 7306 052f 17       		.uleb128 0x17
 7307 0530 69080000 		.4byte	.LASF45
 7308 0534 0A       		.byte	0xa
 7309 0535 7B02     		.2byte	0x27b
 7310 0537 AE020000 		.4byte	0x2ae
 7311 053b 4801     		.2byte	0x148
 7312 053d 17       		.uleb128 0x17
 7313 053e FA040000 		.4byte	.LASF86
 7314 0542 0A       		.byte	0xa
 7315 0543 7C02     		.2byte	0x27c
 7316 0545 70020000 		.4byte	0x270
 7317 0549 4C01     		.2byte	0x14c
 7318 054b 17       		.uleb128 0x17
 7319 054c E1040000 		.4byte	.LASF87
 7320 0550 0A       		.byte	0xa
 7321 0551 8002     		.2byte	0x280
 7322 0553 71080000 		.4byte	0x871
 7323 0557 DC02     		.2byte	0x2dc
 7324 0559 17       		.uleb128 0x17
 7325 055a EE0B0000 		.4byte	.LASF88
 7326 055e 0A       		.byte	0xa
 7327 055f 8502     		.2byte	0x285
 7328 0561 22060000 		.4byte	0x622
 7329 0565 E002     		.2byte	0x2e0
 7330 0567 17       		.uleb128 0x17
 7331 0568 0A090000 		.4byte	.LASF89
 7332 056c 0A       		.byte	0xa
 7333 056d 8602     		.2byte	0x286
 7334 056f 7D080000 		.4byte	0x87d
 7335 0573 EC02     		.2byte	0x2ec
 7336 0575 00       		.byte	0
 7337 0576 0F       		.uleb128 0xf
 7338 0577 04       		.byte	0x4
 7339 0578 7C050000 		.4byte	0x57c
 7340 057c 03       		.uleb128 0x3
 7341 057d 01       		.byte	0x1
 7342 057e 08       		.byte	0x8
 7343 057f C8040000 		.4byte	.LASF90
 7344 0583 0F       		.uleb128 0xf
 7345 0584 04       		.byte	0x4
 7346 0585 20040000 		.4byte	0x420
 7347 0589 13       		.uleb128 0x13
 7348 058a 89000000 		.4byte	0x89
 7349 058e A7050000 		.4byte	0x5a7
 7350 0592 14       		.uleb128 0x14
 7351 0593 3E040000 		.4byte	0x43e
 7352 0597 14       		.uleb128 0x14
 7353 0598 97000000 		.4byte	0x97
 7354 059c 14       		.uleb128 0x14
 7355 059d A7050000 		.4byte	0x5a7
 7356 05a1 14       		.uleb128 0x14
 7357 05a2 89000000 		.4byte	0x89
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 160


 7358 05a6 00       		.byte	0
 7359 05a7 0F       		.uleb128 0xf
 7360 05a8 04       		.byte	0x4
 7361 05a9 AD050000 		.4byte	0x5ad
 7362 05ad 18       		.uleb128 0x18
 7363 05ae 7C050000 		.4byte	0x57c
 7364 05b2 0F       		.uleb128 0xf
 7365 05b3 04       		.byte	0x4
 7366 05b4 89050000 		.4byte	0x589
 7367 05b8 13       		.uleb128 0x13
 7368 05b9 AF000000 		.4byte	0xaf
 7369 05bd D6050000 		.4byte	0x5d6
 7370 05c1 14       		.uleb128 0x14
 7371 05c2 3E040000 		.4byte	0x43e
 7372 05c6 14       		.uleb128 0x14
 7373 05c7 97000000 		.4byte	0x97
 7374 05cb 14       		.uleb128 0x14
 7375 05cc AF000000 		.4byte	0xaf
 7376 05d0 14       		.uleb128 0x14
 7377 05d1 89000000 		.4byte	0x89
 7378 05d5 00       		.byte	0
 7379 05d6 0F       		.uleb128 0xf
 7380 05d7 04       		.byte	0x4
 7381 05d8 B8050000 		.4byte	0x5b8
 7382 05dc 13       		.uleb128 0x13
 7383 05dd 89000000 		.4byte	0x89
 7384 05e1 F0050000 		.4byte	0x5f0
 7385 05e5 14       		.uleb128 0x14
 7386 05e6 3E040000 		.4byte	0x43e
 7387 05ea 14       		.uleb128 0x14
 7388 05eb 97000000 		.4byte	0x97
 7389 05ef 00       		.byte	0
 7390 05f0 0F       		.uleb128 0xf
 7391 05f1 04       		.byte	0x4
 7392 05f2 DC050000 		.4byte	0x5dc
 7393 05f6 09       		.uleb128 0x9
 7394 05f7 42000000 		.4byte	0x42
 7395 05fb 06060000 		.4byte	0x606
 7396 05ff 0A       		.uleb128 0xa
 7397 0600 F5000000 		.4byte	0xf5
 7398 0604 02       		.byte	0x2
 7399 0605 00       		.byte	0
 7400 0606 09       		.uleb128 0x9
 7401 0607 42000000 		.4byte	0x42
 7402 060b 16060000 		.4byte	0x616
 7403 060f 0A       		.uleb128 0xa
 7404 0610 F5000000 		.4byte	0xf5
 7405 0614 00       		.byte	0
 7406 0615 00       		.byte	0
 7407 0616 06       		.uleb128 0x6
 7408 0617 36030000 		.4byte	.LASF91
 7409 061b 0A       		.byte	0xa
 7410 061c 1D01     		.2byte	0x11d
 7411 061e F6020000 		.4byte	0x2f6
 7412 0622 19       		.uleb128 0x19
 7413 0623 DE0B0000 		.4byte	.LASF92
 7414 0627 0C       		.byte	0xc
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 161


 7415 0628 0A       		.byte	0xa
 7416 0629 2101     		.2byte	0x121
 7417 062b 57060000 		.4byte	0x657
 7418 062f 16       		.uleb128 0x16
 7419 0630 30040000 		.4byte	.LASF25
 7420 0634 0A       		.byte	0xa
 7421 0635 2301     		.2byte	0x123
 7422 0637 57060000 		.4byte	0x657
 7423 063b 00       		.byte	0
 7424 063c 16       		.uleb128 0x16
 7425 063d F40A0000 		.4byte	.LASF93
 7426 0641 0A       		.byte	0xa
 7427 0642 2401     		.2byte	0x124
 7428 0644 89000000 		.4byte	0x89
 7429 0648 04       		.byte	0x4
 7430 0649 16       		.uleb128 0x16
 7431 064a 35050000 		.4byte	.LASF94
 7432 064e 0A       		.byte	0xa
 7433 064f 2501     		.2byte	0x125
 7434 0651 5D060000 		.4byte	0x65d
 7435 0655 08       		.byte	0x8
 7436 0656 00       		.byte	0
 7437 0657 0F       		.uleb128 0xf
 7438 0658 04       		.byte	0x4
 7439 0659 22060000 		.4byte	0x622
 7440 065d 0F       		.uleb128 0xf
 7441 065e 04       		.byte	0x4
 7442 065f 16060000 		.4byte	0x616
 7443 0663 19       		.uleb128 0x19
 7444 0664 C1020000 		.4byte	.LASF95
 7445 0668 0E       		.byte	0xe
 7446 0669 0A       		.byte	0xa
 7447 066a 3D01     		.2byte	0x13d
 7448 066c 98060000 		.4byte	0x698
 7449 0670 16       		.uleb128 0x16
 7450 0671 C50C0000 		.4byte	.LASF96
 7451 0675 0A       		.byte	0xa
 7452 0676 3E01     		.2byte	0x13e
 7453 0678 98060000 		.4byte	0x698
 7454 067c 00       		.byte	0
 7455 067d 16       		.uleb128 0x16
 7456 067e 00060000 		.4byte	.LASF97
 7457 0682 0A       		.byte	0xa
 7458 0683 3F01     		.2byte	0x13f
 7459 0685 98060000 		.4byte	0x698
 7460 0689 06       		.byte	0x6
 7461 068a 16       		.uleb128 0x16
 7462 068b 8F0B0000 		.4byte	.LASF98
 7463 068f 0A       		.byte	0xa
 7464 0690 4001     		.2byte	0x140
 7465 0692 5B000000 		.4byte	0x5b
 7466 0696 0C       		.byte	0xc
 7467 0697 00       		.byte	0
 7468 0698 09       		.uleb128 0x9
 7469 0699 5B000000 		.4byte	0x5b
 7470 069d A8060000 		.4byte	0x6a8
 7471 06a1 0A       		.uleb128 0xa
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 162


 7472 06a2 F5000000 		.4byte	0xf5
 7473 06a6 02       		.byte	0x2
 7474 06a7 00       		.byte	0
 7475 06a8 1A       		.uleb128 0x1a
 7476 06a9 D0       		.byte	0xd0
 7477 06aa 0A       		.byte	0xa
 7478 06ab 5802     		.2byte	0x258
 7479 06ad A9070000 		.4byte	0x7a9
 7480 06b1 16       		.uleb128 0x16
 7481 06b2 970C0000 		.4byte	.LASF99
 7482 06b6 0A       		.byte	0xa
 7483 06b7 5A02     		.2byte	0x25a
 7484 06b9 90000000 		.4byte	0x90
 7485 06bd 00       		.byte	0
 7486 06be 16       		.uleb128 0x16
 7487 06bf F60B0000 		.4byte	.LASF100
 7488 06c3 0A       		.byte	0xa
 7489 06c4 5B02     		.2byte	0x25b
 7490 06c6 76050000 		.4byte	0x576
 7491 06ca 04       		.byte	0x4
 7492 06cb 16       		.uleb128 0x16
 7493 06cc F3020000 		.4byte	.LASF101
 7494 06d0 0A       		.byte	0xa
 7495 06d1 5C02     		.2byte	0x25c
 7496 06d3 A9070000 		.4byte	0x7a9
 7497 06d7 08       		.byte	0x8
 7498 06d8 16       		.uleb128 0x16
 7499 06d9 80090000 		.4byte	.LASF102
 7500 06dd 0A       		.byte	0xa
 7501 06de 5D02     		.2byte	0x25d
 7502 06e0 A7010000 		.4byte	0x1a7
 7503 06e4 24       		.byte	0x24
 7504 06e5 16       		.uleb128 0x16
 7505 06e6 B8050000 		.4byte	.LASF103
 7506 06ea 0A       		.byte	0xa
 7507 06eb 5E02     		.2byte	0x25e
 7508 06ed 89000000 		.4byte	0x89
 7509 06f1 48       		.byte	0x48
 7510 06f2 16       		.uleb128 0x16
 7511 06f3 D80C0000 		.4byte	.LASF104
 7512 06f7 0A       		.byte	0xa
 7513 06f8 5F02     		.2byte	0x25f
 7514 06fa 82000000 		.4byte	0x82
 7515 06fe 50       		.byte	0x50
 7516 06ff 16       		.uleb128 0x16
 7517 0700 9C000000 		.4byte	.LASF105
 7518 0704 0A       		.byte	0xa
 7519 0705 6002     		.2byte	0x260
 7520 0707 63060000 		.4byte	0x663
 7521 070b 58       		.byte	0x58
 7522 070c 16       		.uleb128 0x16
 7523 070d B4040000 		.4byte	.LASF106
 7524 0711 0A       		.byte	0xa
 7525 0712 6102     		.2byte	0x261
 7526 0714 1D010000 		.4byte	0x11d
 7527 0718 68       		.byte	0x68
 7528 0719 16       		.uleb128 0x16
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 163


 7529 071a 030C0000 		.4byte	.LASF107
 7530 071e 0A       		.byte	0xa
 7531 071f 6202     		.2byte	0x262
 7532 0721 1D010000 		.4byte	0x11d
 7533 0725 70       		.byte	0x70
 7534 0726 16       		.uleb128 0x16
 7535 0727 74000000 		.4byte	.LASF108
 7536 072b 0A       		.byte	0xa
 7537 072c 6302     		.2byte	0x263
 7538 072e 1D010000 		.4byte	0x11d
 7539 0732 78       		.byte	0x78
 7540 0733 16       		.uleb128 0x16
 7541 0734 420A0000 		.4byte	.LASF109
 7542 0738 0A       		.byte	0xa
 7543 0739 6402     		.2byte	0x264
 7544 073b B9070000 		.4byte	0x7b9
 7545 073f 80       		.byte	0x80
 7546 0740 16       		.uleb128 0x16
 7547 0741 A1000000 		.4byte	.LASF110
 7548 0745 0A       		.byte	0xa
 7549 0746 6502     		.2byte	0x265
 7550 0748 C9070000 		.4byte	0x7c9
 7551 074c 88       		.byte	0x88
 7552 074d 16       		.uleb128 0x16
 7553 074e 770B0000 		.4byte	.LASF111
 7554 0752 0A       		.byte	0xa
 7555 0753 6602     		.2byte	0x266
 7556 0755 89000000 		.4byte	0x89
 7557 0759 A0       		.byte	0xa0
 7558 075a 16       		.uleb128 0x16
 7559 075b 73010000 		.4byte	.LASF112
 7560 075f 0A       		.byte	0xa
 7561 0760 6702     		.2byte	0x267
 7562 0762 1D010000 		.4byte	0x11d
 7563 0766 A4       		.byte	0xa4
 7564 0767 16       		.uleb128 0x16
 7565 0768 EB040000 		.4byte	.LASF113
 7566 076c 0A       		.byte	0xa
 7567 076d 6802     		.2byte	0x268
 7568 076f 1D010000 		.4byte	0x11d
 7569 0773 AC       		.byte	0xac
 7570 0774 16       		.uleb128 0x16
 7571 0775 36040000 		.4byte	.LASF114
 7572 0779 0A       		.byte	0xa
 7573 077a 6902     		.2byte	0x269
 7574 077c 1D010000 		.4byte	0x11d
 7575 0780 B4       		.byte	0xb4
 7576 0781 16       		.uleb128 0x16
 7577 0782 0E060000 		.4byte	.LASF115
 7578 0786 0A       		.byte	0xa
 7579 0787 6A02     		.2byte	0x26a
 7580 0789 1D010000 		.4byte	0x11d
 7581 078d BC       		.byte	0xbc
 7582 078e 16       		.uleb128 0x16
 7583 078f A3040000 		.4byte	.LASF116
 7584 0793 0A       		.byte	0xa
 7585 0794 6B02     		.2byte	0x26b
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 164


 7586 0796 1D010000 		.4byte	0x11d
 7587 079a C4       		.byte	0xc4
 7588 079b 16       		.uleb128 0x16
 7589 079c B0070000 		.4byte	.LASF117
 7590 07a0 0A       		.byte	0xa
 7591 07a1 6C02     		.2byte	0x26c
 7592 07a3 89000000 		.4byte	0x89
 7593 07a7 CC       		.byte	0xcc
 7594 07a8 00       		.byte	0
 7595 07a9 09       		.uleb128 0x9
 7596 07aa 7C050000 		.4byte	0x57c
 7597 07ae B9070000 		.4byte	0x7b9
 7598 07b2 0A       		.uleb128 0xa
 7599 07b3 F5000000 		.4byte	0xf5
 7600 07b7 19       		.byte	0x19
 7601 07b8 00       		.byte	0
 7602 07b9 09       		.uleb128 0x9
 7603 07ba 7C050000 		.4byte	0x57c
 7604 07be C9070000 		.4byte	0x7c9
 7605 07c2 0A       		.uleb128 0xa
 7606 07c3 F5000000 		.4byte	0xf5
 7607 07c7 07       		.byte	0x7
 7608 07c8 00       		.byte	0
 7609 07c9 09       		.uleb128 0x9
 7610 07ca 7C050000 		.4byte	0x57c
 7611 07ce D9070000 		.4byte	0x7d9
 7612 07d2 0A       		.uleb128 0xa
 7613 07d3 F5000000 		.4byte	0xf5
 7614 07d7 17       		.byte	0x17
 7615 07d8 00       		.byte	0
 7616 07d9 1A       		.uleb128 0x1a
 7617 07da F0       		.byte	0xf0
 7618 07db 0A       		.byte	0xa
 7619 07dc 7102     		.2byte	0x271
 7620 07de FD070000 		.4byte	0x7fd
 7621 07e2 16       		.uleb128 0x16
 7622 07e3 A0020000 		.4byte	.LASF118
 7623 07e7 0A       		.byte	0xa
 7624 07e8 7402     		.2byte	0x274
 7625 07ea FD070000 		.4byte	0x7fd
 7626 07ee 00       		.byte	0
 7627 07ef 16       		.uleb128 0x16
 7628 07f0 FB0C0000 		.4byte	.LASF119
 7629 07f4 0A       		.byte	0xa
 7630 07f5 7502     		.2byte	0x275
 7631 07f7 0D080000 		.4byte	0x80d
 7632 07fb 78       		.byte	0x78
 7633 07fc 00       		.byte	0
 7634 07fd 09       		.uleb128 0x9
 7635 07fe F0020000 		.4byte	0x2f0
 7636 0802 0D080000 		.4byte	0x80d
 7637 0806 0A       		.uleb128 0xa
 7638 0807 F5000000 		.4byte	0xf5
 7639 080b 1D       		.byte	0x1d
 7640 080c 00       		.byte	0
 7641 080d 09       		.uleb128 0x9
 7642 080e 90000000 		.4byte	0x90
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 165


 7643 0812 1D080000 		.4byte	0x81d
 7644 0816 0A       		.uleb128 0xa
 7645 0817 F5000000 		.4byte	0xf5
 7646 081b 1D       		.byte	0x1d
 7647 081c 00       		.byte	0
 7648 081d 1B       		.uleb128 0x1b
 7649 081e F0       		.byte	0xf0
 7650 081f 0A       		.byte	0xa
 7651 0820 5602     		.2byte	0x256
 7652 0822 3F080000 		.4byte	0x83f
 7653 0826 1C       		.uleb128 0x1c
 7654 0827 2E0C0000 		.4byte	.LASF68
 7655 082b 0A       		.byte	0xa
 7656 082c 6D02     		.2byte	0x26d
 7657 082e A8060000 		.4byte	0x6a8
 7658 0832 1C       		.uleb128 0x1c
 7659 0833 8F090000 		.4byte	.LASF120
 7660 0837 0A       		.byte	0xa
 7661 0838 7602     		.2byte	0x276
 7662 083a D9070000 		.4byte	0x7d9
 7663 083e 00       		.byte	0
 7664 083f 09       		.uleb128 0x9
 7665 0840 7C050000 		.4byte	0x57c
 7666 0844 4F080000 		.4byte	0x84f
 7667 0848 0A       		.uleb128 0xa
 7668 0849 F5000000 		.4byte	0xf5
 7669 084d 18       		.byte	0x18
 7670 084e 00       		.byte	0
 7671 084f 1D       		.uleb128 0x1d
 7672 0850 5A080000 		.4byte	0x85a
 7673 0854 14       		.uleb128 0x14
 7674 0855 3E040000 		.4byte	0x43e
 7675 0859 00       		.byte	0
 7676 085a 0F       		.uleb128 0xf
 7677 085b 04       		.byte	0x4
 7678 085c 4F080000 		.4byte	0x84f
 7679 0860 0F       		.uleb128 0xf
 7680 0861 04       		.byte	0x4
 7681 0862 91010000 		.4byte	0x191
 7682 0866 1D       		.uleb128 0x1d
 7683 0867 71080000 		.4byte	0x871
 7684 086b 14       		.uleb128 0x14
 7685 086c 89000000 		.4byte	0x89
 7686 0870 00       		.byte	0
 7687 0871 0F       		.uleb128 0xf
 7688 0872 04       		.byte	0x4
 7689 0873 77080000 		.4byte	0x877
 7690 0877 0F       		.uleb128 0xf
 7691 0878 04       		.byte	0x4
 7692 0879 66080000 		.4byte	0x866
 7693 087d 09       		.uleb128 0x9
 7694 087e 16060000 		.4byte	0x616
 7695 0882 8D080000 		.4byte	0x88d
 7696 0886 0A       		.uleb128 0xa
 7697 0887 F5000000 		.4byte	0xf5
 7698 088b 02       		.byte	0x2
 7699 088c 00       		.byte	0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 166


 7700 088d 02       		.uleb128 0x2
 7701 088e 47020000 		.4byte	.LASF121
 7702 0892 0B       		.byte	0xb
 7703 0893 14       		.byte	0x14
 7704 0894 25000000 		.4byte	0x25
 7705 0898 02       		.uleb128 0x2
 7706 0899 3B050000 		.4byte	.LASF122
 7707 089d 0B       		.byte	0xb
 7708 089e 15       		.byte	0x15
 7709 089f 37000000 		.4byte	0x37
 7710 08a3 02       		.uleb128 0x2
 7711 08a4 29080000 		.4byte	.LASF123
 7712 08a8 0B       		.byte	0xb
 7713 08a9 21       		.byte	0x21
 7714 08aa 50000000 		.4byte	0x50
 7715 08ae 02       		.uleb128 0x2
 7716 08af 020B0000 		.4byte	.LASF124
 7717 08b3 0B       		.byte	0xb
 7718 08b4 2C       		.byte	0x2c
 7719 08b5 62000000 		.4byte	0x62
 7720 08b9 06       		.uleb128 0x6
 7721 08ba 13020000 		.4byte	.LASF125
 7722 08be 0C       		.byte	0xc
 7723 08bf 9201     		.2byte	0x192
 7724 08c1 42000000 		.4byte	0x42
 7725 08c5 06       		.uleb128 0x6
 7726 08c6 0D050000 		.4byte	.LASF126
 7727 08ca 0C       		.byte	0xc
 7728 08cb 9301     		.2byte	0x193
 7729 08cd 5B000000 		.4byte	0x5b
 7730 08d1 06       		.uleb128 0x6
 7731 08d2 1D050000 		.4byte	.LASF127
 7732 08d6 0C       		.byte	0xc
 7733 08d7 9501     		.2byte	0x195
 7734 08d9 30000000 		.4byte	0x30
 7735 08dd 06       		.uleb128 0x6
 7736 08de 14010000 		.4byte	.LASF128
 7737 08e2 0C       		.byte	0xc
 7738 08e3 9601     		.2byte	0x196
 7739 08e5 49000000 		.4byte	0x49
 7740 08e9 06       		.uleb128 0x6
 7741 08ea 9A020000 		.4byte	.LASF129
 7742 08ee 0C       		.byte	0xc
 7743 08ef 9701     		.2byte	0x197
 7744 08f1 6D000000 		.4byte	0x6d
 7745 08f5 03       		.uleb128 0x3
 7746 08f6 04       		.byte	0x4
 7747 08f7 04       		.byte	0x4
 7748 08f8 6D020000 		.4byte	.LASF130
 7749 08fc 03       		.uleb128 0x3
 7750 08fd 08       		.byte	0x8
 7751 08fe 04       		.byte	0x4
 7752 08ff 7B0C0000 		.4byte	.LASF131
 7753 0903 0D       		.uleb128 0xd
 7754 0904 75070000 		.4byte	.LASF132
 7755 0908 20       		.byte	0x20
 7756 0909 0D       		.byte	0xd
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 167


 7757 090a 29       		.byte	0x29
 7758 090b DC090000 		.4byte	0x9dc
 7759 090f 0C       		.uleb128 0xc
 7760 0910 9F070000 		.4byte	.LASF133
 7761 0914 0D       		.byte	0xd
 7762 0915 2A       		.byte	0x2a
 7763 0916 D1080000 		.4byte	0x8d1
 7764 091a 00       		.byte	0
 7765 091b 0C       		.uleb128 0xc
 7766 091c 04010000 		.4byte	.LASF134
 7767 0920 0D       		.byte	0xd
 7768 0921 2B       		.byte	0x2b
 7769 0922 B9080000 		.4byte	0x8b9
 7770 0926 01       		.byte	0x1
 7771 0927 0C       		.uleb128 0xc
 7772 0928 160B0000 		.4byte	.LASF135
 7773 092c 0D       		.byte	0xd
 7774 092d 2C       		.byte	0x2c
 7775 092e DD080000 		.4byte	0x8dd
 7776 0932 02       		.byte	0x2
 7777 0933 0C       		.uleb128 0xc
 7778 0934 87040000 		.4byte	.LASF136
 7779 0938 0D       		.byte	0xd
 7780 0939 2D       		.byte	0x2d
 7781 093a DD080000 		.4byte	0x8dd
 7782 093e 04       		.byte	0x4
 7783 093f 0C       		.uleb128 0xc
 7784 0940 540C0000 		.4byte	.LASF137
 7785 0944 0D       		.byte	0xd
 7786 0945 2E       		.byte	0x2e
 7787 0946 DD080000 		.4byte	0x8dd
 7788 094a 06       		.byte	0x6
 7789 094b 0C       		.uleb128 0xc
 7790 094c 820C0000 		.4byte	.LASF138
 7791 0950 0D       		.byte	0xd
 7792 0951 2F       		.byte	0x2f
 7793 0952 DD080000 		.4byte	0x8dd
 7794 0956 08       		.byte	0x8
 7795 0957 0C       		.uleb128 0xc
 7796 0958 0B070000 		.4byte	.LASF139
 7797 095c 0D       		.byte	0xd
 7798 095d 30       		.byte	0x30
 7799 095e DD080000 		.4byte	0x8dd
 7800 0962 0A       		.byte	0xa
 7801 0963 0C       		.uleb128 0xc
 7802 0964 110C0000 		.4byte	.LASF140
 7803 0968 0D       		.byte	0xd
 7804 0969 31       		.byte	0x31
 7805 096a DD080000 		.4byte	0x8dd
 7806 096e 0C       		.byte	0xc
 7807 096f 0C       		.uleb128 0xc
 7808 0970 B9070000 		.4byte	.LASF141
 7809 0974 0D       		.byte	0xd
 7810 0975 32       		.byte	0x32
 7811 0976 DD080000 		.4byte	0x8dd
 7812 097a 0E       		.byte	0xe
 7813 097b 0C       		.uleb128 0xc
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 168


 7814 097c E8050000 		.4byte	.LASF142
 7815 0980 0D       		.byte	0xd
 7816 0981 33       		.byte	0x33
 7817 0982 DD080000 		.4byte	0x8dd
 7818 0986 10       		.byte	0x10
 7819 0987 0C       		.uleb128 0xc
 7820 0988 5E0A0000 		.4byte	.LASF143
 7821 098c 0D       		.byte	0xd
 7822 098d 34       		.byte	0x34
 7823 098e DD080000 		.4byte	0x8dd
 7824 0992 12       		.byte	0x12
 7825 0993 0C       		.uleb128 0xc
 7826 0994 8E080000 		.4byte	.LASF144
 7827 0998 0D       		.byte	0xd
 7828 0999 35       		.byte	0x35
 7829 099a DD080000 		.4byte	0x8dd
 7830 099e 14       		.byte	0x14
 7831 099f 0C       		.uleb128 0xc
 7832 09a0 22050000 		.4byte	.LASF145
 7833 09a4 0D       		.byte	0xd
 7834 09a5 36       		.byte	0x36
 7835 09a6 DD080000 		.4byte	0x8dd
 7836 09aa 16       		.byte	0x16
 7837 09ab 0C       		.uleb128 0xc
 7838 09ac 66010000 		.4byte	.LASF146
 7839 09b0 0D       		.byte	0xd
 7840 09b1 37       		.byte	0x37
 7841 09b2 DD080000 		.4byte	0x8dd
 7842 09b6 18       		.byte	0x18
 7843 09b7 0C       		.uleb128 0xc
 7844 09b8 40090000 		.4byte	.LASF147
 7845 09bc 0D       		.byte	0xd
 7846 09bd 38       		.byte	0x38
 7847 09be DD080000 		.4byte	0x8dd
 7848 09c2 1A       		.byte	0x1a
 7849 09c3 0C       		.uleb128 0xc
 7850 09c4 02070000 		.4byte	.LASF148
 7851 09c8 0D       		.byte	0xd
 7852 09c9 39       		.byte	0x39
 7853 09ca DD080000 		.4byte	0x8dd
 7854 09ce 1C       		.byte	0x1c
 7855 09cf 0C       		.uleb128 0xc
 7856 09d0 58020000 		.4byte	.LASF149
 7857 09d4 0D       		.byte	0xd
 7858 09d5 3A       		.byte	0x3a
 7859 09d6 DD080000 		.4byte	0x8dd
 7860 09da 1E       		.byte	0x1e
 7861 09db 00       		.byte	0
 7862 09dc 0D       		.uleb128 0xd
 7863 09dd 660C0000 		.4byte	.LASF150
 7864 09e1 02       		.byte	0x2
 7865 09e2 0E       		.byte	0xe
 7866 09e3 06       		.byte	0x6
 7867 09e4 FD090000 		.4byte	0x9fd
 7868 09e8 0E       		.uleb128 0xe
 7869 09e9 7800     		.ascii	"x\000"
 7870 09eb 0E       		.byte	0xe
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 169


 7871 09ec 07       		.byte	0x7
 7872 09ed 8D080000 		.4byte	0x88d
 7873 09f1 00       		.byte	0
 7874 09f2 0E       		.uleb128 0xe
 7875 09f3 7900     		.ascii	"y\000"
 7876 09f5 0E       		.byte	0xe
 7877 09f6 08       		.byte	0x8
 7878 09f7 8D080000 		.4byte	0x88d
 7879 09fb 01       		.byte	0x1
 7880 09fc 00       		.byte	0
 7881 09fd 02       		.uleb128 0x2
 7882 09fe 660C0000 		.4byte	.LASF150
 7883 0a02 0E       		.byte	0xe
 7884 0a03 09       		.byte	0x9
 7885 0a04 DC090000 		.4byte	0x9dc
 7886 0a08 1E       		.uleb128 0x1e
 7887 0a09 34000000 		.4byte	.LASF215
 7888 0a0d 01       		.byte	0x1
 7889 0a0e 08       		.byte	0x8
 7890 0a0f 00000000 		.4byte	.LFB63
 7891 0a13 4C000000 		.4byte	.LFE63-.LFB63
 7892 0a17 01       		.uleb128 0x1
 7893 0a18 9C       		.byte	0x9c
 7894 0a19 2A0A0000 		.4byte	0xa2a
 7895 0a1d 1F       		.uleb128 0x1f
 7896 0a1e 6300     		.ascii	"c\000"
 7897 0a20 01       		.byte	0x1
 7898 0a21 09       		.byte	0x9
 7899 0a22 7C050000 		.4byte	0x57c
 7900 0a26 02       		.uleb128 0x2
 7901 0a27 91       		.byte	0x91
 7902 0a28 77       		.sleb128 -9
 7903 0a29 00       		.byte	0
 7904 0a2a 20       		.uleb128 0x20
 7905 0a2b 6D617800 		.ascii	"max\000"
 7906 0a2f 01       		.byte	0x1
 7907 0a30 0C       		.byte	0xc
 7908 0a31 89000000 		.4byte	0x89
 7909 0a35 00000000 		.4byte	.LFB64
 7910 0a39 4C000000 		.4byte	.LFE64-.LFB64
 7911 0a3d 01       		.uleb128 0x1
 7912 0a3e 9C       		.byte	0x9c
 7913 0a3f 7A0A0000 		.4byte	0xa7a
 7914 0a43 21       		.uleb128 0x21
 7915 0a44 61727200 		.ascii	"arr\000"
 7916 0a48 01       		.byte	0x1
 7917 0a49 0C       		.byte	0xc
 7918 0a4a 7A0A0000 		.4byte	0xa7a
 7919 0a4e 02       		.uleb128 0x2
 7920 0a4f 91       		.byte	0x91
 7921 0a50 6C       		.sleb128 -20
 7922 0a51 22       		.uleb128 0x22
 7923 0a52 53070000 		.4byte	.LASF151
 7924 0a56 01       		.byte	0x1
 7925 0a57 0C       		.byte	0xc
 7926 0a58 89000000 		.4byte	0x89
 7927 0a5c 02       		.uleb128 0x2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 170


 7928 0a5d 91       		.byte	0x91
 7929 0a5e 68       		.sleb128 -24
 7930 0a5f 1F       		.uleb128 0x1f
 7931 0a60 6D617800 		.ascii	"max\000"
 7932 0a64 01       		.byte	0x1
 7933 0a65 0D       		.byte	0xd
 7934 0a66 89000000 		.4byte	0x89
 7935 0a6a 02       		.uleb128 0x2
 7936 0a6b 91       		.byte	0x91
 7937 0a6c 74       		.sleb128 -12
 7938 0a6d 1F       		.uleb128 0x1f
 7939 0a6e 6900     		.ascii	"i\000"
 7940 0a70 01       		.byte	0x1
 7941 0a71 0E       		.byte	0xe
 7942 0a72 89000000 		.4byte	0x89
 7943 0a76 02       		.uleb128 0x2
 7944 0a77 91       		.byte	0x91
 7945 0a78 70       		.sleb128 -16
 7946 0a79 00       		.byte	0
 7947 0a7a 0F       		.uleb128 0xf
 7948 0a7b 04       		.byte	0x4
 7949 0a7c 89000000 		.4byte	0x89
 7950 0a80 23       		.uleb128 0x23
 7951 0a81 62030000 		.4byte	.LASF155
 7952 0a85 01       		.byte	0x1
 7953 0a86 15       		.byte	0x15
 7954 0a87 00000000 		.4byte	.LFB65
 7955 0a8b 4A000000 		.4byte	.LFE65-.LFB65
 7956 0a8f 01       		.uleb128 0x1
 7957 0a90 9C       		.byte	0x9c
 7958 0a91 BE0A0000 		.4byte	0xabe
 7959 0a95 21       		.uleb128 0x21
 7960 0a96 61727200 		.ascii	"arr\000"
 7961 0a9a 01       		.byte	0x1
 7962 0a9b 15       		.byte	0x15
 7963 0a9c BE0A0000 		.4byte	0xabe
 7964 0aa0 02       		.uleb128 0x2
 7965 0aa1 91       		.byte	0x91
 7966 0aa2 6C       		.sleb128 -20
 7967 0aa3 22       		.uleb128 0x22
 7968 0aa4 53070000 		.4byte	.LASF151
 7969 0aa8 01       		.byte	0x1
 7970 0aa9 15       		.byte	0x15
 7971 0aaa 89000000 		.4byte	0x89
 7972 0aae 02       		.uleb128 0x2
 7973 0aaf 91       		.byte	0x91
 7974 0ab0 68       		.sleb128 -24
 7975 0ab1 1F       		.uleb128 0x1f
 7976 0ab2 6900     		.ascii	"i\000"
 7977 0ab4 01       		.byte	0x1
 7978 0ab5 16       		.byte	0x16
 7979 0ab6 89000000 		.4byte	0x89
 7980 0aba 02       		.uleb128 0x2
 7981 0abb 91       		.byte	0x91
 7982 0abc 74       		.sleb128 -12
 7983 0abd 00       		.byte	0
 7984 0abe 0F       		.uleb128 0xf
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 171


 7985 0abf 04       		.byte	0x4
 7986 0ac0 FD090000 		.4byte	0x9fd
 7987 0ac4 24       		.uleb128 0x24
 7988 0ac5 710A0000 		.4byte	.LASF152
 7989 0ac9 01       		.byte	0x1
 7990 0aca 1C       		.byte	0x1c
 7991 0acb 89000000 		.4byte	0x89
 7992 0acf 00000000 		.4byte	.LFB66
 7993 0ad3 6A000000 		.4byte	.LFE66-.LFB66
 7994 0ad7 01       		.uleb128 0x1
 7995 0ad8 9C       		.byte	0x9c
 7996 0ad9 140B0000 		.4byte	0xb14
 7997 0add 22       		.uleb128 0x22
 7998 0ade 3D030000 		.4byte	.LASF153
 7999 0ae2 01       		.byte	0x1
 8000 0ae3 1C       		.byte	0x1c
 8001 0ae4 BE0A0000 		.4byte	0xabe
 8002 0ae8 02       		.uleb128 0x2
 8003 0ae9 91       		.byte	0x91
 8004 0aea 6C       		.sleb128 -20
 8005 0aeb 22       		.uleb128 0x22
 8006 0aec 42030000 		.4byte	.LASF154
 8007 0af0 01       		.byte	0x1
 8008 0af1 1C       		.byte	0x1c
 8009 0af2 BE0A0000 		.4byte	0xabe
 8010 0af6 02       		.uleb128 0x2
 8011 0af7 91       		.byte	0x91
 8012 0af8 68       		.sleb128 -24
 8013 0af9 22       		.uleb128 0x22
 8014 0afa 53070000 		.4byte	.LASF151
 8015 0afe 01       		.byte	0x1
 8016 0aff 1C       		.byte	0x1c
 8017 0b00 89000000 		.4byte	0x89
 8018 0b04 02       		.uleb128 0x2
 8019 0b05 91       		.byte	0x91
 8020 0b06 64       		.sleb128 -28
 8021 0b07 1F       		.uleb128 0x1f
 8022 0b08 6900     		.ascii	"i\000"
 8023 0b0a 01       		.byte	0x1
 8024 0b0b 1D       		.byte	0x1d
 8025 0b0c 89000000 		.4byte	0x89
 8026 0b10 02       		.uleb128 0x2
 8027 0b11 91       		.byte	0x91
 8028 0b12 74       		.sleb128 -12
 8029 0b13 00       		.byte	0
 8030 0b14 23       		.uleb128 0x23
 8031 0b15 D2000000 		.4byte	.LASF156
 8032 0b19 01       		.byte	0x1
 8033 0b1a 24       		.byte	0x24
 8034 0b1b 00000000 		.4byte	.LFB67
 8035 0b1f 14000000 		.4byte	.LFE67-.LFB67
 8036 0b23 01       		.uleb128 0x1
 8037 0b24 9C       		.byte	0x9c
 8038 0b25 460B0000 		.4byte	0xb46
 8039 0b29 22       		.uleb128 0x22
 8040 0b2a A1090000 		.4byte	.LASF157
 8041 0b2e 01       		.byte	0x1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 172


 8042 0b2f 24       		.byte	0x24
 8043 0b30 97000000 		.4byte	0x97
 8044 0b34 02       		.uleb128 0x2
 8045 0b35 91       		.byte	0x91
 8046 0b36 74       		.sleb128 -12
 8047 0b37 22       		.uleb128 0x22
 8048 0b38 C1030000 		.4byte	.LASF158
 8049 0b3c 01       		.byte	0x1
 8050 0b3d 24       		.byte	0x24
 8051 0b3e 97000000 		.4byte	0x97
 8052 0b42 02       		.uleb128 0x2
 8053 0b43 91       		.byte	0x91
 8054 0b44 70       		.sleb128 -16
 8055 0b45 00       		.byte	0
 8056 0b46 20       		.uleb128 0x20
 8057 0b47 6C656E00 		.ascii	"len\000"
 8058 0b4b 02       		.byte	0x2
 8059 0b4c 3D       		.byte	0x3d
 8060 0b4d 89000000 		.4byte	0x89
 8061 0b51 00000000 		.4byte	.LFB68
 8062 0b55 5A000000 		.4byte	.LFE68-.LFB68
 8063 0b59 01       		.uleb128 0x1
 8064 0b5a 9C       		.byte	0x9c
 8065 0b5b 880B0000 		.4byte	0xb88
 8066 0b5f 22       		.uleb128 0x22
 8067 0b60 47040000 		.4byte	.LASF159
 8068 0b64 02       		.byte	0x2
 8069 0b65 3D       		.byte	0x3d
 8070 0b66 BE0A0000 		.4byte	0xabe
 8071 0b6a 02       		.uleb128 0x2
 8072 0b6b 91       		.byte	0x91
 8073 0b6c 6C       		.sleb128 -20
 8074 0b6d 1F       		.uleb128 0x1f
 8075 0b6e 6C656E00 		.ascii	"len\000"
 8076 0b72 02       		.byte	0x2
 8077 0b73 3E       		.byte	0x3e
 8078 0b74 89000000 		.4byte	0x89
 8079 0b78 02       		.uleb128 0x2
 8080 0b79 91       		.byte	0x91
 8081 0b7a 74       		.sleb128 -12
 8082 0b7b 1F       		.uleb128 0x1f
 8083 0b7c 6900     		.ascii	"i\000"
 8084 0b7e 02       		.byte	0x2
 8085 0b7f 3F       		.byte	0x3f
 8086 0b80 89000000 		.4byte	0x89
 8087 0b84 02       		.uleb128 0x2
 8088 0b85 91       		.byte	0x91
 8089 0b86 70       		.sleb128 -16
 8090 0b87 00       		.byte	0
 8091 0b88 24       		.uleb128 0x24
 8092 0b89 38090000 		.4byte	.LASF160
 8093 0b8d 02       		.byte	0x2
 8094 0b8e 48       		.byte	0x48
 8095 0b8f 89000000 		.4byte	0x89
 8096 0b93 00000000 		.4byte	.LFB69
 8097 0b97 54000000 		.4byte	.LFE69-.LFB69
 8098 0b9b 01       		.uleb128 0x1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 173


 8099 0b9c 9C       		.byte	0x9c
 8100 0b9d CA0B0000 		.4byte	0xbca
 8101 0ba1 22       		.uleb128 0x22
 8102 0ba2 47040000 		.4byte	.LASF159
 8103 0ba6 02       		.byte	0x2
 8104 0ba7 48       		.byte	0x48
 8105 0ba8 BE0A0000 		.4byte	0xabe
 8106 0bac 02       		.uleb128 0x2
 8107 0bad 91       		.byte	0x91
 8108 0bae 6C       		.sleb128 -20
 8109 0baf 22       		.uleb128 0x22
 8110 0bb0 53070000 		.4byte	.LASF151
 8111 0bb4 02       		.byte	0x2
 8112 0bb5 48       		.byte	0x48
 8113 0bb6 89000000 		.4byte	0x89
 8114 0bba 02       		.uleb128 0x2
 8115 0bbb 91       		.byte	0x91
 8116 0bbc 68       		.sleb128 -24
 8117 0bbd 1F       		.uleb128 0x1f
 8118 0bbe 6900     		.ascii	"i\000"
 8119 0bc0 02       		.byte	0x2
 8120 0bc1 49       		.byte	0x49
 8121 0bc2 89000000 		.4byte	0x89
 8122 0bc6 02       		.uleb128 0x2
 8123 0bc7 91       		.byte	0x91
 8124 0bc8 74       		.sleb128 -12
 8125 0bc9 00       		.byte	0
 8126 0bca 24       		.uleb128 0x24
 8127 0bcb 530B0000 		.4byte	.LASF161
 8128 0bcf 02       		.byte	0x2
 8129 0bd0 50       		.byte	0x50
 8130 0bd1 89000000 		.4byte	0x89
 8131 0bd5 00000000 		.4byte	.LFB70
 8132 0bd9 5A000000 		.4byte	.LFE70-.LFB70
 8133 0bdd 01       		.uleb128 0x1
 8134 0bde 9C       		.byte	0x9c
 8135 0bdf 180C0000 		.4byte	0xc18
 8136 0be3 21       		.uleb128 0x21
 8137 0be4 7000     		.ascii	"p\000"
 8138 0be6 02       		.byte	0x2
 8139 0be7 50       		.byte	0x50
 8140 0be8 FD090000 		.4byte	0x9fd
 8141 0bec 02       		.uleb128 0x2
 8142 0bed 91       		.byte	0x91
 8143 0bee 6C       		.sleb128 -20
 8144 0bef 22       		.uleb128 0x22
 8145 0bf0 47040000 		.4byte	.LASF159
 8146 0bf4 02       		.byte	0x2
 8147 0bf5 50       		.byte	0x50
 8148 0bf6 BE0A0000 		.4byte	0xabe
 8149 0bfa 02       		.uleb128 0x2
 8150 0bfb 91       		.byte	0x91
 8151 0bfc 68       		.sleb128 -24
 8152 0bfd 22       		.uleb128 0x22
 8153 0bfe 53070000 		.4byte	.LASF151
 8154 0c02 02       		.byte	0x2
 8155 0c03 50       		.byte	0x50
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 174


 8156 0c04 89000000 		.4byte	0x89
 8157 0c08 02       		.uleb128 0x2
 8158 0c09 91       		.byte	0x91
 8159 0c0a 64       		.sleb128 -28
 8160 0c0b 1F       		.uleb128 0x1f
 8161 0c0c 6900     		.ascii	"i\000"
 8162 0c0e 02       		.byte	0x2
 8163 0c0f 51       		.byte	0x51
 8164 0c10 89000000 		.4byte	0x89
 8165 0c14 02       		.uleb128 0x2
 8166 0c15 91       		.byte	0x91
 8167 0c16 74       		.sleb128 -12
 8168 0c17 00       		.byte	0
 8169 0c18 25       		.uleb128 0x25
 8170 0c19 A7020000 		.4byte	.LASF162
 8171 0c1d 02       		.byte	0x2
 8172 0c1e 59       		.byte	0x59
 8173 0c1f 00000000 		.4byte	.LFB71
 8174 0c23 80000000 		.4byte	.LFE71-.LFB71
 8175 0c27 01       		.uleb128 0x1
 8176 0c28 9C       		.byte	0x9c
 8177 0c29 480C0000 		.4byte	0xc48
 8178 0c2d 22       		.uleb128 0x22
 8179 0c2e 47040000 		.4byte	.LASF159
 8180 0c32 02       		.byte	0x2
 8181 0c33 59       		.byte	0x59
 8182 0c34 BE0A0000 		.4byte	0xabe
 8183 0c38 02       		.uleb128 0x2
 8184 0c39 91       		.byte	0x91
 8185 0c3a 6C       		.sleb128 -20
 8186 0c3b 1F       		.uleb128 0x1f
 8187 0c3c 6900     		.ascii	"i\000"
 8188 0c3e 02       		.byte	0x2
 8189 0c3f 5A       		.byte	0x5a
 8190 0c40 89000000 		.4byte	0x89
 8191 0c44 02       		.uleb128 0x2
 8192 0c45 91       		.byte	0x91
 8193 0c46 74       		.sleb128 -12
 8194 0c47 00       		.byte	0
 8195 0c48 25       		.uleb128 0x25
 8196 0c49 22040000 		.4byte	.LASF163
 8197 0c4d 02       		.byte	0x2
 8198 0c4e 66       		.byte	0x66
 8199 0c4f 00000000 		.4byte	.LFB72
 8200 0c53 C0000000 		.4byte	.LFE72-.LFB72
 8201 0c57 01       		.uleb128 0x1
 8202 0c58 9C       		.byte	0x9c
 8203 0c59 780C0000 		.4byte	0xc78
 8204 0c5d 22       		.uleb128 0x22
 8205 0c5e F7070000 		.4byte	.LASF164
 8206 0c62 02       		.byte	0x2
 8207 0c63 66       		.byte	0x66
 8208 0c64 7A0A0000 		.4byte	0xa7a
 8209 0c68 02       		.uleb128 0x2
 8210 0c69 91       		.byte	0x91
 8211 0c6a 6C       		.sleb128 -20
 8212 0c6b 1F       		.uleb128 0x1f
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 175


 8213 0c6c 6900     		.ascii	"i\000"
 8214 0c6e 02       		.byte	0x2
 8215 0c6f 67       		.byte	0x67
 8216 0c70 89000000 		.4byte	0x89
 8217 0c74 02       		.uleb128 0x2
 8218 0c75 91       		.byte	0x91
 8219 0c76 74       		.sleb128 -12
 8220 0c77 00       		.byte	0
 8221 0c78 25       		.uleb128 0x25
 8222 0c79 660B0000 		.4byte	.LASF165
 8223 0c7d 02       		.byte	0x2
 8224 0c7e 82       		.byte	0x82
 8225 0c7f 00000000 		.4byte	.LFB73
 8226 0c83 20010000 		.4byte	.LFE73-.LFB73
 8227 0c87 01       		.uleb128 0x1
 8228 0c88 9C       		.byte	0x9c
 8229 0c89 B40C0000 		.4byte	0xcb4
 8230 0c8d 21       		.uleb128 0x21
 8231 0c8e 6D617000 		.ascii	"map\000"
 8232 0c92 02       		.byte	0x2
 8233 0c93 82       		.byte	0x82
 8234 0c94 C40C0000 		.4byte	0xcc4
 8235 0c98 02       		.uleb128 0x2
 8236 0c99 91       		.byte	0x91
 8237 0c9a 6C       		.sleb128 -20
 8238 0c9b 1F       		.uleb128 0x1f
 8239 0c9c 6D00     		.ascii	"m\000"
 8240 0c9e 02       		.byte	0x2
 8241 0c9f 84       		.byte	0x84
 8242 0ca0 89000000 		.4byte	0x89
 8243 0ca4 02       		.uleb128 0x2
 8244 0ca5 91       		.byte	0x91
 8245 0ca6 74       		.sleb128 -12
 8246 0ca7 1F       		.uleb128 0x1f
 8247 0ca8 6E00     		.ascii	"n\000"
 8248 0caa 02       		.byte	0x2
 8249 0cab 84       		.byte	0x84
 8250 0cac 89000000 		.4byte	0x89
 8251 0cb0 02       		.uleb128 0x2
 8252 0cb1 91       		.byte	0x91
 8253 0cb2 70       		.sleb128 -16
 8254 0cb3 00       		.byte	0
 8255 0cb4 09       		.uleb128 0x9
 8256 0cb5 89000000 		.4byte	0x89
 8257 0cb9 C40C0000 		.4byte	0xcc4
 8258 0cbd 0A       		.uleb128 0xa
 8259 0cbe F5000000 		.4byte	0xf5
 8260 0cc2 12       		.byte	0x12
 8261 0cc3 00       		.byte	0
 8262 0cc4 0F       		.uleb128 0xf
 8263 0cc5 04       		.byte	0x4
 8264 0cc6 B40C0000 		.4byte	0xcb4
 8265 0cca 23       		.uleb128 0x23
 8266 0ccb 01020000 		.4byte	.LASF166
 8267 0ccf 02       		.byte	0x2
 8268 0cd0 AA       		.byte	0xaa
 8269 0cd1 00000000 		.4byte	.LFB74
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 176


 8270 0cd5 A4000000 		.4byte	.LFE74-.LFB74
 8271 0cd9 01       		.uleb128 0x1
 8272 0cda 9C       		.byte	0x9c
 8273 0cdb 160D0000 		.4byte	0xd16
 8274 0cdf 21       		.uleb128 0x21
 8275 0ce0 6D617000 		.ascii	"map\000"
 8276 0ce4 02       		.byte	0x2
 8277 0ce5 AA       		.byte	0xaa
 8278 0ce6 C40C0000 		.4byte	0xcc4
 8279 0cea 02       		.uleb128 0x2
 8280 0ceb 91       		.byte	0x91
 8281 0cec 6C       		.sleb128 -20
 8282 0ced 22       		.uleb128 0x22
 8283 0cee 47040000 		.4byte	.LASF159
 8284 0cf2 02       		.byte	0x2
 8285 0cf3 AA       		.byte	0xaa
 8286 0cf4 BE0A0000 		.4byte	0xabe
 8287 0cf8 02       		.uleb128 0x2
 8288 0cf9 91       		.byte	0x91
 8289 0cfa 68       		.sleb128 -24
 8290 0cfb 22       		.uleb128 0x22
 8291 0cfc 32080000 		.4byte	.LASF167
 8292 0d00 02       		.byte	0x2
 8293 0d01 AA       		.byte	0xaa
 8294 0d02 89000000 		.4byte	0x89
 8295 0d06 02       		.uleb128 0x2
 8296 0d07 91       		.byte	0x91
 8297 0d08 64       		.sleb128 -28
 8298 0d09 1F       		.uleb128 0x1f
 8299 0d0a 6900     		.ascii	"i\000"
 8300 0d0c 02       		.byte	0x2
 8301 0d0d AC       		.byte	0xac
 8302 0d0e 98080000 		.4byte	0x898
 8303 0d12 02       		.uleb128 0x2
 8304 0d13 91       		.byte	0x91
 8305 0d14 77       		.sleb128 -9
 8306 0d15 00       		.byte	0
 8307 0d16 24       		.uleb128 0x24
 8308 0d17 4C040000 		.4byte	.LASF168
 8309 0d1b 02       		.byte	0x2
 8310 0d1c BB       		.byte	0xbb
 8311 0d1d 89000000 		.4byte	0x89
 8312 0d21 00000000 		.4byte	.LFB75
 8313 0d25 60000000 		.4byte	.LFE75-.LFB75
 8314 0d29 01       		.uleb128 0x1
 8315 0d2a 9C       		.byte	0x9c
 8316 0d2b 3C0D0000 		.4byte	0xd3c
 8317 0d2f 21       		.uleb128 0x21
 8318 0d30 7000     		.ascii	"p\000"
 8319 0d32 02       		.byte	0x2
 8320 0d33 BB       		.byte	0xbb
 8321 0d34 FD090000 		.4byte	0x9fd
 8322 0d38 02       		.uleb128 0x2
 8323 0d39 91       		.byte	0x91
 8324 0d3a 74       		.sleb128 -12
 8325 0d3b 00       		.byte	0
 8326 0d3c 23       		.uleb128 0x23
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 177


 8327 0d3d C7050000 		.4byte	.LASF169
 8328 0d41 02       		.byte	0x2
 8329 0d42 C2       		.byte	0xc2
 8330 0d43 00000000 		.4byte	.LFB76
 8331 0d47 34000000 		.4byte	.LFE76-.LFB76
 8332 0d4b 01       		.uleb128 0x1
 8333 0d4c 9C       		.byte	0x9c
 8334 0d4d 5E0D0000 		.4byte	0xd5e
 8335 0d51 21       		.uleb128 0x21
 8336 0d52 7000     		.ascii	"p\000"
 8337 0d54 02       		.byte	0x2
 8338 0d55 C2       		.byte	0xc2
 8339 0d56 FD090000 		.4byte	0x9fd
 8340 0d5a 02       		.uleb128 0x2
 8341 0d5b 91       		.byte	0x91
 8342 0d5c 74       		.sleb128 -12
 8343 0d5d 00       		.byte	0
 8344 0d5e 25       		.uleb128 0x25
 8345 0d5f C6070000 		.4byte	.LASF170
 8346 0d63 02       		.byte	0x2
 8347 0d64 C5       		.byte	0xc5
 8348 0d65 00000000 		.4byte	.LFB77
 8349 0d69 70010000 		.4byte	.LFE77-.LFB77
 8350 0d6d 01       		.uleb128 0x1
 8351 0d6e 9C       		.byte	0x9c
 8352 0d6f 160E0000 		.4byte	0xe16
 8353 0d73 22       		.uleb128 0x22
 8354 0d74 E9080000 		.4byte	.LASF171
 8355 0d78 02       		.byte	0x2
 8356 0d79 C5       		.byte	0xc5
 8357 0d7a BE0A0000 		.4byte	0xabe
 8358 0d7e 02       		.uleb128 0x2
 8359 0d7f 91       		.byte	0x91
 8360 0d80 54       		.sleb128 -44
 8361 0d81 22       		.uleb128 0x22
 8362 0d82 F7070000 		.4byte	.LASF164
 8363 0d86 02       		.byte	0x2
 8364 0d87 C5       		.byte	0xc5
 8365 0d88 160E0000 		.4byte	0xe16
 8366 0d8c 02       		.uleb128 0x2
 8367 0d8d 91       		.byte	0x91
 8368 0d8e 50       		.sleb128 -48
 8369 0d8f 26       		.uleb128 0x26
 8370 0d90 2B060000 		.4byte	.LASF172
 8371 0d94 02       		.byte	0x2
 8372 0d95 C7       		.byte	0xc7
 8373 0d96 8D080000 		.4byte	0x88d
 8374 0d9a 02       		.uleb128 0x2
 8375 0d9b 91       		.byte	0x91
 8376 0d9c 77       		.sleb128 -9
 8377 0d9d 26       		.uleb128 0x26
 8378 0d9e 6F0B0000 		.4byte	.LASF173
 8379 0da2 02       		.byte	0x2
 8380 0da3 C8       		.byte	0xc8
 8381 0da4 FD090000 		.4byte	0x9fd
 8382 0da8 02       		.uleb128 0x2
 8383 0da9 91       		.byte	0x91
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 178


 8384 0daa 60       		.sleb128 -32
 8385 0dab 26       		.uleb128 0x26
 8386 0dac CD000000 		.4byte	.LASF174
 8387 0db0 02       		.byte	0x2
 8388 0db1 C8       		.byte	0xc8
 8389 0db2 FD090000 		.4byte	0x9fd
 8390 0db6 02       		.uleb128 0x2
 8391 0db7 91       		.byte	0x91
 8392 0db8 5C       		.sleb128 -36
 8393 0db9 26       		.uleb128 0x26
 8394 0dba A40B0000 		.4byte	.LASF175
 8395 0dbe 02       		.byte	0x2
 8396 0dbf C9       		.byte	0xc9
 8397 0dc0 8D080000 		.4byte	0x88d
 8398 0dc4 02       		.uleb128 0x2
 8399 0dc5 91       		.byte	0x91
 8400 0dc6 76       		.sleb128 -10
 8401 0dc7 26       		.uleb128 0x26
 8402 0dc8 A1010000 		.4byte	.LASF176
 8403 0dcc 02       		.byte	0x2
 8404 0dcd CA       		.byte	0xca
 8405 0dce 8D080000 		.4byte	0x88d
 8406 0dd2 02       		.uleb128 0x2
 8407 0dd3 91       		.byte	0x91
 8408 0dd4 75       		.sleb128 -11
 8409 0dd5 1F       		.uleb128 0x1f
 8410 0dd6 6900     		.ascii	"i\000"
 8411 0dd8 02       		.byte	0x2
 8412 0dd9 CB       		.byte	0xcb
 8413 0dda 89000000 		.4byte	0x89
 8414 0dde 02       		.uleb128 0x2
 8415 0ddf 91       		.byte	0x91
 8416 0de0 70       		.sleb128 -16
 8417 0de1 26       		.uleb128 0x26
 8418 0de2 13070000 		.4byte	.LASF177
 8419 0de6 02       		.byte	0x2
 8420 0de7 CD       		.byte	0xcd
 8421 0de8 89000000 		.4byte	0x89
 8422 0dec 02       		.uleb128 0x2
 8423 0ded 91       		.byte	0x91
 8424 0dee 6C       		.sleb128 -20
 8425 0def 26       		.uleb128 0x26
 8426 0df0 32080000 		.4byte	.LASF167
 8427 0df4 02       		.byte	0x2
 8428 0df5 CE       		.byte	0xce
 8429 0df6 89000000 		.4byte	0x89
 8430 0dfa 02       		.uleb128 0x2
 8431 0dfb 91       		.byte	0x91
 8432 0dfc 68       		.sleb128 -24
 8433 0dfd 27       		.uleb128 0x27
 8434 0dfe 2E000000 		.4byte	.LBB2
 8435 0e02 12010000 		.4byte	.LBE2-.LBB2
 8436 0e06 26       		.uleb128 0x26
 8437 0e07 96070000 		.4byte	.LASF178
 8438 0e0b 02       		.byte	0x2
 8439 0e0c F1       		.byte	0xf1
 8440 0e0d 89000000 		.4byte	0x89
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 179


 8441 0e11 02       		.uleb128 0x2
 8442 0e12 91       		.byte	0x91
 8443 0e13 64       		.sleb128 -28
 8444 0e14 00       		.byte	0
 8445 0e15 00       		.byte	0
 8446 0e16 0F       		.uleb128 0xf
 8447 0e17 04       		.byte	0x4
 8448 0e18 8D080000 		.4byte	0x88d
 8449 0e1c 28       		.uleb128 0x28
 8450 0e1d 6F030000 		.4byte	.LASF179
 8451 0e21 02       		.byte	0x2
 8452 0e22 1701     		.2byte	0x117
 8453 0e24 89000000 		.4byte	0x89
 8454 0e28 00000000 		.4byte	.LFB78
 8455 0e2c A2000000 		.4byte	.LFE78-.LFB78
 8456 0e30 01       		.uleb128 0x1
 8457 0e31 9C       		.byte	0x9c
 8458 0e32 7C0E0000 		.4byte	0xe7c
 8459 0e36 29       		.uleb128 0x29
 8460 0e37 7000     		.ascii	"p\000"
 8461 0e39 02       		.byte	0x2
 8462 0e3a 1701     		.2byte	0x117
 8463 0e3c FD090000 		.4byte	0x9fd
 8464 0e40 02       		.uleb128 0x2
 8465 0e41 91       		.byte	0x91
 8466 0e42 6C       		.sleb128 -20
 8467 0e43 2A       		.uleb128 0x2a
 8468 0e44 6E756D00 		.ascii	"num\000"
 8469 0e48 02       		.byte	0x2
 8470 0e49 1801     		.2byte	0x118
 8471 0e4b 8D080000 		.4byte	0x88d
 8472 0e4f 02       		.uleb128 0x2
 8473 0e50 91       		.byte	0x91
 8474 0e51 77       		.sleb128 -9
 8475 0e52 2B       		.uleb128 0x2b
 8476 0e53 09000000 		.4byte	.LASF180
 8477 0e57 02       		.byte	0x2
 8478 0e58 1801     		.2byte	0x118
 8479 0e5a 8D080000 		.4byte	0x88d
 8480 0e5e 02       		.uleb128 0x2
 8481 0e5f 91       		.byte	0x91
 8482 0e60 74       		.sleb128 -12
 8483 0e61 2A       		.uleb128 0x2a
 8484 0e62 6900     		.ascii	"i\000"
 8485 0e64 02       		.byte	0x2
 8486 0e65 1801     		.2byte	0x118
 8487 0e67 8D080000 		.4byte	0x88d
 8488 0e6b 02       		.uleb128 0x2
 8489 0e6c 91       		.byte	0x91
 8490 0e6d 76       		.sleb128 -10
 8491 0e6e 2A       		.uleb128 0x2a
 8492 0e6f 6A00     		.ascii	"j\000"
 8493 0e71 02       		.byte	0x2
 8494 0e72 1801     		.2byte	0x118
 8495 0e74 8D080000 		.4byte	0x88d
 8496 0e78 02       		.uleb128 0x2
 8497 0e79 91       		.byte	0x91
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 180


 8498 0e7a 75       		.sleb128 -11
 8499 0e7b 00       		.byte	0
 8500 0e7c 2C       		.uleb128 0x2c
 8501 0e7d 61050000 		.4byte	.LASF181
 8502 0e81 02       		.byte	0x2
 8503 0e82 2601     		.2byte	0x126
 8504 0e84 89000000 		.4byte	0x89
 8505 0e88 00000000 		.4byte	.LFB79
 8506 0e8c 98000000 		.4byte	.LFE79-.LFB79
 8507 0e90 01       		.uleb128 0x1
 8508 0e91 9C       		.byte	0x9c
 8509 0e92 DE0E0000 		.4byte	0xede
 8510 0e96 2D       		.uleb128 0x2d
 8511 0e97 47040000 		.4byte	.LASF159
 8512 0e9b 02       		.byte	0x2
 8513 0e9c 2601     		.2byte	0x126
 8514 0e9e BE0A0000 		.4byte	0xabe
 8515 0ea2 02       		.uleb128 0x2
 8516 0ea3 91       		.byte	0x91
 8517 0ea4 6C       		.sleb128 -20
 8518 0ea5 2D       		.uleb128 0x2d
 8519 0ea6 32080000 		.4byte	.LASF167
 8520 0eaa 02       		.byte	0x2
 8521 0eab 2601     		.2byte	0x126
 8522 0ead 89000000 		.4byte	0x89
 8523 0eb1 02       		.uleb128 0x2
 8524 0eb2 91       		.byte	0x91
 8525 0eb3 68       		.sleb128 -24
 8526 0eb4 2D       		.uleb128 0x2d
 8527 0eb5 57000000 		.4byte	.LASF182
 8528 0eb9 02       		.byte	0x2
 8529 0eba 2601     		.2byte	0x126
 8530 0ebc BE0A0000 		.4byte	0xabe
 8531 0ec0 02       		.uleb128 0x2
 8532 0ec1 91       		.byte	0x91
 8533 0ec2 64       		.sleb128 -28
 8534 0ec3 2A       		.uleb128 0x2a
 8535 0ec4 6900     		.ascii	"i\000"
 8536 0ec6 02       		.byte	0x2
 8537 0ec7 2801     		.2byte	0x128
 8538 0ec9 89000000 		.4byte	0x89
 8539 0ecd 02       		.uleb128 0x2
 8540 0ece 91       		.byte	0x91
 8541 0ecf 74       		.sleb128 -12
 8542 0ed0 2A       		.uleb128 0x2a
 8543 0ed1 6B00     		.ascii	"k\000"
 8544 0ed3 02       		.byte	0x2
 8545 0ed4 2901     		.2byte	0x129
 8546 0ed6 89000000 		.4byte	0x89
 8547 0eda 02       		.uleb128 0x2
 8548 0edb 91       		.byte	0x91
 8549 0edc 70       		.sleb128 -16
 8550 0edd 00       		.byte	0
 8551 0ede 2C       		.uleb128 0x2c
 8552 0edf 15090000 		.4byte	.LASF183
 8553 0ee3 02       		.byte	0x2
 8554 0ee4 4001     		.2byte	0x140
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 181


 8555 0ee6 98080000 		.4byte	0x898
 8556 0eea 00000000 		.4byte	.LFB80
 8557 0eee 58000000 		.4byte	.LFE80-.LFB80
 8558 0ef2 01       		.uleb128 0x1
 8559 0ef3 9C       		.byte	0x9c
 8560 0ef4 220F0000 		.4byte	0xf22
 8561 0ef8 29       		.uleb128 0x29
 8562 0ef9 6D617000 		.ascii	"map\000"
 8563 0efd 02       		.byte	0x2
 8564 0efe 4001     		.2byte	0x140
 8565 0f00 C40C0000 		.4byte	0xcc4
 8566 0f04 02       		.uleb128 0x2
 8567 0f05 91       		.byte	0x91
 8568 0f06 6C       		.sleb128 -20
 8569 0f07 2A       		.uleb128 0x2a
 8570 0f08 6900     		.ascii	"i\000"
 8571 0f0a 02       		.byte	0x2
 8572 0f0b 4101     		.2byte	0x141
 8573 0f0d 98080000 		.4byte	0x898
 8574 0f11 02       		.uleb128 0x2
 8575 0f12 91       		.byte	0x91
 8576 0f13 77       		.sleb128 -9
 8577 0f14 2A       		.uleb128 0x2a
 8578 0f15 6A00     		.ascii	"j\000"
 8579 0f17 02       		.byte	0x2
 8580 0f18 4201     		.2byte	0x142
 8581 0f1a 98080000 		.4byte	0x898
 8582 0f1e 02       		.uleb128 0x2
 8583 0f1f 91       		.byte	0x91
 8584 0f20 76       		.sleb128 -10
 8585 0f21 00       		.byte	0
 8586 0f22 25       		.uleb128 0x25
 8587 0f23 46060000 		.4byte	.LASF184
 8588 0f27 03       		.byte	0x3
 8589 0f28 0E       		.byte	0xe
 8590 0f29 00000000 		.4byte	.LFB81
 8591 0f2d 7C000000 		.4byte	.LFE81-.LFB81
 8592 0f31 01       		.uleb128 0x1
 8593 0f32 9C       		.byte	0x9c
 8594 0f33 8A0F0000 		.4byte	0xf8a
 8595 0f37 22       		.uleb128 0x22
 8596 0f38 E90C0000 		.4byte	.LASF185
 8597 0f3c 03       		.byte	0x3
 8598 0f3d 0E       		.byte	0xe
 8599 0f3e 9B0F0000 		.4byte	0xf9b
 8600 0f42 02       		.uleb128 0x2
 8601 0f43 91       		.byte	0x91
 8602 0f44 6C       		.sleb128 -20
 8603 0f45 21       		.uleb128 0x21
 8604 0f46 636E7400 		.ascii	"cnt\000"
 8605 0f4a 03       		.byte	0x3
 8606 0f4b 0E       		.byte	0xe
 8607 0f4c A10F0000 		.4byte	0xfa1
 8608 0f50 02       		.uleb128 0x2
 8609 0f51 91       		.byte	0x91
 8610 0f52 68       		.sleb128 -24
 8611 0f53 22       		.uleb128 0x22
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 182


 8612 0f54 E9080000 		.4byte	.LASF171
 8613 0f58 03       		.byte	0x3
 8614 0f59 0F       		.byte	0xf
 8615 0f5a BE0A0000 		.4byte	0xabe
 8616 0f5e 02       		.uleb128 0x2
 8617 0f5f 91       		.byte	0x91
 8618 0f60 64       		.sleb128 -28
 8619 0f61 22       		.uleb128 0x22
 8620 0f62 F9080000 		.4byte	.LASF186
 8621 0f66 03       		.byte	0x3
 8622 0f67 0F       		.byte	0xf
 8623 0f68 89000000 		.4byte	0x89
 8624 0f6c 02       		.uleb128 0x2
 8625 0f6d 91       		.byte	0x91
 8626 0f6e 60       		.sleb128 -32
 8627 0f6f 21       		.uleb128 0x21
 8628 0f70 7000     		.ascii	"p\000"
 8629 0f72 03       		.byte	0x3
 8630 0f73 0F       		.byte	0xf
 8631 0f74 FD090000 		.4byte	0x9fd
 8632 0f78 02       		.uleb128 0x2
 8633 0f79 91       		.byte	0x91
 8634 0f7a 00       		.sleb128 0
 8635 0f7b 26       		.uleb128 0x26
 8636 0f7c 09000000 		.4byte	.LASF180
 8637 0f80 03       		.byte	0x3
 8638 0f81 11       		.byte	0x11
 8639 0f82 98080000 		.4byte	0x898
 8640 0f86 02       		.uleb128 0x2
 8641 0f87 91       		.byte	0x91
 8642 0f88 77       		.sleb128 -9
 8643 0f89 00       		.byte	0
 8644 0f8a 09       		.uleb128 0x9
 8645 0f8b FD090000 		.4byte	0x9fd
 8646 0f8f 9B0F0000 		.4byte	0xf9b
 8647 0f93 2E       		.uleb128 0x2e
 8648 0f94 F5000000 		.4byte	0xf5
 8649 0f98 F301     		.2byte	0x1f3
 8650 0f9a 00       		.byte	0
 8651 0f9b 0F       		.uleb128 0xf
 8652 0f9c 04       		.byte	0x4
 8653 0f9d 8A0F0000 		.4byte	0xf8a
 8654 0fa1 0F       		.uleb128 0xf
 8655 0fa2 04       		.byte	0x4
 8656 0fa3 98080000 		.4byte	0x898
 8657 0fa7 2F       		.uleb128 0x2f
 8658 0fa8 42465300 		.ascii	"BFS\000"
 8659 0fac 03       		.byte	0x3
 8660 0fad 1E       		.byte	0x1e
 8661 0fae 00000000 		.4byte	.LFB82
 8662 0fb2 84050000 		.4byte	.LFE82-.LFB82
 8663 0fb6 01       		.uleb128 0x1
 8664 0fb7 9C       		.byte	0x9c
 8665 0fb8 4F100000 		.4byte	0x104f
 8666 0fbc 22       		.uleb128 0x22
 8667 0fbd 90070000 		.4byte	.LASF187
 8668 0fc1 03       		.byte	0x3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 183


 8669 0fc2 1E       		.byte	0x1e
 8670 0fc3 FD090000 		.4byte	0x9fd
 8671 0fc7 04       		.uleb128 0x4
 8672 0fc8 91       		.byte	0x91
 8673 0fc9 A4957E   		.sleb128 -30044
 8674 0fcc 22       		.uleb128 0x22
 8675 0fcd C1040000 		.4byte	.LASF188
 8676 0fd1 03       		.byte	0x3
 8677 0fd2 1E       		.byte	0x1e
 8678 0fd3 FD090000 		.4byte	0x9fd
 8679 0fd7 04       		.uleb128 0x4
 8680 0fd8 91       		.byte	0x91
 8681 0fd9 A0957E   		.sleb128 -30048
 8682 0fdc 22       		.uleb128 0x22
 8683 0fdd E9080000 		.4byte	.LASF171
 8684 0fe1 03       		.byte	0x3
 8685 0fe2 1E       		.byte	0x1e
 8686 0fe3 BE0A0000 		.4byte	0xabe
 8687 0fe7 04       		.uleb128 0x4
 8688 0fe8 91       		.byte	0x91
 8689 0fe9 9C957E   		.sleb128 -30052
 8690 0fec 26       		.uleb128 0x26
 8691 0fed AD000000 		.4byte	.LASF189
 8692 0ff1 03       		.byte	0x3
 8693 0ff2 20       		.byte	0x20
 8694 0ff3 4F100000 		.4byte	0x104f
 8695 0ff7 04       		.uleb128 0x4
 8696 0ff8 91       		.byte	0x91
 8697 0ff9 C88A7F   		.sleb128 -15032
 8698 0ffc 26       		.uleb128 0x26
 8699 0ffd E90C0000 		.4byte	.LASF185
 8700 1001 03       		.byte	0x3
 8701 1002 21       		.byte	0x21
 8702 1003 4F100000 		.4byte	0x104f
 8703 1007 04       		.uleb128 0x4
 8704 1008 91       		.byte	0x91
 8705 1009 B0957E   		.sleb128 -30032
 8706 100c 1F       		.uleb128 0x1f
 8707 100d 6900     		.ascii	"i\000"
 8708 100f 03       		.byte	0x3
 8709 1010 22       		.byte	0x22
 8710 1011 98080000 		.4byte	0x898
 8711 1015 02       		.uleb128 0x2
 8712 1016 91       		.byte	0x91
 8713 1017 77       		.sleb128 -9
 8714 1018 26       		.uleb128 0x26
 8715 1019 F9080000 		.4byte	.LASF186
 8716 101d 03       		.byte	0x3
 8717 101e 32       		.byte	0x32
 8718 101f 89000000 		.4byte	0x89
 8719 1023 02       		.uleb128 0x2
 8720 1024 91       		.byte	0x91
 8721 1025 70       		.sleb128 -16
 8722 1026 1F       		.uleb128 0x1f
 8723 1027 636E7400 		.ascii	"cnt\000"
 8724 102b 03       		.byte	0x3
 8725 102c 33       		.byte	0x33
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 184


 8726 102d 98080000 		.4byte	0x898
 8727 1031 04       		.uleb128 0x4
 8728 1032 91       		.byte	0x91
 8729 1033 AF957E   		.sleb128 -30033
 8730 1036 27       		.uleb128 0x27
 8731 1037 7E010000 		.4byte	.LBB3
 8732 103b CE020000 		.4byte	.LBE3-.LBB3
 8733 103f 1F       		.uleb128 0x1f
 8734 1040 7000     		.ascii	"p\000"
 8735 1042 03       		.byte	0x3
 8736 1043 53       		.byte	0x53
 8737 1044 FD090000 		.4byte	0x9fd
 8738 1048 04       		.uleb128 0x4
 8739 1049 91       		.byte	0x91
 8740 104a AC957E   		.sleb128 -30036
 8741 104d 00       		.byte	0
 8742 104e 00       		.byte	0
 8743 104f 09       		.uleb128 0x9
 8744 1050 FD090000 		.4byte	0x9fd
 8745 1054 66100000 		.4byte	0x1066
 8746 1058 0A       		.uleb128 0xa
 8747 1059 F5000000 		.4byte	0xf5
 8748 105d 0E       		.byte	0xe
 8749 105e 2E       		.uleb128 0x2e
 8750 105f F5000000 		.4byte	0xf5
 8751 1063 F301     		.2byte	0x1f3
 8752 1065 00       		.byte	0
 8753 1066 30       		.uleb128 0x30
 8754 1067 3E080000 		.4byte	.LASF190
 8755 106b 03       		.byte	0x3
 8756 106c 85       		.byte	0x85
 8757 106d FD090000 		.4byte	0x9fd
 8758 1071 00000000 		.4byte	.LFB83
 8759 1075 DC050000 		.4byte	.LFE83-.LFB83
 8760 1079 01       		.uleb128 0x1
 8761 107a 9C       		.byte	0x9c
 8762 107b 1E110000 		.4byte	0x111e
 8763 107f 22       		.uleb128 0x22
 8764 1080 90070000 		.4byte	.LASF187
 8765 1084 03       		.byte	0x3
 8766 1085 85       		.byte	0x85
 8767 1086 FD090000 		.4byte	0x9fd
 8768 108a 04       		.uleb128 0x4
 8769 108b 91       		.byte	0x91
 8770 108c BC8D7E   		.sleb128 -31044
 8771 108f 22       		.uleb128 0x22
 8772 1090 660A0000 		.4byte	.LASF191
 8773 1094 03       		.byte	0x3
 8774 1095 85       		.byte	0x85
 8775 1096 C40C0000 		.4byte	0xcc4
 8776 109a 04       		.uleb128 0x4
 8777 109b 91       		.byte	0x91
 8778 109c B88D7E   		.sleb128 -31048
 8779 109f 22       		.uleb128 0x22
 8780 10a0 E9080000 		.4byte	.LASF171
 8781 10a4 03       		.byte	0x3
 8782 10a5 85       		.byte	0x85
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 185


 8783 10a6 BE0A0000 		.4byte	0xabe
 8784 10aa 04       		.uleb128 0x4
 8785 10ab 91       		.byte	0x91
 8786 10ac B48D7E   		.sleb128 -31052
 8787 10af 26       		.uleb128 0x26
 8788 10b0 AD000000 		.4byte	.LASF189
 8789 10b4 03       		.byte	0x3
 8790 10b5 87       		.byte	0x87
 8791 10b6 4F100000 		.4byte	0x104f
 8792 10ba 04       		.uleb128 0x4
 8793 10bb 91       		.byte	0x91
 8794 10bc C48A7F   		.sleb128 -15036
 8795 10bf 26       		.uleb128 0x26
 8796 10c0 E90C0000 		.4byte	.LASF185
 8797 10c4 03       		.byte	0x3
 8798 10c5 88       		.byte	0x88
 8799 10c6 4F100000 		.4byte	0x104f
 8800 10ca 04       		.uleb128 0x4
 8801 10cb 91       		.byte	0x91
 8802 10cc AC957E   		.sleb128 -30036
 8803 10cf 26       		.uleb128 0x26
 8804 10d0 D7030000 		.4byte	.LASF192
 8805 10d4 03       		.byte	0x3
 8806 10d5 89       		.byte	0x89
 8807 10d6 8A0F0000 		.4byte	0xf8a
 8808 10da 04       		.uleb128 0x4
 8809 10db 91       		.byte	0x91
 8810 10dc C48D7E   		.sleb128 -31036
 8811 10df 1F       		.uleb128 0x1f
 8812 10e0 6900     		.ascii	"i\000"
 8813 10e2 03       		.byte	0x3
 8814 10e3 8A       		.byte	0x8a
 8815 10e4 98080000 		.4byte	0x898
 8816 10e8 02       		.uleb128 0x2
 8817 10e9 91       		.byte	0x91
 8818 10ea 77       		.sleb128 -9
 8819 10eb 26       		.uleb128 0x26
 8820 10ec F9080000 		.4byte	.LASF186
 8821 10f0 03       		.byte	0x3
 8822 10f1 9C       		.byte	0x9c
 8823 10f2 89000000 		.4byte	0x89
 8824 10f6 02       		.uleb128 0x2
 8825 10f7 91       		.byte	0x91
 8826 10f8 70       		.sleb128 -16
 8827 10f9 1F       		.uleb128 0x1f
 8828 10fa 636E7400 		.ascii	"cnt\000"
 8829 10fe 03       		.byte	0x3
 8830 10ff 9D       		.byte	0x9d
 8831 1100 98080000 		.4byte	0x898
 8832 1104 04       		.uleb128 0x4
 8833 1105 91       		.byte	0x91
 8834 1106 C38D7E   		.sleb128 -31037
 8835 1109 31       		.uleb128 0x31
 8836 110a 00000000 		.4byte	.Ldebug_ranges0+0
 8837 110e 1F       		.uleb128 0x1f
 8838 110f 7000     		.ascii	"p\000"
 8839 1111 03       		.byte	0x3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 186


 8840 1112 BD       		.byte	0xbd
 8841 1113 FD090000 		.4byte	0x9fd
 8842 1117 04       		.uleb128 0x4
 8843 1118 91       		.byte	0x91
 8844 1119 C08D7E   		.sleb128 -31040
 8845 111c 00       		.byte	0
 8846 111d 00       		.byte	0
 8847 111e 24       		.uleb128 0x24
 8848 111f 43050000 		.4byte	.LASF193
 8849 1123 04       		.byte	0x4
 8850 1124 0C       		.byte	0xc
 8851 1125 89000000 		.4byte	0x89
 8852 1129 00000000 		.4byte	.LFB84
 8853 112d 8C000000 		.4byte	.LFE84-.LFB84
 8854 1131 01       		.uleb128 0x1
 8855 1132 9C       		.byte	0x9c
 8856 1133 6C110000 		.4byte	0x116c
 8857 1137 22       		.uleb128 0x22
 8858 1138 E1030000 		.4byte	.LASF194
 8859 113c 04       		.byte	0x4
 8860 113d 0C       		.byte	0xc
 8861 113e BE0A0000 		.4byte	0xabe
 8862 1142 02       		.uleb128 0x2
 8863 1143 91       		.byte	0x91
 8864 1144 6C       		.sleb128 -20
 8865 1145 1F       		.uleb128 0x1f
 8866 1146 6900     		.ascii	"i\000"
 8867 1148 04       		.byte	0x4
 8868 1149 0E       		.byte	0xe
 8869 114a 98080000 		.4byte	0x898
 8870 114e 02       		.uleb128 0x2
 8871 114f 91       		.byte	0x91
 8872 1150 77       		.sleb128 -9
 8873 1151 1F       		.uleb128 0x1f
 8874 1152 6A00     		.ascii	"j\000"
 8875 1154 04       		.byte	0x4
 8876 1155 0E       		.byte	0xe
 8877 1156 98080000 		.4byte	0x898
 8878 115a 02       		.uleb128 0x2
 8879 115b 91       		.byte	0x91
 8880 115c 76       		.sleb128 -10
 8881 115d 26       		.uleb128 0x26
 8882 115e 53070000 		.4byte	.LASF151
 8883 1162 04       		.byte	0x4
 8884 1163 0F       		.byte	0xf
 8885 1164 A3080000 		.4byte	0x8a3
 8886 1168 02       		.uleb128 0x2
 8887 1169 91       		.byte	0x91
 8888 116a 74       		.sleb128 -12
 8889 116b 00       		.byte	0
 8890 116c 24       		.uleb128 0x24
 8891 116d 890A0000 		.4byte	.LASF195
 8892 1171 04       		.byte	0x4
 8893 1172 37       		.byte	0x37
 8894 1173 FD090000 		.4byte	0x9fd
 8895 1177 00000000 		.4byte	.LFB85
 8896 117b A4000000 		.4byte	.LFE85-.LFB85
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 187


 8897 117f 01       		.uleb128 0x1
 8898 1180 9C       		.byte	0x9c
 8899 1181 AE110000 		.4byte	0x11ae
 8900 1185 21       		.uleb128 0x21
 8901 1186 6D617000 		.ascii	"map\000"
 8902 118a 04       		.byte	0x4
 8903 118b 37       		.byte	0x37
 8904 118c C40C0000 		.4byte	0xcc4
 8905 1190 02       		.uleb128 0x2
 8906 1191 91       		.byte	0x91
 8907 1192 6C       		.sleb128 -20
 8908 1193 22       		.uleb128 0x22
 8909 1194 E1030000 		.4byte	.LASF194
 8910 1198 04       		.byte	0x4
 8911 1199 37       		.byte	0x37
 8912 119a BE0A0000 		.4byte	0xabe
 8913 119e 02       		.uleb128 0x2
 8914 119f 91       		.byte	0x91
 8915 11a0 68       		.sleb128 -24
 8916 11a1 1F       		.uleb128 0x1f
 8917 11a2 6900     		.ascii	"i\000"
 8918 11a4 04       		.byte	0x4
 8919 11a5 39       		.byte	0x39
 8920 11a6 A3080000 		.4byte	0x8a3
 8921 11aa 02       		.uleb128 0x2
 8922 11ab 91       		.byte	0x91
 8923 11ac 76       		.sleb128 -10
 8924 11ad 00       		.byte	0
 8925 11ae 23       		.uleb128 0x23
 8926 11af A3030000 		.4byte	.LASF196
 8927 11b3 04       		.byte	0x4
 8928 11b4 4B       		.byte	0x4b
 8929 11b5 00000000 		.4byte	.LFB86
 8930 11b9 9E000000 		.4byte	.LFE86-.LFB86
 8931 11bd 01       		.uleb128 0x1
 8932 11be 9C       		.byte	0x9c
 8933 11bf DE110000 		.4byte	0x11de
 8934 11c3 22       		.uleb128 0x22
 8935 11c4 4C070000 		.4byte	.LASF197
 8936 11c8 04       		.byte	0x4
 8937 11c9 4B       		.byte	0x4b
 8938 11ca BE0A0000 		.4byte	0xabe
 8939 11ce 02       		.uleb128 0x2
 8940 11cf 91       		.byte	0x91
 8941 11d0 6C       		.sleb128 -20
 8942 11d1 1F       		.uleb128 0x1f
 8943 11d2 6900     		.ascii	"i\000"
 8944 11d4 04       		.byte	0x4
 8945 11d5 4D       		.byte	0x4d
 8946 11d6 A3080000 		.4byte	0x8a3
 8947 11da 02       		.uleb128 0x2
 8948 11db 91       		.byte	0x91
 8949 11dc 76       		.sleb128 -10
 8950 11dd 00       		.byte	0
 8951 11de 25       		.uleb128 0x25
 8952 11df 21010000 		.4byte	.LASF198
 8953 11e3 04       		.byte	0x4
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 188


 8954 11e4 63       		.byte	0x63
 8955 11e5 00000000 		.4byte	.LFB87
 8956 11e9 6C010000 		.4byte	.LFE87-.LFB87
 8957 11ed 01       		.uleb128 0x1
 8958 11ee 9C       		.byte	0x9c
 8959 11ef 7F120000 		.4byte	0x127f
 8960 11f3 22       		.uleb128 0x22
 8961 11f4 90070000 		.4byte	.LASF187
 8962 11f8 04       		.byte	0x4
 8963 11f9 63       		.byte	0x63
 8964 11fa FD090000 		.4byte	0x9fd
 8965 11fe 03       		.uleb128 0x3
 8966 11ff 91       		.byte	0x91
 8967 1200 8C66     		.sleb128 -3316
 8968 1202 22       		.uleb128 0x22
 8969 1203 61080000 		.4byte	.LASF199
 8970 1207 04       		.byte	0x4
 8971 1208 63       		.byte	0x63
 8972 1209 BE0A0000 		.4byte	0xabe
 8973 120d 03       		.uleb128 0x3
 8974 120e 91       		.byte	0x91
 8975 120f 8866     		.sleb128 -3320
 8976 1211 1F       		.uleb128 0x1f
 8977 1212 6900     		.ascii	"i\000"
 8978 1214 04       		.byte	0x4
 8979 1215 65       		.byte	0x65
 8980 1216 89000000 		.4byte	0x89
 8981 121a 02       		.uleb128 0x2
 8982 121b 91       		.byte	0x91
 8983 121c 6C       		.sleb128 -20
 8984 121d 26       		.uleb128 0x26
 8985 121e 660A0000 		.4byte	.LASF191
 8986 1222 04       		.byte	0x4
 8987 1223 6D       		.byte	0x6d
 8988 1224 7F120000 		.4byte	0x127f
 8989 1228 03       		.uleb128 0x3
 8990 1229 91       		.byte	0x91
 8991 122a F476     		.sleb128 -1164
 8992 122c 26       		.uleb128 0x26
 8993 122d E40B0000 		.4byte	.LASF200
 8994 1231 04       		.byte	0x4
 8995 1232 6E       		.byte	0x6e
 8996 1233 7F120000 		.4byte	0x127f
 8997 1237 03       		.uleb128 0x3
 8998 1238 91       		.byte	0x91
 8999 1239 806E     		.sleb128 -2304
 9000 123b 1F       		.uleb128 0x1f
 9001 123c 6B00     		.ascii	"k\000"
 9002 123e 04       		.byte	0x4
 9003 123f 77       		.byte	0x77
 9004 1240 89000000 		.4byte	0x89
 9005 1244 02       		.uleb128 0x2
 9006 1245 91       		.byte	0x91
 9007 1246 68       		.sleb128 -24
 9008 1247 26       		.uleb128 0x26
 9009 1248 7E0A0000 		.4byte	.LASF201
 9010 124c 04       		.byte	0x4
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 189


 9011 124d 78       		.byte	0x78
 9012 124e FD090000 		.4byte	0x9fd
 9013 1252 03       		.uleb128 0x3
 9014 1253 91       		.byte	0x91
 9015 1254 FC6D     		.sleb128 -2308
 9016 1256 26       		.uleb128 0x26
 9017 1257 91000000 		.4byte	.LASF202
 9018 125b 04       		.byte	0x4
 9019 125c 79       		.byte	0x79
 9020 125d FD090000 		.4byte	0x9fd
 9021 1261 03       		.uleb128 0x3
 9022 1262 91       		.byte	0x91
 9023 1263 F86D     		.sleb128 -2312
 9024 1265 27       		.uleb128 0x27
 9025 1266 98000000 		.4byte	.LBB6
 9026 126a B6000000 		.4byte	.LBE6-.LBB6
 9027 126e 26       		.uleb128 0x26
 9028 126f 47040000 		.4byte	.LASF159
 9029 1273 04       		.byte	0x4
 9030 1274 7E       		.byte	0x7e
 9031 1275 8A0F0000 		.4byte	0xf8a
 9032 1279 03       		.uleb128 0x3
 9033 127a 91       		.byte	0x91
 9034 127b 9066     		.sleb128 -3312
 9035 127d 00       		.byte	0
 9036 127e 00       		.byte	0
 9037 127f 09       		.uleb128 0x9
 9038 1280 89000000 		.4byte	0x89
 9039 1284 95120000 		.4byte	0x1295
 9040 1288 0A       		.uleb128 0xa
 9041 1289 F5000000 		.4byte	0xf5
 9042 128d 0E       		.byte	0xe
 9043 128e 0A       		.uleb128 0xa
 9044 128f F5000000 		.4byte	0xf5
 9045 1293 12       		.byte	0x12
 9046 1294 00       		.byte	0
 9047 1295 32       		.uleb128 0x32
 9048 1296 DE000000 		.4byte	.LASF203
 9049 129a 05       		.byte	0x5
 9050 129b 71       		.byte	0x71
 9051 129c 00000000 		.4byte	.LFB88
 9052 12a0 30000000 		.4byte	.LFE88-.LFB88
 9053 12a4 01       		.uleb128 0x1
 9054 12a5 9C       		.byte	0x9c
 9055 12a6 33       		.uleb128 0x33
 9056 12a7 D60B0000 		.4byte	.LASF204
 9057 12ab 05       		.byte	0x5
 9058 12ac 78       		.byte	0x78
 9059 12ad 00000000 		.4byte	.LFB89
 9060 12b1 18000000 		.4byte	.LFE89-.LFB89
 9061 12b5 01       		.uleb128 0x1
 9062 12b6 9C       		.byte	0x9c
 9063 12b7 34       		.uleb128 0x34
 9064 12b8 1D040000 		.4byte	.LASF205
 9065 12bc 05       		.byte	0x5
 9066 12bd 8D       		.byte	0x8d
 9067 12be 89000000 		.4byte	0x89
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 190


 9068 12c2 00000000 		.4byte	.LFB90
 9069 12c6 6C020000 		.4byte	.LFE90-.LFB90
 9070 12ca 01       		.uleb128 0x1
 9071 12cb 9C       		.byte	0x9c
 9072 12cc 5B130000 		.4byte	0x135b
 9073 12d0 26       		.uleb128 0x26
 9074 12d1 55090000 		.4byte	.LASF206
 9075 12d5 05       		.byte	0x5
 9076 12d6 B5       		.byte	0xb5
 9077 12d7 89000000 		.4byte	0x89
 9078 12db 02       		.uleb128 0x2
 9079 12dc 91       		.byte	0x91
 9080 12dd 68       		.sleb128 -24
 9081 12de 26       		.uleb128 0x26
 9082 12df 5D040000 		.4byte	.LASF207
 9083 12e3 05       		.byte	0x5
 9084 12e4 B6       		.byte	0xb6
 9085 12e5 89000000 		.4byte	0x89
 9086 12e9 02       		.uleb128 0x2
 9087 12ea 91       		.byte	0x91
 9088 12eb 64       		.sleb128 -28
 9089 12ec 26       		.uleb128 0x26
 9090 12ed 90070000 		.4byte	.LASF187
 9091 12f1 05       		.byte	0x5
 9092 12f2 C0       		.byte	0xc0
 9093 12f3 FD090000 		.4byte	0x9fd
 9094 12f7 02       		.uleb128 0x2
 9095 12f8 91       		.byte	0x91
 9096 12f9 60       		.sleb128 -32
 9097 12fa 26       		.uleb128 0x26
 9098 12fb A4070000 		.4byte	.LASF208
 9099 12ff 05       		.byte	0x5
 9100 1300 C1       		.byte	0xc1
 9101 1301 FD090000 		.4byte	0x9fd
 9102 1305 02       		.uleb128 0x2
 9103 1306 91       		.byte	0x91
 9104 1307 5C       		.sleb128 -36
 9105 1308 26       		.uleb128 0x26
 9106 1309 30030000 		.4byte	.LASF209
 9107 130d 05       		.byte	0x5
 9108 130e C2       		.byte	0xc2
 9109 130f 8A0F0000 		.4byte	0xf8a
 9110 1313 03       		.uleb128 0x3
 9111 1314 91       		.byte	0x91
 9112 1315 F477     		.sleb128 -1036
 9113 1317 26       		.uleb128 0x26
 9114 1318 1E080000 		.4byte	.LASF210
 9115 131c 05       		.byte	0x5
 9116 131d C4       		.byte	0xc4
 9117 131e 5B130000 		.4byte	0x135b
 9118 1322 03       		.uleb128 0x3
 9119 1323 91       		.byte	0x91
 9120 1324 AC76     		.sleb128 -1236
 9121 1326 26       		.uleb128 0x26
 9122 1327 6E010000 		.4byte	.LASF211
 9123 132b 05       		.byte	0x5
 9124 132c C6       		.byte	0xc6
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 191


 9125 132d 98080000 		.4byte	0x898
 9126 1331 02       		.uleb128 0x2
 9127 1332 91       		.byte	0x91
 9128 1333 73       		.sleb128 -13
 9129 1334 26       		.uleb128 0x26
 9130 1335 940B0000 		.4byte	.LASF212
 9131 1339 05       		.byte	0x5
 9132 133a EB       		.byte	0xeb
 9133 133b 89000000 		.4byte	0x89
 9134 133f 02       		.uleb128 0x2
 9135 1340 91       		.byte	0x91
 9136 1341 74       		.sleb128 -12
 9137 1342 27       		.uleb128 0x27
 9138 1343 D6010000 		.4byte	.LBB7
 9139 1347 24000000 		.4byte	.LBE7-.LBB7
 9140 134b 26       		.uleb128 0x26
 9141 134c E3070000 		.4byte	.LASF213
 9142 1350 05       		.byte	0x5
 9143 1351 F7       		.byte	0xf7
 9144 1352 89000000 		.4byte	0x89
 9145 1356 02       		.uleb128 0x2
 9146 1357 91       		.byte	0x91
 9147 1358 6C       		.sleb128 -20
 9148 1359 00       		.byte	0
 9149 135a 00       		.byte	0
 9150 135b 09       		.uleb128 0x9
 9151 135c 8D080000 		.4byte	0x88d
 9152 1360 6B130000 		.4byte	0x136b
 9153 1364 0A       		.uleb128 0xa
 9154 1365 F5000000 		.4byte	0xf5
 9155 1369 C7       		.byte	0xc7
 9156 136a 00       		.byte	0
 9157 136b 28       		.uleb128 0x28
 9158 136c 7F070000 		.4byte	.LASF214
 9159 1370 05       		.byte	0x5
 9160 1371 1401     		.2byte	0x114
 9161 1373 E9080000 		.4byte	0x8e9
 9162 1377 00000000 		.4byte	.LFB91
 9163 137b 24000000 		.4byte	.LFE91-.LFB91
 9164 137f 01       		.uleb128 0x1
 9165 1380 9C       		.byte	0x9c
 9166 1381 93130000 		.4byte	0x1393
 9167 1385 29       		.uleb128 0x29
 9168 1386 6E00     		.ascii	"n\000"
 9169 1388 05       		.byte	0x5
 9170 1389 1401     		.2byte	0x114
 9171 138b DD080000 		.4byte	0x8dd
 9172 138f 02       		.uleb128 0x2
 9173 1390 91       		.byte	0x91
 9174 1391 76       		.sleb128 -10
 9175 1392 00       		.byte	0
 9176 1393 35       		.uleb128 0x35
 9177 1394 4F030000 		.4byte	.LASF216
 9178 1398 05       		.byte	0x5
 9179 1399 1801     		.2byte	0x118
 9180 139b 00000000 		.4byte	.LFB92
 9181 139f B4000000 		.4byte	.LFE92-.LFB92
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 192


 9182 13a3 01       		.uleb128 0x1
 9183 13a4 9C       		.byte	0x9c
 9184 13a5 DF130000 		.4byte	0x13df
 9185 13a9 2A       		.uleb128 0x2a
 9186 13aa 6900     		.ascii	"i\000"
 9187 13ac 05       		.byte	0x5
 9188 13ad 1A01     		.2byte	0x11a
 9189 13af 89000000 		.4byte	0x89
 9190 13b3 02       		.uleb128 0x2
 9191 13b4 91       		.byte	0x91
 9192 13b5 74       		.sleb128 -12
 9193 13b6 2B       		.uleb128 0x2b
 9194 13b7 B0030000 		.4byte	.LASF217
 9195 13bb 05       		.byte	0x5
 9196 13bc 2201     		.2byte	0x122
 9197 13be DF130000 		.4byte	0x13df
 9198 13c2 02       		.uleb128 0x2
 9199 13c3 91       		.byte	0x91
 9200 13c4 50       		.sleb128 -48
 9201 13c5 27       		.uleb128 0x27
 9202 13c6 0C000000 		.4byte	.LBB8
 9203 13ca 26000000 		.4byte	.LBE8-.LBB8
 9204 13ce 2B       		.uleb128 0x2b
 9205 13cf 1F000000 		.4byte	.LASF218
 9206 13d3 05       		.byte	0x5
 9207 13d4 1C01     		.2byte	0x11c
 9208 13d6 89000000 		.4byte	0x89
 9209 13da 02       		.uleb128 0x2
 9210 13db 91       		.byte	0x91
 9211 13dc 70       		.sleb128 -16
 9212 13dd 00       		.byte	0
 9213 13de 00       		.byte	0
 9214 13df 09       		.uleb128 0x9
 9215 13e0 7C050000 		.4byte	0x57c
 9216 13e4 EF130000 		.4byte	0x13ef
 9217 13e8 0A       		.uleb128 0xa
 9218 13e9 F5000000 		.4byte	0xf5
 9219 13ed 1F       		.byte	0x1f
 9220 13ee 00       		.byte	0
 9221 13ef 36       		.uleb128 0x36
 9222 13f0 61060000 		.4byte	.LASF219
 9223 13f4 05       		.byte	0x5
 9224 13f5 3401     		.2byte	0x134
 9225 13f7 00000000 		.4byte	.LFB93
 9226 13fb A4010000 		.4byte	.LFE93-.LFB93
 9227 13ff 01       		.uleb128 0x1
 9228 1400 9C       		.byte	0x9c
 9229 1401 60140000 		.4byte	0x1460
 9230 1405 2D       		.uleb128 0x2d
 9231 1406 130D0000 		.4byte	.LASF220
 9232 140a 05       		.byte	0x5
 9233 140b 3401     		.2byte	0x134
 9234 140d 89000000 		.4byte	0x89
 9235 1411 02       		.uleb128 0x2
 9236 1412 91       		.byte	0x91
 9237 1413 4C       		.sleb128 -52
 9238 1414 2D       		.uleb128 0x2d
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 193


 9239 1415 55090000 		.4byte	.LASF206
 9240 1419 05       		.byte	0x5
 9241 141a 3401     		.2byte	0x134
 9242 141c 7A0A0000 		.4byte	0xa7a
 9243 1420 02       		.uleb128 0x2
 9244 1421 91       		.byte	0x91
 9245 1422 48       		.sleb128 -56
 9246 1423 2D       		.uleb128 0x2d
 9247 1424 5D040000 		.4byte	.LASF207
 9248 1428 05       		.byte	0x5
 9249 1429 3401     		.2byte	0x134
 9250 142b 7A0A0000 		.4byte	0xa7a
 9251 142f 02       		.uleb128 0x2
 9252 1430 91       		.byte	0x91
 9253 1431 44       		.sleb128 -60
 9254 1432 2B       		.uleb128 0x2b
 9255 1433 00000000 		.4byte	.LASF221
 9256 1437 05       		.byte	0x5
 9257 1438 3901     		.2byte	0x139
 9258 143a F5080000 		.4byte	0x8f5
 9259 143e 02       		.uleb128 0x2
 9260 143f 91       		.byte	0x91
 9261 1440 74       		.sleb128 -12
 9262 1441 2B       		.uleb128 0x2b
 9263 1442 6C050000 		.4byte	.LASF222
 9264 1446 05       		.byte	0x5
 9265 1447 3A01     		.2byte	0x13a
 9266 1449 89000000 		.4byte	0x89
 9267 144d 02       		.uleb128 0x2
 9268 144e 91       		.byte	0x91
 9269 144f 70       		.sleb128 -16
 9270 1450 2B       		.uleb128 0x2b
 9271 1451 B0030000 		.4byte	.LASF217
 9272 1455 05       		.byte	0x5
 9273 1456 3C01     		.2byte	0x13c
 9274 1458 DF130000 		.4byte	0x13df
 9275 145c 02       		.uleb128 0x2
 9276 145d 91       		.byte	0x91
 9277 145e 50       		.sleb128 -48
 9278 145f 00       		.byte	0
 9279 1460 35       		.uleb128 0x35
 9280 1461 D3020000 		.4byte	.LASF223
 9281 1465 05       		.byte	0x5
 9282 1466 7901     		.2byte	0x179
 9283 1468 00000000 		.4byte	.LFB94
 9284 146c 78000000 		.4byte	.LFE94-.LFB94
 9285 1470 01       		.uleb128 0x1
 9286 1471 9C       		.byte	0x9c
 9287 1472 95140000 		.4byte	0x1495
 9288 1476 2B       		.uleb128 0x2b
 9289 1477 54010000 		.4byte	.LASF224
 9290 147b 05       		.byte	0x5
 9291 147c 7B01     		.2byte	0x17b
 9292 147e 89000000 		.4byte	0x89
 9293 1482 02       		.uleb128 0x2
 9294 1483 91       		.byte	0x91
 9295 1484 74       		.sleb128 -12
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 194


 9296 1485 2B       		.uleb128 0x2b
 9297 1486 76040000 		.4byte	.LASF225
 9298 148a 05       		.byte	0x5
 9299 148b 7C01     		.2byte	0x17c
 9300 148d 89000000 		.4byte	0x89
 9301 1491 02       		.uleb128 0x2
 9302 1492 91       		.byte	0x91
 9303 1493 70       		.sleb128 -16
 9304 1494 00       		.byte	0
 9305 1495 35       		.uleb128 0x35
 9306 1496 03050000 		.4byte	.LASF226
 9307 149a 05       		.byte	0x5
 9308 149b 8B01     		.2byte	0x18b
 9309 149d 00000000 		.4byte	.LFB95
 9310 14a1 78000000 		.4byte	.LFE95-.LFB95
 9311 14a5 01       		.uleb128 0x1
 9312 14a6 9C       		.byte	0x9c
 9313 14a7 CA140000 		.4byte	0x14ca
 9314 14ab 2B       		.uleb128 0x2b
 9315 14ac 54010000 		.4byte	.LASF224
 9316 14b0 05       		.byte	0x5
 9317 14b1 8D01     		.2byte	0x18d
 9318 14b3 89000000 		.4byte	0x89
 9319 14b7 02       		.uleb128 0x2
 9320 14b8 91       		.byte	0x91
 9321 14b9 74       		.sleb128 -12
 9322 14ba 2B       		.uleb128 0x2b
 9323 14bb 76040000 		.4byte	.LASF225
 9324 14bf 05       		.byte	0x5
 9325 14c0 8E01     		.2byte	0x18e
 9326 14c2 89000000 		.4byte	0x89
 9327 14c6 02       		.uleb128 0x2
 9328 14c7 91       		.byte	0x91
 9329 14c8 70       		.sleb128 -16
 9330 14c9 00       		.byte	0
 9331 14ca 36       		.uleb128 0x36
 9332 14cb C4080000 		.4byte	.LASF227
 9333 14cf 05       		.byte	0x5
 9334 14d0 9E01     		.2byte	0x19e
 9335 14d2 00000000 		.4byte	.LFB96
 9336 14d6 B0000000 		.4byte	.LFE96-.LFB96
 9337 14da 01       		.uleb128 0x1
 9338 14db 9C       		.byte	0x9c
 9339 14dc 0E150000 		.4byte	0x150e
 9340 14e0 2D       		.uleb128 0x2d
 9341 14e1 82000000 		.4byte	.LASF228
 9342 14e5 05       		.byte	0x5
 9343 14e6 9E01     		.2byte	0x19e
 9344 14e8 89000000 		.4byte	0x89
 9345 14ec 02       		.uleb128 0x2
 9346 14ed 91       		.byte	0x91
 9347 14ee 6C       		.sleb128 -20
 9348 14ef 2B       		.uleb128 0x2b
 9349 14f0 50060000 		.4byte	.LASF229
 9350 14f4 05       		.byte	0x5
 9351 14f5 9F01     		.2byte	0x19f
 9352 14f7 F5080000 		.4byte	0x8f5
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 195


 9353 14fb 02       		.uleb128 0x2
 9354 14fc 91       		.byte	0x91
 9355 14fd 70       		.sleb128 -16
 9356 14fe 2B       		.uleb128 0x2b
 9357 14ff 8C010000 		.4byte	.LASF230
 9358 1503 05       		.byte	0x5
 9359 1504 A001     		.2byte	0x1a0
 9360 1506 F5080000 		.4byte	0x8f5
 9361 150a 02       		.uleb128 0x2
 9362 150b 91       		.byte	0x91
 9363 150c 74       		.sleb128 -12
 9364 150d 00       		.byte	0
 9365 150e 35       		.uleb128 0x35
 9366 150f CF010000 		.4byte	.LASF231
 9367 1513 05       		.byte	0x5
 9368 1514 BB01     		.2byte	0x1bb
 9369 1516 00000000 		.4byte	.LFB97
 9370 151a A4000000 		.4byte	.LFE97-.LFB97
 9371 151e 01       		.uleb128 0x1
 9372 151f 9C       		.byte	0x9c
 9373 1520 43150000 		.4byte	0x1543
 9374 1524 2B       		.uleb128 0x2b
 9375 1525 54010000 		.4byte	.LASF224
 9376 1529 05       		.byte	0x5
 9377 152a BD01     		.2byte	0x1bd
 9378 152c 89000000 		.4byte	0x89
 9379 1530 02       		.uleb128 0x2
 9380 1531 91       		.byte	0x91
 9381 1532 74       		.sleb128 -12
 9382 1533 2B       		.uleb128 0x2b
 9383 1534 76040000 		.4byte	.LASF225
 9384 1538 05       		.byte	0x5
 9385 1539 BE01     		.2byte	0x1be
 9386 153b 89000000 		.4byte	0x89
 9387 153f 02       		.uleb128 0x2
 9388 1540 91       		.byte	0x91
 9389 1541 70       		.sleb128 -16
 9390 1542 00       		.byte	0
 9391 1543 35       		.uleb128 0x35
 9392 1544 10000000 		.4byte	.LASF232
 9393 1548 05       		.byte	0x5
 9394 1549 DB01     		.2byte	0x1db
 9395 154b 00000000 		.4byte	.LFB98
 9396 154f A4000000 		.4byte	.LFE98-.LFB98
 9397 1553 01       		.uleb128 0x1
 9398 1554 9C       		.byte	0x9c
 9399 1555 78150000 		.4byte	0x1578
 9400 1559 2B       		.uleb128 0x2b
 9401 155a 54010000 		.4byte	.LASF224
 9402 155e 05       		.byte	0x5
 9403 155f DD01     		.2byte	0x1dd
 9404 1561 89000000 		.4byte	0x89
 9405 1565 02       		.uleb128 0x2
 9406 1566 91       		.byte	0x91
 9407 1567 74       		.sleb128 -12
 9408 1568 2B       		.uleb128 0x2b
 9409 1569 76040000 		.4byte	.LASF225
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 196


 9410 156d 05       		.byte	0x5
 9411 156e DE01     		.2byte	0x1de
 9412 1570 89000000 		.4byte	0x89
 9413 1574 02       		.uleb128 0x2
 9414 1575 91       		.byte	0x91
 9415 1576 70       		.sleb128 -16
 9416 1577 00       		.byte	0
 9417 1578 36       		.uleb128 0x36
 9418 1579 33070000 		.4byte	.LASF233
 9419 157d 05       		.byte	0x5
 9420 157e FD01     		.2byte	0x1fd
 9421 1580 00000000 		.4byte	.LFB99
 9422 1584 D0000000 		.4byte	.LFE99-.LFB99
 9423 1588 01       		.uleb128 0x1
 9424 1589 9C       		.byte	0x9c
 9425 158a CB150000 		.4byte	0x15cb
 9426 158e 2D       		.uleb128 0x2d
 9427 158f 5D040000 		.4byte	.LASF207
 9428 1593 05       		.byte	0x5
 9429 1594 FD01     		.2byte	0x1fd
 9430 1596 7A0A0000 		.4byte	0xa7a
 9431 159a 02       		.uleb128 0x2
 9432 159b 91       		.byte	0x91
 9433 159c 6C       		.sleb128 -20
 9434 159d 2D       		.uleb128 0x2d
 9435 159e 55090000 		.4byte	.LASF206
 9436 15a2 05       		.byte	0x5
 9437 15a3 FD01     		.2byte	0x1fd
 9438 15a5 7A0A0000 		.4byte	0xa7a
 9439 15a9 02       		.uleb128 0x2
 9440 15aa 91       		.byte	0x91
 9441 15ab 68       		.sleb128 -24
 9442 15ac 2D       		.uleb128 0x2d
 9443 15ad B1080000 		.4byte	.LASF234
 9444 15b1 05       		.byte	0x5
 9445 15b2 FD01     		.2byte	0x1fd
 9446 15b4 89000000 		.4byte	0x89
 9447 15b8 02       		.uleb128 0x2
 9448 15b9 91       		.byte	0x91
 9449 15ba 64       		.sleb128 -28
 9450 15bb 2B       		.uleb128 0x2b
 9451 15bc 00000000 		.4byte	.LASF221
 9452 15c0 05       		.byte	0x5
 9453 15c1 FF01     		.2byte	0x1ff
 9454 15c3 F5080000 		.4byte	0x8f5
 9455 15c7 02       		.uleb128 0x2
 9456 15c8 91       		.byte	0x91
 9457 15c9 74       		.sleb128 -12
 9458 15ca 00       		.byte	0
 9459 15cb 36       		.uleb128 0x36
 9460 15cc 40060000 		.4byte	.LASF235
 9461 15d0 05       		.byte	0x5
 9462 15d1 1E02     		.2byte	0x21e
 9463 15d3 00000000 		.4byte	.LFB100
 9464 15d7 C0000000 		.4byte	.LFE100-.LFB100
 9465 15db 01       		.uleb128 0x1
 9466 15dc 9C       		.byte	0x9c
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 197


 9467 15dd 1E160000 		.4byte	0x161e
 9468 15e1 2D       		.uleb128 0x2d
 9469 15e2 5D040000 		.4byte	.LASF207
 9470 15e6 05       		.byte	0x5
 9471 15e7 1E02     		.2byte	0x21e
 9472 15e9 7A0A0000 		.4byte	0xa7a
 9473 15ed 02       		.uleb128 0x2
 9474 15ee 91       		.byte	0x91
 9475 15ef 6C       		.sleb128 -20
 9476 15f0 2D       		.uleb128 0x2d
 9477 15f1 55090000 		.4byte	.LASF206
 9478 15f5 05       		.byte	0x5
 9479 15f6 1E02     		.2byte	0x21e
 9480 15f8 7A0A0000 		.4byte	0xa7a
 9481 15fc 02       		.uleb128 0x2
 9482 15fd 91       		.byte	0x91
 9483 15fe 68       		.sleb128 -24
 9484 15ff 2B       		.uleb128 0x2b
 9485 1600 54010000 		.4byte	.LASF224
 9486 1604 05       		.byte	0x5
 9487 1605 2202     		.2byte	0x222
 9488 1607 89000000 		.4byte	0x89
 9489 160b 02       		.uleb128 0x2
 9490 160c 91       		.byte	0x91
 9491 160d 74       		.sleb128 -12
 9492 160e 2B       		.uleb128 0x2b
 9493 160f 76040000 		.4byte	.LASF225
 9494 1613 05       		.byte	0x5
 9495 1614 2302     		.2byte	0x223
 9496 1616 89000000 		.4byte	0x89
 9497 161a 02       		.uleb128 0x2
 9498 161b 91       		.byte	0x91
 9499 161c 70       		.sleb128 -16
 9500 161d 00       		.byte	0
 9501 161e 36       		.uleb128 0x36
 9502 161f 09080000 		.4byte	.LASF236
 9503 1623 05       		.byte	0x5
 9504 1624 4502     		.2byte	0x245
 9505 1626 00000000 		.4byte	.LFB101
 9506 162a 2A000000 		.4byte	.LFE101-.LFB101
 9507 162e 01       		.uleb128 0x1
 9508 162f 9C       		.byte	0x9c
 9509 1630 53160000 		.4byte	0x1653
 9510 1634 2D       		.uleb128 0x2d
 9511 1635 8A000000 		.4byte	.LASF237
 9512 1639 05       		.byte	0x5
 9513 163a 4502     		.2byte	0x245
 9514 163c 89000000 		.4byte	0x89
 9515 1640 02       		.uleb128 0x2
 9516 1641 91       		.byte	0x91
 9517 1642 6C       		.sleb128 -20
 9518 1643 2B       		.uleb128 0x2b
 9519 1644 58070000 		.4byte	.LASF238
 9520 1648 05       		.byte	0x5
 9521 1649 4602     		.2byte	0x246
 9522 164b 89000000 		.4byte	0x89
 9523 164f 02       		.uleb128 0x2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 198


 9524 1650 91       		.byte	0x91
 9525 1651 74       		.sleb128 -12
 9526 1652 00       		.byte	0
 9527 1653 36       		.uleb128 0x36
 9528 1654 2C010000 		.4byte	.LASF239
 9529 1658 05       		.byte	0x5
 9530 1659 4A02     		.2byte	0x24a
 9531 165b 00000000 		.4byte	.LFB102
 9532 165f 2A000000 		.4byte	.LFE102-.LFB102
 9533 1663 01       		.uleb128 0x1
 9534 1664 9C       		.byte	0x9c
 9535 1665 88160000 		.4byte	0x1688
 9536 1669 2D       		.uleb128 0x2d
 9537 166a 8A000000 		.4byte	.LASF237
 9538 166e 05       		.byte	0x5
 9539 166f 4A02     		.2byte	0x24a
 9540 1671 89000000 		.4byte	0x89
 9541 1675 02       		.uleb128 0x2
 9542 1676 91       		.byte	0x91
 9543 1677 6C       		.sleb128 -20
 9544 1678 2B       		.uleb128 0x2b
 9545 1679 58070000 		.4byte	.LASF238
 9546 167d 05       		.byte	0x5
 9547 167e 4B02     		.2byte	0x24b
 9548 1680 89000000 		.4byte	0x89
 9549 1684 02       		.uleb128 0x2
 9550 1685 91       		.byte	0x91
 9551 1686 74       		.sleb128 -12
 9552 1687 00       		.byte	0
 9553 1688 37       		.uleb128 0x37
 9554 1689 00030000 		.4byte	.LASF240
 9555 168d 05       		.byte	0x5
 9556 168e 4F02     		.2byte	0x24f
 9557 1690 00000000 		.4byte	.LFB103
 9558 1694 16000000 		.4byte	.LFE103-.LFB103
 9559 1698 01       		.uleb128 0x1
 9560 1699 9C       		.byte	0x9c
 9561 169a 37       		.uleb128 0x37
 9562 169b A6050000 		.4byte	.LASF241
 9563 169f 05       		.byte	0x5
 9564 16a0 5402     		.2byte	0x254
 9565 16a2 00000000 		.4byte	.LFB104
 9566 16a6 12000000 		.4byte	.LFE104-.LFB104
 9567 16aa 01       		.uleb128 0x1
 9568 16ab 9C       		.byte	0x9c
 9569 16ac 28       		.uleb128 0x28
 9570 16ad 82080000 		.4byte	.LASF242
 9571 16b1 05       		.byte	0x5
 9572 16b2 5902     		.2byte	0x259
 9573 16b4 F5080000 		.4byte	0x8f5
 9574 16b8 00000000 		.4byte	.LFB105
 9575 16bc CC000000 		.4byte	.LFE105-.LFB105
 9576 16c0 01       		.uleb128 0x1
 9577 16c1 9C       		.byte	0x9c
 9578 16c2 03170000 		.4byte	0x1703
 9579 16c6 2D       		.uleb128 0x2d
 9580 16c7 54010000 		.4byte	.LASF224
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 199


 9581 16cb 05       		.byte	0x5
 9582 16cc 5902     		.2byte	0x259
 9583 16ce 89000000 		.4byte	0x89
 9584 16d2 02       		.uleb128 0x2
 9585 16d3 91       		.byte	0x91
 9586 16d4 6C       		.sleb128 -20
 9587 16d5 2D       		.uleb128 0x2d
 9588 16d6 76040000 		.4byte	.LASF225
 9589 16da 05       		.byte	0x5
 9590 16db 5902     		.2byte	0x259
 9591 16dd 89000000 		.4byte	0x89
 9592 16e1 02       		.uleb128 0x2
 9593 16e2 91       		.byte	0x91
 9594 16e3 68       		.sleb128 -24
 9595 16e4 2B       		.uleb128 0x2b
 9596 16e5 4B0B0000 		.4byte	.LASF243
 9597 16e9 05       		.byte	0x5
 9598 16ea 5A02     		.2byte	0x25a
 9599 16ec F5080000 		.4byte	0x8f5
 9600 16f0 02       		.uleb128 0x2
 9601 16f1 91       		.byte	0x91
 9602 16f2 74       		.sleb128 -12
 9603 16f3 2B       		.uleb128 0x2b
 9604 16f4 8F050000 		.4byte	.LASF244
 9605 16f8 05       		.byte	0x5
 9606 16f9 5B02     		.2byte	0x25b
 9607 16fb F5080000 		.4byte	0x8f5
 9608 16ff 02       		.uleb128 0x2
 9609 1700 91       		.byte	0x91
 9610 1701 70       		.sleb128 -16
 9611 1702 00       		.byte	0
 9612 1703 36       		.uleb128 0x36
 9613 1704 27000000 		.4byte	.LASF245
 9614 1708 05       		.byte	0x5
 9615 1709 6102     		.2byte	0x261
 9616 170b 00000000 		.4byte	.LFB106
 9617 170f 48000000 		.4byte	.LFE106-.LFB106
 9618 1713 01       		.uleb128 0x1
 9619 1714 9C       		.byte	0x9c
 9620 1715 74170000 		.4byte	0x1774
 9621 1719 2D       		.uleb128 0x2d
 9622 171a E00A0000 		.4byte	.LASF246
 9623 171e 05       		.byte	0x5
 9624 171f 6102     		.2byte	0x261
 9625 1721 89000000 		.4byte	0x89
 9626 1725 02       		.uleb128 0x2
 9627 1726 91       		.byte	0x91
 9628 1727 6C       		.sleb128 -20
 9629 1728 2D       		.uleb128 0x2d
 9630 1729 92040000 		.4byte	.LASF247
 9631 172d 05       		.byte	0x5
 9632 172e 6102     		.2byte	0x261
 9633 1730 89000000 		.4byte	0x89
 9634 1734 02       		.uleb128 0x2
 9635 1735 91       		.byte	0x91
 9636 1736 68       		.sleb128 -24
 9637 1737 2D       		.uleb128 0x2d
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 200


 9638 1738 F2030000 		.4byte	.LASF248
 9639 173c 05       		.byte	0x5
 9640 173d 6102     		.2byte	0x261
 9641 173f 89000000 		.4byte	0x89
 9642 1743 02       		.uleb128 0x2
 9643 1744 91       		.byte	0x91
 9644 1745 64       		.sleb128 -28
 9645 1746 2D       		.uleb128 0x2d
 9646 1747 480C0000 		.4byte	.LASF249
 9647 174b 05       		.byte	0x5
 9648 174c 6102     		.2byte	0x261
 9649 174e 89000000 		.4byte	0x89
 9650 1752 02       		.uleb128 0x2
 9651 1753 91       		.byte	0x91
 9652 1754 60       		.sleb128 -32
 9653 1755 2B       		.uleb128 0x2b
 9654 1756 B40A0000 		.4byte	.LASF250
 9655 175a 05       		.byte	0x5
 9656 175b 6602     		.2byte	0x266
 9657 175d 89000000 		.4byte	0x89
 9658 1761 02       		.uleb128 0x2
 9659 1762 91       		.byte	0x91
 9660 1763 74       		.sleb128 -12
 9661 1764 2B       		.uleb128 0x2b
 9662 1765 81010000 		.4byte	.LASF251
 9663 1769 05       		.byte	0x5
 9664 176a 6E02     		.2byte	0x26e
 9665 176c 89000000 		.4byte	0x89
 9666 1770 02       		.uleb128 0x2
 9667 1771 91       		.byte	0x91
 9668 1772 70       		.sleb128 -16
 9669 1773 00       		.byte	0
 9670 1774 36       		.uleb128 0x36
 9671 1775 73020000 		.4byte	.LASF252
 9672 1779 05       		.byte	0x5
 9673 177a 7702     		.2byte	0x277
 9674 177c 00000000 		.4byte	.LFB107
 9675 1780 2C000000 		.4byte	.LFE107-.LFB107
 9676 1784 01       		.uleb128 0x1
 9677 1785 9C       		.byte	0x9c
 9678 1786 A9170000 		.4byte	0x17a9
 9679 178a 2D       		.uleb128 0x2d
 9680 178b 270B0000 		.4byte	.LASF253
 9681 178f 05       		.byte	0x5
 9682 1790 7702     		.2byte	0x277
 9683 1792 89000000 		.4byte	0x89
 9684 1796 02       		.uleb128 0x2
 9685 1797 91       		.byte	0x91
 9686 1798 74       		.sleb128 -12
 9687 1799 2D       		.uleb128 0x2d
 9688 179a 97050000 		.4byte	.LASF254
 9689 179e 05       		.byte	0x5
 9690 179f 7702     		.2byte	0x277
 9691 17a1 89000000 		.4byte	0x89
 9692 17a5 02       		.uleb128 0x2
 9693 17a6 91       		.byte	0x91
 9694 17a7 70       		.sleb128 -16
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 201


 9695 17a8 00       		.byte	0
 9696 17a9 38       		.uleb128 0x38
 9697 17aa 32020000 		.4byte	.LASF255
 9698 17ae 05       		.byte	0x5
 9699 17af 7D02     		.2byte	0x27d
 9700 17b1 00000000 		.4byte	.LFB108
 9701 17b5 14000000 		.4byte	.LFE108-.LFB108
 9702 17b9 01       		.uleb128 0x1
 9703 17ba 9C       		.byte	0x9c
 9704 17bb CD170000 		.4byte	0x17cd
 9705 17bf 29       		.uleb128 0x29
 9706 17c0 7300     		.ascii	"s\000"
 9707 17c2 05       		.byte	0x5
 9708 17c3 7D02     		.2byte	0x27d
 9709 17c5 76050000 		.4byte	0x576
 9710 17c9 02       		.uleb128 0x2
 9711 17ca 91       		.byte	0x91
 9712 17cb 74       		.sleb128 -12
 9713 17cc 00       		.byte	0
 9714 17cd 36       		.uleb128 0x36
 9715 17ce A40C0000 		.4byte	.LASF256
 9716 17d2 05       		.byte	0x5
 9717 17d3 8B02     		.2byte	0x28b
 9718 17d5 00000000 		.4byte	.LFB109
 9719 17d9 C8000000 		.4byte	.LFE109-.LFB109
 9720 17dd 01       		.uleb128 0x1
 9721 17de 9C       		.byte	0x9c
 9722 17df 0F180000 		.4byte	0x180f
 9723 17e3 2D       		.uleb128 0x2d
 9724 17e4 F7070000 		.4byte	.LASF164
 9725 17e8 05       		.byte	0x5
 9726 17e9 8B02     		.2byte	0x28b
 9727 17eb 160E0000 		.4byte	0xe16
 9728 17ef 02       		.uleb128 0x2
 9729 17f0 91       		.byte	0x91
 9730 17f1 4C       		.sleb128 -52
 9731 17f2 2A       		.uleb128 0x2a
 9732 17f3 6900     		.ascii	"i\000"
 9733 17f5 05       		.byte	0x5
 9734 17f6 8E02     		.2byte	0x28e
 9735 17f8 89000000 		.4byte	0x89
 9736 17fc 02       		.uleb128 0x2
 9737 17fd 91       		.byte	0x91
 9738 17fe 74       		.sleb128 -12
 9739 17ff 2B       		.uleb128 0x2b
 9740 1800 B0030000 		.4byte	.LASF217
 9741 1804 05       		.byte	0x5
 9742 1805 8F02     		.2byte	0x28f
 9743 1807 DF130000 		.4byte	0x13df
 9744 180b 02       		.uleb128 0x2
 9745 180c 91       		.byte	0x91
 9746 180d 54       		.sleb128 -44
 9747 180e 00       		.byte	0
 9748 180f 36       		.uleb128 0x36
 9749 1810 41000000 		.4byte	.LASF257
 9750 1814 05       		.byte	0x5
 9751 1815 A902     		.2byte	0x2a9
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 202


 9752 1817 00000000 		.4byte	.LFB110
 9753 181b 74000000 		.4byte	.LFE110-.LFB110
 9754 181f 01       		.uleb128 0x1
 9755 1820 9C       		.byte	0x9c
 9756 1821 44180000 		.4byte	0x1844
 9757 1825 2D       		.uleb128 0x2d
 9758 1826 62070000 		.4byte	.LASF258
 9759 182a 05       		.byte	0x5
 9760 182b A902     		.2byte	0x2a9
 9761 182d 8D080000 		.4byte	0x88d
 9762 1831 02       		.uleb128 0x2
 9763 1832 91       		.byte	0x91
 9764 1833 57       		.sleb128 -41
 9765 1834 2B       		.uleb128 0x2b
 9766 1835 B0030000 		.4byte	.LASF217
 9767 1839 05       		.byte	0x5
 9768 183a AA02     		.2byte	0x2aa
 9769 183c DF130000 		.4byte	0x13df
 9770 1840 02       		.uleb128 0x2
 9771 1841 91       		.byte	0x91
 9772 1842 58       		.sleb128 -40
 9773 1843 00       		.byte	0
 9774 1844 36       		.uleb128 0x36
 9775 1845 23020000 		.4byte	.LASF259
 9776 1849 05       		.byte	0x5
 9777 184a BE02     		.2byte	0x2be
 9778 184c 00000000 		.4byte	.LFB111
 9779 1850 D8010000 		.4byte	.LFE111-.LFB111
 9780 1854 01       		.uleb128 0x1
 9781 1855 9C       		.byte	0x9c
 9782 1856 CE180000 		.4byte	0x18ce
 9783 185a 2D       		.uleb128 0x2d
 9784 185b 90070000 		.4byte	.LASF187
 9785 185f 05       		.byte	0x5
 9786 1860 BE02     		.2byte	0x2be
 9787 1862 FD090000 		.4byte	0x9fd
 9788 1866 03       		.uleb128 0x3
 9789 1867 91       		.byte	0x91
 9790 1868 FC6E     		.sleb128 -2180
 9791 186a 2D       		.uleb128 0x2d
 9792 186b 47040000 		.4byte	.LASF159
 9793 186f 05       		.byte	0x5
 9794 1870 BE02     		.2byte	0x2be
 9795 1872 BE0A0000 		.4byte	0xabe
 9796 1876 03       		.uleb128 0x3
 9797 1877 91       		.byte	0x91
 9798 1878 F86E     		.sleb128 -2184
 9799 187a 2A       		.uleb128 0x2a
 9800 187b 6900     		.ascii	"i\000"
 9801 187d 05       		.byte	0x5
 9802 187e C402     		.2byte	0x2c4
 9803 1880 98080000 		.4byte	0x898
 9804 1884 02       		.uleb128 0x2
 9805 1885 91       		.byte	0x91
 9806 1886 6F       		.sleb128 -17
 9807 1887 2B       		.uleb128 0x2b
 9808 1888 EA0A0000 		.4byte	.LASF260
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 203


 9809 188c 05       		.byte	0x5
 9810 188d C702     		.2byte	0x2c7
 9811 188f CE180000 		.4byte	0x18ce
 9812 1893 02       		.uleb128 0x2
 9813 1894 91       		.byte	0x91
 9814 1895 60       		.sleb128 -32
 9815 1896 2B       		.uleb128 0x2b
 9816 1897 E40B0000 		.4byte	.LASF200
 9817 189b 05       		.byte	0x5
 9818 189c D202     		.2byte	0x2d2
 9819 189e 7F120000 		.4byte	0x127f
 9820 18a2 03       		.uleb128 0x3
 9821 18a3 91       		.byte	0x91
 9822 18a4 EC76     		.sleb128 -1172
 9823 18a6 2A       		.uleb128 0x2a
 9824 18a7 6B00     		.ascii	"k\000"
 9825 18a9 05       		.byte	0x5
 9826 18aa DC02     		.2byte	0x2dc
 9827 18ac 98080000 		.4byte	0x898
 9828 18b0 02       		.uleb128 0x2
 9829 18b1 91       		.byte	0x91
 9830 18b2 6E       		.sleb128 -18
 9831 18b3 27       		.uleb128 0x27
 9832 18b4 A8000000 		.4byte	.LBB9
 9833 18b8 08010000 		.4byte	.LBE9-.LBB9
 9834 18bc 2B       		.uleb128 0x2b
 9835 18bd D7030000 		.4byte	.LASF192
 9836 18c1 05       		.byte	0x5
 9837 18c2 EE02     		.2byte	0x2ee
 9838 18c4 8A0F0000 		.4byte	0xf8a
 9839 18c8 03       		.uleb128 0x3
 9840 18c9 91       		.byte	0x91
 9841 18ca 846F     		.sleb128 -2172
 9842 18cc 00       		.byte	0
 9843 18cd 00       		.byte	0
 9844 18ce 09       		.uleb128 0x9
 9845 18cf FD090000 		.4byte	0x9fd
 9846 18d3 DE180000 		.4byte	0x18de
 9847 18d7 0A       		.uleb128 0xa
 9848 18d8 F5000000 		.4byte	0xf5
 9849 18dc 05       		.byte	0x5
 9850 18dd 00       		.byte	0
 9851 18de 39       		.uleb128 0x39
 9852 18df 8E020000 		.4byte	.LASF261
 9853 18e3 0A       		.byte	0xa
 9854 18e4 FA02     		.2byte	0x2fa
 9855 18e6 3E040000 		.4byte	0x43e
 9856 18ea 39       		.uleb128 0x39
 9857 18eb DC080000 		.4byte	.LASF262
 9858 18ef 0F       		.byte	0xf
 9859 18f0 9606     		.2byte	0x696
 9860 18f2 F6180000 		.4byte	0x18f6
 9861 18f6 3A       		.uleb128 0x3a
 9862 18f7 AE080000 		.4byte	0x8ae
 9863 18fb 3B       		.uleb128 0x3b
 9864 18fc 747300   		.ascii	"ts\000"
 9865 18ff 0D       		.byte	0xd
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 204


 9866 1900 10       		.byte	0x10
 9867 1901 B9080000 		.4byte	0x8b9
 9868 1905 05       		.uleb128 0x5
 9869 1906 03       		.byte	0x3
 9870 1907 00000000 		.4byte	ts
 9871 190b 3C       		.uleb128 0x3c
 9872 190c B80B0000 		.4byte	.LASF263
 9873 1910 0D       		.byte	0xd
 9874 1911 11       		.byte	0x11
 9875 1912 C5080000 		.4byte	0x8c5
 9876 1916 05       		.uleb128 0x5
 9877 1917 03       		.byte	0x3
 9878 1918 00000000 		.4byte	ts_enc
 9879 191c 3C       		.uleb128 0x3c
 9880 191d 00090000 		.4byte	.LASF264
 9881 1921 0D       		.byte	0xd
 9882 1922 12       		.byte	0x12
 9883 1923 C5080000 		.4byte	0x8c5
 9884 1927 05       		.uleb128 0x5
 9885 1928 03       		.byte	0x3
 9886 1929 00000000 		.4byte	ts_update
 9887 192d 3C       		.uleb128 0x3c
 9888 192e 14040000 		.4byte	.LASF265
 9889 1932 0D       		.byte	0xd
 9890 1933 13       		.byte	0x13
 9891 1934 C5080000 		.4byte	0x8c5
 9892 1938 05       		.uleb128 0x5
 9893 1939 03       		.byte	0x3
 9894 193a 00000000 		.4byte	ts_speed
 9895 193e 3C       		.uleb128 0x3c
 9896 193f 98040000 		.4byte	.LASF266
 9897 1943 0D       		.byte	0xd
 9898 1944 14       		.byte	0x14
 9899 1945 C5080000 		.4byte	0x8c5
 9900 1949 05       		.uleb128 0x5
 9901 194a 03       		.byte	0x3
 9902 194b 00000000 		.4byte	ts_display
 9903 194f 3C       		.uleb128 0x3c
 9904 1950 B5030000 		.4byte	.LASF267
 9905 1954 0D       		.byte	0xd
 9906 1955 16       		.byte	0x16
 9907 1956 B9080000 		.4byte	0x8b9
 9908 195a 05       		.uleb128 0x5
 9909 195b 03       		.byte	0x3
 9910 195c 00000000 		.4byte	flag_ts_enc
 9911 1960 3C       		.uleb128 0x3c
 9912 1961 94030000 		.4byte	.LASF268
 9913 1965 0D       		.byte	0xd
 9914 1966 17       		.byte	0x17
 9915 1967 B9080000 		.4byte	0x8b9
 9916 196b 05       		.uleb128 0x5
 9917 196c 03       		.byte	0x3
 9918 196d 00000000 		.4byte	flag_ts_update
 9919 1971 3C       		.uleb128 0x3c
 9920 1972 53080000 		.4byte	.LASF269
 9921 1976 0D       		.byte	0xd
 9922 1977 18       		.byte	0x18
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 205


 9923 1978 B9080000 		.4byte	0x8b9
 9924 197c 05       		.uleb128 0x5
 9925 197d 03       		.byte	0x3
 9926 197e 00000000 		.4byte	flag_ts_speed
 9927 1982 3C       		.uleb128 0x3c
 9928 1983 BF0B0000 		.4byte	.LASF270
 9929 1987 0D       		.byte	0xd
 9930 1988 19       		.byte	0x19
 9931 1989 B9080000 		.4byte	0x8b9
 9932 198d 05       		.uleb128 0x5
 9933 198e 03       		.byte	0x3
 9934 198f 00000000 		.4byte	flag_ts_display
 9935 1993 3C       		.uleb128 0x3c
 9936 1994 7A080000 		.4byte	.LASF271
 9937 1998 0D       		.byte	0xd
 9938 1999 1C       		.byte	0x1c
 9939 199a B9080000 		.4byte	0x8b9
 9940 199e 05       		.uleb128 0x5
 9941 199f 03       		.byte	0x3
 9942 19a0 00000000 		.4byte	flag_rx
 9943 19a4 3C       		.uleb128 0x3c
 9944 19a5 19030000 		.4byte	.LASF272
 9945 19a9 0D       		.byte	0xd
 9946 19aa 1D       		.byte	0x1d
 9947 19ab B9080000 		.4byte	0x8b9
 9948 19af 05       		.uleb128 0x5
 9949 19b0 03       		.byte	0x3
 9950 19b1 00000000 		.4byte	flag_packet
 9951 19b5 3C       		.uleb128 0x3c
 9952 19b6 BF0A0000 		.4byte	.LASF273
 9953 19ba 0D       		.byte	0xd
 9954 19bb 1E       		.byte	0x1e
 9955 19bc B9080000 		.4byte	0x8b9
 9956 19c0 05       		.uleb128 0x5
 9957 19c1 03       		.byte	0x3
 9958 19c2 00000000 		.4byte	flag_KB_string
 9959 19c6 3C       		.uleb128 0x3c
 9960 19c7 67090000 		.4byte	.LASF274
 9961 19cb 0D       		.byte	0xd
 9962 19cc 20       		.byte	0x20
 9963 19cd B9080000 		.4byte	0x8b9
 9964 19d1 05       		.uleb128 0x5
 9965 19d2 03       		.byte	0x3
 9966 19d3 00000000 		.4byte	dataready_flag
 9967 19d7 3C       		.uleb128 0x3c
 9968 19d8 DD010000 		.4byte	.LASF275
 9969 19dc 0D       		.byte	0xd
 9970 19dd 22       		.byte	0x22
 9971 19de B9080000 		.4byte	0x8b9
 9972 19e2 05       		.uleb128 0x5
 9973 19e3 03       		.byte	0x3
 9974 19e4 00000000 		.4byte	flag_rf_transmission_active
 9975 19e8 09       		.uleb128 0x9
 9976 19e9 7C050000 		.4byte	0x57c
 9977 19ed F8190000 		.4byte	0x19f8
 9978 19f1 0A       		.uleb128 0xa
 9979 19f2 F5000000 		.4byte	0xf5
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 206


 9980 19f6 3F       		.byte	0x3f
 9981 19f7 00       		.byte	0
 9982 19f8 3C       		.uleb128 0x3c
 9983 19f9 1D060000 		.4byte	.LASF276
 9984 19fd 0D       		.byte	0xd
 9985 19fe 25       		.byte	0x25
 9986 19ff E8190000 		.4byte	0x19e8
 9987 1a03 05       		.uleb128 0x5
 9988 1a04 03       		.byte	0x3
 9989 1a05 00000000 		.4byte	displaystring
 9990 1a09 3C       		.uleb128 0x3c
 9991 1a0a 610B0000 		.4byte	.LASF277
 9992 1a0e 0D       		.byte	0xd
 9993 1a0f 26       		.byte	0x26
 9994 1a10 E8190000 		.4byte	0x19e8
 9995 1a14 05       		.uleb128 0x5
 9996 1a15 03       		.byte	0x3
 9997 1a16 00000000 		.4byte	line
 9998 1a1a 3C       		.uleb128 0x3c
 9999 1a1b 210B0000 		.4byte	.LASF278
 10000 1a1f 0D       		.byte	0xd
 10001 1a20 26       		.byte	0x26
 10002 1a21 E8190000 		.4byte	0x19e8
 10003 1a25 05       		.uleb128 0x5
 10004 1a26 03       		.byte	0x3
 10005 1a27 00000000 		.4byte	entry
 10006 1a2b 09       		.uleb128 0x9
 10007 1a2c B9080000 		.4byte	0x8b9
 10008 1a30 3B1A0000 		.4byte	0x1a3b
 10009 1a34 0A       		.uleb128 0xa
 10010 1a35 F5000000 		.4byte	0xf5
 10011 1a39 3F       		.byte	0x3f
 10012 1a3a 00       		.byte	0
 10013 1a3b 3C       		.uleb128 0x3c
 10014 1a3c CD040000 		.4byte	.LASF279
 10015 1a40 0D       		.byte	0xd
 10016 1a41 27       		.byte	0x27
 10017 1a42 2B1A0000 		.4byte	0x1a2b
 10018 1a46 05       		.uleb128 0x5
 10019 1a47 03       		.byte	0x3
 10020 1a48 00000000 		.4byte	usbBuffer
 10021 1a4c 3C       		.uleb128 0x3c
 10022 1a4d CB0C0000 		.4byte	.LASF280
 10023 1a51 0D       		.byte	0xd
 10024 1a52 3C       		.byte	0x3c
 10025 1a53 03090000 		.4byte	0x903
 10026 1a57 05       		.uleb128 0x5
 10027 1a58 03       		.byte	0x3
 10028 1a59 00000000 		.4byte	system_state
 10029 1a5d 3B       		.uleb128 0x3b
 10030 1a5e 6D617000 		.ascii	"map\000"
 10031 1a62 10       		.byte	0x10
 10032 1a63 02       		.byte	0x2
 10033 1a64 7F120000 		.4byte	0x127f
 10034 1a68 05       		.uleb128 0x5
 10035 1a69 03       		.byte	0x3
 10036 1a6a 00000000 		.4byte	map
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 207


 10037 1a6e 09       		.uleb128 0x9
 10038 1a6f 89000000 		.4byte	0x89
 10039 1a73 841A0000 		.4byte	0x1a84
 10040 1a77 0A       		.uleb128 0xa
 10041 1a78 F5000000 		.4byte	0xf5
 10042 1a7c 04       		.byte	0x4
 10043 1a7d 0A       		.uleb128 0xa
 10044 1a7e F5000000 		.4byte	0xf5
 10045 1a82 01       		.byte	0x1
 10046 1a83 00       		.byte	0
 10047 1a84 3C       		.uleb128 0x3c
 10048 1a85 EA000000 		.4byte	.LASF281
 10049 1a89 10       		.byte	0x10
 10050 1a8a 14       		.byte	0x14
 10051 1a8b 6E1A0000 		.4byte	0x1a6e
 10052 1a8f 05       		.uleb128 0x5
 10053 1a90 03       		.byte	0x3
 10054 1a91 00000000 		.4byte	food_list
 10055 1a95 3C       		.uleb128 0x3c
 10056 1a96 58050000 		.4byte	.LASF282
 10057 1a9a 05       		.byte	0x5
 10058 1a9b 66       		.byte	0x66
 10059 1a9c A61A0000 		.4byte	0x1aa6
 10060 1aa0 05       		.uleb128 0x5
 10061 1aa1 03       		.byte	0x3
 10062 1aa2 00000000 		.4byte	adc_flag
 10063 1aa6 3A       		.uleb128 0x3a
 10064 1aa7 89000000 		.4byte	0x89
 10065 1aab 09       		.uleb128 0x9
 10066 1aac D1080000 		.4byte	0x8d1
 10067 1ab0 BB1A0000 		.4byte	0x1abb
 10068 1ab4 0A       		.uleb128 0xa
 10069 1ab5 F5000000 		.4byte	0xf5
 10070 1ab9 05       		.byte	0x5
 10071 1aba 00       		.byte	0
 10072 1abb 3C       		.uleb128 0x3c
 10073 1abc B1020000 		.4byte	.LASF283
 10074 1ac0 05       		.byte	0x5
 10075 1ac1 67       		.byte	0x67
 10076 1ac2 AB1A0000 		.4byte	0x1aab
 10077 1ac6 05       		.uleb128 0x5
 10078 1ac7 03       		.byte	0x3
 10079 1ac8 00000000 		.4byte	sensor_readings
 10080 1acc 09       		.uleb128 0x9
 10081 1acd 89000000 		.4byte	0x89
 10082 1ad1 DC1A0000 		.4byte	0x1adc
 10083 1ad5 0A       		.uleb128 0xa
 10084 1ad6 F5000000 		.4byte	0xf5
 10085 1ada 05       		.byte	0x5
 10086 1adb 00       		.byte	0
 10087 1adc 3C       		.uleb128 0x3c
 10088 1add CA030000 		.4byte	.LASF284
 10089 1ae1 05       		.byte	0x5
 10090 1ae2 68       		.byte	0x68
 10091 1ae3 CC1A0000 		.4byte	0x1acc
 10092 1ae7 05       		.uleb128 0x5
 10093 1ae8 03       		.byte	0x3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 208


 10094 1ae9 00000000 		.4byte	adc_readings
 10095 1aed 3C       		.uleb128 0x3c
 10096 1aee B3000000 		.4byte	.LASF285
 10097 1af2 05       		.byte	0x5
 10098 1af3 69       		.byte	0x69
 10099 1af4 89000000 		.4byte	0x89
 10100 1af8 05       		.uleb128 0x5
 10101 1af9 03       		.byte	0x3
 10102 1afa 00000000 		.4byte	sample_count
 10103 1afe 3C       		.uleb128 0x3c
 10104 1aff 840B0000 		.4byte	.LASF286
 10105 1b03 05       		.byte	0x5
 10106 1b04 6B       		.byte	0x6b
 10107 1b05 A61A0000 		.4byte	0x1aa6
 10108 1b09 05       		.uleb128 0x5
 10109 1b0a 03       		.byte	0x3
 10110 1b0b 00000000 		.4byte	timer_flag
 10111 1b0f 3C       		.uleb128 0x3c
 10112 1b10 A1080000 		.4byte	.LASF287
 10113 1b14 05       		.byte	0x5
 10114 1b15 6C       		.byte	0x6c
 10115 1b16 A61A0000 		.4byte	0x1aa6
 10116 1b1a 05       		.uleb128 0x5
 10117 1b1b 03       		.byte	0x3
 10118 1b1c 00000000 		.4byte	countM1
 10119 1b20 3C       		.uleb128 0x3c
 10120 1b21 A9080000 		.4byte	.LASF288
 10121 1b25 05       		.byte	0x5
 10122 1b26 6D       		.byte	0x6d
 10123 1b27 A61A0000 		.4byte	0x1aa6
 10124 1b2b 05       		.uleb128 0x5
 10125 1b2c 03       		.byte	0x3
 10126 1b2d 00000000 		.4byte	countM2
 10127 1b31 3C       		.uleb128 0x3c
 10128 1b32 54010000 		.4byte	.LASF224
 10129 1b36 05       		.byte	0x5
 10130 1b37 6E       		.byte	0x6e
 10131 1b38 89000000 		.4byte	0x89
 10132 1b3c 05       		.uleb128 0x5
 10133 1b3d 03       		.byte	0x3
 10134 1b3e 00000000 		.4byte	prevCountM1
 10135 1b42 3C       		.uleb128 0x3c
 10136 1b43 76040000 		.4byte	.LASF225
 10137 1b47 05       		.byte	0x5
 10138 1b48 6F       		.byte	0x6f
 10139 1b49 89000000 		.4byte	0x89
 10140 1b4d 05       		.uleb128 0x5
 10141 1b4e 03       		.byte	0x3
 10142 1b4f 00000000 		.4byte	prevCountM2
 10143 1b53 00       		.byte	0
 10144              		.section	.debug_abbrev,"",%progbits
 10145              	.Ldebug_abbrev0:
 10146 0000 01       		.uleb128 0x1
 10147 0001 11       		.uleb128 0x11
 10148 0002 01       		.byte	0x1
 10149 0003 25       		.uleb128 0x25
 10150 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 209


 10151 0005 13       		.uleb128 0x13
 10152 0006 0B       		.uleb128 0xb
 10153 0007 03       		.uleb128 0x3
 10154 0008 0E       		.uleb128 0xe
 10155 0009 1B       		.uleb128 0x1b
 10156 000a 0E       		.uleb128 0xe
 10157 000b 55       		.uleb128 0x55
 10158 000c 17       		.uleb128 0x17
 10159 000d 11       		.uleb128 0x11
 10160 000e 01       		.uleb128 0x1
 10161 000f 10       		.uleb128 0x10
 10162 0010 17       		.uleb128 0x17
 10163 0011 00       		.byte	0
 10164 0012 00       		.byte	0
 10165 0013 02       		.uleb128 0x2
 10166 0014 16       		.uleb128 0x16
 10167 0015 00       		.byte	0
 10168 0016 03       		.uleb128 0x3
 10169 0017 0E       		.uleb128 0xe
 10170 0018 3A       		.uleb128 0x3a
 10171 0019 0B       		.uleb128 0xb
 10172 001a 3B       		.uleb128 0x3b
 10173 001b 0B       		.uleb128 0xb
 10174 001c 49       		.uleb128 0x49
 10175 001d 13       		.uleb128 0x13
 10176 001e 00       		.byte	0
 10177 001f 00       		.byte	0
 10178 0020 03       		.uleb128 0x3
 10179 0021 24       		.uleb128 0x24
 10180 0022 00       		.byte	0
 10181 0023 0B       		.uleb128 0xb
 10182 0024 0B       		.uleb128 0xb
 10183 0025 3E       		.uleb128 0x3e
 10184 0026 0B       		.uleb128 0xb
 10185 0027 03       		.uleb128 0x3
 10186 0028 0E       		.uleb128 0xe
 10187 0029 00       		.byte	0
 10188 002a 00       		.byte	0
 10189 002b 04       		.uleb128 0x4
 10190 002c 24       		.uleb128 0x24
 10191 002d 00       		.byte	0
 10192 002e 0B       		.uleb128 0xb
 10193 002f 0B       		.uleb128 0xb
 10194 0030 3E       		.uleb128 0x3e
 10195 0031 0B       		.uleb128 0xb
 10196 0032 03       		.uleb128 0x3
 10197 0033 08       		.uleb128 0x8
 10198 0034 00       		.byte	0
 10199 0035 00       		.byte	0
 10200 0036 05       		.uleb128 0x5
 10201 0037 0F       		.uleb128 0xf
 10202 0038 00       		.byte	0
 10203 0039 0B       		.uleb128 0xb
 10204 003a 0B       		.uleb128 0xb
 10205 003b 00       		.byte	0
 10206 003c 00       		.byte	0
 10207 003d 06       		.uleb128 0x6
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 210


 10208 003e 16       		.uleb128 0x16
 10209 003f 00       		.byte	0
 10210 0040 03       		.uleb128 0x3
 10211 0041 0E       		.uleb128 0xe
 10212 0042 3A       		.uleb128 0x3a
 10213 0043 0B       		.uleb128 0xb
 10214 0044 3B       		.uleb128 0x3b
 10215 0045 05       		.uleb128 0x5
 10216 0046 49       		.uleb128 0x49
 10217 0047 13       		.uleb128 0x13
 10218 0048 00       		.byte	0
 10219 0049 00       		.byte	0
 10220 004a 07       		.uleb128 0x7
 10221 004b 17       		.uleb128 0x17
 10222 004c 01       		.byte	0x1
 10223 004d 0B       		.uleb128 0xb
 10224 004e 0B       		.uleb128 0xb
 10225 004f 3A       		.uleb128 0x3a
 10226 0050 0B       		.uleb128 0xb
 10227 0051 3B       		.uleb128 0x3b
 10228 0052 0B       		.uleb128 0xb
 10229 0053 01       		.uleb128 0x1
 10230 0054 13       		.uleb128 0x13
 10231 0055 00       		.byte	0
 10232 0056 00       		.byte	0
 10233 0057 08       		.uleb128 0x8
 10234 0058 0D       		.uleb128 0xd
 10235 0059 00       		.byte	0
 10236 005a 03       		.uleb128 0x3
 10237 005b 0E       		.uleb128 0xe
 10238 005c 3A       		.uleb128 0x3a
 10239 005d 0B       		.uleb128 0xb
 10240 005e 3B       		.uleb128 0x3b
 10241 005f 0B       		.uleb128 0xb
 10242 0060 49       		.uleb128 0x49
 10243 0061 13       		.uleb128 0x13
 10244 0062 00       		.byte	0
 10245 0063 00       		.byte	0
 10246 0064 09       		.uleb128 0x9
 10247 0065 01       		.uleb128 0x1
 10248 0066 01       		.byte	0x1
 10249 0067 49       		.uleb128 0x49
 10250 0068 13       		.uleb128 0x13
 10251 0069 01       		.uleb128 0x1
 10252 006a 13       		.uleb128 0x13
 10253 006b 00       		.byte	0
 10254 006c 00       		.byte	0
 10255 006d 0A       		.uleb128 0xa
 10256 006e 21       		.uleb128 0x21
 10257 006f 00       		.byte	0
 10258 0070 49       		.uleb128 0x49
 10259 0071 13       		.uleb128 0x13
 10260 0072 2F       		.uleb128 0x2f
 10261 0073 0B       		.uleb128 0xb
 10262 0074 00       		.byte	0
 10263 0075 00       		.byte	0
 10264 0076 0B       		.uleb128 0xb
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 211


 10265 0077 13       		.uleb128 0x13
 10266 0078 01       		.byte	0x1
 10267 0079 0B       		.uleb128 0xb
 10268 007a 0B       		.uleb128 0xb
 10269 007b 3A       		.uleb128 0x3a
 10270 007c 0B       		.uleb128 0xb
 10271 007d 3B       		.uleb128 0x3b
 10272 007e 0B       		.uleb128 0xb
 10273 007f 01       		.uleb128 0x1
 10274 0080 13       		.uleb128 0x13
 10275 0081 00       		.byte	0
 10276 0082 00       		.byte	0
 10277 0083 0C       		.uleb128 0xc
 10278 0084 0D       		.uleb128 0xd
 10279 0085 00       		.byte	0
 10280 0086 03       		.uleb128 0x3
 10281 0087 0E       		.uleb128 0xe
 10282 0088 3A       		.uleb128 0x3a
 10283 0089 0B       		.uleb128 0xb
 10284 008a 3B       		.uleb128 0x3b
 10285 008b 0B       		.uleb128 0xb
 10286 008c 49       		.uleb128 0x49
 10287 008d 13       		.uleb128 0x13
 10288 008e 38       		.uleb128 0x38
 10289 008f 0B       		.uleb128 0xb
 10290 0090 00       		.byte	0
 10291 0091 00       		.byte	0
 10292 0092 0D       		.uleb128 0xd
 10293 0093 13       		.uleb128 0x13
 10294 0094 01       		.byte	0x1
 10295 0095 03       		.uleb128 0x3
 10296 0096 0E       		.uleb128 0xe
 10297 0097 0B       		.uleb128 0xb
 10298 0098 0B       		.uleb128 0xb
 10299 0099 3A       		.uleb128 0x3a
 10300 009a 0B       		.uleb128 0xb
 10301 009b 3B       		.uleb128 0x3b
 10302 009c 0B       		.uleb128 0xb
 10303 009d 01       		.uleb128 0x1
 10304 009e 13       		.uleb128 0x13
 10305 009f 00       		.byte	0
 10306 00a0 00       		.byte	0
 10307 00a1 0E       		.uleb128 0xe
 10308 00a2 0D       		.uleb128 0xd
 10309 00a3 00       		.byte	0
 10310 00a4 03       		.uleb128 0x3
 10311 00a5 08       		.uleb128 0x8
 10312 00a6 3A       		.uleb128 0x3a
 10313 00a7 0B       		.uleb128 0xb
 10314 00a8 3B       		.uleb128 0x3b
 10315 00a9 0B       		.uleb128 0xb
 10316 00aa 49       		.uleb128 0x49
 10317 00ab 13       		.uleb128 0x13
 10318 00ac 38       		.uleb128 0x38
 10319 00ad 0B       		.uleb128 0xb
 10320 00ae 00       		.byte	0
 10321 00af 00       		.byte	0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 212


 10322 00b0 0F       		.uleb128 0xf
 10323 00b1 0F       		.uleb128 0xf
 10324 00b2 00       		.byte	0
 10325 00b3 0B       		.uleb128 0xb
 10326 00b4 0B       		.uleb128 0xb
 10327 00b5 49       		.uleb128 0x49
 10328 00b6 13       		.uleb128 0x13
 10329 00b7 00       		.byte	0
 10330 00b8 00       		.byte	0
 10331 00b9 10       		.uleb128 0x10
 10332 00ba 13       		.uleb128 0x13
 10333 00bb 01       		.byte	0x1
 10334 00bc 03       		.uleb128 0x3
 10335 00bd 0E       		.uleb128 0xe
 10336 00be 0B       		.uleb128 0xb
 10337 00bf 05       		.uleb128 0x5
 10338 00c0 3A       		.uleb128 0x3a
 10339 00c1 0B       		.uleb128 0xb
 10340 00c2 3B       		.uleb128 0x3b
 10341 00c3 0B       		.uleb128 0xb
 10342 00c4 01       		.uleb128 0x1
 10343 00c5 13       		.uleb128 0x13
 10344 00c6 00       		.byte	0
 10345 00c7 00       		.byte	0
 10346 00c8 11       		.uleb128 0x11
 10347 00c9 0D       		.uleb128 0xd
 10348 00ca 00       		.byte	0
 10349 00cb 03       		.uleb128 0x3
 10350 00cc 0E       		.uleb128 0xe
 10351 00cd 3A       		.uleb128 0x3a
 10352 00ce 0B       		.uleb128 0xb
 10353 00cf 3B       		.uleb128 0x3b
 10354 00d0 0B       		.uleb128 0xb
 10355 00d1 49       		.uleb128 0x49
 10356 00d2 13       		.uleb128 0x13
 10357 00d3 38       		.uleb128 0x38
 10358 00d4 05       		.uleb128 0x5
 10359 00d5 00       		.byte	0
 10360 00d6 00       		.byte	0
 10361 00d7 12       		.uleb128 0x12
 10362 00d8 15       		.uleb128 0x15
 10363 00d9 00       		.byte	0
 10364 00da 27       		.uleb128 0x27
 10365 00db 19       		.uleb128 0x19
 10366 00dc 00       		.byte	0
 10367 00dd 00       		.byte	0
 10368 00de 13       		.uleb128 0x13
 10369 00df 15       		.uleb128 0x15
 10370 00e0 01       		.byte	0x1
 10371 00e1 27       		.uleb128 0x27
 10372 00e2 19       		.uleb128 0x19
 10373 00e3 49       		.uleb128 0x49
 10374 00e4 13       		.uleb128 0x13
 10375 00e5 01       		.uleb128 0x1
 10376 00e6 13       		.uleb128 0x13
 10377 00e7 00       		.byte	0
 10378 00e8 00       		.byte	0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 213


 10379 00e9 14       		.uleb128 0x14
 10380 00ea 05       		.uleb128 0x5
 10381 00eb 00       		.byte	0
 10382 00ec 49       		.uleb128 0x49
 10383 00ed 13       		.uleb128 0x13
 10384 00ee 00       		.byte	0
 10385 00ef 00       		.byte	0
 10386 00f0 15       		.uleb128 0x15
 10387 00f1 13       		.uleb128 0x13
 10388 00f2 01       		.byte	0x1
 10389 00f3 03       		.uleb128 0x3
 10390 00f4 0E       		.uleb128 0xe
 10391 00f5 0B       		.uleb128 0xb
 10392 00f6 05       		.uleb128 0x5
 10393 00f7 3A       		.uleb128 0x3a
 10394 00f8 0B       		.uleb128 0xb
 10395 00f9 3B       		.uleb128 0x3b
 10396 00fa 05       		.uleb128 0x5
 10397 00fb 01       		.uleb128 0x1
 10398 00fc 13       		.uleb128 0x13
 10399 00fd 00       		.byte	0
 10400 00fe 00       		.byte	0
 10401 00ff 16       		.uleb128 0x16
 10402 0100 0D       		.uleb128 0xd
 10403 0101 00       		.byte	0
 10404 0102 03       		.uleb128 0x3
 10405 0103 0E       		.uleb128 0xe
 10406 0104 3A       		.uleb128 0x3a
 10407 0105 0B       		.uleb128 0xb
 10408 0106 3B       		.uleb128 0x3b
 10409 0107 05       		.uleb128 0x5
 10410 0108 49       		.uleb128 0x49
 10411 0109 13       		.uleb128 0x13
 10412 010a 38       		.uleb128 0x38
 10413 010b 0B       		.uleb128 0xb
 10414 010c 00       		.byte	0
 10415 010d 00       		.byte	0
 10416 010e 17       		.uleb128 0x17
 10417 010f 0D       		.uleb128 0xd
 10418 0110 00       		.byte	0
 10419 0111 03       		.uleb128 0x3
 10420 0112 0E       		.uleb128 0xe
 10421 0113 3A       		.uleb128 0x3a
 10422 0114 0B       		.uleb128 0xb
 10423 0115 3B       		.uleb128 0x3b
 10424 0116 05       		.uleb128 0x5
 10425 0117 49       		.uleb128 0x49
 10426 0118 13       		.uleb128 0x13
 10427 0119 38       		.uleb128 0x38
 10428 011a 05       		.uleb128 0x5
 10429 011b 00       		.byte	0
 10430 011c 00       		.byte	0
 10431 011d 18       		.uleb128 0x18
 10432 011e 26       		.uleb128 0x26
 10433 011f 00       		.byte	0
 10434 0120 49       		.uleb128 0x49
 10435 0121 13       		.uleb128 0x13
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 214


 10436 0122 00       		.byte	0
 10437 0123 00       		.byte	0
 10438 0124 19       		.uleb128 0x19
 10439 0125 13       		.uleb128 0x13
 10440 0126 01       		.byte	0x1
 10441 0127 03       		.uleb128 0x3
 10442 0128 0E       		.uleb128 0xe
 10443 0129 0B       		.uleb128 0xb
 10444 012a 0B       		.uleb128 0xb
 10445 012b 3A       		.uleb128 0x3a
 10446 012c 0B       		.uleb128 0xb
 10447 012d 3B       		.uleb128 0x3b
 10448 012e 05       		.uleb128 0x5
 10449 012f 01       		.uleb128 0x1
 10450 0130 13       		.uleb128 0x13
 10451 0131 00       		.byte	0
 10452 0132 00       		.byte	0
 10453 0133 1A       		.uleb128 0x1a
 10454 0134 13       		.uleb128 0x13
 10455 0135 01       		.byte	0x1
 10456 0136 0B       		.uleb128 0xb
 10457 0137 0B       		.uleb128 0xb
 10458 0138 3A       		.uleb128 0x3a
 10459 0139 0B       		.uleb128 0xb
 10460 013a 3B       		.uleb128 0x3b
 10461 013b 05       		.uleb128 0x5
 10462 013c 01       		.uleb128 0x1
 10463 013d 13       		.uleb128 0x13
 10464 013e 00       		.byte	0
 10465 013f 00       		.byte	0
 10466 0140 1B       		.uleb128 0x1b
 10467 0141 17       		.uleb128 0x17
 10468 0142 01       		.byte	0x1
 10469 0143 0B       		.uleb128 0xb
 10470 0144 0B       		.uleb128 0xb
 10471 0145 3A       		.uleb128 0x3a
 10472 0146 0B       		.uleb128 0xb
 10473 0147 3B       		.uleb128 0x3b
 10474 0148 05       		.uleb128 0x5
 10475 0149 01       		.uleb128 0x1
 10476 014a 13       		.uleb128 0x13
 10477 014b 00       		.byte	0
 10478 014c 00       		.byte	0
 10479 014d 1C       		.uleb128 0x1c
 10480 014e 0D       		.uleb128 0xd
 10481 014f 00       		.byte	0
 10482 0150 03       		.uleb128 0x3
 10483 0151 0E       		.uleb128 0xe
 10484 0152 3A       		.uleb128 0x3a
 10485 0153 0B       		.uleb128 0xb
 10486 0154 3B       		.uleb128 0x3b
 10487 0155 05       		.uleb128 0x5
 10488 0156 49       		.uleb128 0x49
 10489 0157 13       		.uleb128 0x13
 10490 0158 00       		.byte	0
 10491 0159 00       		.byte	0
 10492 015a 1D       		.uleb128 0x1d
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 215


 10493 015b 15       		.uleb128 0x15
 10494 015c 01       		.byte	0x1
 10495 015d 27       		.uleb128 0x27
 10496 015e 19       		.uleb128 0x19
 10497 015f 01       		.uleb128 0x1
 10498 0160 13       		.uleb128 0x13
 10499 0161 00       		.byte	0
 10500 0162 00       		.byte	0
 10501 0163 1E       		.uleb128 0x1e
 10502 0164 2E       		.uleb128 0x2e
 10503 0165 01       		.byte	0x1
 10504 0166 3F       		.uleb128 0x3f
 10505 0167 19       		.uleb128 0x19
 10506 0168 03       		.uleb128 0x3
 10507 0169 0E       		.uleb128 0xe
 10508 016a 3A       		.uleb128 0x3a
 10509 016b 0B       		.uleb128 0xb
 10510 016c 3B       		.uleb128 0x3b
 10511 016d 0B       		.uleb128 0xb
 10512 016e 11       		.uleb128 0x11
 10513 016f 01       		.uleb128 0x1
 10514 0170 12       		.uleb128 0x12
 10515 0171 06       		.uleb128 0x6
 10516 0172 40       		.uleb128 0x40
 10517 0173 18       		.uleb128 0x18
 10518 0174 9642     		.uleb128 0x2116
 10519 0176 19       		.uleb128 0x19
 10520 0177 01       		.uleb128 0x1
 10521 0178 13       		.uleb128 0x13
 10522 0179 00       		.byte	0
 10523 017a 00       		.byte	0
 10524 017b 1F       		.uleb128 0x1f
 10525 017c 34       		.uleb128 0x34
 10526 017d 00       		.byte	0
 10527 017e 03       		.uleb128 0x3
 10528 017f 08       		.uleb128 0x8
 10529 0180 3A       		.uleb128 0x3a
 10530 0181 0B       		.uleb128 0xb
 10531 0182 3B       		.uleb128 0x3b
 10532 0183 0B       		.uleb128 0xb
 10533 0184 49       		.uleb128 0x49
 10534 0185 13       		.uleb128 0x13
 10535 0186 02       		.uleb128 0x2
 10536 0187 18       		.uleb128 0x18
 10537 0188 00       		.byte	0
 10538 0189 00       		.byte	0
 10539 018a 20       		.uleb128 0x20
 10540 018b 2E       		.uleb128 0x2e
 10541 018c 01       		.byte	0x1
 10542 018d 3F       		.uleb128 0x3f
 10543 018e 19       		.uleb128 0x19
 10544 018f 03       		.uleb128 0x3
 10545 0190 08       		.uleb128 0x8
 10546 0191 3A       		.uleb128 0x3a
 10547 0192 0B       		.uleb128 0xb
 10548 0193 3B       		.uleb128 0x3b
 10549 0194 0B       		.uleb128 0xb
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 216


 10550 0195 27       		.uleb128 0x27
 10551 0196 19       		.uleb128 0x19
 10552 0197 49       		.uleb128 0x49
 10553 0198 13       		.uleb128 0x13
 10554 0199 11       		.uleb128 0x11
 10555 019a 01       		.uleb128 0x1
 10556 019b 12       		.uleb128 0x12
 10557 019c 06       		.uleb128 0x6
 10558 019d 40       		.uleb128 0x40
 10559 019e 18       		.uleb128 0x18
 10560 019f 9742     		.uleb128 0x2117
 10561 01a1 19       		.uleb128 0x19
 10562 01a2 01       		.uleb128 0x1
 10563 01a3 13       		.uleb128 0x13
 10564 01a4 00       		.byte	0
 10565 01a5 00       		.byte	0
 10566 01a6 21       		.uleb128 0x21
 10567 01a7 05       		.uleb128 0x5
 10568 01a8 00       		.byte	0
 10569 01a9 03       		.uleb128 0x3
 10570 01aa 08       		.uleb128 0x8
 10571 01ab 3A       		.uleb128 0x3a
 10572 01ac 0B       		.uleb128 0xb
 10573 01ad 3B       		.uleb128 0x3b
 10574 01ae 0B       		.uleb128 0xb
 10575 01af 49       		.uleb128 0x49
 10576 01b0 13       		.uleb128 0x13
 10577 01b1 02       		.uleb128 0x2
 10578 01b2 18       		.uleb128 0x18
 10579 01b3 00       		.byte	0
 10580 01b4 00       		.byte	0
 10581 01b5 22       		.uleb128 0x22
 10582 01b6 05       		.uleb128 0x5
 10583 01b7 00       		.byte	0
 10584 01b8 03       		.uleb128 0x3
 10585 01b9 0E       		.uleb128 0xe
 10586 01ba 3A       		.uleb128 0x3a
 10587 01bb 0B       		.uleb128 0xb
 10588 01bc 3B       		.uleb128 0x3b
 10589 01bd 0B       		.uleb128 0xb
 10590 01be 49       		.uleb128 0x49
 10591 01bf 13       		.uleb128 0x13
 10592 01c0 02       		.uleb128 0x2
 10593 01c1 18       		.uleb128 0x18
 10594 01c2 00       		.byte	0
 10595 01c3 00       		.byte	0
 10596 01c4 23       		.uleb128 0x23
 10597 01c5 2E       		.uleb128 0x2e
 10598 01c6 01       		.byte	0x1
 10599 01c7 3F       		.uleb128 0x3f
 10600 01c8 19       		.uleb128 0x19
 10601 01c9 03       		.uleb128 0x3
 10602 01ca 0E       		.uleb128 0xe
 10603 01cb 3A       		.uleb128 0x3a
 10604 01cc 0B       		.uleb128 0xb
 10605 01cd 3B       		.uleb128 0x3b
 10606 01ce 0B       		.uleb128 0xb
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 217


 10607 01cf 27       		.uleb128 0x27
 10608 01d0 19       		.uleb128 0x19
 10609 01d1 11       		.uleb128 0x11
 10610 01d2 01       		.uleb128 0x1
 10611 01d3 12       		.uleb128 0x12
 10612 01d4 06       		.uleb128 0x6
 10613 01d5 40       		.uleb128 0x40
 10614 01d6 18       		.uleb128 0x18
 10615 01d7 9742     		.uleb128 0x2117
 10616 01d9 19       		.uleb128 0x19
 10617 01da 01       		.uleb128 0x1
 10618 01db 13       		.uleb128 0x13
 10619 01dc 00       		.byte	0
 10620 01dd 00       		.byte	0
 10621 01de 24       		.uleb128 0x24
 10622 01df 2E       		.uleb128 0x2e
 10623 01e0 01       		.byte	0x1
 10624 01e1 3F       		.uleb128 0x3f
 10625 01e2 19       		.uleb128 0x19
 10626 01e3 03       		.uleb128 0x3
 10627 01e4 0E       		.uleb128 0xe
 10628 01e5 3A       		.uleb128 0x3a
 10629 01e6 0B       		.uleb128 0xb
 10630 01e7 3B       		.uleb128 0x3b
 10631 01e8 0B       		.uleb128 0xb
 10632 01e9 27       		.uleb128 0x27
 10633 01ea 19       		.uleb128 0x19
 10634 01eb 49       		.uleb128 0x49
 10635 01ec 13       		.uleb128 0x13
 10636 01ed 11       		.uleb128 0x11
 10637 01ee 01       		.uleb128 0x1
 10638 01ef 12       		.uleb128 0x12
 10639 01f0 06       		.uleb128 0x6
 10640 01f1 40       		.uleb128 0x40
 10641 01f2 18       		.uleb128 0x18
 10642 01f3 9742     		.uleb128 0x2117
 10643 01f5 19       		.uleb128 0x19
 10644 01f6 01       		.uleb128 0x1
 10645 01f7 13       		.uleb128 0x13
 10646 01f8 00       		.byte	0
 10647 01f9 00       		.byte	0
 10648 01fa 25       		.uleb128 0x25
 10649 01fb 2E       		.uleb128 0x2e
 10650 01fc 01       		.byte	0x1
 10651 01fd 3F       		.uleb128 0x3f
 10652 01fe 19       		.uleb128 0x19
 10653 01ff 03       		.uleb128 0x3
 10654 0200 0E       		.uleb128 0xe
 10655 0201 3A       		.uleb128 0x3a
 10656 0202 0B       		.uleb128 0xb
 10657 0203 3B       		.uleb128 0x3b
 10658 0204 0B       		.uleb128 0xb
 10659 0205 27       		.uleb128 0x27
 10660 0206 19       		.uleb128 0x19
 10661 0207 11       		.uleb128 0x11
 10662 0208 01       		.uleb128 0x1
 10663 0209 12       		.uleb128 0x12
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 218


 10664 020a 06       		.uleb128 0x6
 10665 020b 40       		.uleb128 0x40
 10666 020c 18       		.uleb128 0x18
 10667 020d 9642     		.uleb128 0x2116
 10668 020f 19       		.uleb128 0x19
 10669 0210 01       		.uleb128 0x1
 10670 0211 13       		.uleb128 0x13
 10671 0212 00       		.byte	0
 10672 0213 00       		.byte	0
 10673 0214 26       		.uleb128 0x26
 10674 0215 34       		.uleb128 0x34
 10675 0216 00       		.byte	0
 10676 0217 03       		.uleb128 0x3
 10677 0218 0E       		.uleb128 0xe
 10678 0219 3A       		.uleb128 0x3a
 10679 021a 0B       		.uleb128 0xb
 10680 021b 3B       		.uleb128 0x3b
 10681 021c 0B       		.uleb128 0xb
 10682 021d 49       		.uleb128 0x49
 10683 021e 13       		.uleb128 0x13
 10684 021f 02       		.uleb128 0x2
 10685 0220 18       		.uleb128 0x18
 10686 0221 00       		.byte	0
 10687 0222 00       		.byte	0
 10688 0223 27       		.uleb128 0x27
 10689 0224 0B       		.uleb128 0xb
 10690 0225 01       		.byte	0x1
 10691 0226 11       		.uleb128 0x11
 10692 0227 01       		.uleb128 0x1
 10693 0228 12       		.uleb128 0x12
 10694 0229 06       		.uleb128 0x6
 10695 022a 00       		.byte	0
 10696 022b 00       		.byte	0
 10697 022c 28       		.uleb128 0x28
 10698 022d 2E       		.uleb128 0x2e
 10699 022e 01       		.byte	0x1
 10700 022f 3F       		.uleb128 0x3f
 10701 0230 19       		.uleb128 0x19
 10702 0231 03       		.uleb128 0x3
 10703 0232 0E       		.uleb128 0xe
 10704 0233 3A       		.uleb128 0x3a
 10705 0234 0B       		.uleb128 0xb
 10706 0235 3B       		.uleb128 0x3b
 10707 0236 05       		.uleb128 0x5
 10708 0237 27       		.uleb128 0x27
 10709 0238 19       		.uleb128 0x19
 10710 0239 49       		.uleb128 0x49
 10711 023a 13       		.uleb128 0x13
 10712 023b 11       		.uleb128 0x11
 10713 023c 01       		.uleb128 0x1
 10714 023d 12       		.uleb128 0x12
 10715 023e 06       		.uleb128 0x6
 10716 023f 40       		.uleb128 0x40
 10717 0240 18       		.uleb128 0x18
 10718 0241 9642     		.uleb128 0x2116
 10719 0243 19       		.uleb128 0x19
 10720 0244 01       		.uleb128 0x1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 219


 10721 0245 13       		.uleb128 0x13
 10722 0246 00       		.byte	0
 10723 0247 00       		.byte	0
 10724 0248 29       		.uleb128 0x29
 10725 0249 05       		.uleb128 0x5
 10726 024a 00       		.byte	0
 10727 024b 03       		.uleb128 0x3
 10728 024c 08       		.uleb128 0x8
 10729 024d 3A       		.uleb128 0x3a
 10730 024e 0B       		.uleb128 0xb
 10731 024f 3B       		.uleb128 0x3b
 10732 0250 05       		.uleb128 0x5
 10733 0251 49       		.uleb128 0x49
 10734 0252 13       		.uleb128 0x13
 10735 0253 02       		.uleb128 0x2
 10736 0254 18       		.uleb128 0x18
 10737 0255 00       		.byte	0
 10738 0256 00       		.byte	0
 10739 0257 2A       		.uleb128 0x2a
 10740 0258 34       		.uleb128 0x34
 10741 0259 00       		.byte	0
 10742 025a 03       		.uleb128 0x3
 10743 025b 08       		.uleb128 0x8
 10744 025c 3A       		.uleb128 0x3a
 10745 025d 0B       		.uleb128 0xb
 10746 025e 3B       		.uleb128 0x3b
 10747 025f 05       		.uleb128 0x5
 10748 0260 49       		.uleb128 0x49
 10749 0261 13       		.uleb128 0x13
 10750 0262 02       		.uleb128 0x2
 10751 0263 18       		.uleb128 0x18
 10752 0264 00       		.byte	0
 10753 0265 00       		.byte	0
 10754 0266 2B       		.uleb128 0x2b
 10755 0267 34       		.uleb128 0x34
 10756 0268 00       		.byte	0
 10757 0269 03       		.uleb128 0x3
 10758 026a 0E       		.uleb128 0xe
 10759 026b 3A       		.uleb128 0x3a
 10760 026c 0B       		.uleb128 0xb
 10761 026d 3B       		.uleb128 0x3b
 10762 026e 05       		.uleb128 0x5
 10763 026f 49       		.uleb128 0x49
 10764 0270 13       		.uleb128 0x13
 10765 0271 02       		.uleb128 0x2
 10766 0272 18       		.uleb128 0x18
 10767 0273 00       		.byte	0
 10768 0274 00       		.byte	0
 10769 0275 2C       		.uleb128 0x2c
 10770 0276 2E       		.uleb128 0x2e
 10771 0277 01       		.byte	0x1
 10772 0278 3F       		.uleb128 0x3f
 10773 0279 19       		.uleb128 0x19
 10774 027a 03       		.uleb128 0x3
 10775 027b 0E       		.uleb128 0xe
 10776 027c 3A       		.uleb128 0x3a
 10777 027d 0B       		.uleb128 0xb
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 220


 10778 027e 3B       		.uleb128 0x3b
 10779 027f 05       		.uleb128 0x5
 10780 0280 27       		.uleb128 0x27
 10781 0281 19       		.uleb128 0x19
 10782 0282 49       		.uleb128 0x49
 10783 0283 13       		.uleb128 0x13
 10784 0284 11       		.uleb128 0x11
 10785 0285 01       		.uleb128 0x1
 10786 0286 12       		.uleb128 0x12
 10787 0287 06       		.uleb128 0x6
 10788 0288 40       		.uleb128 0x40
 10789 0289 18       		.uleb128 0x18
 10790 028a 9742     		.uleb128 0x2117
 10791 028c 19       		.uleb128 0x19
 10792 028d 01       		.uleb128 0x1
 10793 028e 13       		.uleb128 0x13
 10794 028f 00       		.byte	0
 10795 0290 00       		.byte	0
 10796 0291 2D       		.uleb128 0x2d
 10797 0292 05       		.uleb128 0x5
 10798 0293 00       		.byte	0
 10799 0294 03       		.uleb128 0x3
 10800 0295 0E       		.uleb128 0xe
 10801 0296 3A       		.uleb128 0x3a
 10802 0297 0B       		.uleb128 0xb
 10803 0298 3B       		.uleb128 0x3b
 10804 0299 05       		.uleb128 0x5
 10805 029a 49       		.uleb128 0x49
 10806 029b 13       		.uleb128 0x13
 10807 029c 02       		.uleb128 0x2
 10808 029d 18       		.uleb128 0x18
 10809 029e 00       		.byte	0
 10810 029f 00       		.byte	0
 10811 02a0 2E       		.uleb128 0x2e
 10812 02a1 21       		.uleb128 0x21
 10813 02a2 00       		.byte	0
 10814 02a3 49       		.uleb128 0x49
 10815 02a4 13       		.uleb128 0x13
 10816 02a5 2F       		.uleb128 0x2f
 10817 02a6 05       		.uleb128 0x5
 10818 02a7 00       		.byte	0
 10819 02a8 00       		.byte	0
 10820 02a9 2F       		.uleb128 0x2f
 10821 02aa 2E       		.uleb128 0x2e
 10822 02ab 01       		.byte	0x1
 10823 02ac 3F       		.uleb128 0x3f
 10824 02ad 19       		.uleb128 0x19
 10825 02ae 03       		.uleb128 0x3
 10826 02af 08       		.uleb128 0x8
 10827 02b0 3A       		.uleb128 0x3a
 10828 02b1 0B       		.uleb128 0xb
 10829 02b2 3B       		.uleb128 0x3b
 10830 02b3 0B       		.uleb128 0xb
 10831 02b4 27       		.uleb128 0x27
 10832 02b5 19       		.uleb128 0x19
 10833 02b6 11       		.uleb128 0x11
 10834 02b7 01       		.uleb128 0x1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 221


 10835 02b8 12       		.uleb128 0x12
 10836 02b9 06       		.uleb128 0x6
 10837 02ba 40       		.uleb128 0x40
 10838 02bb 18       		.uleb128 0x18
 10839 02bc 9642     		.uleb128 0x2116
 10840 02be 19       		.uleb128 0x19
 10841 02bf 01       		.uleb128 0x1
 10842 02c0 13       		.uleb128 0x13
 10843 02c1 00       		.byte	0
 10844 02c2 00       		.byte	0
 10845 02c3 30       		.uleb128 0x30
 10846 02c4 2E       		.uleb128 0x2e
 10847 02c5 01       		.byte	0x1
 10848 02c6 3F       		.uleb128 0x3f
 10849 02c7 19       		.uleb128 0x19
 10850 02c8 03       		.uleb128 0x3
 10851 02c9 0E       		.uleb128 0xe
 10852 02ca 3A       		.uleb128 0x3a
 10853 02cb 0B       		.uleb128 0xb
 10854 02cc 3B       		.uleb128 0x3b
 10855 02cd 0B       		.uleb128 0xb
 10856 02ce 27       		.uleb128 0x27
 10857 02cf 19       		.uleb128 0x19
 10858 02d0 49       		.uleb128 0x49
 10859 02d1 13       		.uleb128 0x13
 10860 02d2 11       		.uleb128 0x11
 10861 02d3 01       		.uleb128 0x1
 10862 02d4 12       		.uleb128 0x12
 10863 02d5 06       		.uleb128 0x6
 10864 02d6 40       		.uleb128 0x40
 10865 02d7 18       		.uleb128 0x18
 10866 02d8 9642     		.uleb128 0x2116
 10867 02da 19       		.uleb128 0x19
 10868 02db 01       		.uleb128 0x1
 10869 02dc 13       		.uleb128 0x13
 10870 02dd 00       		.byte	0
 10871 02de 00       		.byte	0
 10872 02df 31       		.uleb128 0x31
 10873 02e0 0B       		.uleb128 0xb
 10874 02e1 01       		.byte	0x1
 10875 02e2 55       		.uleb128 0x55
 10876 02e3 17       		.uleb128 0x17
 10877 02e4 00       		.byte	0
 10878 02e5 00       		.byte	0
 10879 02e6 32       		.uleb128 0x32
 10880 02e7 2E       		.uleb128 0x2e
 10881 02e8 00       		.byte	0
 10882 02e9 3F       		.uleb128 0x3f
 10883 02ea 19       		.uleb128 0x19
 10884 02eb 03       		.uleb128 0x3
 10885 02ec 0E       		.uleb128 0xe
 10886 02ed 3A       		.uleb128 0x3a
 10887 02ee 0B       		.uleb128 0xb
 10888 02ef 3B       		.uleb128 0x3b
 10889 02f0 0B       		.uleb128 0xb
 10890 02f1 27       		.uleb128 0x27
 10891 02f2 19       		.uleb128 0x19
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 222


 10892 02f3 11       		.uleb128 0x11
 10893 02f4 01       		.uleb128 0x1
 10894 02f5 12       		.uleb128 0x12
 10895 02f6 06       		.uleb128 0x6
 10896 02f7 40       		.uleb128 0x40
 10897 02f8 18       		.uleb128 0x18
 10898 02f9 9642     		.uleb128 0x2116
 10899 02fb 19       		.uleb128 0x19
 10900 02fc 00       		.byte	0
 10901 02fd 00       		.byte	0
 10902 02fe 33       		.uleb128 0x33
 10903 02ff 2E       		.uleb128 0x2e
 10904 0300 00       		.byte	0
 10905 0301 3F       		.uleb128 0x3f
 10906 0302 19       		.uleb128 0x19
 10907 0303 03       		.uleb128 0x3
 10908 0304 0E       		.uleb128 0xe
 10909 0305 3A       		.uleb128 0x3a
 10910 0306 0B       		.uleb128 0xb
 10911 0307 3B       		.uleb128 0x3b
 10912 0308 0B       		.uleb128 0xb
 10913 0309 27       		.uleb128 0x27
 10914 030a 19       		.uleb128 0x19
 10915 030b 11       		.uleb128 0x11
 10916 030c 01       		.uleb128 0x1
 10917 030d 12       		.uleb128 0x12
 10918 030e 06       		.uleb128 0x6
 10919 030f 40       		.uleb128 0x40
 10920 0310 18       		.uleb128 0x18
 10921 0311 9742     		.uleb128 0x2117
 10922 0313 19       		.uleb128 0x19
 10923 0314 00       		.byte	0
 10924 0315 00       		.byte	0
 10925 0316 34       		.uleb128 0x34
 10926 0317 2E       		.uleb128 0x2e
 10927 0318 01       		.byte	0x1
 10928 0319 3F       		.uleb128 0x3f
 10929 031a 19       		.uleb128 0x19
 10930 031b 03       		.uleb128 0x3
 10931 031c 0E       		.uleb128 0xe
 10932 031d 3A       		.uleb128 0x3a
 10933 031e 0B       		.uleb128 0xb
 10934 031f 3B       		.uleb128 0x3b
 10935 0320 0B       		.uleb128 0xb
 10936 0321 49       		.uleb128 0x49
 10937 0322 13       		.uleb128 0x13
 10938 0323 11       		.uleb128 0x11
 10939 0324 01       		.uleb128 0x1
 10940 0325 12       		.uleb128 0x12
 10941 0326 06       		.uleb128 0x6
 10942 0327 40       		.uleb128 0x40
 10943 0328 18       		.uleb128 0x18
 10944 0329 9642     		.uleb128 0x2116
 10945 032b 19       		.uleb128 0x19
 10946 032c 01       		.uleb128 0x1
 10947 032d 13       		.uleb128 0x13
 10948 032e 00       		.byte	0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 223


 10949 032f 00       		.byte	0
 10950 0330 35       		.uleb128 0x35
 10951 0331 2E       		.uleb128 0x2e
 10952 0332 01       		.byte	0x1
 10953 0333 3F       		.uleb128 0x3f
 10954 0334 19       		.uleb128 0x19
 10955 0335 03       		.uleb128 0x3
 10956 0336 0E       		.uleb128 0xe
 10957 0337 3A       		.uleb128 0x3a
 10958 0338 0B       		.uleb128 0xb
 10959 0339 3B       		.uleb128 0x3b
 10960 033a 05       		.uleb128 0x5
 10961 033b 11       		.uleb128 0x11
 10962 033c 01       		.uleb128 0x1
 10963 033d 12       		.uleb128 0x12
 10964 033e 06       		.uleb128 0x6
 10965 033f 40       		.uleb128 0x40
 10966 0340 18       		.uleb128 0x18
 10967 0341 9642     		.uleb128 0x2116
 10968 0343 19       		.uleb128 0x19
 10969 0344 01       		.uleb128 0x1
 10970 0345 13       		.uleb128 0x13
 10971 0346 00       		.byte	0
 10972 0347 00       		.byte	0
 10973 0348 36       		.uleb128 0x36
 10974 0349 2E       		.uleb128 0x2e
 10975 034a 01       		.byte	0x1
 10976 034b 3F       		.uleb128 0x3f
 10977 034c 19       		.uleb128 0x19
 10978 034d 03       		.uleb128 0x3
 10979 034e 0E       		.uleb128 0xe
 10980 034f 3A       		.uleb128 0x3a
 10981 0350 0B       		.uleb128 0xb
 10982 0351 3B       		.uleb128 0x3b
 10983 0352 05       		.uleb128 0x5
 10984 0353 27       		.uleb128 0x27
 10985 0354 19       		.uleb128 0x19
 10986 0355 11       		.uleb128 0x11
 10987 0356 01       		.uleb128 0x1
 10988 0357 12       		.uleb128 0x12
 10989 0358 06       		.uleb128 0x6
 10990 0359 40       		.uleb128 0x40
 10991 035a 18       		.uleb128 0x18
 10992 035b 9642     		.uleb128 0x2116
 10993 035d 19       		.uleb128 0x19
 10994 035e 01       		.uleb128 0x1
 10995 035f 13       		.uleb128 0x13
 10996 0360 00       		.byte	0
 10997 0361 00       		.byte	0
 10998 0362 37       		.uleb128 0x37
 10999 0363 2E       		.uleb128 0x2e
 11000 0364 00       		.byte	0
 11001 0365 3F       		.uleb128 0x3f
 11002 0366 19       		.uleb128 0x19
 11003 0367 03       		.uleb128 0x3
 11004 0368 0E       		.uleb128 0xe
 11005 0369 3A       		.uleb128 0x3a
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 224


 11006 036a 0B       		.uleb128 0xb
 11007 036b 3B       		.uleb128 0x3b
 11008 036c 05       		.uleb128 0x5
 11009 036d 11       		.uleb128 0x11
 11010 036e 01       		.uleb128 0x1
 11011 036f 12       		.uleb128 0x12
 11012 0370 06       		.uleb128 0x6
 11013 0371 40       		.uleb128 0x40
 11014 0372 18       		.uleb128 0x18
 11015 0373 9642     		.uleb128 0x2116
 11016 0375 19       		.uleb128 0x19
 11017 0376 00       		.byte	0
 11018 0377 00       		.byte	0
 11019 0378 38       		.uleb128 0x38
 11020 0379 2E       		.uleb128 0x2e
 11021 037a 01       		.byte	0x1
 11022 037b 3F       		.uleb128 0x3f
 11023 037c 19       		.uleb128 0x19
 11024 037d 03       		.uleb128 0x3
 11025 037e 0E       		.uleb128 0xe
 11026 037f 3A       		.uleb128 0x3a
 11027 0380 0B       		.uleb128 0xb
 11028 0381 3B       		.uleb128 0x3b
 11029 0382 05       		.uleb128 0x5
 11030 0383 27       		.uleb128 0x27
 11031 0384 19       		.uleb128 0x19
 11032 0385 11       		.uleb128 0x11
 11033 0386 01       		.uleb128 0x1
 11034 0387 12       		.uleb128 0x12
 11035 0388 06       		.uleb128 0x6
 11036 0389 40       		.uleb128 0x40
 11037 038a 18       		.uleb128 0x18
 11038 038b 9742     		.uleb128 0x2117
 11039 038d 19       		.uleb128 0x19
 11040 038e 01       		.uleb128 0x1
 11041 038f 13       		.uleb128 0x13
 11042 0390 00       		.byte	0
 11043 0391 00       		.byte	0
 11044 0392 39       		.uleb128 0x39
 11045 0393 34       		.uleb128 0x34
 11046 0394 00       		.byte	0
 11047 0395 03       		.uleb128 0x3
 11048 0396 0E       		.uleb128 0xe
 11049 0397 3A       		.uleb128 0x3a
 11050 0398 0B       		.uleb128 0xb
 11051 0399 3B       		.uleb128 0x3b
 11052 039a 05       		.uleb128 0x5
 11053 039b 49       		.uleb128 0x49
 11054 039c 13       		.uleb128 0x13
 11055 039d 3F       		.uleb128 0x3f
 11056 039e 19       		.uleb128 0x19
 11057 039f 3C       		.uleb128 0x3c
 11058 03a0 19       		.uleb128 0x19
 11059 03a1 00       		.byte	0
 11060 03a2 00       		.byte	0
 11061 03a3 3A       		.uleb128 0x3a
 11062 03a4 35       		.uleb128 0x35
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 225


 11063 03a5 00       		.byte	0
 11064 03a6 49       		.uleb128 0x49
 11065 03a7 13       		.uleb128 0x13
 11066 03a8 00       		.byte	0
 11067 03a9 00       		.byte	0
 11068 03aa 3B       		.uleb128 0x3b
 11069 03ab 34       		.uleb128 0x34
 11070 03ac 00       		.byte	0
 11071 03ad 03       		.uleb128 0x3
 11072 03ae 08       		.uleb128 0x8
 11073 03af 3A       		.uleb128 0x3a
 11074 03b0 0B       		.uleb128 0xb
 11075 03b1 3B       		.uleb128 0x3b
 11076 03b2 0B       		.uleb128 0xb
 11077 03b3 49       		.uleb128 0x49
 11078 03b4 13       		.uleb128 0x13
 11079 03b5 3F       		.uleb128 0x3f
 11080 03b6 19       		.uleb128 0x19
 11081 03b7 02       		.uleb128 0x2
 11082 03b8 18       		.uleb128 0x18
 11083 03b9 00       		.byte	0
 11084 03ba 00       		.byte	0
 11085 03bb 3C       		.uleb128 0x3c
 11086 03bc 34       		.uleb128 0x34
 11087 03bd 00       		.byte	0
 11088 03be 03       		.uleb128 0x3
 11089 03bf 0E       		.uleb128 0xe
 11090 03c0 3A       		.uleb128 0x3a
 11091 03c1 0B       		.uleb128 0xb
 11092 03c2 3B       		.uleb128 0x3b
 11093 03c3 0B       		.uleb128 0xb
 11094 03c4 49       		.uleb128 0x49
 11095 03c5 13       		.uleb128 0x13
 11096 03c6 3F       		.uleb128 0x3f
 11097 03c7 19       		.uleb128 0x19
 11098 03c8 02       		.uleb128 0x2
 11099 03c9 18       		.uleb128 0x18
 11100 03ca 00       		.byte	0
 11101 03cb 00       		.byte	0
 11102 03cc 00       		.byte	0
 11103              		.section	.debug_aranges,"",%progbits
 11104 0000 9C010000 		.4byte	0x19c
 11105 0004 0200     		.2byte	0x2
 11106 0006 00000000 		.4byte	.Ldebug_info0
 11107 000a 04       		.byte	0x4
 11108 000b 00       		.byte	0
 11109 000c 0000     		.2byte	0
 11110 000e 0000     		.2byte	0
 11111 0010 00000000 		.4byte	.LFB63
 11112 0014 4C000000 		.4byte	.LFE63-.LFB63
 11113 0018 00000000 		.4byte	.LFB64
 11114 001c 4C000000 		.4byte	.LFE64-.LFB64
 11115 0020 00000000 		.4byte	.LFB65
 11116 0024 4A000000 		.4byte	.LFE65-.LFB65
 11117 0028 00000000 		.4byte	.LFB66
 11118 002c 6A000000 		.4byte	.LFE66-.LFB66
 11119 0030 00000000 		.4byte	.LFB67
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 226


 11120 0034 14000000 		.4byte	.LFE67-.LFB67
 11121 0038 00000000 		.4byte	.LFB68
 11122 003c 5A000000 		.4byte	.LFE68-.LFB68
 11123 0040 00000000 		.4byte	.LFB69
 11124 0044 54000000 		.4byte	.LFE69-.LFB69
 11125 0048 00000000 		.4byte	.LFB70
 11126 004c 5A000000 		.4byte	.LFE70-.LFB70
 11127 0050 00000000 		.4byte	.LFB71
 11128 0054 80000000 		.4byte	.LFE71-.LFB71
 11129 0058 00000000 		.4byte	.LFB72
 11130 005c C0000000 		.4byte	.LFE72-.LFB72
 11131 0060 00000000 		.4byte	.LFB73
 11132 0064 20010000 		.4byte	.LFE73-.LFB73
 11133 0068 00000000 		.4byte	.LFB74
 11134 006c A4000000 		.4byte	.LFE74-.LFB74
 11135 0070 00000000 		.4byte	.LFB75
 11136 0074 60000000 		.4byte	.LFE75-.LFB75
 11137 0078 00000000 		.4byte	.LFB76
 11138 007c 34000000 		.4byte	.LFE76-.LFB76
 11139 0080 00000000 		.4byte	.LFB77
 11140 0084 70010000 		.4byte	.LFE77-.LFB77
 11141 0088 00000000 		.4byte	.LFB78
 11142 008c A2000000 		.4byte	.LFE78-.LFB78
 11143 0090 00000000 		.4byte	.LFB79
 11144 0094 98000000 		.4byte	.LFE79-.LFB79
 11145 0098 00000000 		.4byte	.LFB80
 11146 009c 58000000 		.4byte	.LFE80-.LFB80
 11147 00a0 00000000 		.4byte	.LFB81
 11148 00a4 7C000000 		.4byte	.LFE81-.LFB81
 11149 00a8 00000000 		.4byte	.LFB82
 11150 00ac 84050000 		.4byte	.LFE82-.LFB82
 11151 00b0 00000000 		.4byte	.LFB83
 11152 00b4 DC050000 		.4byte	.LFE83-.LFB83
 11153 00b8 00000000 		.4byte	.LFB84
 11154 00bc 8C000000 		.4byte	.LFE84-.LFB84
 11155 00c0 00000000 		.4byte	.LFB85
 11156 00c4 A4000000 		.4byte	.LFE85-.LFB85
 11157 00c8 00000000 		.4byte	.LFB86
 11158 00cc 9E000000 		.4byte	.LFE86-.LFB86
 11159 00d0 00000000 		.4byte	.LFB87
 11160 00d4 6C010000 		.4byte	.LFE87-.LFB87
 11161 00d8 00000000 		.4byte	.LFB88
 11162 00dc 30000000 		.4byte	.LFE88-.LFB88
 11163 00e0 00000000 		.4byte	.LFB89
 11164 00e4 18000000 		.4byte	.LFE89-.LFB89
 11165 00e8 00000000 		.4byte	.LFB90
 11166 00ec 6C020000 		.4byte	.LFE90-.LFB90
 11167 00f0 00000000 		.4byte	.LFB91
 11168 00f4 24000000 		.4byte	.LFE91-.LFB91
 11169 00f8 00000000 		.4byte	.LFB92
 11170 00fc B4000000 		.4byte	.LFE92-.LFB92
 11171 0100 00000000 		.4byte	.LFB93
 11172 0104 A4010000 		.4byte	.LFE93-.LFB93
 11173 0108 00000000 		.4byte	.LFB94
 11174 010c 78000000 		.4byte	.LFE94-.LFB94
 11175 0110 00000000 		.4byte	.LFB95
 11176 0114 78000000 		.4byte	.LFE95-.LFB95
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 227


 11177 0118 00000000 		.4byte	.LFB96
 11178 011c B0000000 		.4byte	.LFE96-.LFB96
 11179 0120 00000000 		.4byte	.LFB97
 11180 0124 A4000000 		.4byte	.LFE97-.LFB97
 11181 0128 00000000 		.4byte	.LFB98
 11182 012c A4000000 		.4byte	.LFE98-.LFB98
 11183 0130 00000000 		.4byte	.LFB99
 11184 0134 D0000000 		.4byte	.LFE99-.LFB99
 11185 0138 00000000 		.4byte	.LFB100
 11186 013c C0000000 		.4byte	.LFE100-.LFB100
 11187 0140 00000000 		.4byte	.LFB101
 11188 0144 2A000000 		.4byte	.LFE101-.LFB101
 11189 0148 00000000 		.4byte	.LFB102
 11190 014c 2A000000 		.4byte	.LFE102-.LFB102
 11191 0150 00000000 		.4byte	.LFB103
 11192 0154 16000000 		.4byte	.LFE103-.LFB103
 11193 0158 00000000 		.4byte	.LFB104
 11194 015c 12000000 		.4byte	.LFE104-.LFB104
 11195 0160 00000000 		.4byte	.LFB105
 11196 0164 CC000000 		.4byte	.LFE105-.LFB105
 11197 0168 00000000 		.4byte	.LFB106
 11198 016c 48000000 		.4byte	.LFE106-.LFB106
 11199 0170 00000000 		.4byte	.LFB107
 11200 0174 2C000000 		.4byte	.LFE107-.LFB107
 11201 0178 00000000 		.4byte	.LFB108
 11202 017c 14000000 		.4byte	.LFE108-.LFB108
 11203 0180 00000000 		.4byte	.LFB109
 11204 0184 C8000000 		.4byte	.LFE109-.LFB109
 11205 0188 00000000 		.4byte	.LFB110
 11206 018c 74000000 		.4byte	.LFE110-.LFB110
 11207 0190 00000000 		.4byte	.LFB111
 11208 0194 D8010000 		.4byte	.LFE111-.LFB111
 11209 0198 00000000 		.4byte	0
 11210 019c 00000000 		.4byte	0
 11211              		.section	.debug_ranges,"",%progbits
 11212              	.Ldebug_ranges0:
 11213 0000 A8010000 		.4byte	.LBB4
 11214 0004 84040000 		.4byte	.LBE4
 11215 0008 A6050000 		.4byte	.LBB5
 11216 000c C4050000 		.4byte	.LBE5
 11217 0010 00000000 		.4byte	0
 11218 0014 00000000 		.4byte	0
 11219 0018 00000000 		.4byte	.LFB63
 11220 001c 4C000000 		.4byte	.LFE63
 11221 0020 00000000 		.4byte	.LFB64
 11222 0024 4C000000 		.4byte	.LFE64
 11223 0028 00000000 		.4byte	.LFB65
 11224 002c 4A000000 		.4byte	.LFE65
 11225 0030 00000000 		.4byte	.LFB66
 11226 0034 6A000000 		.4byte	.LFE66
 11227 0038 00000000 		.4byte	.LFB67
 11228 003c 14000000 		.4byte	.LFE67
 11229 0040 00000000 		.4byte	.LFB68
 11230 0044 5A000000 		.4byte	.LFE68
 11231 0048 00000000 		.4byte	.LFB69
 11232 004c 54000000 		.4byte	.LFE69
 11233 0050 00000000 		.4byte	.LFB70
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 228


 11234 0054 5A000000 		.4byte	.LFE70
 11235 0058 00000000 		.4byte	.LFB71
 11236 005c 80000000 		.4byte	.LFE71
 11237 0060 00000000 		.4byte	.LFB72
 11238 0064 C0000000 		.4byte	.LFE72
 11239 0068 00000000 		.4byte	.LFB73
 11240 006c 20010000 		.4byte	.LFE73
 11241 0070 00000000 		.4byte	.LFB74
 11242 0074 A4000000 		.4byte	.LFE74
 11243 0078 00000000 		.4byte	.LFB75
 11244 007c 60000000 		.4byte	.LFE75
 11245 0080 00000000 		.4byte	.LFB76
 11246 0084 34000000 		.4byte	.LFE76
 11247 0088 00000000 		.4byte	.LFB77
 11248 008c 70010000 		.4byte	.LFE77
 11249 0090 00000000 		.4byte	.LFB78
 11250 0094 A2000000 		.4byte	.LFE78
 11251 0098 00000000 		.4byte	.LFB79
 11252 009c 98000000 		.4byte	.LFE79
 11253 00a0 00000000 		.4byte	.LFB80
 11254 00a4 58000000 		.4byte	.LFE80
 11255 00a8 00000000 		.4byte	.LFB81
 11256 00ac 7C000000 		.4byte	.LFE81
 11257 00b0 00000000 		.4byte	.LFB82
 11258 00b4 84050000 		.4byte	.LFE82
 11259 00b8 00000000 		.4byte	.LFB83
 11260 00bc DC050000 		.4byte	.LFE83
 11261 00c0 00000000 		.4byte	.LFB84
 11262 00c4 8C000000 		.4byte	.LFE84
 11263 00c8 00000000 		.4byte	.LFB85
 11264 00cc A4000000 		.4byte	.LFE85
 11265 00d0 00000000 		.4byte	.LFB86
 11266 00d4 9E000000 		.4byte	.LFE86
 11267 00d8 00000000 		.4byte	.LFB87
 11268 00dc 6C010000 		.4byte	.LFE87
 11269 00e0 00000000 		.4byte	.LFB88
 11270 00e4 30000000 		.4byte	.LFE88
 11271 00e8 00000000 		.4byte	.LFB89
 11272 00ec 18000000 		.4byte	.LFE89
 11273 00f0 00000000 		.4byte	.LFB90
 11274 00f4 6C020000 		.4byte	.LFE90
 11275 00f8 00000000 		.4byte	.LFB91
 11276 00fc 24000000 		.4byte	.LFE91
 11277 0100 00000000 		.4byte	.LFB92
 11278 0104 B4000000 		.4byte	.LFE92
 11279 0108 00000000 		.4byte	.LFB93
 11280 010c A4010000 		.4byte	.LFE93
 11281 0110 00000000 		.4byte	.LFB94
 11282 0114 78000000 		.4byte	.LFE94
 11283 0118 00000000 		.4byte	.LFB95
 11284 011c 78000000 		.4byte	.LFE95
 11285 0120 00000000 		.4byte	.LFB96
 11286 0124 B0000000 		.4byte	.LFE96
 11287 0128 00000000 		.4byte	.LFB97
 11288 012c A4000000 		.4byte	.LFE97
 11289 0130 00000000 		.4byte	.LFB98
 11290 0134 A4000000 		.4byte	.LFE98
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 229


 11291 0138 00000000 		.4byte	.LFB99
 11292 013c D0000000 		.4byte	.LFE99
 11293 0140 00000000 		.4byte	.LFB100
 11294 0144 C0000000 		.4byte	.LFE100
 11295 0148 00000000 		.4byte	.LFB101
 11296 014c 2A000000 		.4byte	.LFE101
 11297 0150 00000000 		.4byte	.LFB102
 11298 0154 2A000000 		.4byte	.LFE102
 11299 0158 00000000 		.4byte	.LFB103
 11300 015c 16000000 		.4byte	.LFE103
 11301 0160 00000000 		.4byte	.LFB104
 11302 0164 12000000 		.4byte	.LFE104
 11303 0168 00000000 		.4byte	.LFB105
 11304 016c CC000000 		.4byte	.LFE105
 11305 0170 00000000 		.4byte	.LFB106
 11306 0174 48000000 		.4byte	.LFE106
 11307 0178 00000000 		.4byte	.LFB107
 11308 017c 2C000000 		.4byte	.LFE107
 11309 0180 00000000 		.4byte	.LFB108
 11310 0184 14000000 		.4byte	.LFE108
 11311 0188 00000000 		.4byte	.LFB109
 11312 018c C8000000 		.4byte	.LFE109
 11313 0190 00000000 		.4byte	.LFB110
 11314 0194 74000000 		.4byte	.LFE110
 11315 0198 00000000 		.4byte	.LFB111
 11316 019c D8010000 		.4byte	.LFE111
 11317 01a0 00000000 		.4byte	0
 11318 01a4 00000000 		.4byte	0
 11319              		.section	.debug_line,"",%progbits
 11320              	.Ldebug_line0:
 11321 0000 EC0B0000 		.section	.debug_str,"MS",%progbits,1
 11321      0200B602 
 11321      00000201 
 11321      FB0E0D00 
 11321      01010101 
 11322              	.LASF221:
 11323 0000 64697374 		.ascii	"distance\000"
 11323      616E6365 
 11323      00
 11324              	.LASF180:
 11325 0009 6D617076 		.ascii	"mapval\000"
 11325      616C00
 11326              	.LASF232:
 11327 0010 73686172 		.ascii	"sharpTurnRight\000"
 11327      70547572 
 11327      6E526967 
 11327      687400
 11328              	.LASF218:
 11329 001f 72656164 		.ascii	"reading\000"
 11329      696E6700 
 11330              	.LASF245:
 11331 0027 636F7272 		.ascii	"correctSpeed\000"
 11331      65637453 
 11331      70656564 
 11331      00
 11332              	.LASF215:
 11333 0034 626C6F63 		.ascii	"blockAndWait\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 230


 11333      6B416E64 
 11333      57616974 
 11333      00
 11334              	.LASF257:
 11335 0041 7072696E 		.ascii	"printSingleCommandUSB\000"
 11335      7453696E 
 11335      676C6543 
 11335      6F6D6D61 
 11335      6E645553 
 11336              	.LASF182:
 11337 0057 70617468 		.ascii	"path_to_append\000"
 11337      5F746F5F 
 11337      61707065 
 11337      6E6400
 11338              	.LASF40:
 11339 0066 5F6F6E5F 		.ascii	"_on_exit_args\000"
 11339      65786974 
 11339      5F617267 
 11339      7300
 11340              	.LASF108:
 11341 0074 5F776374 		.ascii	"_wctomb_state\000"
 11341      6F6D625F 
 11341      73746174 
 11341      6500
 11342              	.LASF228:
 11343 0082 64656772 		.ascii	"degrees\000"
 11343      65657300 
 11344              	.LASF237:
 11345 008a 616D6F75 		.ascii	"amount\000"
 11345      6E7400
 11346              	.LASF202:
 11347 0091 6E657874 		.ascii	"next_point\000"
 11347      5F706F69 
 11347      6E7400
 11348              	.LASF105:
 11349 009c 5F723438 		.ascii	"_r48\000"
 11349      00
 11350              	.LASF110:
 11351 00a1 5F736967 		.ascii	"_signal_buf\000"
 11351      6E616C5F 
 11351      62756600 
 11352              	.LASF189:
 11353 00ad 70617468 		.ascii	"paths\000"
 11353      7300
 11354              	.LASF285:
 11355 00b3 73616D70 		.ascii	"sample_count\000"
 11355      6C655F63 
 11355      6F756E74 
 11355      00
 11356              	.LASF12:
 11357 00c0 756E7369 		.ascii	"unsigned int\000"
 11357      676E6564 
 11357      20696E74 
 11357      00
 11358              	.LASF174:
 11359 00cd 6E657874 		.ascii	"next\000"
 11359      00
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 231


 11360              	.LASF156:
 11361 00d2 61707065 		.ascii	"appendArray\000"
 11361      6E644172 
 11361      72617900 
 11362              	.LASF203:
 11363 00de 454E434F 		.ascii	"ENCODER_ISR\000"
 11363      4445525F 
 11363      49535200 
 11364              	.LASF281:
 11365 00ea 666F6F64 		.ascii	"food_list\000"
 11365      5F6C6973 
 11365      7400
 11366              	.LASF54:
 11367 00f4 5F6C6266 		.ascii	"_lbfsize\000"
 11367      73697A65 
 11367      00
 11368              	.LASF52:
 11369 00fd 5F666C61 		.ascii	"_flags\000"
 11369      677300
 11370              	.LASF134:
 11371 0104 696E6465 		.ascii	"index\000"
 11371      7800
 11372              	.LASF7:
 11373 010a 5F5F696E 		.ascii	"__int32_t\000"
 11373      7433325F 
 11373      7400
 11374              	.LASF128:
 11375 0114 696E7431 		.ascii	"int16\000"
 11375      3600
 11376              	.LASF69:
 11377 011a 5F657272 		.ascii	"_errno\000"
 11377      6E6F00
 11378              	.LASF198:
 11379 0121 67657441 		.ascii	"getAllPath\000"
 11379      6C6C5061 
 11379      746800
 11380              	.LASF239:
 11381 012c 6368616E 		.ascii	"changeRightWheelSpeed\000"
 11381      67655269 
 11381      67687457 
 11381      6865656C 
 11381      53706565 
 11382              	.LASF13:
 11383 0142 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T\000"
 11383      4B5F5245 
 11383      43555253 
 11383      4956455F 
 11383      5400
 11384              	.LASF224:
 11385 0154 70726576 		.ascii	"prevCountM1\000"
 11385      436F756E 
 11385      744D3100 
 11386              	.LASF56:
 11387 0160 5F726561 		.ascii	"_read\000"
 11387      6400
 11388              	.LASF146:
 11389 0166 67325F78 		.ascii	"g2_xpos\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 232


 11389      706F7300 
 11390              	.LASF211:
 11391 016e 6D6F6465 		.ascii	"mode\000"
 11391      00
 11392              	.LASF112:
 11393 0173 5F6D6272 		.ascii	"_mbrlen_state\000"
 11393      6C656E5F 
 11393      73746174 
 11393      6500
 11394              	.LASF251:
 11395 0181 636F7272 		.ascii	"correction\000"
 11395      65637469 
 11395      6F6E00
 11396              	.LASF230:
 11397 018c 64697374 		.ascii	"distance_turned\000"
 11397      616E6365 
 11397      5F747572 
 11397      6E656400 
 11398              	.LASF85:
 11399 019c 5F6E6577 		.ascii	"_new\000"
 11399      00
 11400              	.LASF176:
 11401 01a1 6E657874 		.ascii	"next_orientation\000"
 11401      5F6F7269 
 11401      656E7461 
 11401      74696F6E 
 11401      00
 11402              	.LASF71:
 11403 01b2 5F737464 		.ascii	"_stdout\000"
 11403      6F757400 
 11404              	.LASF15:
 11405 01ba 5F66706F 		.ascii	"_fpos_t\000"
 11405      735F7400 
 11406              	.LASF47:
 11407 01c2 5F666E73 		.ascii	"_fns\000"
 11407      00
 11408              	.LASF55:
 11409 01c7 5F636F6F 		.ascii	"_cookie\000"
 11409      6B696500 
 11410              	.LASF231:
 11411 01cf 73686172 		.ascii	"sharpTurnLeft\000"
 11411      70547572 
 11411      6E4C6566 
 11411      7400
 11412              	.LASF275:
 11413 01dd 666C6167 		.ascii	"flag_rf_transmission_active\000"
 11413      5F72665F 
 11413      7472616E 
 11413      736D6973 
 11413      73696F6E 
 11414              	.LASF29:
 11415 01f9 5F426967 		.ascii	"_Bigint\000"
 11415      696E7400 
 11416              	.LASF166:
 11417 0201 75706461 		.ascii	"updateMapWithPath\000"
 11417      74654D61 
 11417      70576974 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 233


 11417      68506174 
 11417      6800
 11418              	.LASF125:
 11419 0213 75696E74 		.ascii	"uint8\000"
 11419      3800
 11420              	.LASF37:
 11421 0219 5F5F746D 		.ascii	"__tm_wday\000"
 11421      5F776461 
 11421      7900
 11422              	.LASF259:
 11423 0223 67657452 		.ascii	"getRouteToFood\000"
 11423      6F757465 
 11423      546F466F 
 11423      6F6400
 11424              	.LASF255:
 11425 0232 75736250 		.ascii	"usbPutString\000"
 11425      75745374 
 11425      72696E67 
 11425      00
 11426              	.LASF79:
 11427 023f 5F726573 		.ascii	"_result\000"
 11427      756C7400 
 11428              	.LASF121:
 11429 0247 696E7438 		.ascii	"int8_t\000"
 11429      5F7400
 11430              	.LASF33:
 11431 024e 5F5F746D 		.ascii	"__tm_hour\000"
 11431      5F686F75 
 11431      7200
 11432              	.LASF149:
 11433 0258 67325F64 		.ascii	"g2_direction\000"
 11433      69726563 
 11433      74696F6E 
 11433      00
 11434              	.LASF20:
 11435 0265 5F5F636F 		.ascii	"__count\000"
 11435      756E7400 
 11436              	.LASF130:
 11437 026d 666C6F61 		.ascii	"float\000"
 11437      7400
 11438              	.LASF252:
 11439 0273 73657457 		.ascii	"setWheelDirection\000"
 11439      6865656C 
 11439      44697265 
 11439      6374696F 
 11439      6E00
 11440              	.LASF32:
 11441 0285 5F5F746D 		.ascii	"__tm_min\000"
 11441      5F6D696E 
 11441      00
 11442              	.LASF261:
 11443 028e 5F696D70 		.ascii	"_impure_ptr\000"
 11443      7572655F 
 11443      70747200 
 11444              	.LASF129:
 11445 029a 696E7433 		.ascii	"int32\000"
 11445      3200
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 234


 11446              	.LASF118:
 11447 02a0 5F6E6578 		.ascii	"_nextf\000"
 11447      746600
 11448              	.LASF162:
 11449 02a7 7072696E 		.ascii	"printPath\000"
 11449      74506174 
 11449      6800
 11450              	.LASF283:
 11451 02b1 73656E73 		.ascii	"sensor_readings\000"
 11451      6F725F72 
 11451      65616469 
 11451      6E677300 
 11452              	.LASF95:
 11453 02c1 5F72616E 		.ascii	"_rand48\000"
 11453      64343800 
 11454              	.LASF80:
 11455 02c9 5F726573 		.ascii	"_result_k\000"
 11455      756C745F 
 11455      6B00
 11456              	.LASF223:
 11457 02d3 7475726E 		.ascii	"turnLeft\000"
 11457      4C656674 
 11457      00
 11458              	.LASF11:
 11459 02dc 6C6F6E67 		.ascii	"long long unsigned int\000"
 11459      206C6F6E 
 11459      6720756E 
 11459      7369676E 
 11459      65642069 
 11460              	.LASF101:
 11461 02f3 5F617363 		.ascii	"_asctime_buf\000"
 11461      74696D65 
 11461      5F627566 
 11461      00
 11462              	.LASF240:
 11463 0300 73746172 		.ascii	"startWheels\000"
 11463      74576865 
 11463      656C7300 
 11464              	.LASF51:
 11465 030c 5F5F7346 		.ascii	"__sFILE\000"
 11465      494C4500 
 11466              	.LASF28:
 11467 0314 5F776473 		.ascii	"_wds\000"
 11467      00
 11468              	.LASF272:
 11469 0319 666C6167 		.ascii	"flag_packet\000"
 11469      5F706163 
 11469      6B657400 
 11470              	.LASF5:
 11471 0325 5F5F7569 		.ascii	"__uint16_t\000"
 11471      6E743136 
 11471      5F7400
 11472              	.LASF209:
 11473 0330 726F7574 		.ascii	"route\000"
 11473      6500
 11474              	.LASF91:
 11475 0336 5F5F4649 		.ascii	"__FILE\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 235


 11475      4C4500
 11476              	.LASF153:
 11477 033d 61727231 		.ascii	"arr1\000"
 11477      00
 11478              	.LASF154:
 11479 0342 61727232 		.ascii	"arr2\000"
 11479      00
 11480              	.LASF63:
 11481 0347 5F6F6666 		.ascii	"_offset\000"
 11481      73657400 
 11482              	.LASF216:
 11483 034f 75706461 		.ascii	"updateSensorValues\000"
 11483      74655365 
 11483      6E736F72 
 11483      56616C75 
 11483      657300
 11484              	.LASF155:
 11485 0362 72657665 		.ascii	"reverseRoute\000"
 11485      72736552 
 11485      6F757465 
 11485      00
 11486              	.LASF179:
 11487 036f 6765744E 		.ascii	"getNumOfSurroundingPoints\000"
 11487      756D4F66 
 11487      53757272 
 11487      6F756E64 
 11487      696E6750 
 11488              	.LASF74:
 11489 0389 5F656D65 		.ascii	"_emergency\000"
 11489      7267656E 
 11489      637900
 11490              	.LASF268:
 11491 0394 666C6167 		.ascii	"flag_ts_update\000"
 11491      5F74735F 
 11491      75706461 
 11491      746500
 11492              	.LASF196:
 11493 03a3 66696C74 		.ascii	"filterPoints\000"
 11493      6572506F 
 11493      696E7473 
 11493      00
 11494              	.LASF217:
 11495 03b0 62756666 		.ascii	"buff\000"
 11495      00
 11496              	.LASF267:
 11497 03b5 666C6167 		.ascii	"flag_ts_enc\000"
 11497      5F74735F 
 11497      656E6300 
 11498              	.LASF158:
 11499 03c1 61646469 		.ascii	"addition\000"
 11499      74696F6E 
 11499      00
 11500              	.LASF284:
 11501 03ca 6164635F 		.ascii	"adc_readings\000"
 11501      72656164 
 11501      696E6773 
 11501      00
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 236


 11502              	.LASF192:
 11503 03d7 74656D70 		.ascii	"temp_path\000"
 11503      5F706174 
 11503      6800
 11504              	.LASF194:
 11505 03e1 74617267 		.ascii	"targets\000"
 11505      65747300 
 11506              	.LASF31:
 11507 03e9 5F5F746D 		.ascii	"__tm_sec\000"
 11507      5F736563 
 11507      00
 11508              	.LASF248:
 11509 03f2 64657369 		.ascii	"desired_count\000"
 11509      7265645F 
 11509      636F756E 
 11509      7400
 11510              	.LASF38:
 11511 0400 5F5F746D 		.ascii	"__tm_yday\000"
 11511      5F796461 
 11511      7900
 11512              	.LASF73:
 11513 040a 5F696E63 		.ascii	"_inc\000"
 11513      00
 11514              	.LASF46:
 11515 040f 5F696E64 		.ascii	"_ind\000"
 11515      00
 11516              	.LASF265:
 11517 0414 74735F73 		.ascii	"ts_speed\000"
 11517      70656564 
 11517      00
 11518              	.LASF205:
 11519 041d 6D61696E 		.ascii	"main\000"
 11519      00
 11520              	.LASF163:
 11521 0422 7072696E 		.ascii	"printCommands\000"
 11521      74436F6D 
 11521      6D616E64 
 11521      7300
 11522              	.LASF25:
 11523 0430 5F6E6578 		.ascii	"_next\000"
 11523      7400
 11524              	.LASF114:
 11525 0436 5F6D6273 		.ascii	"_mbsrtowcs_state\000"
 11525      72746F77 
 11525      63735F73 
 11525      74617465 
 11525      00
 11526              	.LASF159:
 11527 0447 70617468 		.ascii	"path\000"
 11527      00
 11528              	.LASF168:
 11529 044c 6765744D 		.ascii	"getMapValAtPoint\000"
 11529      61705661 
 11529      6C417450 
 11529      6F696E74 
 11529      00
 11530              	.LASF207:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 237


 11531 045d 6C656674 		.ascii	"left_wheel_count\000"
 11531      5F776865 
 11531      656C5F63 
 11531      6F756E74 
 11531      00
 11532              	.LASF21:
 11533 046e 5F5F7661 		.ascii	"__value\000"
 11533      6C756500 
 11534              	.LASF225:
 11535 0476 70726576 		.ascii	"prevCountM2\000"
 11535      436F756E 
 11535      744D3200 
 11536              	.LASF81:
 11537 0482 5F703573 		.ascii	"_p5s\000"
 11537      00
 11538              	.LASF136:
 11539 0487 726F626F 		.ascii	"robot_ypos\000"
 11539      745F7970 
 11539      6F7300
 11540              	.LASF247:
 11541 0492 636F756E 		.ascii	"count\000"
 11541      7400
 11542              	.LASF266:
 11543 0498 74735F64 		.ascii	"ts_display\000"
 11543      6973706C 
 11543      617900
 11544              	.LASF116:
 11545 04a3 5F776373 		.ascii	"_wcsrtombs_state\000"
 11545      72746F6D 
 11545      62735F73 
 11545      74617465 
 11545      00
 11546              	.LASF106:
 11547 04b4 5F6D626C 		.ascii	"_mblen_state\000"
 11547      656E5F73 
 11547      74617465 
 11547      00
 11548              	.LASF188:
 11549 04c1 66696E69 		.ascii	"finish\000"
 11549      736800
 11550              	.LASF90:
 11551 04c8 63686172 		.ascii	"char\000"
 11551      00
 11552              	.LASF279:
 11553 04cd 75736242 		.ascii	"usbBuffer\000"
 11553      75666665 
 11553      7200
 11554              	.LASF34:
 11555 04d7 5F5F746D 		.ascii	"__tm_mday\000"
 11555      5F6D6461 
 11555      7900
 11556              	.LASF87:
 11557 04e1 5F736967 		.ascii	"_sig_func\000"
 11557      5F66756E 
 11557      6300
 11558              	.LASF113:
 11559 04eb 5F6D6272 		.ascii	"_mbrtowc_state\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 238


 11559      746F7763 
 11559      5F737461 
 11559      746500
 11560              	.LASF86:
 11561 04fa 5F617465 		.ascii	"_atexit0\000"
 11561      78697430 
 11561      00
 11562              	.LASF226:
 11563 0503 7475726E 		.ascii	"turnRight\000"
 11563      52696768 
 11563      7400
 11564              	.LASF126:
 11565 050d 75696E74 		.ascii	"uint16\000"
 11565      313600
 11566              	.LASF23:
 11567 0514 5F666C6F 		.ascii	"_flock_t\000"
 11567      636B5F74 
 11567      00
 11568              	.LASF127:
 11569 051d 696E7438 		.ascii	"int8\000"
 11569      00
 11570              	.LASF145:
 11571 0522 67315F64 		.ascii	"g1_direction\000"
 11571      69726563 
 11571      74696F6E 
 11571      00
 11572              	.LASF17:
 11573 052f 5F5F7763 		.ascii	"__wch\000"
 11573      6800
 11574              	.LASF94:
 11575 0535 5F696F62 		.ascii	"_iobs\000"
 11575      7300
 11576              	.LASF122:
 11577 053b 75696E74 		.ascii	"uint8_t\000"
 11577      385F7400 
 11578              	.LASF193:
 11579 0543 67656E65 		.ascii	"generateTargetPoints\000"
 11579      72617465 
 11579      54617267 
 11579      6574506F 
 11579      696E7473 
 11580              	.LASF282:
 11581 0558 6164635F 		.ascii	"adc_flag\000"
 11581      666C6167 
 11581      00
 11582              	.LASF181:
 11583 0561 61707065 		.ascii	"appendPath\000"
 11583      6E645061 
 11583      746800
 11584              	.LASF222:
 11585 056c 64657369 		.ascii	"desired_distance\000"
 11585      7265645F 
 11585      64697374 
 11585      616E6365 
 11585      00
 11586              	.LASF59:
 11587 057d 5F636C6F 		.ascii	"_close\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 239


 11587      736500
 11588              	.LASF77:
 11589 0584 5F5F7364 		.ascii	"__sdidinit\000"
 11589      6964696E 
 11589      697400
 11590              	.LASF244:
 11591 058f 6D325F64 		.ascii	"m2_dist\000"
 11591      69737400 
 11592              	.LASF254:
 11593 0597 72696768 		.ascii	"rightIsForward\000"
 11593      74497346 
 11593      6F727761 
 11593      726400
 11594              	.LASF241:
 11595 05a6 73746F70 		.ascii	"stopWheels\000"
 11595      57686565 
 11595      6C7300
 11596              	.LASF70:
 11597 05b1 5F737464 		.ascii	"_stdin\000"
 11597      696E00
 11598              	.LASF103:
 11599 05b8 5F67616D 		.ascii	"_gamma_signgam\000"
 11599      6D615F73 
 11599      69676E67 
 11599      616D00
 11600              	.LASF169:
 11601 05c7 6D61726B 		.ascii	"markPointAsVisited\000"
 11601      506F696E 
 11601      74417356 
 11601      69736974 
 11601      656400
 11602              	.LASF10:
 11603 05da 6C6F6E67 		.ascii	"long long int\000"
 11603      206C6F6E 
 11603      6720696E 
 11603      7400
 11604              	.LASF142:
 11605 05e8 67315F78 		.ascii	"g1_xpos\000"
 11605      706F7300 
 11606              	.LASF49:
 11607 05f0 5F626173 		.ascii	"_base\000"
 11607      6500
 11608              	.LASF82:
 11609 05f6 5F667265 		.ascii	"_freelist\000"
 11609      656C6973 
 11609      7400
 11610              	.LASF97:
 11611 0600 5F6D756C 		.ascii	"_mult\000"
 11611      7400
 11612              	.LASF24:
 11613 0606 5F5F554C 		.ascii	"__ULong\000"
 11613      6F6E6700 
 11614              	.LASF115:
 11615 060e 5F776372 		.ascii	"_wcrtomb_state\000"
 11615      746F6D62 
 11615      5F737461 
 11615      746500
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 240


 11616              	.LASF276:
 11617 061d 64697370 		.ascii	"displaystring\000"
 11617      6C617973 
 11617      7472696E 
 11617      6700
 11618              	.LASF172:
 11619 062b 73747261 		.ascii	"straight_count\000"
 11619      69676874 
 11619      5F636F75 
 11619      6E7400
 11620              	.LASF53:
 11621 063a 5F66696C 		.ascii	"_file\000"
 11621      6500
 11622              	.LASF235:
 11623 0640 75547572 		.ascii	"uTurn\000"
 11623      6E00
 11624              	.LASF184:
 11625 0646 63686563 		.ascii	"checkPath\000"
 11625      6B506174 
 11625      6800
 11626              	.LASF229:
 11627 0650 64697374 		.ascii	"distance_to_turn\000"
 11627      616E6365 
 11627      5F746F5F 
 11627      7475726E 
 11627      00
 11628              	.LASF219:
 11629 0661 676F5374 		.ascii	"goStraightForBlock\000"
 11629      72616967 
 11629      6874466F 
 11629      72426C6F 
 11629      636B00
 11630              	.LASF289:
 11631 0674 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 11631      4320342E 
 11631      392E3320 
 11631      32303135 
 11631      30333033 
 11632 06a7 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 11632      20726576 
 11632      6973696F 
 11632      6E203232 
 11632      31323230 
 11633 06da 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 11633      66756E63 
 11633      74696F6E 
 11633      2D736563 
 11633      74696F6E 
 11634              	.LASF148:
 11635 0702 67325F73 		.ascii	"g2_speed\000"
 11635      70656564 
 11635      00
 11636              	.LASF139:
 11637 070b 67305F79 		.ascii	"g0_ypos\000"
 11637      706F7300 
 11638              	.LASF177:
 11639 0713 636D645F 		.ascii	"cmd_length\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 241


 11639      6C656E67 
 11639      746800
 11640              	.LASF78:
 11641 071e 5F5F636C 		.ascii	"__cleanup\000"
 11641      65616E75 
 11641      7000
 11642              	.LASF22:
 11643 0728 5F6D6273 		.ascii	"_mbstate_t\000"
 11643      74617465 
 11643      5F7400
 11644              	.LASF233:
 11645 0733 676F466F 		.ascii	"goForwardWithoutTracking\000"
 11645      72776172 
 11645      64576974 
 11645      686F7574 
 11645      54726163 
 11646              	.LASF197:
 11647 074c 706F696E 		.ascii	"points\000"
 11647      747300
 11648              	.LASF151:
 11649 0753 73697A65 		.ascii	"size\000"
 11649      00
 11650              	.LASF238:
 11651 0758 6E65775F 		.ascii	"new_value\000"
 11651      76616C75 
 11651      6500
 11652              	.LASF258:
 11653 0762 636F6D6D 		.ascii	"command\000"
 11653      616E6400 
 11654              	.LASF39:
 11655 076a 5F5F746D 		.ascii	"__tm_isdst\000"
 11655      5F697364 
 11655      737400
 11656              	.LASF132:
 11657 0775 64617461 		.ascii	"data_main\000"
 11657      5F6D6169 
 11657      6E00
 11658              	.LASF214:
 11659 077f 67657456 		.ascii	"getValForChannel\000"
 11659      616C466F 
 11659      72436861 
 11659      6E6E656C 
 11659      00
 11660              	.LASF187:
 11661 0790 73746172 		.ascii	"start\000"
 11661      7400
 11662              	.LASF178:
 11663 0796 64696666 		.ascii	"diffMod4\000"
 11663      4D6F6434 
 11663      00
 11664              	.LASF133:
 11665 079f 72737369 		.ascii	"rssi\000"
 11665      00
 11666              	.LASF208:
 11667 07a4 64657374 		.ascii	"destination\000"
 11667      696E6174 
 11667      696F6E00 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 242


 11668              	.LASF117:
 11669 07b0 5F685F65 		.ascii	"_h_errno\000"
 11669      72726E6F 
 11669      00
 11670              	.LASF141:
 11671 07b9 67305F64 		.ascii	"g0_direction\000"
 11671      69726563 
 11671      74696F6E 
 11671      00
 11672              	.LASF170:
 11673 07c6 636F6E76 		.ascii	"convertCoordinatesToCommands\000"
 11673      65727443 
 11673      6F6F7264 
 11673      696E6174 
 11673      6573546F 
 11674              	.LASF213:
 11675 07e3 6E756D5F 		.ascii	"num_coords\000"
 11675      636F6F72 
 11675      647300
 11676              	.LASF0:
 11677 07ee 5F5F696E 		.ascii	"__int8_t\000"
 11677      74385F74 
 11677      00
 11678              	.LASF164:
 11679 07f7 636F6D6D 		.ascii	"commands\000"
 11679      616E6473 
 11679      00
 11680              	.LASF35:
 11681 0800 5F5F746D 		.ascii	"__tm_mon\000"
 11681      5F6D6F6E 
 11681      00
 11682              	.LASF236:
 11683 0809 6368616E 		.ascii	"changeLeftWheelSpeed\000"
 11683      67654C65 
 11683      66745768 
 11683      65656C53 
 11683      70656564 
 11684              	.LASF210:
 11685 081e 64697265 		.ascii	"directions\000"
 11685      6374696F 
 11685      6E7300
 11686              	.LASF123:
 11687 0829 75696E74 		.ascii	"uint16_t\000"
 11687      31365F74 
 11687      00
 11688              	.LASF167:
 11689 0832 70617468 		.ascii	"path_length\000"
 11689      5F6C656E 
 11689      67746800 
 11690              	.LASF190:
 11691 083e 4246535F 		.ascii	"BFS_alternate\000"
 11691      616C7465 
 11691      726E6174 
 11691      6500
 11692              	.LASF57:
 11693 084c 5F777269 		.ascii	"_write\000"
 11693      746500
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 243


 11694              	.LASF269:
 11695 0853 666C6167 		.ascii	"flag_ts_speed\000"
 11695      5F74735F 
 11695      73706565 
 11695      6400
 11696              	.LASF199:
 11697 0861 616C6C50 		.ascii	"allPath\000"
 11697      61746800 
 11698              	.LASF45:
 11699 0869 5F617465 		.ascii	"_atexit\000"
 11699      78697400 
 11700              	.LASF66:
 11701 0871 5F6D6273 		.ascii	"_mbstate\000"
 11701      74617465 
 11701      00
 11702              	.LASF271:
 11703 087a 666C6167 		.ascii	"flag_rx\000"
 11703      5F727800 
 11704              	.LASF242:
 11705 0882 67657444 		.ascii	"getDistance\000"
 11705      69737461 
 11705      6E636500 
 11706              	.LASF144:
 11707 088e 67315F73 		.ascii	"g1_speed\000"
 11707      70656564 
 11707      00
 11708              	.LASF4:
 11709 0897 73686F72 		.ascii	"short int\000"
 11709      7420696E 
 11709      7400
 11710              	.LASF287:
 11711 08a1 636F756E 		.ascii	"countM1\000"
 11711      744D3100 
 11712              	.LASF288:
 11713 08a9 636F756E 		.ascii	"countM2\000"
 11713      744D3200 
 11714              	.LASF234:
 11715 08b1 64697374 		.ascii	"distance_to_travel\000"
 11715      616E6365 
 11715      5F746F5F 
 11715      74726176 
 11715      656C00
 11716              	.LASF227:
 11717 08c4 7475726E 		.ascii	"turnForDegrees\000"
 11717      466F7244 
 11717      65677265 
 11717      657300
 11718              	.LASF8:
 11719 08d3 6C6F6E67 		.ascii	"long int\000"
 11719      20696E74 
 11719      00
 11720              	.LASF262:
 11721 08dc 49544D5F 		.ascii	"ITM_RxBuffer\000"
 11721      52784275 
 11721      66666572 
 11721      00
 11722              	.LASF171:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 244


 11723 08e9 636F6E63 		.ascii	"concurrent_path\000"
 11723      75727265 
 11723      6E745F70 
 11723      61746800 
 11724              	.LASF186:
 11725 08f9 6C656E67 		.ascii	"length\000"
 11725      746800
 11726              	.LASF264:
 11727 0900 74735F75 		.ascii	"ts_update\000"
 11727      70646174 
 11727      6500
 11728              	.LASF89:
 11729 090a 5F5F7366 		.ascii	"__sf\000"
 11729      00
 11730              	.LASF27:
 11731 090f 5F736967 		.ascii	"_sign\000"
 11731      6E00
 11732              	.LASF183:
 11733 0915 68617355 		.ascii	"hasUnvisitedPoints\000"
 11733      6E766973 
 11733      69746564 
 11733      506F696E 
 11733      747300
 11734              	.LASF76:
 11735 0928 5F637572 		.ascii	"_current_locale\000"
 11735      72656E74 
 11735      5F6C6F63 
 11735      616C6500 
 11736              	.LASF160:
 11737 0938 6973456D 		.ascii	"isEmpty\000"
 11737      70747900 
 11738              	.LASF147:
 11739 0940 67325F79 		.ascii	"g2_ypos\000"
 11739      706F7300 
 11740              	.LASF64:
 11741 0948 5F646174 		.ascii	"_data\000"
 11741      6100
 11742              	.LASF18:
 11743 094e 5F5F7763 		.ascii	"__wchb\000"
 11743      686200
 11744              	.LASF206:
 11745 0955 72696768 		.ascii	"right_wheel_count\000"
 11745      745F7768 
 11745      65656C5F 
 11745      636F756E 
 11745      7400
 11746              	.LASF274:
 11747 0967 64617461 		.ascii	"dataready_flag\000"
 11747      72656164 
 11747      795F666C 
 11747      616700
 11748              	.LASF36:
 11749 0976 5F5F746D 		.ascii	"__tm_year\000"
 11749      5F796561 
 11749      7200
 11750              	.LASF102:
 11751 0980 5F6C6F63 		.ascii	"_localtime_buf\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 245


 11751      616C7469 
 11751      6D655F62 
 11751      756600
 11752              	.LASF120:
 11753 098f 5F756E75 		.ascii	"_unused\000"
 11753      73656400 
 11754              	.LASF1:
 11755 0997 5F5F7569 		.ascii	"__uint8_t\000"
 11755      6E74385F 
 11755      7400
 11756              	.LASF157:
 11757 09a1 736F7572 		.ascii	"source\000"
 11757      636500
 11758              	.LASF291:
 11759 09a8 5C5C6669 		.ascii	"\\\\files.auckland.ac.nz\\myhome\\Desktop\\Flik\\CS"
 11759      6C65732E 
 11759      6175636B 
 11759      6C616E64 
 11759      2E61632E 
 11760 09d5 3330315F 		.ascii	"301_Class.cyprj.Archive01-20190825T234813Z-001\\CS3"
 11760      436C6173 
 11760      732E6379 
 11760      70726A2E 
 11760      41726368 
 11761 0a07 30315F43 		.ascii	"01_Class.cyprj.Archive01\\CS301_Class.cydsn\000"
 11761      6C617373 
 11761      2E637970 
 11761      726A2E41 
 11761      72636869 
 11762              	.LASF83:
 11763 0a32 5F637674 		.ascii	"_cvtlen\000"
 11763      6C656E00 
 11764              	.LASF26:
 11765 0a3a 5F6D6178 		.ascii	"_maxwds\000"
 11765      77647300 
 11766              	.LASF109:
 11767 0a42 5F6C3634 		.ascii	"_l64a_buf\000"
 11767      615F6275 
 11767      6600
 11768              	.LASF75:
 11769 0a4c 5F637572 		.ascii	"_current_category\000"
 11769      72656E74 
 11769      5F636174 
 11769      65676F72 
 11769      7900
 11770              	.LASF143:
 11771 0a5e 67315F79 		.ascii	"g1_ypos\000"
 11771      706F7300 
 11772              	.LASF191:
 11773 0a66 6D61726B 		.ascii	"marked_map\000"
 11773      65645F6D 
 11773      617000
 11774              	.LASF152:
 11775 0a71 6973526F 		.ascii	"isRouteEqual\000"
 11775      75746545 
 11775      7175616C 
 11775      00
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 246


 11776              	.LASF201:
 11777 0a7e 63757272 		.ascii	"curr_point\000"
 11777      5F706F69 
 11777      6E7400
 11778              	.LASF195:
 11779 0a89 6765744E 		.ascii	"getNextTarget\000"
 11779      65787454 
 11779      61726765 
 11779      7400
 11780              	.LASF62:
 11781 0a97 5F626C6B 		.ascii	"_blksize\000"
 11781      73697A65 
 11781      00
 11782              	.LASF30:
 11783 0aa0 5F5F746D 		.ascii	"__tm\000"
 11783      00
 11784              	.LASF65:
 11785 0aa5 5F6C6F63 		.ascii	"_lock\000"
 11785      6B00
 11786              	.LASF19:
 11787 0aab 73697A65 		.ascii	"sizetype\000"
 11787      74797065 
 11787      00
 11788              	.LASF250:
 11789 0ab4 64696666 		.ascii	"diff_count\000"
 11789      5F636F75 
 11789      6E7400
 11790              	.LASF273:
 11791 0abf 666C6167 		.ascii	"flag_KB_string\000"
 11791      5F4B425F 
 11791      73747269 
 11791      6E6700
 11792              	.LASF9:
 11793 0ace 6C6F6E67 		.ascii	"long unsigned int\000"
 11793      20756E73 
 11793      69676E65 
 11793      6420696E 
 11793      7400
 11794              	.LASF246:
 11795 0ae0 70726576 		.ascii	"prevCount\000"
 11795      436F756E 
 11795      7400
 11796              	.LASF260:
 11797 0aea 6C6F6361 		.ascii	"locations\000"
 11797      74696F6E 
 11797      7300
 11798              	.LASF93:
 11799 0af4 5F6E696F 		.ascii	"_niobs\000"
 11799      627300
 11800              	.LASF16:
 11801 0afb 77696E74 		.ascii	"wint_t\000"
 11801      5F7400
 11802              	.LASF124:
 11803 0b02 696E7433 		.ascii	"int32_t\000"
 11803      325F7400 
 11804              	.LASF42:
 11805 0b0a 5F64736F 		.ascii	"_dso_handle\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 247


 11805      5F68616E 
 11805      646C6500 
 11806              	.LASF135:
 11807 0b16 726F626F 		.ascii	"robot_xpos\000"
 11807      745F7870 
 11807      6F7300
 11808              	.LASF278:
 11809 0b21 656E7472 		.ascii	"entry\000"
 11809      7900
 11810              	.LASF253:
 11811 0b27 6C656674 		.ascii	"leftIsForward\000"
 11811      4973466F 
 11811      72776172 
 11811      6400
 11812              	.LASF84:
 11813 0b35 5F637674 		.ascii	"_cvtbuf\000"
 11813      62756600 
 11814              	.LASF3:
 11815 0b3d 756E7369 		.ascii	"unsigned char\000"
 11815      676E6564 
 11815      20636861 
 11815      7200
 11816              	.LASF243:
 11817 0b4b 6D315F64 		.ascii	"m1_dist\000"
 11817      69737400 
 11818              	.LASF161:
 11819 0b53 6973506F 		.ascii	"isPointOnPath\000"
 11819      696E744F 
 11819      6E506174 
 11819      6800
 11820              	.LASF277:
 11821 0b61 6C696E65 		.ascii	"line\000"
 11821      00
 11822              	.LASF165:
 11823 0b66 7072696E 		.ascii	"printMap\000"
 11823      744D6170 
 11823      00
 11824              	.LASF173:
 11825 0b6f 63757272 		.ascii	"current\000"
 11825      656E7400 
 11826              	.LASF111:
 11827 0b77 5F676574 		.ascii	"_getdate_err\000"
 11827      64617465 
 11827      5F657272 
 11827      00
 11828              	.LASF286:
 11829 0b84 74696D65 		.ascii	"timer_flag\000"
 11829      725F666C 
 11829      616700
 11830              	.LASF98:
 11831 0b8f 5F616464 		.ascii	"_add\000"
 11831      00
 11832              	.LASF212:
 11833 0b94 64697265 		.ascii	"direction_index\000"
 11833      6374696F 
 11833      6E5F696E 
 11833      64657800 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 248


 11834              	.LASF175:
 11835 0ba4 63757272 		.ascii	"current_orientation\000"
 11835      656E745F 
 11835      6F726965 
 11835      6E746174 
 11835      696F6E00 
 11836              	.LASF263:
 11837 0bb8 74735F65 		.ascii	"ts_enc\000"
 11837      6E6300
 11838              	.LASF270:
 11839 0bbf 666C6167 		.ascii	"flag_ts_display\000"
 11839      5F74735F 
 11839      64697370 
 11839      6C617900 
 11840              	.LASF48:
 11841 0bcf 5F5F7362 		.ascii	"__sbuf\000"
 11841      756600
 11842              	.LASF204:
 11843 0bd6 4144435F 		.ascii	"ADC_ISR\000"
 11843      49535200 
 11844              	.LASF92:
 11845 0bde 5F676C75 		.ascii	"_glue\000"
 11845      6500
 11846              	.LASF200:
 11847 0be4 636C6561 		.ascii	"clean_map\000"
 11847      6E5F6D61 
 11847      7000
 11848              	.LASF88:
 11849 0bee 5F5F7367 		.ascii	"__sglue\000"
 11849      6C756500 
 11850              	.LASF100:
 11851 0bf6 5F737472 		.ascii	"_strtok_last\000"
 11851      746F6B5F 
 11851      6C617374 
 11851      00
 11852              	.LASF107:
 11853 0c03 5F6D6274 		.ascii	"_mbtowc_state\000"
 11853      6F77635F 
 11853      73746174 
 11853      6500
 11854              	.LASF140:
 11855 0c11 67305F73 		.ascii	"g0_speed\000"
 11855      70656564 
 11855      00
 11856              	.LASF41:
 11857 0c1a 5F666E61 		.ascii	"_fnargs\000"
 11857      72677300 
 11858              	.LASF2:
 11859 0c22 7369676E 		.ascii	"signed char\000"
 11859      65642063 
 11859      68617200 
 11860              	.LASF68:
 11861 0c2e 5F726565 		.ascii	"_reent\000"
 11861      6E7400
 11862              	.LASF6:
 11863 0c35 73686F72 		.ascii	"short unsigned int\000"
 11863      7420756E 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 249


 11863      7369676E 
 11863      65642069 
 11863      6E7400
 11864              	.LASF249:
 11865 0c48 69734C65 		.ascii	"isLeftWheel\000"
 11865      66745768 
 11865      65656C00 
 11866              	.LASF137:
 11867 0c54 726F626F 		.ascii	"robot_orientation\000"
 11867      745F6F72 
 11867      69656E74 
 11867      6174696F 
 11867      6E00
 11868              	.LASF150:
 11869 0c66 706F696E 		.ascii	"point\000"
 11869      7400
 11870              	.LASF43:
 11871 0c6c 5F666E74 		.ascii	"_fntypes\000"
 11871      79706573 
 11871      00
 11872              	.LASF50:
 11873 0c75 5F73697A 		.ascii	"_size\000"
 11873      6500
 11874              	.LASF131:
 11875 0c7b 646F7562 		.ascii	"double\000"
 11875      6C6500
 11876              	.LASF138:
 11877 0c82 67305F78 		.ascii	"g0_xpos\000"
 11877      706F7300 
 11878              	.LASF14:
 11879 0c8a 5F6F6666 		.ascii	"_off_t\000"
 11879      5F7400
 11880              	.LASF61:
 11881 0c91 5F6E6275 		.ascii	"_nbuf\000"
 11881      6600
 11882              	.LASF99:
 11883 0c97 5F756E75 		.ascii	"_unused_rand\000"
 11883      7365645F 
 11883      72616E64 
 11883      00
 11884              	.LASF256:
 11885 0ca4 7072696E 		.ascii	"printCommandsUSB\000"
 11885      74436F6D 
 11885      6D616E64 
 11885      73555342 
 11885      00
 11886              	.LASF67:
 11887 0cb5 5F666C61 		.ascii	"_flags2\000"
 11887      67733200 
 11888              	.LASF44:
 11889 0cbd 5F69735F 		.ascii	"_is_cxa\000"
 11889      63786100 
 11890              	.LASF96:
 11891 0cc5 5F736565 		.ascii	"_seed\000"
 11891      6400
 11892              	.LASF280:
 11893 0ccb 73797374 		.ascii	"system_state\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccl38ult.s 			page 250


 11893      656D5F73 
 11893      74617465 
 11893      00
 11894              	.LASF104:
 11895 0cd8 5F72616E 		.ascii	"_rand_next\000"
 11895      645F6E65 
 11895      787400
 11896              	.LASF58:
 11897 0ce3 5F736565 		.ascii	"_seek\000"
 11897      6B00
 11898              	.LASF185:
 11899 0ce9 6E65775F 		.ascii	"new_paths\000"
 11899      70617468 
 11899      7300
 11900              	.LASF72:
 11901 0cf3 5F737464 		.ascii	"_stderr\000"
 11901      65727200 
 11902              	.LASF119:
 11903 0cfb 5F6E6D61 		.ascii	"_nmalloc\000"
 11903      6C6C6F63 
 11903      00
 11904              	.LASF60:
 11905 0d04 5F756275 		.ascii	"_ubuf\000"
 11905      6600
 11906              	.LASF290:
 11907 0d0a 2E5C6D61 		.ascii	".\\main.c\000"
 11907      696E2E63 
 11907      00
 11908              	.LASF220:
 11909 0d13 64657369 		.ascii	"desired_blocks\000"
 11909      7265645F 
 11909      626C6F63 
 11909      6B7300
 11910              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
