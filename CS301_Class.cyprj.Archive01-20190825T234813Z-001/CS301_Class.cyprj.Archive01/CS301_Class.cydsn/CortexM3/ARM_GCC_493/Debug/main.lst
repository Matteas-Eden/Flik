ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	displaystring
  95 0001 000000   		.align	2
  96              		.type	displaystring, %object
  97              		.size	displaystring, 64
  98              	displaystring:
  99 0004 43533330 		.ascii	"CS301 2020\012\000"
  99      31203230 
  99      32300A00 
 100 0010 00000000 		.space	52
 100      00000000 
 100      00000000 
 100      00000000 
 100      00000000 
 101              		.comm	line,64,4
 102              		.comm	entry,64,4
 103              		.comm	usbBuffer,64,4
 104              		.comm	system_state,32,4
 105              		.global	sensor_readings
 106              		.bss
 107 0012 0000     		.align	2
 108              		.type	sensor_readings, %object
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 3


 109              		.size	sensor_readings, 6
 110              	sensor_readings:
 111 0014 00000000 		.space	6
 111      0000
 112              		.global	adc_flag
 113 001a 0000     		.align	2
 114              		.type	adc_flag, %object
 115              		.size	adc_flag, 4
 116              	adc_flag:
 117 001c 00000000 		.space	4
 118              		.global	adc_readings
 119              		.align	2
 120              		.type	adc_readings, %object
 121              		.size	adc_readings, 24
 122              	adc_readings:
 123 0020 00000000 		.space	24
 123      00000000 
 123      00000000 
 123      00000000 
 123      00000000 
 124              		.global	sample_count
 125              		.align	2
 126              		.type	sample_count, %object
 127              		.size	sample_count, 4
 128              	sample_count:
 129 0038 00000000 		.space	4
 130              		.global	countM1
 131              		.align	2
 132              		.type	countM1, %object
 133              		.size	countM1, 4
 134              	countM1:
 135 003c 00000000 		.space	4
 136              		.global	countM2
 137              		.align	2
 138              		.type	countM2, %object
 139              		.size	countM2, 4
 140              	countM2:
 141 0040 00000000 		.space	4
 142              		.global	timer_flag
 143              		.align	2
 144              		.type	timer_flag, %object
 145              		.size	timer_flag, 4
 146              	timer_flag:
 147 0044 00000000 		.space	4
 148              		.section	.text.ENCODER_ISR,"ax",%progbits
 149              		.align	2
 150              		.global	ENCODER_ISR
 151              		.thumb
 152              		.thumb_func
 153              		.type	ENCODER_ISR, %function
 154              	ENCODER_ISR:
 155              	.LFB63:
 156              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  * Copyright Univ of Auckland, 2016
   3:.\main.c      ****  * All Rights Reserved
   4:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 4


   5:.\main.c      ****  *
   6:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   7:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
   8:.\main.c      ****  *
   9:.\main.c      ****  * ================== INCLUDE ======================
  10:.\main.c      **** */
  11:.\main.c      **** #include <stdio.h>
  12:.\main.c      **** #include <string.h>
  13:.\main.c      **** #include <stdlib.h>
  14:.\main.c      **** #include <project.h>
  15:.\main.c      **** 
  16:.\main.c      **** #include "defines.h"
  17:.\main.c      **** #include "vars.h"
  18:.\main.c      **** //* =================== MACROS =====================
  19:.\main.c      **** // SENSOR MAPPINGS
  20:.\main.c      **** #define TOP_LEFT_SENSOR 0
  21:.\main.c      **** #define TOP_MID_SENSOR 1
  22:.\main.c      **** #define TOP_RIGHT_SENSOR 2
  23:.\main.c      **** #define BOTTOM_LEFT_SENSOR 3
  24:.\main.c      **** #define BOTTOM_MID_SENSOR 4
  25:.\main.c      **** #define BOTTOM_RIGHT_SENSOR 5
  26:.\main.c      **** 
  27:.\main.c      **** // LIGHT SENSORS
  28:.\main.c      **** #define NUM_SENSORS 6
  29:.\main.c      **** #define LIGHT_LEVEL 300
  30:.\main.c      **** 
  31:.\main.c      **** // ADC stuff
  32:.\main.c      **** #define ADC_READINGS_SIZE 90
  33:.\main.c      **** 
  34:.\main.c      **** // Speed calculations
  35:.\main.c      **** #define LINEAR_DISTANCE_PER_REV 20.42035225
  36:.\main.c      **** #define TICKS_PER_REV 228
  37:.\main.c      **** #define TIMER_PERIOD 0.03
  38:.\main.c      **** 
  39:.\main.c      **** // Speed control
  40:.\main.c      **** #define DESIRED_COUNT 8
  41:.\main.c      **** #define TURN_SPEED 450
  42:.\main.c      **** #define MIN_PWM_VAL 250
  43:.\main.c      **** 
  44:.\main.c      **** // Straight line test
  45:.\main.c      **** #define CM_BETWEEN_COORDS 24
  46:.\main.c      **** 
  47:.\main.c      **** // 90 degree turn - TODO: Calculate true values
  48:.\main.c      **** #define TICKS_FOR_TURN 190
  49:.\main.c      **** #define TURN_PWM_VAL 225
  50:.\main.c      **** 
  51:.\main.c      **** // Line following macros - require calibration
  52:.\main.c      **** #define ADJUST_SPEED_LARGE 3
  53:.\main.c      **** #define ADJUST_SPEED_SMALL 1
  54:.\main.c      **** #define MAX_SPEED 9
  55:.\main.c      **** #define MIN_SPEED 4
  56:.\main.c      **** #define SLOW_DOWN_SPEED 1
  57:.\main.c      **** 
  58:.\main.c      **** // Debug flag - uncomment when debugging
  59:.\main.c      **** //#define PUTTY
  60:.\main.c      **** #define PRINT_RATE 0x8000
  61:.\main.c      **** //* ================= TPYE DEF =======================
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 5


  62:.\main.c      **** //typedef struct wheel_speed{
  63:.\main.c      **** //    float m1;
  64:.\main.c      **** //    float m2;
  65:.\main.c      **** //} speed;
  66:.\main.c      **** typedef enum robot_state{
  67:.\main.c      ****     CORRECT,
  68:.\main.c      ****     SLIGHTLY_RIGHT,
  69:.\main.c      ****     SLIGHTLY_LEFT,
  70:.\main.c      ****     MEDIUM_RIGHT,
  71:.\main.c      ****     MEDIUM_LEFT,
  72:.\main.c      ****     TURN_RIGHT,
  73:.\main.c      ****     TURN_LEFT,
  74:.\main.c      ****     SLOW,
  75:.\main.c      ****     PASS
  76:.\main.c      **** } robot_state;
  77:.\main.c      **** //* ================= FUNCTIONS =======================
  78:.\main.c      **** void usbPutString(char *s);
  79:.\main.c      **** int getMax(int * readings);
  80:.\main.c      **** 
  81:.\main.c      **** int32 getValForChannel(int16 n);
  82:.\main.c      **** void updateSensorValues();
  83:.\main.c      **** 
  84:.\main.c      **** //speed getSpeed();
  85:.\main.c      **** float getDistance(int prevCountM1, int prevCountM2);
  86:.\main.c      **** void turnRight();
  87:.\main.c      **** void turnLeft();
  88:.\main.c      **** void sharpTurnRight();
  89:.\main.c      **** void sharpTurnLeft();
  90:.\main.c      **** int8 performTurn(int isLeft);
  91:.\main.c      **** void goStraight(int desired_distance);
  92:.\main.c      **** void changeRightWheelSpeed(int amount);
  93:.\main.c      **** void changeLeftWheelSpeed(int amount);
  94:.\main.c      **** void invertWheels();
  95:.\main.c      **** void setWheelDirection(int isLeftForward, int isRightForward);
  96:.\main.c      **** void correctSpeed(int prevCount, int count, int desired_count, int isLeftWheel);
  97:.\main.c      **** 
  98:.\main.c      **** float resetDecoderCount(float sum);
  99:.\main.c      **** //* ================= GLOBAL VARIABLES =======================
 100:.\main.c      **** // ADC
 101:.\main.c      **** int8 sensor_readings[NUM_SENSORS] = { 0 };
 102:.\main.c      **** volatile int adc_flag = FALSE;
 103:.\main.c      **** int adc_readings[NUM_SENSORS] = { 0 };
 104:.\main.c      **** int sample_count = 0;
 105:.\main.c      **** // Encoder
 106:.\main.c      **** volatile int countM1 = 0;
 107:.\main.c      **** volatile int countM2 = 0;
 108:.\main.c      **** volatile int timer_flag = FALSE;
 109:.\main.c      **** //* ================== ISR ======================
 110:.\main.c      **** CY_ISR(ENCODER_ISR) {
 157              		.loc 1 110 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 1, uses_anonymous_args = 0
 161 0000 80B5     		push	{r7, lr}
 162              		.cfi_def_cfa_offset 8
 163              		.cfi_offset 7, -8
 164              		.cfi_offset 14, -4
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 6


 165 0002 00AF     		add	r7, sp, #0
 166              		.cfi_def_cfa_register 7
 111:.\main.c      ****     countM1 = QuadDec_M1_GetCounter();
 167              		.loc 1 111 0
 168 0004 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 169 0008 0346     		mov	r3, r0
 170 000a 1A46     		mov	r2, r3
 171 000c 054B     		ldr	r3, .L2
 172 000e 1A60     		str	r2, [r3]
 112:.\main.c      ****     countM2 = QuadDec_M2_GetCounter();
 173              		.loc 1 112 0
 174 0010 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 175 0014 0346     		mov	r3, r0
 176 0016 1A46     		mov	r2, r3
 177 0018 034B     		ldr	r3, .L2+4
 178 001a 1A60     		str	r2, [r3]
 113:.\main.c      ****     timer_flag = TRUE;
 179              		.loc 1 113 0
 180 001c 034B     		ldr	r3, .L2+8
 181 001e 0122     		movs	r2, #1
 182 0020 1A60     		str	r2, [r3]
 114:.\main.c      **** }
 183              		.loc 1 114 0
 184 0022 80BD     		pop	{r7, pc}
 185              	.L3:
 186              		.align	2
 187              	.L2:
 188 0024 00000000 		.word	countM1
 189 0028 00000000 		.word	countM2
 190 002c 00000000 		.word	timer_flag
 191              		.cfi_endproc
 192              	.LFE63:
 193              		.size	ENCODER_ISR, .-ENCODER_ISR
 194              		.section	.text.ADC_ISR,"ax",%progbits
 195              		.align	2
 196              		.global	ADC_ISR
 197              		.thumb
 198              		.thumb_func
 199              		.type	ADC_ISR, %function
 200              	ADC_ISR:
 201              	.LFB64:
 115:.\main.c      **** 
 116:.\main.c      **** /* ### Retrieve and Store Measurements ### */
 117:.\main.c      **** CY_ISR(ADC_ISR) {
 202              		.loc 1 117 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 1, uses_anonymous_args = 0
 206              		@ link register save eliminated.
 207 0000 80B4     		push	{r7}
 208              		.cfi_def_cfa_offset 4
 209              		.cfi_offset 7, -4
 210 0002 00AF     		add	r7, sp, #0
 211              		.cfi_def_cfa_register 7
 118:.\main.c      ****     adc_flag = TRUE;
 212              		.loc 1 118 0
 213 0004 034B     		ldr	r3, .L5
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 7


 214 0006 0122     		movs	r2, #1
 215 0008 1A60     		str	r2, [r3]
 119:.\main.c      **** }
 216              		.loc 1 119 0
 217 000a BD46     		mov	sp, r7
 218              		.cfi_def_cfa_register 13
 219              		@ sp needed
 220 000c 5DF8047B 		ldr	r7, [sp], #4
 221              		.cfi_restore 7
 222              		.cfi_def_cfa_offset 0
 223 0010 7047     		bx	lr
 224              	.L6:
 225 0012 00BF     		.align	2
 226              	.L5:
 227 0014 00000000 		.word	adc_flag
 228              		.cfi_endproc
 229              	.LFE64:
 230              		.size	ADC_ISR, .-ADC_ISR
 231              		.section	.text.main,"ax",%progbits
 232              		.align	2
 233              		.global	main
 234              		.thumb
 235              		.thumb_func
 236              		.type	main, %function
 237              	main:
 238              	.LFB65:
 120:.\main.c      **** 
 121:.\main.c      **** /** ## Notes
 122:.\main.c      ****     
 123:.\main.c      ****     Ratio of linear distance to quad decoder ticks
 124:.\main.c      ****     One revolution gives a linear distance (in cm)
 125:.\main.c      ****     Each revolution is 57 ticks (228 for 4x mode)
 126:.\main.c      ****     Centimetres per tick = linear distance / countM(1|2)
 127:.\main.c      ****     
 128:.\main.c      ****     Decoder use a 4x count, so each revolution gives 4 counts
 129:.\main.c      ****     Sampling rate is determined by our 100ms timer (might be a little slow)
 130:.\main.c      ****     
 131:.\main.c      ****     ## Algorithm Control Flow
 132:.\main.c      ****     - Get ADC value for each channel
 133:.\main.c      ****     - Get decoder val for M1 & M2
 134:.\main.c      ****     - Use these values to drive the movement of the robot
 135:.\main.c      ****     
 136:.\main.c      **** */
 137:.\main.c      **** 
 138:.\main.c      **** int main()
 139:.\main.c      **** {
 239              		.loc 1 139 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 24
 242              		@ frame_needed = 1, uses_anonymous_args = 0
 243 0000 80B5     		push	{r7, lr}
 244              		.cfi_def_cfa_offset 8
 245              		.cfi_offset 7, -8
 246              		.cfi_offset 14, -4
 247 0002 86B0     		sub	sp, sp, #24
 248              		.cfi_def_cfa_offset 32
 249 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 8


 250              		.cfi_def_cfa_register 7
 140:.\main.c      ****     // delay
 141:.\main.c      ****     CyDelay(2000);
 251              		.loc 1 141 0
 252 0006 4FF4FA60 		mov	r0, #2000
 253 000a FFF7FEFF 		bl	CyDelay
 142:.\main.c      ****     
 143:.\main.c      ****     // --------------------------------
 144:.\main.c      ****     // ----- INITIALIZATIONS ----------
 145:.\main.c      ****     // ========================================
 146:.\main.c      ****     CYGlobalIntEnable;
 254              		.loc 1 146 0
 255              	@ 146 ".\main.c" 1
 256 000e 62B6     		CPSIE   i
 257              	@ 0 "" 2
 147:.\main.c      ****     
 148:.\main.c      ****     // PWMs
 149:.\main.c      ****     PWM_1_Start();
 258              		.loc 1 149 0
 259              		.thumb
 260 0010 FFF7FEFF 		bl	PWM_1_Start
 150:.\main.c      ****     PWM_2_Start();
 261              		.loc 1 150 0
 262 0014 FFF7FEFF 		bl	PWM_2_Start
 151:.\main.c      ****     
 152:.\main.c      ****     // Timer for encoder
 153:.\main.c      ****     Timer_TS_Start();
 263              		.loc 1 153 0
 264 0018 FFF7FEFF 		bl	Timer_TS_Start
 154:.\main.c      ****     isr_TS_Start(); // Timer interrupts need to be started independently
 265              		.loc 1 154 0
 266 001c FFF7FEFF 		bl	isr_TS_Start
 155:.\main.c      ****     isr_TS_StartEx(ENCODER_ISR);
 267              		.loc 1 155 0
 268 0020 1848     		ldr	r0, .L8
 269 0022 FFF7FEFF 		bl	isr_TS_StartEx
 156:.\main.c      ****     
 157:.\main.c      ****     // Quad Decoders
 158:.\main.c      ****     QuadDec_M1_Start();
 270              		.loc 1 158 0
 271 0026 FFF7FEFF 		bl	QuadDec_M1_Start
 159:.\main.c      ****     QuadDec_M2_Start();
 272              		.loc 1 159 0
 273 002a FFF7FEFF 		bl	QuadDec_M2_Start
 160:.\main.c      ****     
 161:.\main.c      ****     // ADC
 162:.\main.c      ****     ADC_Start(); // Start ADC
 274              		.loc 1 162 0
 275 002e FFF7FEFF 		bl	ADC_Start
 163:.\main.c      ****     ADC_IRQ_Enable(); // Enable ADC interrupts
 276              		.loc 1 163 0
 277 0032 FFF7FEFF 		bl	ADC_IRQ_Enable
 164:.\main.c      ****     ADC_StartConvert(); // Start conversions
 278              		.loc 1 164 0
 279 0036 FFF7FEFF 		bl	ADC_StartConvert
 165:.\main.c      ****     isr_eoc_StartEx(ADC_ISR); // link interrupt for ADC
 280              		.loc 1 165 0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 9


 281 003a 1348     		ldr	r0, .L8+4
 282 003c FFF7FEFF 		bl	isr_eoc_StartEx
 166:.\main.c      **** 
 167:.\main.c      ****     // ---------- USB SETUP ------------    
 168:.\main.c      ****     #ifdef USE_USB    
 169:.\main.c      ****         USBUART_Start(0, USBUART_5V_OPERATION);
 283              		.loc 1 169 0
 284 0040 0020     		movs	r0, #0
 285 0042 0121     		movs	r1, #1
 286 0044 FFF7FEFF 		bl	USBUART_Start
 170:.\main.c      ****     #endif            
 171:.\main.c      ****     
 172:.\main.c      ****     // To make sure wheels rotate in the same direction i.e. forward
 173:.\main.c      ****     INV2_Write(1);
 287              		.loc 1 173 0
 288 0048 0120     		movs	r0, #1
 289 004a FFF7FEFF 		bl	INV2_Write
 174:.\main.c      ****     
 175:.\main.c      ****     // Storing count values
 176:.\main.c      ****     int prevCountM1 = 0;
 290              		.loc 1 176 0
 291 004e 0023     		movs	r3, #0
 292 0050 7B61     		str	r3, [r7, #20]
 177:.\main.c      ****     int prevCountM2 = 0;
 293              		.loc 1 177 0
 294 0052 0023     		movs	r3, #0
 295 0054 3B61     		str	r3, [r7, #16]
 178:.\main.c      ****     int right_wheel_count = DESIRED_COUNT;
 296              		.loc 1 178 0
 297 0056 0823     		movs	r3, #8
 298 0058 FB60     		str	r3, [r7, #12]
 179:.\main.c      ****     int left_wheel_count = DESIRED_COUNT;
 299              		.loc 1 179 0
 300 005a 0823     		movs	r3, #8
 301 005c BB60     		str	r3, [r7, #8]
 180:.\main.c      ****     int polling_count = 0;
 302              		.loc 1 180 0
 303 005e 0023     		movs	r3, #0
 304 0060 7B60     		str	r3, [r7, #4]
 181:.\main.c      ****     
 182:.\main.c      ****     robot_state state;
 183:.\main.c      ****     robot_state prev_state = CORRECT;
 305              		.loc 1 183 0
 306 0062 0023     		movs	r3, #0
 307 0064 FB70     		strb	r3, [r7, #3]
 184:.\main.c      ****     
 185:.\main.c      ****     goStraight(CM_BETWEEN_COORDS);
 308              		.loc 1 185 0
 309 0066 1820     		movs	r0, #24
 310 0068 FFF7FEFF 		bl	goStraight
 186:.\main.c      ****     sharpTurnLeft();
 311              		.loc 1 186 0
 312 006c FFF7FEFF 		bl	sharpTurnLeft
 187:.\main.c      ****     PWM_1_WriteCompare(0);
 313              		.loc 1 187 0
 314 0070 0020     		movs	r0, #0
 315 0072 FFF7FEFF 		bl	PWM_1_WriteCompare
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 10


 188:.\main.c      ****     PWM_2_WriteCompare(0);
 316              		.loc 1 188 0
 317 0076 0020     		movs	r0, #0
 318 0078 FFF7FEFF 		bl	PWM_2_WriteCompare
 189:.\main.c      ****     
 190:.\main.c      **** //    while(1) { // Begin main control
 191:.\main.c      **** //        polling_count++;
 192:.\main.c      **** //        
 193:.\main.c      **** //        if (adc_flag) {
 194:.\main.c      **** //            updateSensorValues();
 195:.\main.c      **** //            adc_flag = FALSE;
 196:.\main.c      **** //        }
 197:.\main.c      **** //        
 198:.\main.c      **** //         // New count values from encoder are ready
 199:.\main.c      **** //        if (timer_flag){
 200:.\main.c      **** //            isr_TS_Disable();
 201:.\main.c      **** //            
 202:.\main.c      **** //            // Correct speed
 203:.\main.c      **** //            correctSpeed(prevCountM1,countM1,left_wheel_count,TRUE);
 204:.\main.c      **** //            correctSpeed(prevCountM2,countM2,right_wheel_count,FALSE);
 205:.\main.c      **** //            
 206:.\main.c      **** //            // Update previous values
 207:.\main.c      **** //            prevCountM1 = countM1;
 208:.\main.c      **** //            prevCountM2 = countM2;
 209:.\main.c      **** //            
 210:.\main.c      **** //            // Reset flag
 211:.\main.c      **** //            timer_flag = FALSE;
 212:.\main.c      **** //            
 213:.\main.c      **** //            isr_TS_Enable();
 214:.\main.c      **** //        }
 215:.\main.c      **** //        
 216:.\main.c      **** //       // follow a line algorithm
 217:.\main.c      **** //        if (sensor_readings[TOP_MID_SENSOR]) { // on line
 218:.\main.c      **** //            if (!sensor_readings[TOP_LEFT_SENSOR] && sensor_readings[TOP_RIGHT_SENSOR]) {// Devia
 219:.\main.c      **** //                state = SLIGHTLY_RIGHT;
 220:.\main.c      **** //                right_wheel_count -= ADJUST_SPEED_SMALL;
 221:.\main.c      **** //                left_wheel_count += ADJUST_SPEED_SMALL;
 222:.\main.c      **** //            } else if (sensor_readings[TOP_LEFT_SENSOR] && !sensor_readings[TOP_RIGHT_SENSOR]) { 
 223:.\main.c      **** //                state = SLIGHTLY_LEFT;
 224:.\main.c      **** //                right_wheel_count += ADJUST_SPEED_SMALL;
 225:.\main.c      **** //                left_wheel_count -= ADJUST_SPEED_SMALL;
 226:.\main.c      **** //            } else { // Correct speed
 227:.\main.c      **** //                state = CORRECT;
 228:.\main.c      **** //            }
 229:.\main.c      **** //        } else { // moved off
 230:.\main.c      **** //            if (!sensor_readings[TOP_LEFT_SENSOR] && sensor_readings[TOP_RIGHT_SENSOR]) {// Devia
 231:.\main.c      **** //                state = MEDIUM_RIGHT;
 232:.\main.c      **** //                turnRight();
 233:.\main.c      **** //            } else if (sensor_readings[TOP_LEFT_SENSOR] && !sensor_readings[TOP_RIGHT_SENSOR]) {/
 234:.\main.c      **** //                state = MEDIUM_LEFT;
 235:.\main.c      **** //				turnLeft();
 236:.\main.c      **** //            // for corners
 237:.\main.c      **** //            } else if (!sensor_readings[TOP_LEFT_SENSOR] && !sensor_readings[TOP_RIGHT_SENSOR]) {
 238:.\main.c      **** //                if (sensor_readings[BOTTOM_LEFT_SENSOR]) {
 239:.\main.c      **** //                    state = TURN_LEFT;
 240:.\main.c      **** //                    sharpTurnLeft();
 241:.\main.c      **** //                } else if (sensor_readings[BOTTOM_RIGHT_SENSOR]) {
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 11


 242:.\main.c      **** //                    state = TURN_RIGHT;
 243:.\main.c      **** //                    sharpTurnRight();
 244:.\main.c      **** //                 // slow down in preperation for a sharp turn
 245:.\main.c      **** //                } else if (left_wheel_count > MIN_SPEED && right_wheel_count > MIN_SPEED) {
 246:.\main.c      **** //                    state = SLOW;
 247:.\main.c      **** //                    right_wheel_count -= SLOW_DOWN_SPEED;
 248:.\main.c      **** //                    left_wheel_count -= SLOW_DOWN_SPEED;
 249:.\main.c      **** //                } else {
 250:.\main.c      **** //                    state = PASS;
 251:.\main.c      **** //                }
 252:.\main.c      **** //            }
 253:.\main.c      **** //        }
 254:.\main.c      **** //        
 255:.\main.c      **** //        if (right_wheel_count > MAX_SPEED) {
 256:.\main.c      **** //            right_wheel_count = MAX_SPEED;
 257:.\main.c      **** //        }
 258:.\main.c      **** //        if (left_wheel_count > MAX_SPEED) {
 259:.\main.c      **** //            left_wheel_count = MAX_SPEED;
 260:.\main.c      **** //        }
 261:.\main.c      **** //        if (right_wheel_count < MIN_SPEED) {
 262:.\main.c      **** //            right_wheel_count = MIN_SPEED;
 263:.\main.c      **** //        }
 264:.\main.c      **** //        if (left_wheel_count < MIN_SPEED) {
 265:.\main.c      **** //            left_wheel_count = MIN_SPEED;
 266:.\main.c      **** //        }
 267:.\main.c      **** //        
 268:.\main.c      **** ////        if (polling_count == PRINT_RATE) {
 269:.\main.c      **** //        if (prev_state != state) {
 270:.\main.c      **** //            if (state == SLIGHTLY_LEFT) {
 271:.\main.c      **** //                usbPutString("SLIGHTLY_LEFT\r\n");
 272:.\main.c      **** //            } else if (state == SLIGHTLY_RIGHT) {
 273:.\main.c      **** //                usbPutString("SLIGHTLY_RIGHT\r\n");
 274:.\main.c      **** //            } else if (state == MEDIUM_LEFT) {
 275:.\main.c      **** //                usbPutString("MEDIUM_LEFT\r\n");
 276:.\main.c      **** //            } else if (state == MEDIUM_RIGHT) {
 277:.\main.c      **** //                usbPutString("MEDIUM_RIGHT\r\n");
 278:.\main.c      **** //            } else if (state == TURN_LEFT) {
 279:.\main.c      **** //                usbPutString("TURN_LEFT\r\n");
 280:.\main.c      **** //            } else if (state == TURN_RIGHT) {
 281:.\main.c      **** //                usbPutString("TURN_RIGHT\r\n");
 282:.\main.c      **** //            } else if (state == SLOW) {
 283:.\main.c      **** //                usbPutString("SLOW\r\n");
 284:.\main.c      **** //            } else if (state == PASS) {
 285:.\main.c      **** //                usbPutString("PASS\r\n");
 286:.\main.c      **** //            } else if (state == CORRECT) {
 287:.\main.c      **** //                usbPutString("CORRECT\r\n");
 288:.\main.c      **** //            }
 289:.\main.c      **** //            prev_state = state;
 290:.\main.c      **** //        }
 291:.\main.c      **** //                
 292:.\main.c      **** //                
 293:.\main.c      **** //        if (polling_count == PRINT_RATE) polling_count = 0;
 294:.\main.c      **** //    }
 295:.\main.c      **** }
 319              		.loc 1 295 0
 320 007c 1846     		mov	r0, r3
 321 007e 1837     		adds	r7, r7, #24
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 12


 322              		.cfi_def_cfa_offset 8
 323 0080 BD46     		mov	sp, r7
 324              		.cfi_def_cfa_register 13
 325              		@ sp needed
 326 0082 80BD     		pop	{r7, pc}
 327              	.L9:
 328              		.align	2
 329              	.L8:
 330 0084 00000000 		.word	ENCODER_ISR
 331 0088 00000000 		.word	ADC_ISR
 332              		.cfi_endproc
 333              	.LFE65:
 334              		.size	main, .-main
 335              		.global	__aeabi_fadd
 336              		.global	__aeabi_i2f
 337              		.global	__aeabi_fcmpgt
 338              		.section	.text.goStraight,"ax",%progbits
 339              		.align	2
 340              		.global	goStraight
 341              		.thumb
 342              		.thumb_func
 343              		.type	goStraight, %function
 344              	goStraight:
 345              	.LFB66:
 296:.\main.c      **** 
 297:.\main.c      **** void goStraight(int desired_distance) {
 346              		.loc 1 297 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 32
 349              		@ frame_needed = 1, uses_anonymous_args = 0
 350 0000 80B5     		push	{r7, lr}
 351              		.cfi_def_cfa_offset 8
 352              		.cfi_offset 7, -8
 353              		.cfi_offset 14, -4
 354 0002 88B0     		sub	sp, sp, #32
 355              		.cfi_def_cfa_offset 40
 356 0004 00AF     		add	r7, sp, #0
 357              		.cfi_def_cfa_register 7
 358 0006 7860     		str	r0, [r7, #4]
 298:.\main.c      ****     // Storing count values
 299:.\main.c      ****     int prevCountM1 = 0;
 359              		.loc 1 299 0
 360 0008 0023     		movs	r3, #0
 361 000a FB61     		str	r3, [r7, #28]
 300:.\main.c      ****     int prevCountM2 = 0;
 362              		.loc 1 300 0
 363 000c 0023     		movs	r3, #0
 364 000e BB61     		str	r3, [r7, #24]
 301:.\main.c      ****     int right_wheel_count = DESIRED_COUNT;
 365              		.loc 1 301 0
 366 0010 0823     		movs	r3, #8
 367 0012 7B61     		str	r3, [r7, #20]
 302:.\main.c      ****     int left_wheel_count = DESIRED_COUNT;
 368              		.loc 1 302 0
 369 0014 0823     		movs	r3, #8
 370 0016 3B61     		str	r3, [r7, #16]
 303:.\main.c      ****     float distance = 0;
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 13


 371              		.loc 1 303 0
 372 0018 4FF00003 		mov	r3, #0
 373 001c FB60     		str	r3, [r7, #12]	@ float
 304:.\main.c      ****         
 305:.\main.c      ****     while (distance < desired_distance) {
 374              		.loc 1 305 0
 375 001e 7FE0     		b	.L11
 376              	.L22:
 306:.\main.c      ****         if (adc_flag) {
 377              		.loc 1 306 0
 378 0020 474B     		ldr	r3, .L23
 379 0022 1B68     		ldr	r3, [r3]
 380 0024 002B     		cmp	r3, #0
 381 0026 04D0     		beq	.L12
 307:.\main.c      ****             updateSensorValues();
 382              		.loc 1 307 0
 383 0028 FFF7FEFF 		bl	updateSensorValues
 308:.\main.c      ****             adc_flag = FALSE;
 384              		.loc 1 308 0
 385 002c 444B     		ldr	r3, .L23
 386 002e 0022     		movs	r2, #0
 387 0030 1A60     		str	r2, [r3]
 388              	.L12:
 309:.\main.c      ****         }
 310:.\main.c      ****         
 311:.\main.c      ****          // New count values from encoder are ready
 312:.\main.c      ****         if (timer_flag){
 389              		.loc 1 312 0
 390 0032 444B     		ldr	r3, .L23+4
 391 0034 1B68     		ldr	r3, [r3]
 392 0036 002B     		cmp	r3, #0
 393 0038 27D0     		beq	.L13
 313:.\main.c      ****             isr_TS_Disable();
 394              		.loc 1 313 0
 395 003a FFF7FEFF 		bl	isr_TS_Disable
 314:.\main.c      ****             
 315:.\main.c      ****             distance += getDistance(prevCountM1, prevCountM2);
 396              		.loc 1 315 0
 397 003e F869     		ldr	r0, [r7, #28]
 398 0040 B969     		ldr	r1, [r7, #24]
 399 0042 FFF7FEFF 		bl	getDistance
 400 0046 0346     		mov	r3, r0
 401 0048 F868     		ldr	r0, [r7, #12]	@ float
 402 004a 1946     		mov	r1, r3
 403 004c FFF7FEFF 		bl	__aeabi_fadd
 404 0050 0346     		mov	r3, r0
 405 0052 FB60     		str	r3, [r7, #12]	@ float
 316:.\main.c      ****             
 317:.\main.c      ****             // Correct speed
 318:.\main.c      ****             correctSpeed(prevCountM1,countM1,left_wheel_count,TRUE);
 406              		.loc 1 318 0
 407 0054 3C4B     		ldr	r3, .L23+8
 408 0056 1B68     		ldr	r3, [r3]
 409 0058 F869     		ldr	r0, [r7, #28]
 410 005a 1946     		mov	r1, r3
 411 005c 3A69     		ldr	r2, [r7, #16]
 412 005e 0123     		movs	r3, #1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 14


 413 0060 FFF7FEFF 		bl	correctSpeed
 319:.\main.c      ****             correctSpeed(prevCountM2,countM2,right_wheel_count,FALSE);
 414              		.loc 1 319 0
 415 0064 394B     		ldr	r3, .L23+12
 416 0066 1B68     		ldr	r3, [r3]
 417 0068 B869     		ldr	r0, [r7, #24]
 418 006a 1946     		mov	r1, r3
 419 006c 7A69     		ldr	r2, [r7, #20]
 420 006e 0023     		movs	r3, #0
 421 0070 FFF7FEFF 		bl	correctSpeed
 320:.\main.c      ****             
 321:.\main.c      ****             // Update previous values
 322:.\main.c      ****             prevCountM1 = countM1;
 422              		.loc 1 322 0
 423 0074 344B     		ldr	r3, .L23+8
 424 0076 1B68     		ldr	r3, [r3]
 425 0078 FB61     		str	r3, [r7, #28]
 323:.\main.c      ****             prevCountM2 = countM2;
 426              		.loc 1 323 0
 427 007a 344B     		ldr	r3, .L23+12
 428 007c 1B68     		ldr	r3, [r3]
 429 007e BB61     		str	r3, [r7, #24]
 324:.\main.c      ****             
 325:.\main.c      ****             // Reset flag
 326:.\main.c      ****             timer_flag = FALSE;
 430              		.loc 1 326 0
 431 0080 304B     		ldr	r3, .L23+4
 432 0082 0022     		movs	r2, #0
 433 0084 1A60     		str	r2, [r3]
 327:.\main.c      ****             
 328:.\main.c      ****             isr_TS_Enable();
 434              		.loc 1 328 0
 435 0086 FFF7FEFF 		bl	isr_TS_Enable
 436              	.L13:
 329:.\main.c      ****         }
 330:.\main.c      ****         
 331:.\main.c      ****         // follow a line algorithm
 332:.\main.c      ****         if (sensor_readings[TOP_MID_SENSOR]) { // on line
 437              		.loc 1 332 0
 438 008a 314B     		ldr	r3, .L23+16
 439 008c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 440 008e 002B     		cmp	r3, #0
 441 0090 1DD0     		beq	.L14
 333:.\main.c      ****             if (!sensor_readings[TOP_LEFT_SENSOR] && sensor_readings[TOP_RIGHT_SENSOR]) {// Deviate
 442              		.loc 1 333 0
 443 0092 2F4B     		ldr	r3, .L23+16
 444 0094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 445 0096 002B     		cmp	r3, #0
 446 0098 0AD1     		bne	.L15
 447              		.loc 1 333 0 is_stmt 0 discriminator 1
 448 009a 2D4B     		ldr	r3, .L23+16
 449 009c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 450 009e 002B     		cmp	r3, #0
 451 00a0 06D0     		beq	.L15
 334:.\main.c      ****                 right_wheel_count -= ADJUST_SPEED_SMALL;
 452              		.loc 1 334 0 is_stmt 1
 453 00a2 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 15


 454 00a4 013B     		subs	r3, r3, #1
 455 00a6 7B61     		str	r3, [r7, #20]
 335:.\main.c      ****                 left_wheel_count += ADJUST_SPEED_SMALL;
 456              		.loc 1 335 0
 457 00a8 3B69     		ldr	r3, [r7, #16]
 458 00aa 0133     		adds	r3, r3, #1
 459 00ac 3B61     		str	r3, [r7, #16]
 460 00ae 23E0     		b	.L17
 461              	.L15:
 336:.\main.c      ****             } else if (sensor_readings[TOP_LEFT_SENSOR] && !sensor_readings[TOP_RIGHT_SENSOR]) { //
 462              		.loc 1 336 0
 463 00b0 274B     		ldr	r3, .L23+16
 464 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 465 00b4 002B     		cmp	r3, #0
 466 00b6 1FD0     		beq	.L17
 467              		.loc 1 336 0 is_stmt 0 discriminator 1
 468 00b8 254B     		ldr	r3, .L23+16
 469 00ba 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 470 00bc 002B     		cmp	r3, #0
 471 00be 1BD1     		bne	.L17
 337:.\main.c      ****                 right_wheel_count += ADJUST_SPEED_SMALL;
 472              		.loc 1 337 0 is_stmt 1
 473 00c0 7B69     		ldr	r3, [r7, #20]
 474 00c2 0133     		adds	r3, r3, #1
 475 00c4 7B61     		str	r3, [r7, #20]
 338:.\main.c      ****                 left_wheel_count -= ADJUST_SPEED_SMALL;
 476              		.loc 1 338 0
 477 00c6 3B69     		ldr	r3, [r7, #16]
 478 00c8 013B     		subs	r3, r3, #1
 479 00ca 3B61     		str	r3, [r7, #16]
 480 00cc 14E0     		b	.L17
 481              	.L14:
 339:.\main.c      ****             } else { // Correct speed
 340:.\main.c      ****             }
 341:.\main.c      ****         } else { // moved off
 342:.\main.c      ****             if (!sensor_readings[TOP_LEFT_SENSOR] && sensor_readings[TOP_RIGHT_SENSOR]) {// Deviate
 482              		.loc 1 342 0
 483 00ce 204B     		ldr	r3, .L23+16
 484 00d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 485 00d2 002B     		cmp	r3, #0
 486 00d4 06D1     		bne	.L18
 487              		.loc 1 342 0 is_stmt 0 discriminator 1
 488 00d6 1E4B     		ldr	r3, .L23+16
 489 00d8 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 490 00da 002B     		cmp	r3, #0
 491 00dc 02D0     		beq	.L18
 343:.\main.c      ****                 turnRight();
 492              		.loc 1 343 0 is_stmt 1
 493 00de FFF7FEFF 		bl	turnRight
 494 00e2 09E0     		b	.L17
 495              	.L18:
 344:.\main.c      ****             } else if (sensor_readings[TOP_LEFT_SENSOR] && !sensor_readings[TOP_RIGHT_SENSOR]) {// 
 496              		.loc 1 344 0
 497 00e4 1A4B     		ldr	r3, .L23+16
 498 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 499 00e8 002B     		cmp	r3, #0
 500 00ea 05D0     		beq	.L17
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 16


 501              		.loc 1 344 0 is_stmt 0 discriminator 1
 502 00ec 184B     		ldr	r3, .L23+16
 503 00ee 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 504 00f0 002B     		cmp	r3, #0
 505 00f2 01D1     		bne	.L17
 345:.\main.c      **** 				turnLeft();
 506              		.loc 1 345 0 is_stmt 1
 507 00f4 FFF7FEFF 		bl	turnLeft
 508              	.L17:
 346:.\main.c      ****             }
 347:.\main.c      ****         }
 348:.\main.c      ****         
 349:.\main.c      ****         if (right_wheel_count > MAX_SPEED) {
 509              		.loc 1 349 0
 510 00f8 7B69     		ldr	r3, [r7, #20]
 511 00fa 092B     		cmp	r3, #9
 512 00fc 01DD     		ble	.L19
 350:.\main.c      ****             right_wheel_count = MAX_SPEED;
 513              		.loc 1 350 0
 514 00fe 0923     		movs	r3, #9
 515 0100 7B61     		str	r3, [r7, #20]
 516              	.L19:
 351:.\main.c      ****         }
 352:.\main.c      ****         if (left_wheel_count > MAX_SPEED) {
 517              		.loc 1 352 0
 518 0102 3B69     		ldr	r3, [r7, #16]
 519 0104 092B     		cmp	r3, #9
 520 0106 01DD     		ble	.L20
 353:.\main.c      ****             left_wheel_count = MAX_SPEED;
 521              		.loc 1 353 0
 522 0108 0923     		movs	r3, #9
 523 010a 3B61     		str	r3, [r7, #16]
 524              	.L20:
 354:.\main.c      ****         }
 355:.\main.c      ****         if (right_wheel_count < MIN_SPEED) {
 525              		.loc 1 355 0
 526 010c 7B69     		ldr	r3, [r7, #20]
 527 010e 032B     		cmp	r3, #3
 528 0110 01DC     		bgt	.L21
 356:.\main.c      ****             right_wheel_count = MIN_SPEED;
 529              		.loc 1 356 0
 530 0112 0423     		movs	r3, #4
 531 0114 7B61     		str	r3, [r7, #20]
 532              	.L21:
 357:.\main.c      ****         }
 358:.\main.c      ****         if (left_wheel_count < MIN_SPEED) {
 533              		.loc 1 358 0
 534 0116 3B69     		ldr	r3, [r7, #16]
 535 0118 032B     		cmp	r3, #3
 536 011a 01DC     		bgt	.L11
 359:.\main.c      ****             left_wheel_count = MIN_SPEED;
 537              		.loc 1 359 0
 538 011c 0423     		movs	r3, #4
 539 011e 3B61     		str	r3, [r7, #16]
 540              	.L11:
 305:.\main.c      ****         if (adc_flag) {
 541              		.loc 1 305 0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 17


 542 0120 7868     		ldr	r0, [r7, #4]
 543 0122 FFF7FEFF 		bl	__aeabi_i2f
 544 0126 0346     		mov	r3, r0
 545 0128 1846     		mov	r0, r3
 546 012a F968     		ldr	r1, [r7, #12]	@ float
 547 012c FFF7FEFF 		bl	__aeabi_fcmpgt
 548 0130 0346     		mov	r3, r0
 549 0132 002B     		cmp	r3, #0
 550 0134 7FF474AF 		bne	.L22
 360:.\main.c      ****         }
 361:.\main.c      ****     }
 362:.\main.c      **** }
 551              		.loc 1 362 0
 552 0138 2037     		adds	r7, r7, #32
 553              		.cfi_def_cfa_offset 8
 554 013a BD46     		mov	sp, r7
 555              		.cfi_def_cfa_register 13
 556              		@ sp needed
 557 013c 80BD     		pop	{r7, pc}
 558              	.L24:
 559 013e 00BF     		.align	2
 560              	.L23:
 561 0140 00000000 		.word	adc_flag
 562 0144 00000000 		.word	timer_flag
 563 0148 00000000 		.word	countM1
 564 014c 00000000 		.word	countM2
 565 0150 00000000 		.word	sensor_readings
 566              		.cfi_endproc
 567              	.LFE66:
 568              		.size	goStraight, .-goStraight
 569              		.global	__aeabi_fdiv
 570              		.global	__aeabi_f2d
 571              		.global	__aeabi_dmul
 572              		.global	__aeabi_d2f
 573              		.section	.text.getDistance,"ax",%progbits
 574              		.align	2
 575              		.global	getDistance
 576              		.thumb
 577              		.thumb_func
 578              		.type	getDistance, %function
 579              	getDistance:
 580              	.LFB67:
 363:.\main.c      **** 
 364:.\main.c      **** //char* itoa(int val, int base) {
 365:.\main.c      **** //    static char buf[32] = {0};
 366:.\main.c      **** //    
 367:.\main.c      **** //    int i = 30;
 368:.\main.c      **** //    for (; val && i ; --i, val /= base)
 369:.\main.c      **** //        buf[i] = "01234566789abcdef"[val % base];
 370:.\main.c      **** //        
 371:.\main.c      **** //    return &buf[i+1];
 372:.\main.c      **** //}
 373:.\main.c      **** 
 374:.\main.c      **** float getDistance(int prevCountM1, int prevCountM2){
 581              		.loc 1 374 0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 18


 584              		@ frame_needed = 1, uses_anonymous_args = 0
 585 0000 80B5     		push	{r7, lr}
 586              		.cfi_def_cfa_offset 8
 587              		.cfi_offset 7, -8
 588              		.cfi_offset 14, -4
 589 0002 84B0     		sub	sp, sp, #16
 590              		.cfi_def_cfa_offset 24
 591 0004 00AF     		add	r7, sp, #0
 592              		.cfi_def_cfa_register 7
 593 0006 7860     		str	r0, [r7, #4]
 594 0008 3960     		str	r1, [r7]
 375:.\main.c      ****     float m1_dist = ((float)abs(countM1 - prevCountM1) / TICKS_PER_REV) * LINEAR_DISTANCE_PER_REV;
 595              		.loc 1 375 0
 596 000a 2D4B     		ldr	r3, .L27+8
 597 000c 1A68     		ldr	r2, [r3]
 598 000e 7B68     		ldr	r3, [r7, #4]
 599 0010 D31A     		subs	r3, r2, r3
 600 0012 002B     		cmp	r3, #0
 601 0014 B8BF     		it	lt
 602 0016 5B42     		rsblt	r3, r3, #0
 603 0018 1846     		mov	r0, r3
 604 001a FFF7FEFF 		bl	__aeabi_i2f
 605 001e 0346     		mov	r3, r0
 606 0020 1846     		mov	r0, r3
 607 0022 2849     		ldr	r1, .L27+12
 608 0024 FFF7FEFF 		bl	__aeabi_fdiv
 609 0028 0346     		mov	r3, r0
 610 002a 1846     		mov	r0, r3
 611 002c FFF7FEFF 		bl	__aeabi_f2d
 612 0030 0246     		mov	r2, r0
 613 0032 0B46     		mov	r3, r1
 614 0034 1046     		mov	r0, r2
 615 0036 1946     		mov	r1, r3
 616 0038 1FA3     		adr	r3, .L27
 617 003a D3E90023 		ldrd	r2, [r3]
 618 003e FFF7FEFF 		bl	__aeabi_dmul
 619 0042 0246     		mov	r2, r0
 620 0044 0B46     		mov	r3, r1
 621 0046 1046     		mov	r0, r2
 622 0048 1946     		mov	r1, r3
 623 004a FFF7FEFF 		bl	__aeabi_d2f
 624 004e 0346     		mov	r3, r0
 625 0050 FB60     		str	r3, [r7, #12]	@ float
 376:.\main.c      ****     float m2_dist = ((float)abs(countM2 - prevCountM2) / TICKS_PER_REV) * LINEAR_DISTANCE_PER_REV;
 626              		.loc 1 376 0
 627 0052 1D4B     		ldr	r3, .L27+16
 628 0054 1A68     		ldr	r2, [r3]
 629 0056 3B68     		ldr	r3, [r7]
 630 0058 D31A     		subs	r3, r2, r3
 631 005a 002B     		cmp	r3, #0
 632 005c B8BF     		it	lt
 633 005e 5B42     		rsblt	r3, r3, #0
 634 0060 1846     		mov	r0, r3
 635 0062 FFF7FEFF 		bl	__aeabi_i2f
 636 0066 0346     		mov	r3, r0
 637 0068 1846     		mov	r0, r3
 638 006a 1649     		ldr	r1, .L27+12
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 19


 639 006c FFF7FEFF 		bl	__aeabi_fdiv
 640 0070 0346     		mov	r3, r0
 641 0072 1846     		mov	r0, r3
 642 0074 FFF7FEFF 		bl	__aeabi_f2d
 643 0078 0246     		mov	r2, r0
 644 007a 0B46     		mov	r3, r1
 645 007c 1046     		mov	r0, r2
 646 007e 1946     		mov	r1, r3
 647 0080 0DA3     		adr	r3, .L27
 648 0082 D3E90023 		ldrd	r2, [r3]
 649 0086 FFF7FEFF 		bl	__aeabi_dmul
 650 008a 0246     		mov	r2, r0
 651 008c 0B46     		mov	r3, r1
 652 008e 1046     		mov	r0, r2
 653 0090 1946     		mov	r1, r3
 654 0092 FFF7FEFF 		bl	__aeabi_d2f
 655 0096 0346     		mov	r3, r0
 656 0098 BB60     		str	r3, [r7, #8]	@ float
 377:.\main.c      ****     return (m1_dist+m2_dist)/2;
 657              		.loc 1 377 0
 658 009a F868     		ldr	r0, [r7, #12]	@ float
 659 009c B968     		ldr	r1, [r7, #8]	@ float
 660 009e FFF7FEFF 		bl	__aeabi_fadd
 661 00a2 0346     		mov	r3, r0
 662 00a4 1846     		mov	r0, r3
 663 00a6 4FF08041 		mov	r1, #1073741824
 664 00aa FFF7FEFF 		bl	__aeabi_fdiv
 665 00ae 0346     		mov	r3, r0
 378:.\main.c      **** };
 666              		.loc 1 378 0
 667 00b0 1846     		mov	r0, r3
 668 00b2 1037     		adds	r7, r7, #16
 669              		.cfi_def_cfa_offset 8
 670 00b4 BD46     		mov	sp, r7
 671              		.cfi_def_cfa_register 13
 672              		@ sp needed
 673 00b6 80BD     		pop	{r7, pc}
 674              	.L28:
 675              		.align	3
 676              	.L27:
 677 00b8 CE8C7E34 		.word	880708814
 678 00bc 9C6B3440 		.word	1077177244
 679 00c0 00000000 		.word	countM1
 680 00c4 00006443 		.word	1130627072
 681 00c8 00000000 		.word	countM2
 682              		.cfi_endproc
 683              	.LFE67:
 684              		.size	getDistance, .-getDistance
 685 00cc AFF30080 		.section	.text.getValForChannel,"ax",%progbits
 686              		.align	2
 687              		.global	getValForChannel
 688              		.thumb
 689              		.thumb_func
 690              		.type	getValForChannel, %function
 691              	getValForChannel:
 692              	.LFB68:
 379:.\main.c      **** 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 20


 380:.\main.c      **** // Simple ADC conversion
 381:.\main.c      **** int32 getValForChannel(int16 n){
 693              		.loc 1 381 0
 694              		.cfi_startproc
 695              		@ args = 0, pretend = 0, frame = 8
 696              		@ frame_needed = 1, uses_anonymous_args = 0
 697 0000 80B5     		push	{r7, lr}
 698              		.cfi_def_cfa_offset 8
 699              		.cfi_offset 7, -8
 700              		.cfi_offset 14, -4
 701 0002 82B0     		sub	sp, sp, #8
 702              		.cfi_def_cfa_offset 16
 703 0004 00AF     		add	r7, sp, #0
 704              		.cfi_def_cfa_register 7
 705 0006 0346     		mov	r3, r0
 706 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 382:.\main.c      ****     return ADC_CountsTo_mVolts(ADC_GetResult16(n));
 707              		.loc 1 382 0
 708 000a FB88     		ldrh	r3, [r7, #6]
 709 000c 1846     		mov	r0, r3
 710 000e FFF7FEFF 		bl	ADC_GetResult16
 711 0012 0346     		mov	r3, r0
 712 0014 1846     		mov	r0, r3
 713 0016 FFF7FEFF 		bl	ADC_CountsTo_mVolts
 714 001a 0346     		mov	r3, r0
 383:.\main.c      **** }
 715              		.loc 1 383 0
 716 001c 1846     		mov	r0, r3
 717 001e 0837     		adds	r7, r7, #8
 718              		.cfi_def_cfa_offset 8
 719 0020 BD46     		mov	sp, r7
 720              		.cfi_def_cfa_register 13
 721              		@ sp needed
 722 0022 80BD     		pop	{r7, pc}
 723              		.cfi_endproc
 724              	.LFE68:
 725              		.size	getValForChannel, .-getValForChannel
 726              		.section	.text.updateSensorValues,"ax",%progbits
 727              		.align	2
 728              		.global	updateSensorValues
 729              		.thumb
 730              		.thumb_func
 731              		.type	updateSensorValues, %function
 732              	updateSensorValues:
 733              	.LFB69:
 384:.\main.c      **** 
 385:.\main.c      **** void updateSensorValues(){
 734              		.loc 1 385 0
 735              		.cfi_startproc
 736              		@ args = 0, pretend = 0, frame = 8
 737              		@ frame_needed = 1, uses_anonymous_args = 0
 738 0000 80B5     		push	{r7, lr}
 739              		.cfi_def_cfa_offset 8
 740              		.cfi_offset 7, -8
 741              		.cfi_offset 14, -4
 742 0002 82B0     		sub	sp, sp, #8
 743              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 21


 744 0004 00AF     		add	r7, sp, #0
 745              		.cfi_def_cfa_register 7
 386:.\main.c      ****     // update each sensor with the maximum reading so far
 387:.\main.c      ****     int i;
 388:.\main.c      ****     for (i = 0; i < NUM_SENSORS; i++){
 746              		.loc 1 388 0
 747 0006 0023     		movs	r3, #0
 748 0008 7B60     		str	r3, [r7, #4]
 749 000a 15E0     		b	.L32
 750              	.L34:
 751              	.LBB2:
 389:.\main.c      ****         int reading = getValForChannel(i);
 752              		.loc 1 389 0
 753 000c 7B68     		ldr	r3, [r7, #4]
 754 000e 9BB2     		uxth	r3, r3
 755 0010 1BB2     		sxth	r3, r3
 756 0012 1846     		mov	r0, r3
 757 0014 FFF7FEFF 		bl	getValForChannel
 758 0018 3860     		str	r0, [r7]
 390:.\main.c      ****         if (reading > adc_readings[i]) {
 759              		.loc 1 390 0
 760 001a 234A     		ldr	r2, .L39
 761 001c 7B68     		ldr	r3, [r7, #4]
 762 001e 52F82320 		ldr	r2, [r2, r3, lsl #2]
 763 0022 3B68     		ldr	r3, [r7]
 764 0024 9A42     		cmp	r2, r3
 765 0026 04DA     		bge	.L33
 391:.\main.c      ****             adc_readings[i] = reading;
 766              		.loc 1 391 0
 767 0028 1F49     		ldr	r1, .L39
 768 002a 7B68     		ldr	r3, [r7, #4]
 769 002c 3A68     		ldr	r2, [r7]
 770 002e 41F82320 		str	r2, [r1, r3, lsl #2]
 771              	.L33:
 772              	.LBE2:
 388:.\main.c      ****         int reading = getValForChannel(i);
 773              		.loc 1 388 0 discriminator 2
 774 0032 7B68     		ldr	r3, [r7, #4]
 775 0034 0133     		adds	r3, r3, #1
 776 0036 7B60     		str	r3, [r7, #4]
 777              	.L32:
 388:.\main.c      ****         int reading = getValForChannel(i);
 778              		.loc 1 388 0 is_stmt 0 discriminator 1
 779 0038 7B68     		ldr	r3, [r7, #4]
 780 003a 052B     		cmp	r3, #5
 781 003c E6DD     		ble	.L34
 392:.\main.c      ****         }
 393:.\main.c      ****     }
 394:.\main.c      **** 
 395:.\main.c      ****     sample_count++;
 782              		.loc 1 395 0 is_stmt 1
 783 003e 1B4B     		ldr	r3, .L39+4
 784 0040 1B68     		ldr	r3, [r3]
 785 0042 0133     		adds	r3, r3, #1
 786 0044 194A     		ldr	r2, .L39+4
 787 0046 1360     		str	r3, [r2]
 396:.\main.c      ****     if (sample_count == ADC_READINGS_SIZE){
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 22


 788              		.loc 1 396 0
 789 0048 184B     		ldr	r3, .L39+4
 790 004a 1B68     		ldr	r3, [r3]
 791 004c 5A2B     		cmp	r3, #90
 792 004e 25D1     		bne	.L35
 397:.\main.c      ****         // Black = 1 (high voltage level)
 398:.\main.c      ****         for (i = 0; i < NUM_SENSORS; i++){
 793              		.loc 1 398 0
 794 0050 0023     		movs	r3, #0
 795 0052 7B60     		str	r3, [r7, #4]
 796 0054 18E0     		b	.L36
 797              	.L37:
 399:.\main.c      ****             sensor_readings[i] = !!(adc_readings[i] < LIGHT_LEVEL);
 798              		.loc 1 399 0 discriminator 3
 799 0056 144A     		ldr	r2, .L39
 800 0058 7B68     		ldr	r3, [r7, #4]
 801 005a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 802 005e 40F22B12 		movw	r2, #299
 803 0062 9342     		cmp	r3, r2
 804 0064 D4BF     		ite	le
 805 0066 0123     		movle	r3, #1
 806 0068 0023     		movgt	r3, #0
 807 006a DBB2     		uxtb	r3, r3
 808 006c D9B2     		uxtb	r1, r3
 809 006e 104A     		ldr	r2, .L39+8
 810 0070 7B68     		ldr	r3, [r7, #4]
 811 0072 1344     		add	r3, r3, r2
 812 0074 0A46     		mov	r2, r1
 813 0076 1A70     		strb	r2, [r3]
 400:.\main.c      ****             adc_readings[i] = 0; // Reset max value from samples
 814              		.loc 1 400 0 discriminator 3
 815 0078 0B4A     		ldr	r2, .L39
 816 007a 7B68     		ldr	r3, [r7, #4]
 817 007c 0021     		movs	r1, #0
 818 007e 42F82310 		str	r1, [r2, r3, lsl #2]
 398:.\main.c      ****             sensor_readings[i] = !!(adc_readings[i] < LIGHT_LEVEL);
 819              		.loc 1 398 0 discriminator 3
 820 0082 7B68     		ldr	r3, [r7, #4]
 821 0084 0133     		adds	r3, r3, #1
 822 0086 7B60     		str	r3, [r7, #4]
 823              	.L36:
 398:.\main.c      ****             sensor_readings[i] = !!(adc_readings[i] < LIGHT_LEVEL);
 824              		.loc 1 398 0 is_stmt 0 discriminator 1
 825 0088 7B68     		ldr	r3, [r7, #4]
 826 008a 052B     		cmp	r3, #5
 827 008c E3DD     		ble	.L37
 401:.\main.c      ****         }
 402:.\main.c      ****         ADC_DEBUG_Write(1);
 828              		.loc 1 402 0 is_stmt 1
 829 008e 0120     		movs	r0, #1
 830 0090 FFF7FEFF 		bl	ADC_DEBUG_Write
 403:.\main.c      ****         sample_count = 0;
 831              		.loc 1 403 0
 832 0094 054B     		ldr	r3, .L39+4
 833 0096 0022     		movs	r2, #0
 834 0098 1A60     		str	r2, [r3]
 835 009a 02E0     		b	.L31
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 23


 836              	.L35:
 404:.\main.c      ****     }
 405:.\main.c      ****     else ADC_DEBUG_Write(0);
 837              		.loc 1 405 0
 838 009c 0020     		movs	r0, #0
 839 009e FFF7FEFF 		bl	ADC_DEBUG_Write
 840              	.L31:
 406:.\main.c      **** }
 841              		.loc 1 406 0
 842 00a2 0837     		adds	r7, r7, #8
 843              		.cfi_def_cfa_offset 8
 844 00a4 BD46     		mov	sp, r7
 845              		.cfi_def_cfa_register 13
 846              		@ sp needed
 847 00a6 80BD     		pop	{r7, pc}
 848              	.L40:
 849              		.align	2
 850              	.L39:
 851 00a8 00000000 		.word	adc_readings
 852 00ac 00000000 		.word	sample_count
 853 00b0 00000000 		.word	sensor_readings
 854              		.cfi_endproc
 855              	.LFE69:
 856              		.size	updateSensorValues, .-updateSensorValues
 857              		.section	.text.changeLeftWheelSpeed,"ax",%progbits
 858              		.align	2
 859              		.global	changeLeftWheelSpeed
 860              		.thumb
 861              		.thumb_func
 862              		.type	changeLeftWheelSpeed, %function
 863              	changeLeftWheelSpeed:
 864              	.LFB70:
 407:.\main.c      **** 
 408:.\main.c      **** void changeLeftWheelSpeed(int amount) {
 865              		.loc 1 408 0
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 16
 868              		@ frame_needed = 1, uses_anonymous_args = 0
 869 0000 80B5     		push	{r7, lr}
 870              		.cfi_def_cfa_offset 8
 871              		.cfi_offset 7, -8
 872              		.cfi_offset 14, -4
 873 0002 84B0     		sub	sp, sp, #16
 874              		.cfi_def_cfa_offset 24
 875 0004 00AF     		add	r7, sp, #0
 876              		.cfi_def_cfa_register 7
 877 0006 7860     		str	r0, [r7, #4]
 409:.\main.c      ****     int new_value = PWM_1_ReadCompare() + amount;
 878              		.loc 1 409 0
 879 0008 FFF7FEFF 		bl	PWM_1_ReadCompare
 880 000c 0346     		mov	r3, r0
 881 000e 1A46     		mov	r2, r3
 882 0010 7B68     		ldr	r3, [r7, #4]
 883 0012 1344     		add	r3, r3, r2
 884 0014 FB60     		str	r3, [r7, #12]
 410:.\main.c      ****     PWM_1_WriteCompare((new_value > 0) ? new_value:0); // account for underflow
 885              		.loc 1 410 0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 24


 886 0016 FB68     		ldr	r3, [r7, #12]
 887 0018 23EAE373 		bic	r3, r3, r3, asr #31
 888 001c 9BB2     		uxth	r3, r3
 889 001e 1846     		mov	r0, r3
 890 0020 FFF7FEFF 		bl	PWM_1_WriteCompare
 411:.\main.c      **** }
 891              		.loc 1 411 0
 892 0024 1037     		adds	r7, r7, #16
 893              		.cfi_def_cfa_offset 8
 894 0026 BD46     		mov	sp, r7
 895              		.cfi_def_cfa_register 13
 896              		@ sp needed
 897 0028 80BD     		pop	{r7, pc}
 898              		.cfi_endproc
 899              	.LFE70:
 900              		.size	changeLeftWheelSpeed, .-changeLeftWheelSpeed
 901 002a 00BF     		.section	.text.changeRightWheelSpeed,"ax",%progbits
 902              		.align	2
 903              		.global	changeRightWheelSpeed
 904              		.thumb
 905              		.thumb_func
 906              		.type	changeRightWheelSpeed, %function
 907              	changeRightWheelSpeed:
 908              	.LFB71:
 412:.\main.c      **** 
 413:.\main.c      **** void changeRightWheelSpeed(int amount){
 909              		.loc 1 413 0
 910              		.cfi_startproc
 911              		@ args = 0, pretend = 0, frame = 16
 912              		@ frame_needed = 1, uses_anonymous_args = 0
 913 0000 80B5     		push	{r7, lr}
 914              		.cfi_def_cfa_offset 8
 915              		.cfi_offset 7, -8
 916              		.cfi_offset 14, -4
 917 0002 84B0     		sub	sp, sp, #16
 918              		.cfi_def_cfa_offset 24
 919 0004 00AF     		add	r7, sp, #0
 920              		.cfi_def_cfa_register 7
 921 0006 7860     		str	r0, [r7, #4]
 414:.\main.c      ****     int new_value = PWM_2_ReadCompare() + amount;
 922              		.loc 1 414 0
 923 0008 FFF7FEFF 		bl	PWM_2_ReadCompare
 924 000c 0346     		mov	r3, r0
 925 000e 1A46     		mov	r2, r3
 926 0010 7B68     		ldr	r3, [r7, #4]
 927 0012 1344     		add	r3, r3, r2
 928 0014 FB60     		str	r3, [r7, #12]
 415:.\main.c      ****     PWM_2_WriteCompare((new_value > 0) ? new_value:0); // account for underflow
 929              		.loc 1 415 0
 930 0016 FB68     		ldr	r3, [r7, #12]
 931 0018 23EAE373 		bic	r3, r3, r3, asr #31
 932 001c 9BB2     		uxth	r3, r3
 933 001e 1846     		mov	r0, r3
 934 0020 FFF7FEFF 		bl	PWM_2_WriteCompare
 416:.\main.c      **** }
 935              		.loc 1 416 0
 936 0024 1037     		adds	r7, r7, #16
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 25


 937              		.cfi_def_cfa_offset 8
 938 0026 BD46     		mov	sp, r7
 939              		.cfi_def_cfa_register 13
 940              		@ sp needed
 941 0028 80BD     		pop	{r7, pc}
 942              		.cfi_endproc
 943              	.LFE71:
 944              		.size	changeRightWheelSpeed, .-changeRightWheelSpeed
 945 002a 00BF     		.section	.text.correctSpeed,"ax",%progbits
 946              		.align	2
 947              		.global	correctSpeed
 948              		.thumb
 949              		.thumb_func
 950              		.type	correctSpeed, %function
 951              	correctSpeed:
 952              	.LFB72:
 417:.\main.c      **** 
 418:.\main.c      **** /* ## SPEED CONTROL ## 
 419:.\main.c      **** * Algorithm: Get difference between counts, compare to
 420:.\main.c      **** * the difference we expect. Add the correction to the PWM.
 421:.\main.c      **** */
 422:.\main.c      **** void correctSpeed(int prevCount, int count, int desired_count, int isLeftWheel){    
 953              		.loc 1 422 0
 954              		.cfi_startproc
 955              		@ args = 0, pretend = 0, frame = 88
 956              		@ frame_needed = 1, uses_anonymous_args = 0
 957 0000 80B5     		push	{r7, lr}
 958              		.cfi_def_cfa_offset 8
 959              		.cfi_offset 7, -8
 960              		.cfi_offset 14, -4
 961 0002 96B0     		sub	sp, sp, #88
 962              		.cfi_def_cfa_offset 96
 963 0004 00AF     		add	r7, sp, #0
 964              		.cfi_def_cfa_register 7
 965 0006 F860     		str	r0, [r7, #12]
 966 0008 B960     		str	r1, [r7, #8]
 967 000a 7A60     		str	r2, [r7, #4]
 968 000c 3B60     		str	r3, [r7]
 423:.\main.c      ****     
 424:.\main.c      ****     // Account for overflow edge or other unknown error
 425:.\main.c      ****     if (prevCount > count) return;
 969              		.loc 1 425 0
 970 000e FA68     		ldr	r2, [r7, #12]
 971 0010 BB68     		ldr	r3, [r7, #8]
 972 0012 9A42     		cmp	r2, r3
 973 0014 00DD     		ble	.L44
 974 0016 19E0     		b	.L43
 975              	.L44:
 426:.\main.c      ****     
 427:.\main.c      ****     int diff_count = abs(count - prevCount);
 976              		.loc 1 427 0
 977 0018 BA68     		ldr	r2, [r7, #8]
 978 001a FB68     		ldr	r3, [r7, #12]
 979 001c D31A     		subs	r3, r2, r3
 980 001e 002B     		cmp	r3, #0
 981 0020 B8BF     		it	lt
 982 0022 5B42     		rsblt	r3, r3, #0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 26


 983 0024 7B65     		str	r3, [r7, #84]
 428:.\main.c      ****     
 429:.\main.c      ****     // Account for a situation where PSoc is powered but wheels aren't moving
 430:.\main.c      ****     if (diff_count == 0) return;
 984              		.loc 1 430 0
 985 0026 7B6D     		ldr	r3, [r7, #84]
 986 0028 002B     		cmp	r3, #0
 987 002a 00D1     		bne	.L46
 988              		.loc 1 430 0 is_stmt 0 discriminator 2
 989 002c 0EE0     		b	.L43
 990              	.L46:
 431:.\main.c      ****     
 432:.\main.c      ****     char msg[64];
 433:.\main.c      ****         
 434:.\main.c      ****     /* Determine correction that must be applied to the wheel
 435:.\main.c      ****     * desired_count > diff_count :-> wheel is slow; increase PWM
 436:.\main.c      ****     * desired_count < diff_count :-> wheel is fast; decrease PWM
 437:.\main.c      ****     * desired_count == diff_count :-> wheel is stable; do nothing
 438:.\main.c      ****     */
 439:.\main.c      ****     int correction = desired_count-diff_count;
 991              		.loc 1 439 0 is_stmt 1
 992 002e 7A68     		ldr	r2, [r7, #4]
 993 0030 7B6D     		ldr	r3, [r7, #84]
 994 0032 D31A     		subs	r3, r2, r3
 995 0034 3B65     		str	r3, [r7, #80]
 440:.\main.c      ****     
 441:.\main.c      ****     // Apply the speed correction to the appropriate wheel          
 442:.\main.c      ****     if (isLeftWheel){
 996              		.loc 1 442 0
 997 0036 3B68     		ldr	r3, [r7]
 998 0038 002B     		cmp	r3, #0
 999 003a 03D0     		beq	.L47
 443:.\main.c      ****         changeLeftWheelSpeed(correction);
 1000              		.loc 1 443 0
 1001 003c 386D     		ldr	r0, [r7, #80]
 1002 003e FFF7FEFF 		bl	changeLeftWheelSpeed
 1003 0042 02E0     		b	.L48
 1004              	.L47:
 444:.\main.c      ****     }
 445:.\main.c      ****     else{
 446:.\main.c      ****         changeRightWheelSpeed(correction);
 1005              		.loc 1 446 0
 1006 0044 386D     		ldr	r0, [r7, #80]
 1007 0046 FFF7FEFF 		bl	changeRightWheelSpeed
 1008              	.L48:
 447:.\main.c      ****     }
 448:.\main.c      ****     
 449:.\main.c      ****     return;
 1009              		.loc 1 449 0 discriminator 3
 1010 004a 00BF     		nop
 1011              	.L43:
 450:.\main.c      **** }
 1012              		.loc 1 450 0
 1013 004c 5837     		adds	r7, r7, #88
 1014              		.cfi_def_cfa_offset 8
 1015 004e BD46     		mov	sp, r7
 1016              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 27


 1017              		@ sp needed
 1018 0050 80BD     		pop	{r7, pc}
 1019              		.cfi_endproc
 1020              	.LFE72:
 1021              		.size	correctSpeed, .-correctSpeed
 1022 0052 00BF     		.section	.text.setWheelDirection,"ax",%progbits
 1023              		.align	2
 1024              		.global	setWheelDirection
 1025              		.thumb
 1026              		.thumb_func
 1027              		.type	setWheelDirection, %function
 1028              	setWheelDirection:
 1029              	.LFB73:
 451:.\main.c      **** 
 452:.\main.c      **** /* Set wheel direction explicitly
 453:.\main.c      **** * Parameters are boolean, UNKNOWN can be passed
 454:.\main.c      **** * in if you wish the value to be unchanged
 455:.\main.c      **** */
 456:.\main.c      **** void setWheelDirection(int leftIsForward, int rightIsForward){
 1030              		.loc 1 456 0
 1031              		.cfi_startproc
 1032              		@ args = 0, pretend = 0, frame = 8
 1033              		@ frame_needed = 1, uses_anonymous_args = 0
 1034 0000 80B5     		push	{r7, lr}
 1035              		.cfi_def_cfa_offset 8
 1036              		.cfi_offset 7, -8
 1037              		.cfi_offset 14, -4
 1038 0002 82B0     		sub	sp, sp, #8
 1039              		.cfi_def_cfa_offset 16
 1040 0004 00AF     		add	r7, sp, #0
 1041              		.cfi_def_cfa_register 7
 1042 0006 7860     		str	r0, [r7, #4]
 1043 0008 3960     		str	r1, [r7]
 457:.\main.c      ****     INV1_Write(!leftIsForward);
 1044              		.loc 1 457 0
 1045 000a 7B68     		ldr	r3, [r7, #4]
 1046 000c 002B     		cmp	r3, #0
 1047 000e 0CBF     		ite	eq
 1048 0010 0123     		moveq	r3, #1
 1049 0012 0023     		movne	r3, #0
 1050 0014 DBB2     		uxtb	r3, r3
 1051 0016 1846     		mov	r0, r3
 1052 0018 FFF7FEFF 		bl	INV1_Write
 458:.\main.c      ****     INV2_Write(rightIsForward);
 1053              		.loc 1 458 0
 1054 001c 3B68     		ldr	r3, [r7]
 1055 001e DBB2     		uxtb	r3, r3
 1056 0020 1846     		mov	r0, r3
 1057 0022 FFF7FEFF 		bl	INV2_Write
 459:.\main.c      **** }
 1058              		.loc 1 459 0
 1059 0026 0837     		adds	r7, r7, #8
 1060              		.cfi_def_cfa_offset 8
 1061 0028 BD46     		mov	sp, r7
 1062              		.cfi_def_cfa_register 13
 1063              		@ sp needed
 1064 002a 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 28


 1065              		.cfi_endproc
 1066              	.LFE73:
 1067              		.size	setWheelDirection, .-setWheelDirection
 1068              		.section	.text.turnLeft,"ax",%progbits
 1069              		.align	2
 1070              		.global	turnLeft
 1071              		.thumb
 1072              		.thumb_func
 1073              		.type	turnLeft, %function
 1074              	turnLeft:
 1075              	.LFB74:
 460:.\main.c      **** 
 461:.\main.c      **** void turnLeft() {
 1076              		.loc 1 461 0
 1077              		.cfi_startproc
 1078              		@ args = 0, pretend = 0, frame = 0
 1079              		@ frame_needed = 1, uses_anonymous_args = 0
 1080 0000 80B5     		push	{r7, lr}
 1081              		.cfi_def_cfa_offset 8
 1082              		.cfi_offset 7, -8
 1083              		.cfi_offset 14, -4
 1084 0002 00AF     		add	r7, sp, #0
 1085              		.cfi_def_cfa_register 7
 462:.\main.c      ****     PWM_1_WriteCompare(0);
 1086              		.loc 1 462 0
 1087 0004 0020     		movs	r0, #0
 1088 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 463:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 1089              		.loc 1 463 0
 1090 000a 4FF4E170 		mov	r0, #450
 1091 000e FFF7FEFF 		bl	PWM_2_WriteCompare
 464:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 1092              		.loc 1 464 0
 1093 0012 08E0     		b	.L52
 1094              	.L53:
 465:.\main.c      ****         if (adc_flag) {
 1095              		.loc 1 465 0
 1096 0014 084B     		ldr	r3, .L54
 1097 0016 1B68     		ldr	r3, [r3]
 1098 0018 002B     		cmp	r3, #0
 1099 001a 04D0     		beq	.L52
 466:.\main.c      ****             updateSensorValues();
 1100              		.loc 1 466 0
 1101 001c FFF7FEFF 		bl	updateSensorValues
 467:.\main.c      ****             adc_flag = FALSE;
 1102              		.loc 1 467 0
 1103 0020 054B     		ldr	r3, .L54
 1104 0022 0022     		movs	r2, #0
 1105 0024 1A60     		str	r2, [r3]
 1106              	.L52:
 464:.\main.c      ****         if (adc_flag) {
 1107              		.loc 1 464 0
 1108 0026 054B     		ldr	r3, .L54+4
 1109 0028 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1110 002a 002B     		cmp	r3, #0
 1111 002c F2D0     		beq	.L53
 468:.\main.c      ****         }
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 29


 469:.\main.c      ****     }
 470:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 1112              		.loc 1 470 0
 1113 002e 4FF4E170 		mov	r0, #450
 1114 0032 FFF7FEFF 		bl	PWM_1_WriteCompare
 471:.\main.c      **** }
 1115              		.loc 1 471 0
 1116 0036 80BD     		pop	{r7, pc}
 1117              	.L55:
 1118              		.align	2
 1119              	.L54:
 1120 0038 00000000 		.word	adc_flag
 1121 003c 00000000 		.word	sensor_readings
 1122              		.cfi_endproc
 1123              	.LFE74:
 1124              		.size	turnLeft, .-turnLeft
 1125              		.section	.text.turnRight,"ax",%progbits
 1126              		.align	2
 1127              		.global	turnRight
 1128              		.thumb
 1129              		.thumb_func
 1130              		.type	turnRight, %function
 1131              	turnRight:
 1132              	.LFB75:
 472:.\main.c      **** 
 473:.\main.c      **** void turnRight() {
 1133              		.loc 1 473 0
 1134              		.cfi_startproc
 1135              		@ args = 0, pretend = 0, frame = 0
 1136              		@ frame_needed = 1, uses_anonymous_args = 0
 1137 0000 80B5     		push	{r7, lr}
 1138              		.cfi_def_cfa_offset 8
 1139              		.cfi_offset 7, -8
 1140              		.cfi_offset 14, -4
 1141 0002 00AF     		add	r7, sp, #0
 1142              		.cfi_def_cfa_register 7
 474:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 1143              		.loc 1 474 0
 1144 0004 4FF4E170 		mov	r0, #450
 1145 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
 475:.\main.c      ****     PWM_2_WriteCompare(0);
 1146              		.loc 1 475 0
 1147 000c 0020     		movs	r0, #0
 1148 000e FFF7FEFF 		bl	PWM_2_WriteCompare
 476:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 1149              		.loc 1 476 0
 1150 0012 08E0     		b	.L57
 1151              	.L58:
 477:.\main.c      ****         if (adc_flag) {
 1152              		.loc 1 477 0
 1153 0014 084B     		ldr	r3, .L59
 1154 0016 1B68     		ldr	r3, [r3]
 1155 0018 002B     		cmp	r3, #0
 1156 001a 04D0     		beq	.L57
 478:.\main.c      ****             updateSensorValues();
 1157              		.loc 1 478 0
 1158 001c FFF7FEFF 		bl	updateSensorValues
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 30


 479:.\main.c      ****             adc_flag = FALSE;
 1159              		.loc 1 479 0
 1160 0020 054B     		ldr	r3, .L59
 1161 0022 0022     		movs	r2, #0
 1162 0024 1A60     		str	r2, [r3]
 1163              	.L57:
 476:.\main.c      ****         if (adc_flag) {
 1164              		.loc 1 476 0
 1165 0026 054B     		ldr	r3, .L59+4
 1166 0028 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1167 002a 002B     		cmp	r3, #0
 1168 002c F2D0     		beq	.L58
 480:.\main.c      ****         }
 481:.\main.c      ****     }
 482:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 1169              		.loc 1 482 0
 1170 002e 4FF4E170 		mov	r0, #450
 1171 0032 FFF7FEFF 		bl	PWM_2_WriteCompare
 483:.\main.c      **** }
 1172              		.loc 1 483 0
 1173 0036 80BD     		pop	{r7, pc}
 1174              	.L60:
 1175              		.align	2
 1176              	.L59:
 1177 0038 00000000 		.word	adc_flag
 1178 003c 00000000 		.word	sensor_readings
 1179              		.cfi_endproc
 1180              	.LFE75:
 1181              		.size	turnRight, .-turnRight
 1182              		.section	.text.sharpTurnLeft,"ax",%progbits
 1183              		.align	2
 1184              		.global	sharpTurnLeft
 1185              		.thumb
 1186              		.thumb_func
 1187              		.type	sharpTurnLeft, %function
 1188              	sharpTurnLeft:
 1189              	.LFB76:
 484:.\main.c      **** 
 485:.\main.c      **** void sharpTurnLeft() {
 1190              		.loc 1 485 0
 1191              		.cfi_startproc
 1192              		@ args = 0, pretend = 0, frame = 0
 1193              		@ frame_needed = 1, uses_anonymous_args = 0
 1194 0000 80B5     		push	{r7, lr}
 1195              		.cfi_def_cfa_offset 8
 1196              		.cfi_offset 7, -8
 1197              		.cfi_offset 14, -4
 1198 0002 00AF     		add	r7, sp, #0
 1199              		.cfi_def_cfa_register 7
 486:.\main.c      ****     // go until we reach the line
 487:.\main.c      ****     while (!sensor_readings[BOTTOM_LEFT_SENSOR]) {}
 1200              		.loc 1 487 0
 1201 0004 00BF     		nop
 1202              	.L62:
 1203              		.loc 1 487 0 is_stmt 0 discriminator 1
 1204 0006 154B     		ldr	r3, .L65
 1205 0008 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 31


 1206 000a 002B     		cmp	r3, #0
 1207 000c FBD0     		beq	.L62
 488:.\main.c      ****     
 489:.\main.c      ****     // make the turn
 490:.\main.c      ****     setWheelDirection(FALSE, TRUE);
 1208              		.loc 1 490 0 is_stmt 1
 1209 000e 0020     		movs	r0, #0
 1210 0010 0121     		movs	r1, #1
 1211 0012 FFF7FEFF 		bl	setWheelDirection
 491:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 1212              		.loc 1 491 0
 1213 0016 4FF4E170 		mov	r0, #450
 1214 001a FFF7FEFF 		bl	PWM_1_WriteCompare
 492:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 1215              		.loc 1 492 0
 1216 001e 4FF4E170 		mov	r0, #450
 1217 0022 FFF7FEFF 		bl	PWM_2_WriteCompare
 493:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 1218              		.loc 1 493 0
 1219 0026 08E0     		b	.L63
 1220              	.L64:
 494:.\main.c      ****         if (adc_flag) {
 1221              		.loc 1 494 0
 1222 0028 0D4B     		ldr	r3, .L65+4
 1223 002a 1B68     		ldr	r3, [r3]
 1224 002c 002B     		cmp	r3, #0
 1225 002e 04D0     		beq	.L63
 495:.\main.c      ****             updateSensorValues();
 1226              		.loc 1 495 0
 1227 0030 FFF7FEFF 		bl	updateSensorValues
 496:.\main.c      ****             adc_flag = FALSE;
 1228              		.loc 1 496 0
 1229 0034 0A4B     		ldr	r3, .L65+4
 1230 0036 0022     		movs	r2, #0
 1231 0038 1A60     		str	r2, [r3]
 1232              	.L63:
 493:.\main.c      ****         if (adc_flag) {
 1233              		.loc 1 493 0
 1234 003a 084B     		ldr	r3, .L65
 1235 003c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1236 003e 002B     		cmp	r3, #0
 1237 0040 F2D0     		beq	.L64
 497:.\main.c      ****         }
 498:.\main.c      ****     }
 499:.\main.c      ****     setWheelDirection(TRUE, TRUE);
 1238              		.loc 1 499 0
 1239 0042 0120     		movs	r0, #1
 1240 0044 0121     		movs	r1, #1
 1241 0046 FFF7FEFF 		bl	setWheelDirection
 500:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 1242              		.loc 1 500 0
 1243 004a 4FF4E170 		mov	r0, #450
 1244 004e FFF7FEFF 		bl	PWM_1_WriteCompare
 501:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 1245              		.loc 1 501 0
 1246 0052 4FF4E170 		mov	r0, #450
 1247 0056 FFF7FEFF 		bl	PWM_2_WriteCompare
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 32


 502:.\main.c      **** }
 1248              		.loc 1 502 0
 1249 005a 80BD     		pop	{r7, pc}
 1250              	.L66:
 1251              		.align	2
 1252              	.L65:
 1253 005c 00000000 		.word	sensor_readings
 1254 0060 00000000 		.word	adc_flag
 1255              		.cfi_endproc
 1256              	.LFE76:
 1257              		.size	sharpTurnLeft, .-sharpTurnLeft
 1258              		.section	.text.sharpTurnRight,"ax",%progbits
 1259              		.align	2
 1260              		.global	sharpTurnRight
 1261              		.thumb
 1262              		.thumb_func
 1263              		.type	sharpTurnRight, %function
 1264              	sharpTurnRight:
 1265              	.LFB77:
 503:.\main.c      **** 
 504:.\main.c      **** void sharpTurnRight() {
 1266              		.loc 1 504 0
 1267              		.cfi_startproc
 1268              		@ args = 0, pretend = 0, frame = 0
 1269              		@ frame_needed = 1, uses_anonymous_args = 0
 1270 0000 80B5     		push	{r7, lr}
 1271              		.cfi_def_cfa_offset 8
 1272              		.cfi_offset 7, -8
 1273              		.cfi_offset 14, -4
 1274 0002 00AF     		add	r7, sp, #0
 1275              		.cfi_def_cfa_register 7
 505:.\main.c      ****     // go until we reach the line
 506:.\main.c      ****     while (!sensor_readings[BOTTOM_RIGHT_SENSOR]) {}
 1276              		.loc 1 506 0
 1277 0004 00BF     		nop
 1278              	.L68:
 1279              		.loc 1 506 0 is_stmt 0 discriminator 1
 1280 0006 154B     		ldr	r3, .L71
 1281 0008 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1282 000a 002B     		cmp	r3, #0
 1283 000c FBD0     		beq	.L68
 507:.\main.c      ****     
 508:.\main.c      ****     // make the turn
 509:.\main.c      ****     setWheelDirection(TRUE, FALSE);
 1284              		.loc 1 509 0 is_stmt 1
 1285 000e 0120     		movs	r0, #1
 1286 0010 0021     		movs	r1, #0
 1287 0012 FFF7FEFF 		bl	setWheelDirection
 510:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 1288              		.loc 1 510 0
 1289 0016 4FF4E170 		mov	r0, #450
 1290 001a FFF7FEFF 		bl	PWM_1_WriteCompare
 511:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 1291              		.loc 1 511 0
 1292 001e 4FF4E170 		mov	r0, #450
 1293 0022 FFF7FEFF 		bl	PWM_2_WriteCompare
 512:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 33


 1294              		.loc 1 512 0
 1295 0026 08E0     		b	.L69
 1296              	.L70:
 513:.\main.c      ****         if (adc_flag) {
 1297              		.loc 1 513 0
 1298 0028 0D4B     		ldr	r3, .L71+4
 1299 002a 1B68     		ldr	r3, [r3]
 1300 002c 002B     		cmp	r3, #0
 1301 002e 04D0     		beq	.L69
 514:.\main.c      ****             updateSensorValues();
 1302              		.loc 1 514 0
 1303 0030 FFF7FEFF 		bl	updateSensorValues
 515:.\main.c      ****             adc_flag = FALSE;
 1304              		.loc 1 515 0
 1305 0034 0A4B     		ldr	r3, .L71+4
 1306 0036 0022     		movs	r2, #0
 1307 0038 1A60     		str	r2, [r3]
 1308              	.L69:
 512:.\main.c      ****         if (adc_flag) {
 1309              		.loc 1 512 0
 1310 003a 084B     		ldr	r3, .L71
 1311 003c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1312 003e 002B     		cmp	r3, #0
 1313 0040 F2D0     		beq	.L70
 516:.\main.c      ****         }
 517:.\main.c      ****     }
 518:.\main.c      ****     setWheelDirection(TRUE, TRUE);
 1314              		.loc 1 518 0
 1315 0042 0120     		movs	r0, #1
 1316 0044 0121     		movs	r1, #1
 1317 0046 FFF7FEFF 		bl	setWheelDirection
 519:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 1318              		.loc 1 519 0
 1319 004a 4FF4E170 		mov	r0, #450
 1320 004e FFF7FEFF 		bl	PWM_1_WriteCompare
 520:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 1321              		.loc 1 520 0
 1322 0052 4FF4E170 		mov	r0, #450
 1323 0056 FFF7FEFF 		bl	PWM_2_WriteCompare
 521:.\main.c      **** }
 1324              		.loc 1 521 0
 1325 005a 80BD     		pop	{r7, pc}
 1326              	.L72:
 1327              		.align	2
 1328              	.L71:
 1329 005c 00000000 		.word	sensor_readings
 1330 0060 00000000 		.word	adc_flag
 1331              		.cfi_endproc
 1332              	.LFE77:
 1333              		.size	sharpTurnRight, .-sharpTurnRight
 1334              		.section	.text.usbPutString,"ax",%progbits
 1335              		.align	2
 1336              		.global	usbPutString
 1337              		.thumb
 1338              		.thumb_func
 1339              		.type	usbPutString, %function
 1340              	usbPutString:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 34


 1341              	.LFB78:
 522:.\main.c      **** //* ================== UNUSED FUNCTIONS ======================
 523:.\main.c      **** 
 524:.\main.c      **** /*
 525:.\main.c      **** * Function for performing a 90 degree turn
 526:.\main.c      **** * returns true once finished
 527:.\main.c      **** */
 528:.\main.c      **** //int8 performTurn(int isLeft){
 529:.\main.c      **** //    // Reset decoder measurements
 530:.\main.c      **** //    QuadDec_M1_SetCounter(0);
 531:.\main.c      **** //    QuadDec_M2_SetCounter(0);
 532:.\main.c      **** //    
 533:.\main.c      **** //    int M1_count, M2_count = 0;
 534:.\main.c      **** //    
 535:.\main.c      **** //    // Set PWMs to rotate
 536:.\main.c      **** //    PWM_1_WriteCompare(TURN_PWM_VAL);
 537:.\main.c      **** //    PWM_2_WriteCompare(TURN_PWM_VAL);
 538:.\main.c      **** //    
 539:.\main.c      **** //    // Set wheel direction for rotating on the spot
 540:.\main.c      **** //    if (isLeft){
 541:.\main.c      **** //        // left wheel moves backwarsd, right moves forwards
 542:.\main.c      **** //        setWheelDirection(FALSE, TRUE);}
 543:.\main.c      **** //    else {
 544:.\main.c      **** //        // right wheel moves forwards, left moves backwards
 545:.\main.c      **** //        setWheelDirection(TRUE, FALSE);
 546:.\main.c      **** //    }
 547:.\main.c      **** //    
 548:.\main.c      **** //    while (M1_count < TICKS_FOR_TURN || M2_count < TICKS_FOR_TURN) {
 549:.\main.c      **** //        M1_count = QuadDec_M1_GetCounter();
 550:.\main.c      **** //        M2_count = QuadDec_M2_GetCounter();
 551:.\main.c      **** //    }
 552:.\main.c      **** //    
 553:.\main.c      **** //    PWM_1_WriteCompare(0);
 554:.\main.c      **** //    PWM_2_WriteCompare(0);
 555:.\main.c      **** //    
 556:.\main.c      **** //    return TRUE;
 557:.\main.c      **** //}
 558:.\main.c      **** 
 559:.\main.c      **** 
 560:.\main.c      **** //* ========================================
 561:.\main.c      **** void usbPutString(char *s)
 562:.\main.c      **** {
 1342              		.loc 1 562 0
 1343              		.cfi_startproc
 1344              		@ args = 0, pretend = 0, frame = 8
 1345              		@ frame_needed = 1, uses_anonymous_args = 0
 1346              		@ link register save eliminated.
 1347 0000 80B4     		push	{r7}
 1348              		.cfi_def_cfa_offset 4
 1349              		.cfi_offset 7, -4
 1350 0002 83B0     		sub	sp, sp, #12
 1351              		.cfi_def_cfa_offset 16
 1352 0004 00AF     		add	r7, sp, #0
 1353              		.cfi_def_cfa_register 7
 1354 0006 7860     		str	r0, [r7, #4]
 563:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
 564:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 35


 565:.\main.c      **** //  length to 62 char (63rd char is a '!')
 566:.\main.c      ****     
 567:.\main.c      **** #ifdef PUTTY
 568:.\main.c      ****     
 569:.\main.c      ****     while (USBUART_CDCIsReady() == 0){ };
 570:.\main.c      ****     USBUART_PutData((uint8 *)s, strlen(s));
 571:.\main.c      ****     
 572:.\main.c      **** #endif
 573:.\main.c      **** 
 574:.\main.c      ****     (void)s;
 575:.\main.c      **** 
 576:.\main.c      ****     return;
 1355              		.loc 1 576 0
 1356 0008 00BF     		nop
 577:.\main.c      **** }
 1357              		.loc 1 577 0
 1358 000a 0C37     		adds	r7, r7, #12
 1359              		.cfi_def_cfa_offset 4
 1360 000c BD46     		mov	sp, r7
 1361              		.cfi_def_cfa_register 13
 1362              		@ sp needed
 1363 000e 5DF8047B 		ldr	r7, [sp], #4
 1364              		.cfi_restore 7
 1365              		.cfi_def_cfa_offset 0
 1366 0012 7047     		bx	lr
 1367              		.cfi_endproc
 1368              	.LFE78:
 1369              		.size	usbPutString, .-usbPutString
 1370              		.text
 1371              	.Letext0:
 1372              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 1373              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 1374              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1375              		.file 5 ".\\vars.h"
 1376              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1377              		.section	.debug_info,"",%progbits
 1378              	.Ldebug_info0:
 1379 0000 6A070000 		.4byte	0x76a
 1380 0004 0400     		.2byte	0x4
 1381 0006 00000000 		.4byte	.Ldebug_abbrev0
 1382 000a 04       		.byte	0x4
 1383 000b 01       		.uleb128 0x1
 1384 000c 2E020000 		.4byte	.LASF109
 1385 0010 01       		.byte	0x1
 1386 0011 33000000 		.4byte	.LASF110
 1387 0015 C0000000 		.4byte	.LASF111
 1388 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1389 001d 00000000 		.4byte	0
 1390 0021 00000000 		.4byte	.Ldebug_line0
 1391 0025 02       		.uleb128 0x2
 1392 0026 01       		.byte	0x1
 1393 0027 06       		.byte	0x6
 1394 0028 4D030000 		.4byte	.LASF0
 1395 002c 02       		.uleb128 0x2
 1396 002d 01       		.byte	0x1
 1397 002e 08       		.byte	0x8
 1398 002f 17030000 		.4byte	.LASF1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 36


 1399 0033 02       		.uleb128 0x2
 1400 0034 02       		.byte	0x2
 1401 0035 05       		.byte	0x5
 1402 0036 60000000 		.4byte	.LASF2
 1403 003a 02       		.uleb128 0x2
 1404 003b 02       		.byte	0x2
 1405 003c 07       		.byte	0x7
 1406 003d D5030000 		.4byte	.LASF3
 1407 0041 03       		.uleb128 0x3
 1408 0042 24050000 		.4byte	.LASF11
 1409 0046 02       		.byte	0x2
 1410 0047 3F       		.byte	0x3f
 1411 0048 4C000000 		.4byte	0x4c
 1412 004c 02       		.uleb128 0x2
 1413 004d 04       		.byte	0x4
 1414 004e 05       		.byte	0x5
 1415 004f 09040000 		.4byte	.LASF4
 1416 0053 02       		.uleb128 0x2
 1417 0054 04       		.byte	0x4
 1418 0055 07       		.byte	0x7
 1419 0056 A8030000 		.4byte	.LASF5
 1420 005a 02       		.uleb128 0x2
 1421 005b 08       		.byte	0x8
 1422 005c 05       		.byte	0x5
 1423 005d C3010000 		.4byte	.LASF6
 1424 0061 02       		.uleb128 0x2
 1425 0062 08       		.byte	0x8
 1426 0063 07       		.byte	0x7
 1427 0064 67030000 		.4byte	.LASF7
 1428 0068 04       		.uleb128 0x4
 1429 0069 04       		.byte	0x4
 1430 006a 05       		.byte	0x5
 1431 006b 696E7400 		.ascii	"int\000"
 1432 006f 02       		.uleb128 0x2
 1433 0070 04       		.byte	0x4
 1434 0071 07       		.byte	0x7
 1435 0072 84030000 		.4byte	.LASF8
 1436 0076 02       		.uleb128 0x2
 1437 0077 04       		.byte	0x4
 1438 0078 07       		.byte	0x7
 1439 0079 77000000 		.4byte	.LASF9
 1440 007d 05       		.uleb128 0x5
 1441 007e 04       		.byte	0x4
 1442 007f 83000000 		.4byte	0x83
 1443 0083 02       		.uleb128 0x2
 1444 0084 01       		.byte	0x1
 1445 0085 08       		.byte	0x8
 1446 0086 FB030000 		.4byte	.LASF10
 1447 008a 03       		.uleb128 0x3
 1448 008b 2B040000 		.4byte	.LASF12
 1449 008f 03       		.byte	0x3
 1450 0090 2C       		.byte	0x2c
 1451 0091 41000000 		.4byte	0x41
 1452 0095 06       		.uleb128 0x6
 1453 0096 6A010000 		.4byte	.LASF13
 1454 009a 04       		.byte	0x4
 1455 009b 9201     		.2byte	0x192
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 37


 1456 009d 2C000000 		.4byte	0x2c
 1457 00a1 06       		.uleb128 0x6
 1458 00a2 57010000 		.4byte	.LASF14
 1459 00a6 04       		.byte	0x4
 1460 00a7 9301     		.2byte	0x193
 1461 00a9 3A000000 		.4byte	0x3a
 1462 00ad 06       		.uleb128 0x6
 1463 00ae DE010000 		.4byte	.LASF15
 1464 00b2 04       		.byte	0x4
 1465 00b3 9501     		.2byte	0x195
 1466 00b5 25000000 		.4byte	0x25
 1467 00b9 06       		.uleb128 0x6
 1468 00ba 64010000 		.4byte	.LASF16
 1469 00be 04       		.byte	0x4
 1470 00bf 9601     		.2byte	0x196
 1471 00c1 33000000 		.4byte	0x33
 1472 00c5 06       		.uleb128 0x6
 1473 00c6 D3040000 		.4byte	.LASF17
 1474 00ca 04       		.byte	0x4
 1475 00cb 9701     		.2byte	0x197
 1476 00cd 4C000000 		.4byte	0x4c
 1477 00d1 02       		.uleb128 0x2
 1478 00d2 04       		.byte	0x4
 1479 00d3 04       		.byte	0x4
 1480 00d4 BD010000 		.4byte	.LASF18
 1481 00d8 02       		.uleb128 0x2
 1482 00d9 08       		.byte	0x8
 1483 00da 04       		.byte	0x4
 1484 00db D9040000 		.4byte	.LASF19
 1485 00df 07       		.uleb128 0x7
 1486 00e0 E8030000 		.4byte	.LASF112
 1487 00e4 20       		.byte	0x20
 1488 00e5 05       		.byte	0x5
 1489 00e6 29       		.byte	0x29
 1490 00e7 B8010000 		.4byte	0x1b8
 1491 00eb 08       		.uleb128 0x8
 1492 00ec E4050000 		.4byte	.LASF20
 1493 00f0 05       		.byte	0x5
 1494 00f1 2A       		.byte	0x2a
 1495 00f2 AD000000 		.4byte	0xad
 1496 00f6 00       		.byte	0
 1497 00f7 08       		.uleb128 0x8
 1498 00f8 5E010000 		.4byte	.LASF21
 1499 00fc 05       		.byte	0x5
 1500 00fd 2B       		.byte	0x2b
 1501 00fe 95000000 		.4byte	0x95
 1502 0102 01       		.byte	0x1
 1503 0103 08       		.uleb128 0x8
 1504 0104 12040000 		.4byte	.LASF22
 1505 0108 05       		.byte	0x5
 1506 0109 2C       		.byte	0x2c
 1507 010a B9000000 		.4byte	0xb9
 1508 010e 02       		.byte	0x2
 1509 010f 08       		.uleb128 0x8
 1510 0110 B7050000 		.4byte	.LASF23
 1511 0114 05       		.byte	0x5
 1512 0115 2D       		.byte	0x2d
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 38


 1513 0116 B9000000 		.4byte	0xb9
 1514 011a 04       		.byte	0x4
 1515 011b 08       		.uleb128 0x8
 1516 011c C7020000 		.4byte	.LASF24
 1517 0120 05       		.byte	0x5
 1518 0121 2E       		.byte	0x2e
 1519 0122 B9000000 		.4byte	0xb9
 1520 0126 06       		.byte	0x6
 1521 0127 08       		.uleb128 0x8
 1522 0128 A8040000 		.4byte	.LASF25
 1523 012c 05       		.byte	0x5
 1524 012d 2F       		.byte	0x2f
 1525 012e B9000000 		.4byte	0xb9
 1526 0132 08       		.byte	0x8
 1527 0133 08       		.uleb128 0x8
 1528 0134 56050000 		.4byte	.LASF26
 1529 0138 05       		.byte	0x5
 1530 0139 30       		.byte	0x30
 1531 013a B9000000 		.4byte	0xb9
 1532 013e 0A       		.byte	0xa
 1533 013f 08       		.uleb128 0x8
 1534 0140 2F030000 		.4byte	.LASF27
 1535 0144 05       		.byte	0x5
 1536 0145 31       		.byte	0x31
 1537 0146 B9000000 		.4byte	0xb9
 1538 014a 0C       		.byte	0xc
 1539 014b 08       		.uleb128 0x8
 1540 014c 0D020000 		.4byte	.LASF28
 1541 0150 05       		.byte	0x5
 1542 0151 32       		.byte	0x32
 1543 0152 B9000000 		.4byte	0xb9
 1544 0156 0E       		.byte	0xe
 1545 0157 08       		.uleb128 0x8
 1546 0158 CD030000 		.4byte	.LASF29
 1547 015c 05       		.byte	0x5
 1548 015d 33       		.byte	0x33
 1549 015e B9000000 		.4byte	0xb9
 1550 0162 10       		.byte	0x10
 1551 0163 08       		.uleb128 0x8
 1552 0164 33040000 		.4byte	.LASF30
 1553 0168 05       		.byte	0x5
 1554 0169 34       		.byte	0x34
 1555 016a B9000000 		.4byte	0xb9
 1556 016e 12       		.byte	0x12
 1557 016f 08       		.uleb128 0x8
 1558 0170 55040000 		.4byte	.LASF31
 1559 0174 05       		.byte	0x5
 1560 0175 35       		.byte	0x35
 1561 0176 B9000000 		.4byte	0xb9
 1562 017a 14       		.byte	0x14
 1563 017b 08       		.uleb128 0x8
 1564 017c 70010000 		.4byte	.LASF32
 1565 0180 05       		.byte	0x5
 1566 0181 36       		.byte	0x36
 1567 0182 B9000000 		.4byte	0xb9
 1568 0186 16       		.byte	0x16
 1569 0187 08       		.uleb128 0x8
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 39


 1570 0188 58000000 		.4byte	.LASF33
 1571 018c 05       		.byte	0x5
 1572 018d 37       		.byte	0x37
 1573 018e B9000000 		.4byte	0xb9
 1574 0192 18       		.byte	0x18
 1575 0193 08       		.uleb128 0x8
 1576 0194 05020000 		.4byte	.LASF34
 1577 0198 05       		.byte	0x5
 1578 0199 38       		.byte	0x38
 1579 019a B9000000 		.4byte	0xb9
 1580 019e 1A       		.byte	0x1a
 1581 019f 08       		.uleb128 0x8
 1582 01a0 C4030000 		.4byte	.LASF35
 1583 01a4 05       		.byte	0x5
 1584 01a5 39       		.byte	0x39
 1585 01a6 B9000000 		.4byte	0xb9
 1586 01aa 1C       		.byte	0x1c
 1587 01ab 08       		.uleb128 0x8
 1588 01ac 3B040000 		.4byte	.LASF36
 1589 01b0 05       		.byte	0x5
 1590 01b1 3A       		.byte	0x3a
 1591 01b2 B9000000 		.4byte	0xb9
 1592 01b6 1E       		.byte	0x1e
 1593 01b7 00       		.byte	0
 1594 01b8 09       		.uleb128 0x9
 1595 01b9 69040000 		.4byte	.LASF46
 1596 01bd 01       		.byte	0x1
 1597 01be 01       		.byte	0x1
 1598 01bf 42       		.byte	0x42
 1599 01c0 FB010000 		.4byte	0x1fb
 1600 01c4 0A       		.uleb128 0xa
 1601 01c5 3C000000 		.4byte	.LASF37
 1602 01c9 00       		.sleb128 0
 1603 01ca 0A       		.uleb128 0xa
 1604 01cb A0000000 		.4byte	.LASF38
 1605 01cf 01       		.sleb128 1
 1606 01d0 0A       		.uleb128 0xa
 1607 01d1 06060000 		.4byte	.LASF39
 1608 01d5 02       		.sleb128 2
 1609 01d6 0A       		.uleb128 0xa
 1610 01d7 26000000 		.4byte	.LASF40
 1611 01db 03       		.sleb128 3
 1612 01dc 0A       		.uleb128 0xa
 1613 01dd 94040000 		.4byte	.LASF41
 1614 01e1 04       		.sleb128 4
 1615 01e2 0A       		.uleb128 0xa
 1616 01e3 BC020000 		.4byte	.LASF42
 1617 01e7 05       		.sleb128 5
 1618 01e8 0A       		.uleb128 0xa
 1619 01e9 25030000 		.4byte	.LASF43
 1620 01ed 06       		.sleb128 6
 1621 01ee 0A       		.uleb128 0xa
 1622 01ef 13050000 		.4byte	.LASF44
 1623 01f3 07       		.sleb128 7
 1624 01f4 0A       		.uleb128 0xa
 1625 01f5 29020000 		.4byte	.LASF45
 1626 01f9 08       		.sleb128 8
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 40


 1627 01fa 00       		.byte	0
 1628 01fb 03       		.uleb128 0x3
 1629 01fc 69040000 		.4byte	.LASF46
 1630 0200 01       		.byte	0x1
 1631 0201 4C       		.byte	0x4c
 1632 0202 B8010000 		.4byte	0x1b8
 1633 0206 0B       		.uleb128 0xb
 1634 0207 41030000 		.4byte	.LASF47
 1635 020b 01       		.byte	0x1
 1636 020c 6E       		.byte	0x6e
 1637 020d 00000000 		.4byte	.LFB63
 1638 0211 30000000 		.4byte	.LFE63-.LFB63
 1639 0215 01       		.uleb128 0x1
 1640 0216 9C       		.byte	0x9c
 1641 0217 0C       		.uleb128 0xc
 1642 0218 03030000 		.4byte	.LASF48
 1643 021c 01       		.byte	0x1
 1644 021d 75       		.byte	0x75
 1645 021e 00000000 		.4byte	.LFB64
 1646 0222 18000000 		.4byte	.LFE64-.LFB64
 1647 0226 01       		.uleb128 0x1
 1648 0227 9C       		.byte	0x9c
 1649 0228 0D       		.uleb128 0xd
 1650 0229 AF000000 		.4byte	.LASF55
 1651 022d 01       		.byte	0x1
 1652 022e 8A       		.byte	0x8a
 1653 022f 68000000 		.4byte	0x68
 1654 0233 00000000 		.4byte	.LFB65
 1655 0237 8C000000 		.4byte	.LFE65-.LFB65
 1656 023b 01       		.uleb128 0x1
 1657 023c 9C       		.byte	0x9c
 1658 023d A1020000 		.4byte	0x2a1
 1659 0241 0E       		.uleb128 0xe
 1660 0242 0B030000 		.4byte	.LASF49
 1661 0246 01       		.byte	0x1
 1662 0247 B0       		.byte	0xb0
 1663 0248 68000000 		.4byte	0x68
 1664 024c 02       		.uleb128 0x2
 1665 024d 91       		.byte	0x91
 1666 024e 74       		.sleb128 -12
 1667 024f 0E       		.uleb128 0xe
 1668 0250 7D010000 		.4byte	.LASF50
 1669 0254 01       		.byte	0x1
 1670 0255 B1       		.byte	0xb1
 1671 0256 68000000 		.4byte	0x68
 1672 025a 02       		.uleb128 0x2
 1673 025b 91       		.byte	0x91
 1674 025c 70       		.sleb128 -16
 1675 025d 0E       		.uleb128 0xe
 1676 025e B0040000 		.4byte	.LASF51
 1677 0262 01       		.byte	0x1
 1678 0263 B2       		.byte	0xb2
 1679 0264 68000000 		.4byte	0x68
 1680 0268 02       		.uleb128 0x2
 1681 0269 91       		.byte	0x91
 1682 026a 6C       		.sleb128 -20
 1683 026b 0E       		.uleb128 0xe
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 41


 1684 026c C2040000 		.4byte	.LASF52
 1685 0270 01       		.byte	0x1
 1686 0271 B3       		.byte	0xb3
 1687 0272 68000000 		.4byte	0x68
 1688 0276 02       		.uleb128 0x2
 1689 0277 91       		.byte	0x91
 1690 0278 68       		.sleb128 -24
 1691 0279 0E       		.uleb128 0xe
 1692 027a 3E050000 		.4byte	.LASF53
 1693 027e 01       		.byte	0x1
 1694 027f B4       		.byte	0xb4
 1695 0280 68000000 		.4byte	0x68
 1696 0284 02       		.uleb128 0x2
 1697 0285 91       		.byte	0x91
 1698 0286 64       		.sleb128 -28
 1699 0287 0F       		.uleb128 0xf
 1700 0288 44000000 		.4byte	.LASF113
 1701 028c 01       		.byte	0x1
 1702 028d B6       		.byte	0xb6
 1703 028e FB010000 		.4byte	0x1fb
 1704 0292 0E       		.uleb128 0xe
 1705 0293 C2050000 		.4byte	.LASF54
 1706 0297 01       		.byte	0x1
 1707 0298 B7       		.byte	0xb7
 1708 0299 FB010000 		.4byte	0x1fb
 1709 029d 02       		.uleb128 0x2
 1710 029e 91       		.byte	0x91
 1711 029f 63       		.sleb128 -29
 1712 02a0 00       		.byte	0
 1713 02a1 10       		.uleb128 0x10
 1714 02a2 B2010000 		.4byte	.LASF56
 1715 02a6 01       		.byte	0x1
 1716 02a7 2901     		.2byte	0x129
 1717 02a9 00000000 		.4byte	.LFB66
 1718 02ad 54010000 		.4byte	.LFE66-.LFB66
 1719 02b1 01       		.uleb128 0x1
 1720 02b2 9C       		.byte	0x9c
 1721 02b3 12030000 		.4byte	0x312
 1722 02b7 11       		.uleb128 0x11
 1723 02b8 83040000 		.4byte	.LASF58
 1724 02bc 01       		.byte	0x1
 1725 02bd 2901     		.2byte	0x129
 1726 02bf 68000000 		.4byte	0x68
 1727 02c3 02       		.uleb128 0x2
 1728 02c4 91       		.byte	0x91
 1729 02c5 5C       		.sleb128 -36
 1730 02c6 12       		.uleb128 0x12
 1731 02c7 0B030000 		.4byte	.LASF49
 1732 02cb 01       		.byte	0x1
 1733 02cc 2B01     		.2byte	0x12b
 1734 02ce 68000000 		.4byte	0x68
 1735 02d2 02       		.uleb128 0x2
 1736 02d3 91       		.byte	0x91
 1737 02d4 74       		.sleb128 -12
 1738 02d5 12       		.uleb128 0x12
 1739 02d6 7D010000 		.4byte	.LASF50
 1740 02da 01       		.byte	0x1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 42


 1741 02db 2C01     		.2byte	0x12c
 1742 02dd 68000000 		.4byte	0x68
 1743 02e1 02       		.uleb128 0x2
 1744 02e2 91       		.byte	0x91
 1745 02e3 70       		.sleb128 -16
 1746 02e4 12       		.uleb128 0x12
 1747 02e5 B0040000 		.4byte	.LASF51
 1748 02e9 01       		.byte	0x1
 1749 02ea 2D01     		.2byte	0x12d
 1750 02ec 68000000 		.4byte	0x68
 1751 02f0 02       		.uleb128 0x2
 1752 02f1 91       		.byte	0x91
 1753 02f2 6C       		.sleb128 -20
 1754 02f3 12       		.uleb128 0x12
 1755 02f4 C2040000 		.4byte	.LASF52
 1756 02f8 01       		.byte	0x1
 1757 02f9 2E01     		.2byte	0x12e
 1758 02fb 68000000 		.4byte	0x68
 1759 02ff 02       		.uleb128 0x2
 1760 0300 91       		.byte	0x91
 1761 0301 68       		.sleb128 -24
 1762 0302 12       		.uleb128 0x12
 1763 0303 F2030000 		.4byte	.LASF57
 1764 0307 01       		.byte	0x1
 1765 0308 2F01     		.2byte	0x12f
 1766 030a D1000000 		.4byte	0xd1
 1767 030e 02       		.uleb128 0x2
 1768 030f 91       		.byte	0x91
 1769 0310 64       		.sleb128 -28
 1770 0311 00       		.byte	0
 1771 0312 13       		.uleb128 0x13
 1772 0313 7D050000 		.4byte	.LASF61
 1773 0317 01       		.byte	0x1
 1774 0318 7601     		.2byte	0x176
 1775 031a D1000000 		.4byte	0xd1
 1776 031e 00000000 		.4byte	.LFB67
 1777 0322 CC000000 		.4byte	.LFE67-.LFB67
 1778 0326 01       		.uleb128 0x1
 1779 0327 9C       		.byte	0x9c
 1780 0328 69030000 		.4byte	0x369
 1781 032c 11       		.uleb128 0x11
 1782 032d 0B030000 		.4byte	.LASF49
 1783 0331 01       		.byte	0x1
 1784 0332 7601     		.2byte	0x176
 1785 0334 68000000 		.4byte	0x68
 1786 0338 02       		.uleb128 0x2
 1787 0339 91       		.byte	0x91
 1788 033a 6C       		.sleb128 -20
 1789 033b 11       		.uleb128 0x11
 1790 033c 7D010000 		.4byte	.LASF50
 1791 0340 01       		.byte	0x1
 1792 0341 7601     		.2byte	0x176
 1793 0343 68000000 		.4byte	0x68
 1794 0347 02       		.uleb128 0x2
 1795 0348 91       		.byte	0x91
 1796 0349 68       		.sleb128 -24
 1797 034a 12       		.uleb128 0x12
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 43


 1798 034b 91030000 		.4byte	.LASF59
 1799 034f 01       		.byte	0x1
 1800 0350 7701     		.2byte	0x177
 1801 0352 D1000000 		.4byte	0xd1
 1802 0356 02       		.uleb128 0x2
 1803 0357 91       		.byte	0x91
 1804 0358 74       		.sleb128 -12
 1805 0359 12       		.uleb128 0x12
 1806 035a 12000000 		.4byte	.LASF60
 1807 035e 01       		.byte	0x1
 1808 035f 7801     		.2byte	0x178
 1809 0361 D1000000 		.4byte	0xd1
 1810 0365 02       		.uleb128 0x2
 1811 0366 91       		.byte	0x91
 1812 0367 70       		.sleb128 -16
 1813 0368 00       		.byte	0
 1814 0369 13       		.uleb128 0x13
 1815 036a 96010000 		.4byte	.LASF62
 1816 036e 01       		.byte	0x1
 1817 036f 7D01     		.2byte	0x17d
 1818 0371 C5000000 		.4byte	0xc5
 1819 0375 00000000 		.4byte	.LFB68
 1820 0379 24000000 		.4byte	.LFE68-.LFB68
 1821 037d 01       		.uleb128 0x1
 1822 037e 9C       		.byte	0x9c
 1823 037f 91030000 		.4byte	0x391
 1824 0383 14       		.uleb128 0x14
 1825 0384 6E00     		.ascii	"n\000"
 1826 0386 01       		.byte	0x1
 1827 0387 7D01     		.2byte	0x17d
 1828 0389 B9000000 		.4byte	0xb9
 1829 038d 02       		.uleb128 0x2
 1830 038e 91       		.byte	0x91
 1831 038f 76       		.sleb128 -10
 1832 0390 00       		.byte	0
 1833 0391 15       		.uleb128 0x15
 1834 0392 E3010000 		.4byte	.LASF114
 1835 0396 01       		.byte	0x1
 1836 0397 8101     		.2byte	0x181
 1837 0399 00000000 		.4byte	.LFB69
 1838 039d B4000000 		.4byte	.LFE69-.LFB69
 1839 03a1 01       		.uleb128 0x1
 1840 03a2 9C       		.byte	0x9c
 1841 03a3 CE030000 		.4byte	0x3ce
 1842 03a7 16       		.uleb128 0x16
 1843 03a8 6900     		.ascii	"i\000"
 1844 03aa 01       		.byte	0x1
 1845 03ab 8301     		.2byte	0x183
 1846 03ad 68000000 		.4byte	0x68
 1847 03b1 02       		.uleb128 0x2
 1848 03b2 91       		.byte	0x91
 1849 03b3 74       		.sleb128 -12
 1850 03b4 17       		.uleb128 0x17
 1851 03b5 0C000000 		.4byte	.LBB2
 1852 03b9 26000000 		.4byte	.LBE2-.LBB2
 1853 03bd 12       		.uleb128 0x12
 1854 03be A0040000 		.4byte	.LASF63
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 44


 1855 03c2 01       		.byte	0x1
 1856 03c3 8501     		.2byte	0x185
 1857 03c5 68000000 		.4byte	0x68
 1858 03c9 02       		.uleb128 0x2
 1859 03ca 91       		.byte	0x91
 1860 03cb 70       		.sleb128 -16
 1861 03cc 00       		.byte	0
 1862 03cd 00       		.byte	0
 1863 03ce 10       		.uleb128 0x10
 1864 03cf E0040000 		.4byte	.LASF64
 1865 03d3 01       		.byte	0x1
 1866 03d4 9801     		.2byte	0x198
 1867 03d6 00000000 		.4byte	.LFB70
 1868 03da 2A000000 		.4byte	.LFE70-.LFB70
 1869 03de 01       		.uleb128 0x1
 1870 03df 9C       		.byte	0x9c
 1871 03e0 03040000 		.4byte	0x403
 1872 03e4 11       		.uleb128 0x11
 1873 03e5 CD050000 		.4byte	.LASF65
 1874 03e9 01       		.byte	0x1
 1875 03ea 9801     		.2byte	0x198
 1876 03ec 68000000 		.4byte	0x68
 1877 03f0 02       		.uleb128 0x2
 1878 03f1 91       		.byte	0x91
 1879 03f2 6C       		.sleb128 -20
 1880 03f3 12       		.uleb128 0x12
 1881 03f4 4C050000 		.4byte	.LASF66
 1882 03f8 01       		.byte	0x1
 1883 03f9 9901     		.2byte	0x199
 1884 03fb 68000000 		.4byte	0x68
 1885 03ff 02       		.uleb128 0x2
 1886 0400 91       		.byte	0x91
 1887 0401 74       		.sleb128 -12
 1888 0402 00       		.byte	0
 1889 0403 10       		.uleb128 0x10
 1890 0404 80000000 		.4byte	.LASF67
 1891 0408 01       		.byte	0x1
 1892 0409 9D01     		.2byte	0x19d
 1893 040b 00000000 		.4byte	.LFB71
 1894 040f 2A000000 		.4byte	.LFE71-.LFB71
 1895 0413 01       		.uleb128 0x1
 1896 0414 9C       		.byte	0x9c
 1897 0415 38040000 		.4byte	0x438
 1898 0419 11       		.uleb128 0x11
 1899 041a CD050000 		.4byte	.LASF65
 1900 041e 01       		.byte	0x1
 1901 041f 9D01     		.2byte	0x19d
 1902 0421 68000000 		.4byte	0x68
 1903 0425 02       		.uleb128 0x2
 1904 0426 91       		.byte	0x91
 1905 0427 6C       		.sleb128 -20
 1906 0428 12       		.uleb128 0x12
 1907 0429 4C050000 		.4byte	.LASF66
 1908 042d 01       		.byte	0x1
 1909 042e 9E01     		.2byte	0x19e
 1910 0430 68000000 		.4byte	0x68
 1911 0434 02       		.uleb128 0x2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 45


 1912 0435 91       		.byte	0x91
 1913 0436 74       		.sleb128 -12
 1914 0437 00       		.byte	0
 1915 0438 10       		.uleb128 0x10
 1916 0439 89010000 		.4byte	.LASF68
 1917 043d 01       		.byte	0x1
 1918 043e A601     		.2byte	0x1a6
 1919 0440 00000000 		.4byte	.LFB72
 1920 0444 52000000 		.4byte	.LFE72-.LFB72
 1921 0448 01       		.uleb128 0x1
 1922 0449 9C       		.byte	0x9c
 1923 044a BD040000 		.4byte	0x4bd
 1924 044e 11       		.uleb128 0x11
 1925 044f BA030000 		.4byte	.LASF69
 1926 0453 01       		.byte	0x1
 1927 0454 A601     		.2byte	0x1a6
 1928 0456 68000000 		.4byte	0x68
 1929 045a 03       		.uleb128 0x3
 1930 045b 91       		.byte	0x91
 1931 045c AC7F     		.sleb128 -84
 1932 045e 11       		.uleb128 0x11
 1933 045f 0D050000 		.4byte	.LASF70
 1934 0463 01       		.byte	0x1
 1935 0464 A601     		.2byte	0x1a6
 1936 0466 68000000 		.4byte	0x68
 1937 046a 03       		.uleb128 0x3
 1938 046b 91       		.byte	0x91
 1939 046c A87F     		.sleb128 -88
 1940 046e 11       		.uleb128 0x11
 1941 046f 59030000 		.4byte	.LASF71
 1942 0473 01       		.byte	0x1
 1943 0474 A601     		.2byte	0x1a6
 1944 0476 68000000 		.4byte	0x68
 1945 047a 03       		.uleb128 0x3
 1946 047b 91       		.byte	0x91
 1947 047c A47F     		.sleb128 -92
 1948 047e 11       		.uleb128 0x11
 1949 047f B4000000 		.4byte	.LASF72
 1950 0483 01       		.byte	0x1
 1951 0484 A601     		.2byte	0x1a6
 1952 0486 68000000 		.4byte	0x68
 1953 048a 03       		.uleb128 0x3
 1954 048b 91       		.byte	0x91
 1955 048c A07F     		.sleb128 -96
 1956 048e 12       		.uleb128 0x12
 1957 048f 5E040000 		.4byte	.LASF73
 1958 0493 01       		.byte	0x1
 1959 0494 AB01     		.2byte	0x1ab
 1960 0496 68000000 		.4byte	0x68
 1961 049a 02       		.uleb128 0x2
 1962 049b 91       		.byte	0x91
 1963 049c 74       		.sleb128 -12
 1964 049d 16       		.uleb128 0x16
 1965 049e 6D736700 		.ascii	"msg\000"
 1966 04a2 01       		.byte	0x1
 1967 04a3 B001     		.2byte	0x1b0
 1968 04a5 BD040000 		.4byte	0x4bd
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 46


 1969 04a9 03       		.uleb128 0x3
 1970 04aa 91       		.byte	0x91
 1971 04ab B07F     		.sleb128 -80
 1972 04ad 12       		.uleb128 0x12
 1973 04ae 00000000 		.4byte	.LASF74
 1974 04b2 01       		.byte	0x1
 1975 04b3 B701     		.2byte	0x1b7
 1976 04b5 68000000 		.4byte	0x68
 1977 04b9 02       		.uleb128 0x2
 1978 04ba 91       		.byte	0x91
 1979 04bb 70       		.sleb128 -16
 1980 04bc 00       		.byte	0
 1981 04bd 18       		.uleb128 0x18
 1982 04be 83000000 		.4byte	0x83
 1983 04c2 CD040000 		.4byte	0x4cd
 1984 04c6 19       		.uleb128 0x19
 1985 04c7 76000000 		.4byte	0x76
 1986 04cb 3F       		.byte	0x3f
 1987 04cc 00       		.byte	0
 1988 04cd 10       		.uleb128 0x10
 1989 04ce 89050000 		.4byte	.LASF75
 1990 04d2 01       		.byte	0x1
 1991 04d3 C801     		.2byte	0x1c8
 1992 04d5 00000000 		.4byte	.LFB73
 1993 04d9 2C000000 		.4byte	.LFE73-.LFB73
 1994 04dd 01       		.uleb128 0x1
 1995 04de 9C       		.byte	0x9c
 1996 04df 02050000 		.4byte	0x502
 1997 04e3 11       		.uleb128 0x11
 1998 04e4 E9050000 		.4byte	.LASF76
 1999 04e8 01       		.byte	0x1
 2000 04e9 C801     		.2byte	0x1c8
 2001 04eb 68000000 		.4byte	0x68
 2002 04ef 02       		.uleb128 0x2
 2003 04f0 91       		.byte	0x91
 2004 04f1 74       		.sleb128 -12
 2005 04f2 11       		.uleb128 0x11
 2006 04f3 1A020000 		.4byte	.LASF77
 2007 04f7 01       		.byte	0x1
 2008 04f8 C801     		.2byte	0x1c8
 2009 04fa 68000000 		.4byte	0x68
 2010 04fe 02       		.uleb128 0x2
 2011 04ff 91       		.byte	0x91
 2012 0500 70       		.sleb128 -16
 2013 0501 00       		.byte	0
 2014 0502 1A       		.uleb128 0x1a
 2015 0503 38030000 		.4byte	.LASF78
 2016 0507 01       		.byte	0x1
 2017 0508 CD01     		.2byte	0x1cd
 2018 050a 00000000 		.4byte	.LFB74
 2019 050e 40000000 		.4byte	.LFE74-.LFB74
 2020 0512 01       		.uleb128 0x1
 2021 0513 9C       		.byte	0x9c
 2022 0514 1A       		.uleb128 0x1a
 2023 0515 5E050000 		.4byte	.LASF79
 2024 0519 01       		.byte	0x1
 2025 051a D901     		.2byte	0x1d9
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 47


 2026 051c 00000000 		.4byte	.LFB75
 2027 0520 40000000 		.4byte	.LFE75-.LFB75
 2028 0524 01       		.uleb128 0x1
 2029 0525 9C       		.byte	0x9c
 2030 0526 1A       		.uleb128 0x1a
 2031 0527 1D040000 		.4byte	.LASF80
 2032 052b 01       		.byte	0x1
 2033 052c E501     		.2byte	0x1e5
 2034 052e 00000000 		.4byte	.LFB76
 2035 0532 64000000 		.4byte	.LFE76-.LFB76
 2036 0536 01       		.uleb128 0x1
 2037 0537 9C       		.byte	0x9c
 2038 0538 1A       		.uleb128 0x1a
 2039 0539 F7050000 		.4byte	.LASF81
 2040 053d 01       		.byte	0x1
 2041 053e F801     		.2byte	0x1f8
 2042 0540 00000000 		.4byte	.LFB77
 2043 0544 64000000 		.4byte	.LFE77-.LFB77
 2044 0548 01       		.uleb128 0x1
 2045 0549 9C       		.byte	0x9c
 2046 054a 1B       		.uleb128 0x1b
 2047 054b D1010000 		.4byte	.LASF82
 2048 054f 01       		.byte	0x1
 2049 0550 3102     		.2byte	0x231
 2050 0552 00000000 		.4byte	.LFB78
 2051 0556 14000000 		.4byte	.LFE78-.LFB78
 2052 055a 01       		.uleb128 0x1
 2053 055b 9C       		.byte	0x9c
 2054 055c 6E050000 		.4byte	0x56e
 2055 0560 14       		.uleb128 0x14
 2056 0561 7300     		.ascii	"s\000"
 2057 0563 01       		.byte	0x1
 2058 0564 3102     		.2byte	0x231
 2059 0566 7D000000 		.4byte	0x7d
 2060 056a 02       		.uleb128 0x2
 2061 056b 91       		.byte	0x91
 2062 056c 74       		.sleb128 -12
 2063 056d 00       		.byte	0
 2064 056e 1C       		.uleb128 0x1c
 2065 056f 4A010000 		.4byte	.LASF83
 2066 0573 06       		.byte	0x6
 2067 0574 9606     		.2byte	0x696
 2068 0576 7A050000 		.4byte	0x57a
 2069 057a 1D       		.uleb128 0x1d
 2070 057b 8A000000 		.4byte	0x8a
 2071 057f 1E       		.uleb128 0x1e
 2072 0580 747300   		.ascii	"ts\000"
 2073 0583 05       		.byte	0x5
 2074 0584 10       		.byte	0x10
 2075 0585 95000000 		.4byte	0x95
 2076 0589 05       		.uleb128 0x5
 2077 058a 03       		.byte	0x3
 2078 058b 00000000 		.4byte	ts
 2079 058f 1F       		.uleb128 0x1f
 2080 0590 0B000000 		.4byte	.LASF84
 2081 0594 05       		.byte	0x5
 2082 0595 11       		.byte	0x11
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 48


 2083 0596 A1000000 		.4byte	0xa1
 2084 059a 05       		.uleb128 0x5
 2085 059b 03       		.byte	0x3
 2086 059c 00000000 		.4byte	ts_enc
 2087 05a0 1F       		.uleb128 0x1f
 2088 05a1 73050000 		.4byte	.LASF85
 2089 05a5 05       		.byte	0x5
 2090 05a6 12       		.byte	0x12
 2091 05a7 A1000000 		.4byte	0xa1
 2092 05ab 05       		.uleb128 0x5
 2093 05ac 03       		.byte	0x3
 2094 05ad 00000000 		.4byte	ts_update
 2095 05b1 1F       		.uleb128 0x1f
 2096 05b2 04050000 		.4byte	.LASF86
 2097 05b6 05       		.byte	0x5
 2098 05b7 13       		.byte	0x13
 2099 05b8 A1000000 		.4byte	0xa1
 2100 05bc 05       		.uleb128 0x5
 2101 05bd 03       		.byte	0x3
 2102 05be 00000000 		.4byte	ts_speed
 2103 05c2 1F       		.uleb128 0x1f
 2104 05c3 68050000 		.4byte	.LASF87
 2105 05c7 05       		.byte	0x5
 2106 05c8 14       		.byte	0x14
 2107 05c9 A1000000 		.4byte	0xa1
 2108 05cd 05       		.uleb128 0x5
 2109 05ce 03       		.byte	0x3
 2110 05cf 00000000 		.4byte	ts_display
 2111 05d3 1F       		.uleb128 0x1f
 2112 05d4 18050000 		.4byte	.LASF88
 2113 05d8 05       		.byte	0x5
 2114 05d9 16       		.byte	0x16
 2115 05da 95000000 		.4byte	0x95
 2116 05de 05       		.uleb128 0x5
 2117 05df 03       		.byte	0x3
 2118 05e0 00000000 		.4byte	flag_ts_enc
 2119 05e4 1F       		.uleb128 0x1f
 2120 05e5 F6010000 		.4byte	.LASF89
 2121 05e9 05       		.byte	0x5
 2122 05ea 17       		.byte	0x17
 2123 05eb 95000000 		.4byte	0x95
 2124 05ef 05       		.uleb128 0x5
 2125 05f0 03       		.byte	0x3
 2126 05f1 00000000 		.4byte	flag_ts_update
 2127 05f5 1F       		.uleb128 0x1f
 2128 05f6 4A000000 		.4byte	.LASF90
 2129 05fa 05       		.byte	0x5
 2130 05fb 18       		.byte	0x18
 2131 05fc 95000000 		.4byte	0x95
 2132 0600 05       		.uleb128 0x5
 2133 0601 03       		.byte	0x3
 2134 0602 00000000 		.4byte	flag_ts_speed
 2135 0606 1F       		.uleb128 0x1f
 2136 0607 DE020000 		.4byte	.LASF91
 2137 060b 05       		.byte	0x5
 2138 060c 19       		.byte	0x19
 2139 060d 95000000 		.4byte	0x95
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 49


 2140 0611 05       		.uleb128 0x5
 2141 0612 03       		.byte	0x3
 2142 0613 00000000 		.4byte	flag_ts_display
 2143 0617 1F       		.uleb128 0x1f
 2144 0618 EE020000 		.4byte	.LASF92
 2145 061c 05       		.byte	0x5
 2146 061d 1C       		.byte	0x1c
 2147 061e 95000000 		.4byte	0x95
 2148 0622 05       		.uleb128 0x5
 2149 0623 03       		.byte	0x3
 2150 0624 00000000 		.4byte	flag_rx
 2151 0628 1F       		.uleb128 0x1f
 2152 0629 1A000000 		.4byte	.LASF93
 2153 062d 05       		.byte	0x5
 2154 062e 1D       		.byte	0x1d
 2155 062f 95000000 		.4byte	0x95
 2156 0633 05       		.uleb128 0x5
 2157 0634 03       		.byte	0x3
 2158 0635 00000000 		.4byte	flag_packet
 2159 0639 1F       		.uleb128 0x1f
 2160 063a 99030000 		.4byte	.LASF94
 2161 063e 05       		.byte	0x5
 2162 063f 1E       		.byte	0x1e
 2163 0640 95000000 		.4byte	0x95
 2164 0644 05       		.uleb128 0x5
 2165 0645 03       		.byte	0x3
 2166 0646 00000000 		.4byte	flag_KB_string
 2167 064a 1F       		.uleb128 0x1f
 2168 064b F5040000 		.4byte	.LASF95
 2169 064f 05       		.byte	0x5
 2170 0650 20       		.byte	0x20
 2171 0651 95000000 		.4byte	0x95
 2172 0655 05       		.uleb128 0x5
 2173 0656 03       		.byte	0x3
 2174 0657 00000000 		.4byte	dataready_flag
 2175 065b 1F       		.uleb128 0x1f
 2176 065c 9B050000 		.4byte	.LASF96
 2177 0660 05       		.byte	0x5
 2178 0661 22       		.byte	0x22
 2179 0662 95000000 		.4byte	0x95
 2180 0666 05       		.uleb128 0x5
 2181 0667 03       		.byte	0x3
 2182 0668 00000000 		.4byte	flag_rf_transmission_active
 2183 066c 1F       		.uleb128 0x1f
 2184 066d 75040000 		.4byte	.LASF97
 2185 0671 05       		.byte	0x5
 2186 0672 25       		.byte	0x25
 2187 0673 BD040000 		.4byte	0x4bd
 2188 0677 05       		.uleb128 0x5
 2189 0678 03       		.byte	0x3
 2190 0679 00000000 		.4byte	displaystring
 2191 067d 1F       		.uleb128 0x1f
 2192 067e D9020000 		.4byte	.LASF98
 2193 0682 05       		.byte	0x5
 2194 0683 26       		.byte	0x26
 2195 0684 BD040000 		.4byte	0x4bd
 2196 0688 05       		.uleb128 0x5
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 50


 2197 0689 03       		.byte	0x3
 2198 068a 00000000 		.4byte	line
 2199 068e 1F       		.uleb128 0x1f
 2200 068f 7E030000 		.4byte	.LASF99
 2201 0693 05       		.byte	0x5
 2202 0694 26       		.byte	0x26
 2203 0695 BD040000 		.4byte	0x4bd
 2204 0699 05       		.uleb128 0x5
 2205 069a 03       		.byte	0x3
 2206 069b 00000000 		.4byte	entry
 2207 069f 18       		.uleb128 0x18
 2208 06a0 95000000 		.4byte	0x95
 2209 06a4 AF060000 		.4byte	0x6af
 2210 06a8 19       		.uleb128 0x19
 2211 06a9 76000000 		.4byte	0x76
 2212 06ad 3F       		.byte	0x3f
 2213 06ae 00       		.byte	0
 2214 06af 1F       		.uleb128 0x1f
 2215 06b0 96000000 		.4byte	.LASF100
 2216 06b4 05       		.byte	0x5
 2217 06b5 27       		.byte	0x27
 2218 06b6 9F060000 		.4byte	0x69f
 2219 06ba 05       		.uleb128 0x5
 2220 06bb 03       		.byte	0x3
 2221 06bc 00000000 		.4byte	usbBuffer
 2222 06c0 1F       		.uleb128 0x1f
 2223 06c1 6A000000 		.4byte	.LASF101
 2224 06c5 05       		.byte	0x5
 2225 06c6 3C       		.byte	0x3c
 2226 06c7 DF000000 		.4byte	0xdf
 2227 06cb 05       		.uleb128 0x5
 2228 06cc 03       		.byte	0x3
 2229 06cd 00000000 		.4byte	system_state
 2230 06d1 18       		.uleb128 0x18
 2231 06d2 AD000000 		.4byte	0xad
 2232 06d6 E1060000 		.4byte	0x6e1
 2233 06da 19       		.uleb128 0x19
 2234 06db 76000000 		.4byte	0x76
 2235 06df 05       		.byte	0x5
 2236 06e0 00       		.byte	0
 2237 06e1 1F       		.uleb128 0x1f
 2238 06e2 D4050000 		.4byte	.LASF102
 2239 06e6 01       		.byte	0x1
 2240 06e7 65       		.byte	0x65
 2241 06e8 D1060000 		.4byte	0x6d1
 2242 06ec 05       		.uleb128 0x5
 2243 06ed 03       		.byte	0x3
 2244 06ee 00000000 		.4byte	sensor_readings
 2245 06f2 1F       		.uleb128 0x1f
 2246 06f3 00040000 		.4byte	.LASF103
 2247 06f7 01       		.byte	0x1
 2248 06f8 66       		.byte	0x66
 2249 06f9 03070000 		.4byte	0x703
 2250 06fd 05       		.uleb128 0x5
 2251 06fe 03       		.byte	0x3
 2252 06ff 00000000 		.4byte	adc_flag
 2253 0703 1D       		.uleb128 0x1d
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 51


 2254 0704 68000000 		.4byte	0x68
 2255 0708 18       		.uleb128 0x18
 2256 0709 68000000 		.4byte	0x68
 2257 070d 18070000 		.4byte	0x718
 2258 0711 19       		.uleb128 0x19
 2259 0712 76000000 		.4byte	0x76
 2260 0716 05       		.byte	0x5
 2261 0717 00       		.byte	0
 2262 0718 1F       		.uleb128 0x1f
 2263 0719 F6020000 		.4byte	.LASF104
 2264 071d 01       		.byte	0x1
 2265 071e 67       		.byte	0x67
 2266 071f 08070000 		.4byte	0x708
 2267 0723 05       		.uleb128 0x5
 2268 0724 03       		.byte	0x3
 2269 0725 00000000 		.4byte	adc_readings
 2270 0729 1F       		.uleb128 0x1f
 2271 072a 48040000 		.4byte	.LASF105
 2272 072e 01       		.byte	0x1
 2273 072f 68       		.byte	0x68
 2274 0730 68000000 		.4byte	0x68
 2275 0734 05       		.uleb128 0x5
 2276 0735 03       		.byte	0x3
 2277 0736 00000000 		.4byte	sample_count
 2278 073a 1F       		.uleb128 0x1f
 2279 073b 2E050000 		.4byte	.LASF106
 2280 073f 01       		.byte	0x1
 2281 0740 6A       		.byte	0x6a
 2282 0741 03070000 		.4byte	0x703
 2283 0745 05       		.uleb128 0x5
 2284 0746 03       		.byte	0x3
 2285 0747 00000000 		.4byte	countM1
 2286 074b 1F       		.uleb128 0x1f
 2287 074c 36050000 		.4byte	.LASF107
 2288 0750 01       		.byte	0x1
 2289 0751 6B       		.byte	0x6b
 2290 0752 03070000 		.4byte	0x703
 2291 0756 05       		.uleb128 0x5
 2292 0757 03       		.byte	0x3
 2293 0758 00000000 		.4byte	countM2
 2294 075c 1F       		.uleb128 0x1f
 2295 075d A7010000 		.4byte	.LASF108
 2296 0761 01       		.byte	0x1
 2297 0762 6C       		.byte	0x6c
 2298 0763 03070000 		.4byte	0x703
 2299 0767 05       		.uleb128 0x5
 2300 0768 03       		.byte	0x3
 2301 0769 00000000 		.4byte	timer_flag
 2302 076d 00       		.byte	0
 2303              		.section	.debug_abbrev,"",%progbits
 2304              	.Ldebug_abbrev0:
 2305 0000 01       		.uleb128 0x1
 2306 0001 11       		.uleb128 0x11
 2307 0002 01       		.byte	0x1
 2308 0003 25       		.uleb128 0x25
 2309 0004 0E       		.uleb128 0xe
 2310 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 52


 2311 0006 0B       		.uleb128 0xb
 2312 0007 03       		.uleb128 0x3
 2313 0008 0E       		.uleb128 0xe
 2314 0009 1B       		.uleb128 0x1b
 2315 000a 0E       		.uleb128 0xe
 2316 000b 55       		.uleb128 0x55
 2317 000c 17       		.uleb128 0x17
 2318 000d 11       		.uleb128 0x11
 2319 000e 01       		.uleb128 0x1
 2320 000f 10       		.uleb128 0x10
 2321 0010 17       		.uleb128 0x17
 2322 0011 00       		.byte	0
 2323 0012 00       		.byte	0
 2324 0013 02       		.uleb128 0x2
 2325 0014 24       		.uleb128 0x24
 2326 0015 00       		.byte	0
 2327 0016 0B       		.uleb128 0xb
 2328 0017 0B       		.uleb128 0xb
 2329 0018 3E       		.uleb128 0x3e
 2330 0019 0B       		.uleb128 0xb
 2331 001a 03       		.uleb128 0x3
 2332 001b 0E       		.uleb128 0xe
 2333 001c 00       		.byte	0
 2334 001d 00       		.byte	0
 2335 001e 03       		.uleb128 0x3
 2336 001f 16       		.uleb128 0x16
 2337 0020 00       		.byte	0
 2338 0021 03       		.uleb128 0x3
 2339 0022 0E       		.uleb128 0xe
 2340 0023 3A       		.uleb128 0x3a
 2341 0024 0B       		.uleb128 0xb
 2342 0025 3B       		.uleb128 0x3b
 2343 0026 0B       		.uleb128 0xb
 2344 0027 49       		.uleb128 0x49
 2345 0028 13       		.uleb128 0x13
 2346 0029 00       		.byte	0
 2347 002a 00       		.byte	0
 2348 002b 04       		.uleb128 0x4
 2349 002c 24       		.uleb128 0x24
 2350 002d 00       		.byte	0
 2351 002e 0B       		.uleb128 0xb
 2352 002f 0B       		.uleb128 0xb
 2353 0030 3E       		.uleb128 0x3e
 2354 0031 0B       		.uleb128 0xb
 2355 0032 03       		.uleb128 0x3
 2356 0033 08       		.uleb128 0x8
 2357 0034 00       		.byte	0
 2358 0035 00       		.byte	0
 2359 0036 05       		.uleb128 0x5
 2360 0037 0F       		.uleb128 0xf
 2361 0038 00       		.byte	0
 2362 0039 0B       		.uleb128 0xb
 2363 003a 0B       		.uleb128 0xb
 2364 003b 49       		.uleb128 0x49
 2365 003c 13       		.uleb128 0x13
 2366 003d 00       		.byte	0
 2367 003e 00       		.byte	0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 53


 2368 003f 06       		.uleb128 0x6
 2369 0040 16       		.uleb128 0x16
 2370 0041 00       		.byte	0
 2371 0042 03       		.uleb128 0x3
 2372 0043 0E       		.uleb128 0xe
 2373 0044 3A       		.uleb128 0x3a
 2374 0045 0B       		.uleb128 0xb
 2375 0046 3B       		.uleb128 0x3b
 2376 0047 05       		.uleb128 0x5
 2377 0048 49       		.uleb128 0x49
 2378 0049 13       		.uleb128 0x13
 2379 004a 00       		.byte	0
 2380 004b 00       		.byte	0
 2381 004c 07       		.uleb128 0x7
 2382 004d 13       		.uleb128 0x13
 2383 004e 01       		.byte	0x1
 2384 004f 03       		.uleb128 0x3
 2385 0050 0E       		.uleb128 0xe
 2386 0051 0B       		.uleb128 0xb
 2387 0052 0B       		.uleb128 0xb
 2388 0053 3A       		.uleb128 0x3a
 2389 0054 0B       		.uleb128 0xb
 2390 0055 3B       		.uleb128 0x3b
 2391 0056 0B       		.uleb128 0xb
 2392 0057 01       		.uleb128 0x1
 2393 0058 13       		.uleb128 0x13
 2394 0059 00       		.byte	0
 2395 005a 00       		.byte	0
 2396 005b 08       		.uleb128 0x8
 2397 005c 0D       		.uleb128 0xd
 2398 005d 00       		.byte	0
 2399 005e 03       		.uleb128 0x3
 2400 005f 0E       		.uleb128 0xe
 2401 0060 3A       		.uleb128 0x3a
 2402 0061 0B       		.uleb128 0xb
 2403 0062 3B       		.uleb128 0x3b
 2404 0063 0B       		.uleb128 0xb
 2405 0064 49       		.uleb128 0x49
 2406 0065 13       		.uleb128 0x13
 2407 0066 38       		.uleb128 0x38
 2408 0067 0B       		.uleb128 0xb
 2409 0068 00       		.byte	0
 2410 0069 00       		.byte	0
 2411 006a 09       		.uleb128 0x9
 2412 006b 04       		.uleb128 0x4
 2413 006c 01       		.byte	0x1
 2414 006d 03       		.uleb128 0x3
 2415 006e 0E       		.uleb128 0xe
 2416 006f 0B       		.uleb128 0xb
 2417 0070 0B       		.uleb128 0xb
 2418 0071 3A       		.uleb128 0x3a
 2419 0072 0B       		.uleb128 0xb
 2420 0073 3B       		.uleb128 0x3b
 2421 0074 0B       		.uleb128 0xb
 2422 0075 01       		.uleb128 0x1
 2423 0076 13       		.uleb128 0x13
 2424 0077 00       		.byte	0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 54


 2425 0078 00       		.byte	0
 2426 0079 0A       		.uleb128 0xa
 2427 007a 28       		.uleb128 0x28
 2428 007b 00       		.byte	0
 2429 007c 03       		.uleb128 0x3
 2430 007d 0E       		.uleb128 0xe
 2431 007e 1C       		.uleb128 0x1c
 2432 007f 0D       		.uleb128 0xd
 2433 0080 00       		.byte	0
 2434 0081 00       		.byte	0
 2435 0082 0B       		.uleb128 0xb
 2436 0083 2E       		.uleb128 0x2e
 2437 0084 00       		.byte	0
 2438 0085 3F       		.uleb128 0x3f
 2439 0086 19       		.uleb128 0x19
 2440 0087 03       		.uleb128 0x3
 2441 0088 0E       		.uleb128 0xe
 2442 0089 3A       		.uleb128 0x3a
 2443 008a 0B       		.uleb128 0xb
 2444 008b 3B       		.uleb128 0x3b
 2445 008c 0B       		.uleb128 0xb
 2446 008d 27       		.uleb128 0x27
 2447 008e 19       		.uleb128 0x19
 2448 008f 11       		.uleb128 0x11
 2449 0090 01       		.uleb128 0x1
 2450 0091 12       		.uleb128 0x12
 2451 0092 06       		.uleb128 0x6
 2452 0093 40       		.uleb128 0x40
 2453 0094 18       		.uleb128 0x18
 2454 0095 9642     		.uleb128 0x2116
 2455 0097 19       		.uleb128 0x19
 2456 0098 00       		.byte	0
 2457 0099 00       		.byte	0
 2458 009a 0C       		.uleb128 0xc
 2459 009b 2E       		.uleb128 0x2e
 2460 009c 00       		.byte	0
 2461 009d 3F       		.uleb128 0x3f
 2462 009e 19       		.uleb128 0x19
 2463 009f 03       		.uleb128 0x3
 2464 00a0 0E       		.uleb128 0xe
 2465 00a1 3A       		.uleb128 0x3a
 2466 00a2 0B       		.uleb128 0xb
 2467 00a3 3B       		.uleb128 0x3b
 2468 00a4 0B       		.uleb128 0xb
 2469 00a5 27       		.uleb128 0x27
 2470 00a6 19       		.uleb128 0x19
 2471 00a7 11       		.uleb128 0x11
 2472 00a8 01       		.uleb128 0x1
 2473 00a9 12       		.uleb128 0x12
 2474 00aa 06       		.uleb128 0x6
 2475 00ab 40       		.uleb128 0x40
 2476 00ac 18       		.uleb128 0x18
 2477 00ad 9742     		.uleb128 0x2117
 2478 00af 19       		.uleb128 0x19
 2479 00b0 00       		.byte	0
 2480 00b1 00       		.byte	0
 2481 00b2 0D       		.uleb128 0xd
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 55


 2482 00b3 2E       		.uleb128 0x2e
 2483 00b4 01       		.byte	0x1
 2484 00b5 3F       		.uleb128 0x3f
 2485 00b6 19       		.uleb128 0x19
 2486 00b7 03       		.uleb128 0x3
 2487 00b8 0E       		.uleb128 0xe
 2488 00b9 3A       		.uleb128 0x3a
 2489 00ba 0B       		.uleb128 0xb
 2490 00bb 3B       		.uleb128 0x3b
 2491 00bc 0B       		.uleb128 0xb
 2492 00bd 49       		.uleb128 0x49
 2493 00be 13       		.uleb128 0x13
 2494 00bf 11       		.uleb128 0x11
 2495 00c0 01       		.uleb128 0x1
 2496 00c1 12       		.uleb128 0x12
 2497 00c2 06       		.uleb128 0x6
 2498 00c3 40       		.uleb128 0x40
 2499 00c4 18       		.uleb128 0x18
 2500 00c5 9642     		.uleb128 0x2116
 2501 00c7 19       		.uleb128 0x19
 2502 00c8 01       		.uleb128 0x1
 2503 00c9 13       		.uleb128 0x13
 2504 00ca 00       		.byte	0
 2505 00cb 00       		.byte	0
 2506 00cc 0E       		.uleb128 0xe
 2507 00cd 34       		.uleb128 0x34
 2508 00ce 00       		.byte	0
 2509 00cf 03       		.uleb128 0x3
 2510 00d0 0E       		.uleb128 0xe
 2511 00d1 3A       		.uleb128 0x3a
 2512 00d2 0B       		.uleb128 0xb
 2513 00d3 3B       		.uleb128 0x3b
 2514 00d4 0B       		.uleb128 0xb
 2515 00d5 49       		.uleb128 0x49
 2516 00d6 13       		.uleb128 0x13
 2517 00d7 02       		.uleb128 0x2
 2518 00d8 18       		.uleb128 0x18
 2519 00d9 00       		.byte	0
 2520 00da 00       		.byte	0
 2521 00db 0F       		.uleb128 0xf
 2522 00dc 34       		.uleb128 0x34
 2523 00dd 00       		.byte	0
 2524 00de 03       		.uleb128 0x3
 2525 00df 0E       		.uleb128 0xe
 2526 00e0 3A       		.uleb128 0x3a
 2527 00e1 0B       		.uleb128 0xb
 2528 00e2 3B       		.uleb128 0x3b
 2529 00e3 0B       		.uleb128 0xb
 2530 00e4 49       		.uleb128 0x49
 2531 00e5 13       		.uleb128 0x13
 2532 00e6 00       		.byte	0
 2533 00e7 00       		.byte	0
 2534 00e8 10       		.uleb128 0x10
 2535 00e9 2E       		.uleb128 0x2e
 2536 00ea 01       		.byte	0x1
 2537 00eb 3F       		.uleb128 0x3f
 2538 00ec 19       		.uleb128 0x19
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 56


 2539 00ed 03       		.uleb128 0x3
 2540 00ee 0E       		.uleb128 0xe
 2541 00ef 3A       		.uleb128 0x3a
 2542 00f0 0B       		.uleb128 0xb
 2543 00f1 3B       		.uleb128 0x3b
 2544 00f2 05       		.uleb128 0x5
 2545 00f3 27       		.uleb128 0x27
 2546 00f4 19       		.uleb128 0x19
 2547 00f5 11       		.uleb128 0x11
 2548 00f6 01       		.uleb128 0x1
 2549 00f7 12       		.uleb128 0x12
 2550 00f8 06       		.uleb128 0x6
 2551 00f9 40       		.uleb128 0x40
 2552 00fa 18       		.uleb128 0x18
 2553 00fb 9642     		.uleb128 0x2116
 2554 00fd 19       		.uleb128 0x19
 2555 00fe 01       		.uleb128 0x1
 2556 00ff 13       		.uleb128 0x13
 2557 0100 00       		.byte	0
 2558 0101 00       		.byte	0
 2559 0102 11       		.uleb128 0x11
 2560 0103 05       		.uleb128 0x5
 2561 0104 00       		.byte	0
 2562 0105 03       		.uleb128 0x3
 2563 0106 0E       		.uleb128 0xe
 2564 0107 3A       		.uleb128 0x3a
 2565 0108 0B       		.uleb128 0xb
 2566 0109 3B       		.uleb128 0x3b
 2567 010a 05       		.uleb128 0x5
 2568 010b 49       		.uleb128 0x49
 2569 010c 13       		.uleb128 0x13
 2570 010d 02       		.uleb128 0x2
 2571 010e 18       		.uleb128 0x18
 2572 010f 00       		.byte	0
 2573 0110 00       		.byte	0
 2574 0111 12       		.uleb128 0x12
 2575 0112 34       		.uleb128 0x34
 2576 0113 00       		.byte	0
 2577 0114 03       		.uleb128 0x3
 2578 0115 0E       		.uleb128 0xe
 2579 0116 3A       		.uleb128 0x3a
 2580 0117 0B       		.uleb128 0xb
 2581 0118 3B       		.uleb128 0x3b
 2582 0119 05       		.uleb128 0x5
 2583 011a 49       		.uleb128 0x49
 2584 011b 13       		.uleb128 0x13
 2585 011c 02       		.uleb128 0x2
 2586 011d 18       		.uleb128 0x18
 2587 011e 00       		.byte	0
 2588 011f 00       		.byte	0
 2589 0120 13       		.uleb128 0x13
 2590 0121 2E       		.uleb128 0x2e
 2591 0122 01       		.byte	0x1
 2592 0123 3F       		.uleb128 0x3f
 2593 0124 19       		.uleb128 0x19
 2594 0125 03       		.uleb128 0x3
 2595 0126 0E       		.uleb128 0xe
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 57


 2596 0127 3A       		.uleb128 0x3a
 2597 0128 0B       		.uleb128 0xb
 2598 0129 3B       		.uleb128 0x3b
 2599 012a 05       		.uleb128 0x5
 2600 012b 27       		.uleb128 0x27
 2601 012c 19       		.uleb128 0x19
 2602 012d 49       		.uleb128 0x49
 2603 012e 13       		.uleb128 0x13
 2604 012f 11       		.uleb128 0x11
 2605 0130 01       		.uleb128 0x1
 2606 0131 12       		.uleb128 0x12
 2607 0132 06       		.uleb128 0x6
 2608 0133 40       		.uleb128 0x40
 2609 0134 18       		.uleb128 0x18
 2610 0135 9642     		.uleb128 0x2116
 2611 0137 19       		.uleb128 0x19
 2612 0138 01       		.uleb128 0x1
 2613 0139 13       		.uleb128 0x13
 2614 013a 00       		.byte	0
 2615 013b 00       		.byte	0
 2616 013c 14       		.uleb128 0x14
 2617 013d 05       		.uleb128 0x5
 2618 013e 00       		.byte	0
 2619 013f 03       		.uleb128 0x3
 2620 0140 08       		.uleb128 0x8
 2621 0141 3A       		.uleb128 0x3a
 2622 0142 0B       		.uleb128 0xb
 2623 0143 3B       		.uleb128 0x3b
 2624 0144 05       		.uleb128 0x5
 2625 0145 49       		.uleb128 0x49
 2626 0146 13       		.uleb128 0x13
 2627 0147 02       		.uleb128 0x2
 2628 0148 18       		.uleb128 0x18
 2629 0149 00       		.byte	0
 2630 014a 00       		.byte	0
 2631 014b 15       		.uleb128 0x15
 2632 014c 2E       		.uleb128 0x2e
 2633 014d 01       		.byte	0x1
 2634 014e 3F       		.uleb128 0x3f
 2635 014f 19       		.uleb128 0x19
 2636 0150 03       		.uleb128 0x3
 2637 0151 0E       		.uleb128 0xe
 2638 0152 3A       		.uleb128 0x3a
 2639 0153 0B       		.uleb128 0xb
 2640 0154 3B       		.uleb128 0x3b
 2641 0155 05       		.uleb128 0x5
 2642 0156 11       		.uleb128 0x11
 2643 0157 01       		.uleb128 0x1
 2644 0158 12       		.uleb128 0x12
 2645 0159 06       		.uleb128 0x6
 2646 015a 40       		.uleb128 0x40
 2647 015b 18       		.uleb128 0x18
 2648 015c 9642     		.uleb128 0x2116
 2649 015e 19       		.uleb128 0x19
 2650 015f 01       		.uleb128 0x1
 2651 0160 13       		.uleb128 0x13
 2652 0161 00       		.byte	0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 58


 2653 0162 00       		.byte	0
 2654 0163 16       		.uleb128 0x16
 2655 0164 34       		.uleb128 0x34
 2656 0165 00       		.byte	0
 2657 0166 03       		.uleb128 0x3
 2658 0167 08       		.uleb128 0x8
 2659 0168 3A       		.uleb128 0x3a
 2660 0169 0B       		.uleb128 0xb
 2661 016a 3B       		.uleb128 0x3b
 2662 016b 05       		.uleb128 0x5
 2663 016c 49       		.uleb128 0x49
 2664 016d 13       		.uleb128 0x13
 2665 016e 02       		.uleb128 0x2
 2666 016f 18       		.uleb128 0x18
 2667 0170 00       		.byte	0
 2668 0171 00       		.byte	0
 2669 0172 17       		.uleb128 0x17
 2670 0173 0B       		.uleb128 0xb
 2671 0174 01       		.byte	0x1
 2672 0175 11       		.uleb128 0x11
 2673 0176 01       		.uleb128 0x1
 2674 0177 12       		.uleb128 0x12
 2675 0178 06       		.uleb128 0x6
 2676 0179 00       		.byte	0
 2677 017a 00       		.byte	0
 2678 017b 18       		.uleb128 0x18
 2679 017c 01       		.uleb128 0x1
 2680 017d 01       		.byte	0x1
 2681 017e 49       		.uleb128 0x49
 2682 017f 13       		.uleb128 0x13
 2683 0180 01       		.uleb128 0x1
 2684 0181 13       		.uleb128 0x13
 2685 0182 00       		.byte	0
 2686 0183 00       		.byte	0
 2687 0184 19       		.uleb128 0x19
 2688 0185 21       		.uleb128 0x21
 2689 0186 00       		.byte	0
 2690 0187 49       		.uleb128 0x49
 2691 0188 13       		.uleb128 0x13
 2692 0189 2F       		.uleb128 0x2f
 2693 018a 0B       		.uleb128 0xb
 2694 018b 00       		.byte	0
 2695 018c 00       		.byte	0
 2696 018d 1A       		.uleb128 0x1a
 2697 018e 2E       		.uleb128 0x2e
 2698 018f 00       		.byte	0
 2699 0190 3F       		.uleb128 0x3f
 2700 0191 19       		.uleb128 0x19
 2701 0192 03       		.uleb128 0x3
 2702 0193 0E       		.uleb128 0xe
 2703 0194 3A       		.uleb128 0x3a
 2704 0195 0B       		.uleb128 0xb
 2705 0196 3B       		.uleb128 0x3b
 2706 0197 05       		.uleb128 0x5
 2707 0198 11       		.uleb128 0x11
 2708 0199 01       		.uleb128 0x1
 2709 019a 12       		.uleb128 0x12
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 59


 2710 019b 06       		.uleb128 0x6
 2711 019c 40       		.uleb128 0x40
 2712 019d 18       		.uleb128 0x18
 2713 019e 9642     		.uleb128 0x2116
 2714 01a0 19       		.uleb128 0x19
 2715 01a1 00       		.byte	0
 2716 01a2 00       		.byte	0
 2717 01a3 1B       		.uleb128 0x1b
 2718 01a4 2E       		.uleb128 0x2e
 2719 01a5 01       		.byte	0x1
 2720 01a6 3F       		.uleb128 0x3f
 2721 01a7 19       		.uleb128 0x19
 2722 01a8 03       		.uleb128 0x3
 2723 01a9 0E       		.uleb128 0xe
 2724 01aa 3A       		.uleb128 0x3a
 2725 01ab 0B       		.uleb128 0xb
 2726 01ac 3B       		.uleb128 0x3b
 2727 01ad 05       		.uleb128 0x5
 2728 01ae 27       		.uleb128 0x27
 2729 01af 19       		.uleb128 0x19
 2730 01b0 11       		.uleb128 0x11
 2731 01b1 01       		.uleb128 0x1
 2732 01b2 12       		.uleb128 0x12
 2733 01b3 06       		.uleb128 0x6
 2734 01b4 40       		.uleb128 0x40
 2735 01b5 18       		.uleb128 0x18
 2736 01b6 9742     		.uleb128 0x2117
 2737 01b8 19       		.uleb128 0x19
 2738 01b9 01       		.uleb128 0x1
 2739 01ba 13       		.uleb128 0x13
 2740 01bb 00       		.byte	0
 2741 01bc 00       		.byte	0
 2742 01bd 1C       		.uleb128 0x1c
 2743 01be 34       		.uleb128 0x34
 2744 01bf 00       		.byte	0
 2745 01c0 03       		.uleb128 0x3
 2746 01c1 0E       		.uleb128 0xe
 2747 01c2 3A       		.uleb128 0x3a
 2748 01c3 0B       		.uleb128 0xb
 2749 01c4 3B       		.uleb128 0x3b
 2750 01c5 05       		.uleb128 0x5
 2751 01c6 49       		.uleb128 0x49
 2752 01c7 13       		.uleb128 0x13
 2753 01c8 3F       		.uleb128 0x3f
 2754 01c9 19       		.uleb128 0x19
 2755 01ca 3C       		.uleb128 0x3c
 2756 01cb 19       		.uleb128 0x19
 2757 01cc 00       		.byte	0
 2758 01cd 00       		.byte	0
 2759 01ce 1D       		.uleb128 0x1d
 2760 01cf 35       		.uleb128 0x35
 2761 01d0 00       		.byte	0
 2762 01d1 49       		.uleb128 0x49
 2763 01d2 13       		.uleb128 0x13
 2764 01d3 00       		.byte	0
 2765 01d4 00       		.byte	0
 2766 01d5 1E       		.uleb128 0x1e
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 60


 2767 01d6 34       		.uleb128 0x34
 2768 01d7 00       		.byte	0
 2769 01d8 03       		.uleb128 0x3
 2770 01d9 08       		.uleb128 0x8
 2771 01da 3A       		.uleb128 0x3a
 2772 01db 0B       		.uleb128 0xb
 2773 01dc 3B       		.uleb128 0x3b
 2774 01dd 0B       		.uleb128 0xb
 2775 01de 49       		.uleb128 0x49
 2776 01df 13       		.uleb128 0x13
 2777 01e0 3F       		.uleb128 0x3f
 2778 01e1 19       		.uleb128 0x19
 2779 01e2 02       		.uleb128 0x2
 2780 01e3 18       		.uleb128 0x18
 2781 01e4 00       		.byte	0
 2782 01e5 00       		.byte	0
 2783 01e6 1F       		.uleb128 0x1f
 2784 01e7 34       		.uleb128 0x34
 2785 01e8 00       		.byte	0
 2786 01e9 03       		.uleb128 0x3
 2787 01ea 0E       		.uleb128 0xe
 2788 01eb 3A       		.uleb128 0x3a
 2789 01ec 0B       		.uleb128 0xb
 2790 01ed 3B       		.uleb128 0x3b
 2791 01ee 0B       		.uleb128 0xb
 2792 01ef 49       		.uleb128 0x49
 2793 01f0 13       		.uleb128 0x13
 2794 01f1 3F       		.uleb128 0x3f
 2795 01f2 19       		.uleb128 0x19
 2796 01f3 02       		.uleb128 0x2
 2797 01f4 18       		.uleb128 0x18
 2798 01f5 00       		.byte	0
 2799 01f6 00       		.byte	0
 2800 01f7 00       		.byte	0
 2801              		.section	.debug_aranges,"",%progbits
 2802 0000 94000000 		.4byte	0x94
 2803 0004 0200     		.2byte	0x2
 2804 0006 00000000 		.4byte	.Ldebug_info0
 2805 000a 04       		.byte	0x4
 2806 000b 00       		.byte	0
 2807 000c 0000     		.2byte	0
 2808 000e 0000     		.2byte	0
 2809 0010 00000000 		.4byte	.LFB63
 2810 0014 30000000 		.4byte	.LFE63-.LFB63
 2811 0018 00000000 		.4byte	.LFB64
 2812 001c 18000000 		.4byte	.LFE64-.LFB64
 2813 0020 00000000 		.4byte	.LFB65
 2814 0024 8C000000 		.4byte	.LFE65-.LFB65
 2815 0028 00000000 		.4byte	.LFB66
 2816 002c 54010000 		.4byte	.LFE66-.LFB66
 2817 0030 00000000 		.4byte	.LFB67
 2818 0034 CC000000 		.4byte	.LFE67-.LFB67
 2819 0038 00000000 		.4byte	.LFB68
 2820 003c 24000000 		.4byte	.LFE68-.LFB68
 2821 0040 00000000 		.4byte	.LFB69
 2822 0044 B4000000 		.4byte	.LFE69-.LFB69
 2823 0048 00000000 		.4byte	.LFB70
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 61


 2824 004c 2A000000 		.4byte	.LFE70-.LFB70
 2825 0050 00000000 		.4byte	.LFB71
 2826 0054 2A000000 		.4byte	.LFE71-.LFB71
 2827 0058 00000000 		.4byte	.LFB72
 2828 005c 52000000 		.4byte	.LFE72-.LFB72
 2829 0060 00000000 		.4byte	.LFB73
 2830 0064 2C000000 		.4byte	.LFE73-.LFB73
 2831 0068 00000000 		.4byte	.LFB74
 2832 006c 40000000 		.4byte	.LFE74-.LFB74
 2833 0070 00000000 		.4byte	.LFB75
 2834 0074 40000000 		.4byte	.LFE75-.LFB75
 2835 0078 00000000 		.4byte	.LFB76
 2836 007c 64000000 		.4byte	.LFE76-.LFB76
 2837 0080 00000000 		.4byte	.LFB77
 2838 0084 64000000 		.4byte	.LFE77-.LFB77
 2839 0088 00000000 		.4byte	.LFB78
 2840 008c 14000000 		.4byte	.LFE78-.LFB78
 2841 0090 00000000 		.4byte	0
 2842 0094 00000000 		.4byte	0
 2843              		.section	.debug_ranges,"",%progbits
 2844              	.Ldebug_ranges0:
 2845 0000 00000000 		.4byte	.LFB63
 2846 0004 30000000 		.4byte	.LFE63
 2847 0008 00000000 		.4byte	.LFB64
 2848 000c 18000000 		.4byte	.LFE64
 2849 0010 00000000 		.4byte	.LFB65
 2850 0014 8C000000 		.4byte	.LFE65
 2851 0018 00000000 		.4byte	.LFB66
 2852 001c 54010000 		.4byte	.LFE66
 2853 0020 00000000 		.4byte	.LFB67
 2854 0024 CC000000 		.4byte	.LFE67
 2855 0028 00000000 		.4byte	.LFB68
 2856 002c 24000000 		.4byte	.LFE68
 2857 0030 00000000 		.4byte	.LFB69
 2858 0034 B4000000 		.4byte	.LFE69
 2859 0038 00000000 		.4byte	.LFB70
 2860 003c 2A000000 		.4byte	.LFE70
 2861 0040 00000000 		.4byte	.LFB71
 2862 0044 2A000000 		.4byte	.LFE71
 2863 0048 00000000 		.4byte	.LFB72
 2864 004c 52000000 		.4byte	.LFE72
 2865 0050 00000000 		.4byte	.LFB73
 2866 0054 2C000000 		.4byte	.LFE73
 2867 0058 00000000 		.4byte	.LFB74
 2868 005c 40000000 		.4byte	.LFE74
 2869 0060 00000000 		.4byte	.LFB75
 2870 0064 40000000 		.4byte	.LFE75
 2871 0068 00000000 		.4byte	.LFB76
 2872 006c 64000000 		.4byte	.LFE76
 2873 0070 00000000 		.4byte	.LFB77
 2874 0074 64000000 		.4byte	.LFE77
 2875 0078 00000000 		.4byte	.LFB78
 2876 007c 14000000 		.4byte	.LFE78
 2877 0080 00000000 		.4byte	0
 2878 0084 00000000 		.4byte	0
 2879              		.section	.debug_line,"",%progbits
 2880              	.Ldebug_line0:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 62


 2881 0000 5A030000 		.section	.debug_str,"MS",%progbits,1
 2881      02005501 
 2881      00000201 
 2881      FB0E0D00 
 2881      01010101 
 2882              	.LASF74:
 2883 0000 636F7272 		.ascii	"correction\000"
 2883      65637469 
 2883      6F6E00
 2884              	.LASF84:
 2885 000b 74735F65 		.ascii	"ts_enc\000"
 2885      6E6300
 2886              	.LASF60:
 2887 0012 6D325F64 		.ascii	"m2_dist\000"
 2887      69737400 
 2888              	.LASF93:
 2889 001a 666C6167 		.ascii	"flag_packet\000"
 2889      5F706163 
 2889      6B657400 
 2890              	.LASF40:
 2891 0026 4D454449 		.ascii	"MEDIUM_RIGHT\000"
 2891      554D5F52 
 2891      49474854 
 2891      00
 2892              	.LASF110:
 2893 0033 2E5C6D61 		.ascii	".\\main.c\000"
 2893      696E2E63 
 2893      00
 2894              	.LASF37:
 2895 003c 434F5252 		.ascii	"CORRECT\000"
 2895      45435400 
 2896              	.LASF113:
 2897 0044 73746174 		.ascii	"state\000"
 2897      6500
 2898              	.LASF90:
 2899 004a 666C6167 		.ascii	"flag_ts_speed\000"
 2899      5F74735F 
 2899      73706565 
 2899      6400
 2900              	.LASF33:
 2901 0058 67325F78 		.ascii	"g2_xpos\000"
 2901      706F7300 
 2902              	.LASF2:
 2903 0060 73686F72 		.ascii	"short int\000"
 2903      7420696E 
 2903      7400
 2904              	.LASF101:
 2905 006a 73797374 		.ascii	"system_state\000"
 2905      656D5F73 
 2905      74617465 
 2905      00
 2906              	.LASF9:
 2907 0077 73697A65 		.ascii	"sizetype\000"
 2907      74797065 
 2907      00
 2908              	.LASF67:
 2909 0080 6368616E 		.ascii	"changeRightWheelSpeed\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 63


 2909      67655269 
 2909      67687457 
 2909      6865656C 
 2909      53706565 
 2910              	.LASF100:
 2911 0096 75736242 		.ascii	"usbBuffer\000"
 2911      75666665 
 2911      7200
 2912              	.LASF38:
 2913 00a0 534C4947 		.ascii	"SLIGHTLY_RIGHT\000"
 2913      48544C59 
 2913      5F524947 
 2913      485400
 2914              	.LASF55:
 2915 00af 6D61696E 		.ascii	"main\000"
 2915      00
 2916              	.LASF72:
 2917 00b4 69734C65 		.ascii	"isLeftWheel\000"
 2917      66745768 
 2917      65656C00 
 2918              	.LASF111:
 2919 00c0 5C5C6669 		.ascii	"\\\\files.auckland.ac.nz\\myhome\\Desktop\\Flik\\CS"
 2919      6C65732E 
 2919      6175636B 
 2919      6C616E64 
 2919      2E61632E 
 2920 00ed 3330315F 		.ascii	"301_Class.cyprj.Archive01-20190825T234813Z-001\\CS3"
 2920      436C6173 
 2920      732E6379 
 2920      70726A2E 
 2920      41726368 
 2921 011f 30315F43 		.ascii	"01_Class.cyprj.Archive01\\CS301_Class.cydsn\000"
 2921      6C617373 
 2921      2E637970 
 2921      726A2E41 
 2921      72636869 
 2922              	.LASF83:
 2923 014a 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2923      52784275 
 2923      66666572 
 2923      00
 2924              	.LASF14:
 2925 0157 75696E74 		.ascii	"uint16\000"
 2925      313600
 2926              	.LASF21:
 2927 015e 696E6465 		.ascii	"index\000"
 2927      7800
 2928              	.LASF16:
 2929 0164 696E7431 		.ascii	"int16\000"
 2929      3600
 2930              	.LASF13:
 2931 016a 75696E74 		.ascii	"uint8\000"
 2931      3800
 2932              	.LASF32:
 2933 0170 67315F64 		.ascii	"g1_direction\000"
 2933      69726563 
 2933      74696F6E 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 64


 2933      00
 2934              	.LASF50:
 2935 017d 70726576 		.ascii	"prevCountM2\000"
 2935      436F756E 
 2935      744D3200 
 2936              	.LASF68:
 2937 0189 636F7272 		.ascii	"correctSpeed\000"
 2937      65637453 
 2937      70656564 
 2937      00
 2938              	.LASF62:
 2939 0196 67657456 		.ascii	"getValForChannel\000"
 2939      616C466F 
 2939      72436861 
 2939      6E6E656C 
 2939      00
 2940              	.LASF108:
 2941 01a7 74696D65 		.ascii	"timer_flag\000"
 2941      725F666C 
 2941      616700
 2942              	.LASF56:
 2943 01b2 676F5374 		.ascii	"goStraight\000"
 2943      72616967 
 2943      687400
 2944              	.LASF18:
 2945 01bd 666C6F61 		.ascii	"float\000"
 2945      7400
 2946              	.LASF6:
 2947 01c3 6C6F6E67 		.ascii	"long long int\000"
 2947      206C6F6E 
 2947      6720696E 
 2947      7400
 2948              	.LASF82:
 2949 01d1 75736250 		.ascii	"usbPutString\000"
 2949      75745374 
 2949      72696E67 
 2949      00
 2950              	.LASF15:
 2951 01de 696E7438 		.ascii	"int8\000"
 2951      00
 2952              	.LASF114:
 2953 01e3 75706461 		.ascii	"updateSensorValues\000"
 2953      74655365 
 2953      6E736F72 
 2953      56616C75 
 2953      657300
 2954              	.LASF89:
 2955 01f6 666C6167 		.ascii	"flag_ts_update\000"
 2955      5F74735F 
 2955      75706461 
 2955      746500
 2956              	.LASF34:
 2957 0205 67325F79 		.ascii	"g2_ypos\000"
 2957      706F7300 
 2958              	.LASF28:
 2959 020d 67305F64 		.ascii	"g0_direction\000"
 2959      69726563 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 65


 2959      74696F6E 
 2959      00
 2960              	.LASF77:
 2961 021a 72696768 		.ascii	"rightIsForward\000"
 2961      74497346 
 2961      6F727761 
 2961      726400
 2962              	.LASF45:
 2963 0229 50415353 		.ascii	"PASS\000"
 2963      00
 2964              	.LASF109:
 2965 022e 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2965      4320342E 
 2965      392E3320 
 2965      32303135 
 2965      30333033 
 2966 0261 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2966      20726576 
 2966      6973696F 
 2966      6E203232 
 2966      31323230 
 2967 0294 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2967      66756E63 
 2967      74696F6E 
 2967      2D736563 
 2967      74696F6E 
 2968              	.LASF42:
 2969 02bc 5455524E 		.ascii	"TURN_RIGHT\000"
 2969      5F524947 
 2969      485400
 2970              	.LASF24:
 2971 02c7 726F626F 		.ascii	"robot_orientation\000"
 2971      745F6F72 
 2971      69656E74 
 2971      6174696F 
 2971      6E00
 2972              	.LASF98:
 2973 02d9 6C696E65 		.ascii	"line\000"
 2973      00
 2974              	.LASF91:
 2975 02de 666C6167 		.ascii	"flag_ts_display\000"
 2975      5F74735F 
 2975      64697370 
 2975      6C617900 
 2976              	.LASF92:
 2977 02ee 666C6167 		.ascii	"flag_rx\000"
 2977      5F727800 
 2978              	.LASF104:
 2979 02f6 6164635F 		.ascii	"adc_readings\000"
 2979      72656164 
 2979      696E6773 
 2979      00
 2980              	.LASF48:
 2981 0303 4144435F 		.ascii	"ADC_ISR\000"
 2981      49535200 
 2982              	.LASF49:
 2983 030b 70726576 		.ascii	"prevCountM1\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 66


 2983      436F756E 
 2983      744D3100 
 2984              	.LASF1:
 2985 0317 756E7369 		.ascii	"unsigned char\000"
 2985      676E6564 
 2985      20636861 
 2985      7200
 2986              	.LASF43:
 2987 0325 5455524E 		.ascii	"TURN_LEFT\000"
 2987      5F4C4546 
 2987      5400
 2988              	.LASF27:
 2989 032f 67305F73 		.ascii	"g0_speed\000"
 2989      70656564 
 2989      00
 2990              	.LASF78:
 2991 0338 7475726E 		.ascii	"turnLeft\000"
 2991      4C656674 
 2991      00
 2992              	.LASF47:
 2993 0341 454E434F 		.ascii	"ENCODER_ISR\000"
 2993      4445525F 
 2993      49535200 
 2994              	.LASF0:
 2995 034d 7369676E 		.ascii	"signed char\000"
 2995      65642063 
 2995      68617200 
 2996              	.LASF71:
 2997 0359 64657369 		.ascii	"desired_count\000"
 2997      7265645F 
 2997      636F756E 
 2997      7400
 2998              	.LASF7:
 2999 0367 6C6F6E67 		.ascii	"long long unsigned int\000"
 2999      206C6F6E 
 2999      6720756E 
 2999      7369676E 
 2999      65642069 
 3000              	.LASF99:
 3001 037e 656E7472 		.ascii	"entry\000"
 3001      7900
 3002              	.LASF8:
 3003 0384 756E7369 		.ascii	"unsigned int\000"
 3003      676E6564 
 3003      20696E74 
 3003      00
 3004              	.LASF59:
 3005 0391 6D315F64 		.ascii	"m1_dist\000"
 3005      69737400 
 3006              	.LASF94:
 3007 0399 666C6167 		.ascii	"flag_KB_string\000"
 3007      5F4B425F 
 3007      73747269 
 3007      6E6700
 3008              	.LASF5:
 3009 03a8 6C6F6E67 		.ascii	"long unsigned int\000"
 3009      20756E73 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 67


 3009      69676E65 
 3009      6420696E 
 3009      7400
 3010              	.LASF69:
 3011 03ba 70726576 		.ascii	"prevCount\000"
 3011      436F756E 
 3011      7400
 3012              	.LASF35:
 3013 03c4 67325F73 		.ascii	"g2_speed\000"
 3013      70656564 
 3013      00
 3014              	.LASF29:
 3015 03cd 67315F78 		.ascii	"g1_xpos\000"
 3015      706F7300 
 3016              	.LASF3:
 3017 03d5 73686F72 		.ascii	"short unsigned int\000"
 3017      7420756E 
 3017      7369676E 
 3017      65642069 
 3017      6E7400
 3018              	.LASF112:
 3019 03e8 64617461 		.ascii	"data_main\000"
 3019      5F6D6169 
 3019      6E00
 3020              	.LASF57:
 3021 03f2 64697374 		.ascii	"distance\000"
 3021      616E6365 
 3021      00
 3022              	.LASF10:
 3023 03fb 63686172 		.ascii	"char\000"
 3023      00
 3024              	.LASF103:
 3025 0400 6164635F 		.ascii	"adc_flag\000"
 3025      666C6167 
 3025      00
 3026              	.LASF4:
 3027 0409 6C6F6E67 		.ascii	"long int\000"
 3027      20696E74 
 3027      00
 3028              	.LASF22:
 3029 0412 726F626F 		.ascii	"robot_xpos\000"
 3029      745F7870 
 3029      6F7300
 3030              	.LASF80:
 3031 041d 73686172 		.ascii	"sharpTurnLeft\000"
 3031      70547572 
 3031      6E4C6566 
 3031      7400
 3032              	.LASF12:
 3033 042b 696E7433 		.ascii	"int32_t\000"
 3033      325F7400 
 3034              	.LASF30:
 3035 0433 67315F79 		.ascii	"g1_ypos\000"
 3035      706F7300 
 3036              	.LASF36:
 3037 043b 67325F64 		.ascii	"g2_direction\000"
 3037      69726563 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 68


 3037      74696F6E 
 3037      00
 3038              	.LASF105:
 3039 0448 73616D70 		.ascii	"sample_count\000"
 3039      6C655F63 
 3039      6F756E74 
 3039      00
 3040              	.LASF31:
 3041 0455 67315F73 		.ascii	"g1_speed\000"
 3041      70656564 
 3041      00
 3042              	.LASF73:
 3043 045e 64696666 		.ascii	"diff_count\000"
 3043      5F636F75 
 3043      6E7400
 3044              	.LASF46:
 3045 0469 726F626F 		.ascii	"robot_state\000"
 3045      745F7374 
 3045      61746500 
 3046              	.LASF97:
 3047 0475 64697370 		.ascii	"displaystring\000"
 3047      6C617973 
 3047      7472696E 
 3047      6700
 3048              	.LASF58:
 3049 0483 64657369 		.ascii	"desired_distance\000"
 3049      7265645F 
 3049      64697374 
 3049      616E6365 
 3049      00
 3050              	.LASF41:
 3051 0494 4D454449 		.ascii	"MEDIUM_LEFT\000"
 3051      554D5F4C 
 3051      45465400 
 3052              	.LASF63:
 3053 04a0 72656164 		.ascii	"reading\000"
 3053      696E6700 
 3054              	.LASF25:
 3055 04a8 67305F78 		.ascii	"g0_xpos\000"
 3055      706F7300 
 3056              	.LASF51:
 3057 04b0 72696768 		.ascii	"right_wheel_count\000"
 3057      745F7768 
 3057      65656C5F 
 3057      636F756E 
 3057      7400
 3058              	.LASF52:
 3059 04c2 6C656674 		.ascii	"left_wheel_count\000"
 3059      5F776865 
 3059      656C5F63 
 3059      6F756E74 
 3059      00
 3060              	.LASF17:
 3061 04d3 696E7433 		.ascii	"int32\000"
 3061      3200
 3062              	.LASF19:
 3063 04d9 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 69


 3063      6C6500
 3064              	.LASF64:
 3065 04e0 6368616E 		.ascii	"changeLeftWheelSpeed\000"
 3065      67654C65 
 3065      66745768 
 3065      65656C53 
 3065      70656564 
 3066              	.LASF95:
 3067 04f5 64617461 		.ascii	"dataready_flag\000"
 3067      72656164 
 3067      795F666C 
 3067      616700
 3068              	.LASF86:
 3069 0504 74735F73 		.ascii	"ts_speed\000"
 3069      70656564 
 3069      00
 3070              	.LASF70:
 3071 050d 636F756E 		.ascii	"count\000"
 3071      7400
 3072              	.LASF44:
 3073 0513 534C4F57 		.ascii	"SLOW\000"
 3073      00
 3074              	.LASF88:
 3075 0518 666C6167 		.ascii	"flag_ts_enc\000"
 3075      5F74735F 
 3075      656E6300 
 3076              	.LASF11:
 3077 0524 5F5F696E 		.ascii	"__int32_t\000"
 3077      7433325F 
 3077      7400
 3078              	.LASF106:
 3079 052e 636F756E 		.ascii	"countM1\000"
 3079      744D3100 
 3080              	.LASF107:
 3081 0536 636F756E 		.ascii	"countM2\000"
 3081      744D3200 
 3082              	.LASF53:
 3083 053e 706F6C6C 		.ascii	"polling_count\000"
 3083      696E675F 
 3083      636F756E 
 3083      7400
 3084              	.LASF66:
 3085 054c 6E65775F 		.ascii	"new_value\000"
 3085      76616C75 
 3085      6500
 3086              	.LASF26:
 3087 0556 67305F79 		.ascii	"g0_ypos\000"
 3087      706F7300 
 3088              	.LASF79:
 3089 055e 7475726E 		.ascii	"turnRight\000"
 3089      52696768 
 3089      7400
 3090              	.LASF87:
 3091 0568 74735F64 		.ascii	"ts_display\000"
 3091      6973706C 
 3091      617900
 3092              	.LASF85:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccL9zIDo.s 			page 70


 3093 0573 74735F75 		.ascii	"ts_update\000"
 3093      70646174 
 3093      6500
 3094              	.LASF61:
 3095 057d 67657444 		.ascii	"getDistance\000"
 3095      69737461 
 3095      6E636500 
 3096              	.LASF75:
 3097 0589 73657457 		.ascii	"setWheelDirection\000"
 3097      6865656C 
 3097      44697265 
 3097      6374696F 
 3097      6E00
 3098              	.LASF96:
 3099 059b 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3099      5F72665F 
 3099      7472616E 
 3099      736D6973 
 3099      73696F6E 
 3100              	.LASF23:
 3101 05b7 726F626F 		.ascii	"robot_ypos\000"
 3101      745F7970 
 3101      6F7300
 3102              	.LASF54:
 3103 05c2 70726576 		.ascii	"prev_state\000"
 3103      5F737461 
 3103      746500
 3104              	.LASF65:
 3105 05cd 616D6F75 		.ascii	"amount\000"
 3105      6E7400
 3106              	.LASF102:
 3107 05d4 73656E73 		.ascii	"sensor_readings\000"
 3107      6F725F72 
 3107      65616469 
 3107      6E677300 
 3108              	.LASF20:
 3109 05e4 72737369 		.ascii	"rssi\000"
 3109      00
 3110              	.LASF76:
 3111 05e9 6C656674 		.ascii	"leftIsForward\000"
 3111      4973466F 
 3111      72776172 
 3111      6400
 3112              	.LASF81:
 3113 05f7 73686172 		.ascii	"sharpTurnRight\000"
 3113      70547572 
 3113      6E526967 
 3113      687400
 3114              	.LASF39:
 3115 0606 534C4947 		.ascii	"SLIGHTLY_LEFT\000"
 3115      48544C59 
 3115      5F4C4546 
 3115      5400
 3116              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
