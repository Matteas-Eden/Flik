ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	displaystring
  95 0001 000000   		.align	2
  96              		.type	displaystring, %object
  97              		.size	displaystring, 64
  98              	displaystring:
  99 0004 43533330 		.ascii	"CS301 2020\012\000"
  99      31203230 
  99      32300A00 
 100 0010 00000000 		.space	52
 100      00000000 
 100      00000000 
 100      00000000 
 100      00000000 
 101              		.comm	line,64,4
 102              		.comm	entry,64,4
 103              		.comm	usbBuffer,64,4
 104              		.comm	system_state,32,4
 105              		.global	map
 106              		.align	2
 107              		.type	map, %object
 108              		.size	map, 1140
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 3


 109              	map:
 110 0044 01000000 		.word	1
 111 0048 01000000 		.word	1
 112 004c 01000000 		.word	1
 113 0050 01000000 		.word	1
 114 0054 01000000 		.word	1
 115 0058 01000000 		.word	1
 116 005c 01000000 		.word	1
 117 0060 01000000 		.word	1
 118 0064 01000000 		.word	1
 119 0068 01000000 		.word	1
 120 006c 01000000 		.word	1
 121 0070 01000000 		.word	1
 122 0074 01000000 		.word	1
 123 0078 01000000 		.word	1
 124 007c 01000000 		.word	1
 125 0080 01000000 		.word	1
 126 0084 01000000 		.word	1
 127 0088 01000000 		.word	1
 128 008c 01000000 		.word	1
 129 0090 01000000 		.word	1
 130 0094 00000000 		.word	0
 131 0098 00000000 		.word	0
 132 009c 00000000 		.word	0
 133 00a0 00000000 		.word	0
 134 00a4 00000000 		.word	0
 135 00a8 01000000 		.word	1
 136 00ac 00000000 		.word	0
 137 00b0 01000000 		.word	1
 138 00b4 00000000 		.word	0
 139 00b8 00000000 		.word	0
 140 00bc 00000000 		.word	0
 141 00c0 00000000 		.word	0
 142 00c4 00000000 		.word	0
 143 00c8 00000000 		.word	0
 144 00cc 00000000 		.word	0
 145 00d0 00000000 		.word	0
 146 00d4 00000000 		.word	0
 147 00d8 01000000 		.word	1
 148 00dc 01000000 		.word	1
 149 00e0 01000000 		.word	1
 150 00e4 01000000 		.word	1
 151 00e8 01000000 		.word	1
 152 00ec 01000000 		.word	1
 153 00f0 00000000 		.word	0
 154 00f4 01000000 		.word	1
 155 00f8 00000000 		.word	0
 156 00fc 01000000 		.word	1
 157 0100 00000000 		.word	0
 158 0104 01000000 		.word	1
 159 0108 00000000 		.word	0
 160 010c 01000000 		.word	1
 161 0110 01000000 		.word	1
 162 0114 01000000 		.word	1
 163 0118 01000000 		.word	1
 164 011c 01000000 		.word	1
 165 0120 00000000 		.word	0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 4


 166 0124 01000000 		.word	1
 167 0128 01000000 		.word	1
 168 012c 00000000 		.word	0
 169 0130 00000000 		.word	0
 170 0134 00000000 		.word	0
 171 0138 01000000 		.word	1
 172 013c 00000000 		.word	0
 173 0140 01000000 		.word	1
 174 0144 00000000 		.word	0
 175 0148 00000000 		.word	0
 176 014c 00000000 		.word	0
 177 0150 01000000 		.word	1
 178 0154 00000000 		.word	0
 179 0158 00000000 		.word	0
 180 015c 00000000 		.word	0
 181 0160 00000000 		.word	0
 182 0164 00000000 		.word	0
 183 0168 01000000 		.word	1
 184 016c 00000000 		.word	0
 185 0170 01000000 		.word	1
 186 0174 01000000 		.word	1
 187 0178 00000000 		.word	0
 188 017c 01000000 		.word	1
 189 0180 00000000 		.word	0
 190 0184 01000000 		.word	1
 191 0188 00000000 		.word	0
 192 018c 01000000 		.word	1
 193 0190 00000000 		.word	0
 194 0194 01000000 		.word	1
 195 0198 01000000 		.word	1
 196 019c 01000000 		.word	1
 197 01a0 01000000 		.word	1
 198 01a4 01000000 		.word	1
 199 01a8 01000000 		.word	1
 200 01ac 01000000 		.word	1
 201 01b0 00000000 		.word	0
 202 01b4 01000000 		.word	1
 203 01b8 00000000 		.word	0
 204 01bc 01000000 		.word	1
 205 01c0 01000000 		.word	1
 206 01c4 00000000 		.word	0
 207 01c8 01000000 		.word	1
 208 01cc 00000000 		.word	0
 209 01d0 00000000 		.word	0
 210 01d4 00000000 		.word	0
 211 01d8 00000000 		.word	0
 212 01dc 00000000 		.word	0
 213 01e0 00000000 		.word	0
 214 01e4 00000000 		.word	0
 215 01e8 00000000 		.word	0
 216 01ec 00000000 		.word	0
 217 01f0 00000000 		.word	0
 218 01f4 00000000 		.word	0
 219 01f8 01000000 		.word	1
 220 01fc 00000000 		.word	0
 221 0200 01000000 		.word	1
 222 0204 00000000 		.word	0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 5


 223 0208 01000000 		.word	1
 224 020c 01000000 		.word	1
 225 0210 00000000 		.word	0
 226 0214 01000000 		.word	1
 227 0218 01000000 		.word	1
 228 021c 01000000 		.word	1
 229 0220 01000000 		.word	1
 230 0224 01000000 		.word	1
 231 0228 01000000 		.word	1
 232 022c 01000000 		.word	1
 233 0230 01000000 		.word	1
 234 0234 01000000 		.word	1
 235 0238 00000000 		.word	0
 236 023c 01000000 		.word	1
 237 0240 00000000 		.word	0
 238 0244 01000000 		.word	1
 239 0248 00000000 		.word	0
 240 024c 01000000 		.word	1
 241 0250 01000000 		.word	1
 242 0254 01000000 		.word	1
 243 0258 01000000 		.word	1
 244 025c 00000000 		.word	0
 245 0260 00000000 		.word	0
 246 0264 00000000 		.word	0
 247 0268 00000000 		.word	0
 248 026c 00000000 		.word	0
 249 0270 00000000 		.word	0
 250 0274 00000000 		.word	0
 251 0278 00000000 		.word	0
 252 027c 00000000 		.word	0
 253 0280 00000000 		.word	0
 254 0284 00000000 		.word	0
 255 0288 01000000 		.word	1
 256 028c 00000000 		.word	0
 257 0290 01000000 		.word	1
 258 0294 00000000 		.word	0
 259 0298 00000000 		.word	0
 260 029c 00000000 		.word	0
 261 02a0 01000000 		.word	1
 262 02a4 01000000 		.word	1
 263 02a8 01000000 		.word	1
 264 02ac 01000000 		.word	1
 265 02b0 01000000 		.word	1
 266 02b4 01000000 		.word	1
 267 02b8 01000000 		.word	1
 268 02bc 01000000 		.word	1
 269 02c0 00000000 		.word	0
 270 02c4 01000000 		.word	1
 271 02c8 01000000 		.word	1
 272 02cc 01000000 		.word	1
 273 02d0 01000000 		.word	1
 274 02d4 01000000 		.word	1
 275 02d8 00000000 		.word	0
 276 02dc 01000000 		.word	1
 277 02e0 01000000 		.word	1
 278 02e4 01000000 		.word	1
 279 02e8 00000000 		.word	0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 6


 280 02ec 01000000 		.word	1
 281 02f0 01000000 		.word	1
 282 02f4 00000000 		.word	0
 283 02f8 00000000 		.word	0
 284 02fc 00000000 		.word	0
 285 0300 00000000 		.word	0
 286 0304 00000000 		.word	0
 287 0308 00000000 		.word	0
 288 030c 00000000 		.word	0
 289 0310 00000000 		.word	0
 290 0314 00000000 		.word	0
 291 0318 00000000 		.word	0
 292 031c 00000000 		.word	0
 293 0320 01000000 		.word	1
 294 0324 00000000 		.word	0
 295 0328 00000000 		.word	0
 296 032c 00000000 		.word	0
 297 0330 01000000 		.word	1
 298 0334 00000000 		.word	0
 299 0338 01000000 		.word	1
 300 033c 01000000 		.word	1
 301 0340 00000000 		.word	0
 302 0344 01000000 		.word	1
 303 0348 01000000 		.word	1
 304 034c 01000000 		.word	1
 305 0350 01000000 		.word	1
 306 0354 01000000 		.word	1
 307 0358 00000000 		.word	0
 308 035c 01000000 		.word	1
 309 0360 01000000 		.word	1
 310 0364 01000000 		.word	1
 311 0368 00000000 		.word	0
 312 036c 01000000 		.word	1
 313 0370 00000000 		.word	0
 314 0374 01000000 		.word	1
 315 0378 00000000 		.word	0
 316 037c 01000000 		.word	1
 317 0380 00000000 		.word	0
 318 0384 01000000 		.word	1
 319 0388 01000000 		.word	1
 320 038c 00000000 		.word	0
 321 0390 00000000 		.word	0
 322 0394 00000000 		.word	0
 323 0398 00000000 		.word	0
 324 039c 00000000 		.word	0
 325 03a0 01000000 		.word	1
 326 03a4 00000000 		.word	0
 327 03a8 00000000 		.word	0
 328 03ac 00000000 		.word	0
 329 03b0 01000000 		.word	1
 330 03b4 00000000 		.word	0
 331 03b8 00000000 		.word	0
 332 03bc 00000000 		.word	0
 333 03c0 01000000 		.word	1
 334 03c4 00000000 		.word	0
 335 03c8 00000000 		.word	0
 336 03cc 00000000 		.word	0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 7


 337 03d0 01000000 		.word	1
 338 03d4 01000000 		.word	1
 339 03d8 00000000 		.word	0
 340 03dc 01000000 		.word	1
 341 03e0 01000000 		.word	1
 342 03e4 01000000 		.word	1
 343 03e8 00000000 		.word	0
 344 03ec 01000000 		.word	1
 345 03f0 01000000 		.word	1
 346 03f4 01000000 		.word	1
 347 03f8 00000000 		.word	0
 348 03fc 01000000 		.word	1
 349 0400 01000000 		.word	1
 350 0404 01000000 		.word	1
 351 0408 00000000 		.word	0
 352 040c 01000000 		.word	1
 353 0410 01000000 		.word	1
 354 0414 01000000 		.word	1
 355 0418 00000000 		.word	0
 356 041c 01000000 		.word	1
 357 0420 01000000 		.word	1
 358 0424 00000000 		.word	0
 359 0428 00000000 		.word	0
 360 042c 00000000 		.word	0
 361 0430 01000000 		.word	1
 362 0434 00000000 		.word	0
 363 0438 00000000 		.word	0
 364 043c 00000000 		.word	0
 365 0440 00000000 		.word	0
 366 0444 00000000 		.word	0
 367 0448 00000000 		.word	0
 368 044c 00000000 		.word	0
 369 0450 01000000 		.word	1
 370 0454 00000000 		.word	0
 371 0458 00000000 		.word	0
 372 045c 00000000 		.word	0
 373 0460 00000000 		.word	0
 374 0464 00000000 		.word	0
 375 0468 01000000 		.word	1
 376 046c 01000000 		.word	1
 377 0470 01000000 		.word	1
 378 0474 01000000 		.word	1
 379 0478 01000000 		.word	1
 380 047c 01000000 		.word	1
 381 0480 01000000 		.word	1
 382 0484 01000000 		.word	1
 383 0488 01000000 		.word	1
 384 048c 01000000 		.word	1
 385 0490 01000000 		.word	1
 386 0494 01000000 		.word	1
 387 0498 01000000 		.word	1
 388 049c 01000000 		.word	1
 389 04a0 01000000 		.word	1
 390 04a4 01000000 		.word	1
 391 04a8 01000000 		.word	1
 392 04ac 01000000 		.word	1
 393 04b0 01000000 		.word	1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 8


 394 04b4 01000000 		.word	1
 395              		.global	food_list
 396              		.align	2
 397              		.type	food_list, %object
 398              		.size	food_list, 48
 399              	food_list:
 400 04b8 04000000 		.word	4
 401 04bc 05000000 		.word	5
 402 04c0 07000000 		.word	7
 403 04c4 01000000 		.word	1
 404 04c8 0B000000 		.word	11
 405 04cc 05000000 		.word	5
 406 04d0 0A000000 		.word	10
 407 04d4 0B000000 		.word	11
 408 04d8 05000000 		.word	5
 409 04dc 08000000 		.word	8
 410 04e0 11000000 		.word	17
 411 04e4 02000000 		.word	2
 412              		.section	.text.blockAndWait,"ax",%progbits
 413              		.align	2
 414              		.global	blockAndWait
 415              		.thumb
 416              		.thumb_func
 417              		.type	blockAndWait, %function
 418              	blockAndWait:
 419              	.LFB63:
 420              		.file 1 ".\\BFS/helper.h"
   1:.\BFS/helper.h **** #ifndef HELPER_H
   2:.\BFS/helper.h **** #define HELPER_H
   3:.\BFS/helper.h **** #include <stdlib.h>
   4:.\BFS/helper.h **** #include <stdio.h>
   5:.\BFS/helper.h **** #include "point.h"
   6:.\BFS/helper.h **** #include "helper.h"
   7:.\BFS/helper.h **** 
   8:.\BFS/helper.h **** void blockAndWait(){
 421              		.loc 1 8 0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 8
 424              		@ frame_needed = 1, uses_anonymous_args = 0
 425 0000 80B5     		push	{r7, lr}
 426              		.cfi_def_cfa_offset 8
 427              		.cfi_offset 7, -8
 428              		.cfi_offset 14, -4
 429 0002 82B0     		sub	sp, sp, #8
 430              		.cfi_def_cfa_offset 16
 431 0004 00AF     		add	r7, sp, #0
 432              		.cfi_def_cfa_register 7
   9:.\BFS/helper.h ****     char c = getchar();
 433              		.loc 1 9 0
 434 0006 104B     		ldr	r3, .L4
 435 0008 1B68     		ldr	r3, [r3]
 436 000a 5B68     		ldr	r3, [r3, #4]
 437 000c 5A68     		ldr	r2, [r3, #4]
 438 000e 013A     		subs	r2, r2, #1
 439 0010 5A60     		str	r2, [r3, #4]
 440 0012 5B68     		ldr	r3, [r3, #4]
 441 0014 002B     		cmp	r3, #0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 9


 442 0016 0BDA     		bge	.L2
 443              		.loc 1 9 0 is_stmt 0 discriminator 1
 444 0018 0B4B     		ldr	r3, .L4
 445 001a 1A68     		ldr	r2, [r3]
 446 001c 0A4B     		ldr	r3, .L4
 447 001e 1B68     		ldr	r3, [r3]
 448 0020 5B68     		ldr	r3, [r3, #4]
 449 0022 1046     		mov	r0, r2
 450 0024 1946     		mov	r1, r3
 451 0026 FFF7FEFF 		bl	__srget_r
 452 002a 0346     		mov	r3, r0
 453 002c DBB2     		uxtb	r3, r3
 454 002e 06E0     		b	.L3
 455              	.L2:
 456              		.loc 1 9 0 discriminator 2
 457 0030 054B     		ldr	r3, .L4
 458 0032 1B68     		ldr	r3, [r3]
 459 0034 5A68     		ldr	r2, [r3, #4]
 460 0036 1368     		ldr	r3, [r2]
 461 0038 591C     		adds	r1, r3, #1
 462 003a 1160     		str	r1, [r2]
 463 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 464              	.L3:
 465              		.loc 1 9 0 discriminator 4
 466 003e FB71     		strb	r3, [r7, #7]
  10:.\BFS/helper.h **** }
 467              		.loc 1 10 0 is_stmt 1 discriminator 4
 468 0040 0837     		adds	r7, r7, #8
 469              		.cfi_def_cfa_offset 8
 470 0042 BD46     		mov	sp, r7
 471              		.cfi_def_cfa_register 13
 472              		@ sp needed
 473 0044 80BD     		pop	{r7, pc}
 474              	.L5:
 475 0046 00BF     		.align	2
 476              	.L4:
 477 0048 00000000 		.word	_impure_ptr
 478              		.cfi_endproc
 479              	.LFE63:
 480              		.size	blockAndWait, .-blockAndWait
 481              		.section	.text.max,"ax",%progbits
 482              		.align	2
 483              		.global	max
 484              		.thumb
 485              		.thumb_func
 486              		.type	max, %function
 487              	max:
 488              	.LFB64:
  11:.\BFS/helper.h **** 
  12:.\BFS/helper.h **** int max(int * arr, int size){
 489              		.loc 1 12 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 16
 492              		@ frame_needed = 1, uses_anonymous_args = 0
 493              		@ link register save eliminated.
 494 0000 80B4     		push	{r7}
 495              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 10


 496              		.cfi_offset 7, -4
 497 0002 85B0     		sub	sp, sp, #20
 498              		.cfi_def_cfa_offset 24
 499 0004 00AF     		add	r7, sp, #0
 500              		.cfi_def_cfa_register 7
 501 0006 7860     		str	r0, [r7, #4]
 502 0008 3960     		str	r1, [r7]
  13:.\BFS/helper.h ****     int max = 0;
 503              		.loc 1 13 0
 504 000a 0023     		movs	r3, #0
 505 000c FB60     		str	r3, [r7, #12]
  14:.\BFS/helper.h ****     int i;
  15:.\BFS/helper.h ****     for (i = 0; i < size; i++){
 506              		.loc 1 15 0
 507 000e 0023     		movs	r3, #0
 508 0010 BB60     		str	r3, [r7, #8]
 509 0012 10E0     		b	.L7
 510              	.L9:
  16:.\BFS/helper.h ****         if (arr[i] > max) max = arr[i];
 511              		.loc 1 16 0
 512 0014 BB68     		ldr	r3, [r7, #8]
 513 0016 9B00     		lsls	r3, r3, #2
 514 0018 7A68     		ldr	r2, [r7, #4]
 515 001a 1344     		add	r3, r3, r2
 516 001c 1A68     		ldr	r2, [r3]
 517 001e FB68     		ldr	r3, [r7, #12]
 518 0020 9A42     		cmp	r2, r3
 519 0022 05DD     		ble	.L8
 520              		.loc 1 16 0 is_stmt 0 discriminator 1
 521 0024 BB68     		ldr	r3, [r7, #8]
 522 0026 9B00     		lsls	r3, r3, #2
 523 0028 7A68     		ldr	r2, [r7, #4]
 524 002a 1344     		add	r3, r3, r2
 525 002c 1B68     		ldr	r3, [r3]
 526 002e FB60     		str	r3, [r7, #12]
 527              	.L8:
  15:.\BFS/helper.h ****         if (arr[i] > max) max = arr[i];
 528              		.loc 1 15 0 is_stmt 1 discriminator 2
 529 0030 BB68     		ldr	r3, [r7, #8]
 530 0032 0133     		adds	r3, r3, #1
 531 0034 BB60     		str	r3, [r7, #8]
 532              	.L7:
  15:.\BFS/helper.h ****         if (arr[i] > max) max = arr[i];
 533              		.loc 1 15 0 is_stmt 0 discriminator 1
 534 0036 BA68     		ldr	r2, [r7, #8]
 535 0038 3B68     		ldr	r3, [r7]
 536 003a 9A42     		cmp	r2, r3
 537 003c EADB     		blt	.L9
  17:.\BFS/helper.h ****     }
  18:.\BFS/helper.h ****     return max;
 538              		.loc 1 18 0 is_stmt 1
 539 003e FB68     		ldr	r3, [r7, #12]
  19:.\BFS/helper.h **** }
 540              		.loc 1 19 0
 541 0040 1846     		mov	r0, r3
 542 0042 1437     		adds	r7, r7, #20
 543              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 11


 544 0044 BD46     		mov	sp, r7
 545              		.cfi_def_cfa_register 13
 546              		@ sp needed
 547 0046 5DF8047B 		ldr	r7, [sp], #4
 548              		.cfi_restore 7
 549              		.cfi_def_cfa_offset 0
 550 004a 7047     		bx	lr
 551              		.cfi_endproc
 552              	.LFE64:
 553              		.size	max, .-max
 554              		.section	.text.reverseRoute,"ax",%progbits
 555              		.align	2
 556              		.global	reverseRoute
 557              		.thumb
 558              		.thumb_func
 559              		.type	reverseRoute, %function
 560              	reverseRoute:
 561              	.LFB65:
  20:.\BFS/helper.h **** 
  21:.\BFS/helper.h **** void reverseRoute(point * arr, int size){
 562              		.loc 1 21 0
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 16
 565              		@ frame_needed = 1, uses_anonymous_args = 0
 566              		@ link register save eliminated.
 567 0000 80B4     		push	{r7}
 568              		.cfi_def_cfa_offset 4
 569              		.cfi_offset 7, -4
 570 0002 85B0     		sub	sp, sp, #20
 571              		.cfi_def_cfa_offset 24
 572 0004 00AF     		add	r7, sp, #0
 573              		.cfi_def_cfa_register 7
 574 0006 7860     		str	r0, [r7, #4]
 575 0008 3960     		str	r1, [r7]
  22:.\BFS/helper.h ****     int i;
  23:.\BFS/helper.h ****     for (i = 0; i < size/2; i++){
 576              		.loc 1 23 0
 577 000a 0023     		movs	r3, #0
 578 000c FB60     		str	r3, [r7, #12]
 579 000e 11E0     		b	.L12
 580              	.L13:
  24:.\BFS/helper.h ****         arr[i] = arr[size-i];
 581              		.loc 1 24 0 discriminator 3
 582 0010 FB68     		ldr	r3, [r7, #12]
 583 0012 DB00     		lsls	r3, r3, #3
 584 0014 7A68     		ldr	r2, [r7, #4]
 585 0016 D118     		adds	r1, r2, r3
 586 0018 3A68     		ldr	r2, [r7]
 587 001a FB68     		ldr	r3, [r7, #12]
 588 001c D31A     		subs	r3, r2, r3
 589 001e DB00     		lsls	r3, r3, #3
 590 0020 7A68     		ldr	r2, [r7, #4]
 591 0022 1A44     		add	r2, r2, r3
 592 0024 0B46     		mov	r3, r1
 593 0026 92E80300 		ldmia	r2, {r0, r1}
 594 002a 83E80300 		stmia	r3, {r0, r1}
  23:.\BFS/helper.h ****         arr[i] = arr[size-i];
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 12


 595              		.loc 1 23 0 discriminator 3
 596 002e FB68     		ldr	r3, [r7, #12]
 597 0030 0133     		adds	r3, r3, #1
 598 0032 FB60     		str	r3, [r7, #12]
 599              	.L12:
  23:.\BFS/helper.h ****         arr[i] = arr[size-i];
 600              		.loc 1 23 0 is_stmt 0 discriminator 1
 601 0034 3B68     		ldr	r3, [r7]
 602 0036 DA0F     		lsrs	r2, r3, #31
 603 0038 1344     		add	r3, r3, r2
 604 003a 5B10     		asrs	r3, r3, #1
 605 003c 1A46     		mov	r2, r3
 606 003e FB68     		ldr	r3, [r7, #12]
 607 0040 9A42     		cmp	r2, r3
 608 0042 E5DC     		bgt	.L13
  25:.\BFS/helper.h ****     }
  26:.\BFS/helper.h **** }
 609              		.loc 1 26 0 is_stmt 1
 610 0044 1437     		adds	r7, r7, #20
 611              		.cfi_def_cfa_offset 4
 612 0046 BD46     		mov	sp, r7
 613              		.cfi_def_cfa_register 13
 614              		@ sp needed
 615 0048 5DF8047B 		ldr	r7, [sp], #4
 616              		.cfi_restore 7
 617              		.cfi_def_cfa_offset 0
 618 004c 7047     		bx	lr
 619              		.cfi_endproc
 620              	.LFE65:
 621              		.size	reverseRoute, .-reverseRoute
 622 004e 00BF     		.section	.text.isRouteEqual,"ax",%progbits
 623              		.align	2
 624              		.global	isRouteEqual
 625              		.thumb
 626              		.thumb_func
 627              		.type	isRouteEqual, %function
 628              	isRouteEqual:
 629              	.LFB66:
  27:.\BFS/helper.h **** 
  28:.\BFS/helper.h **** int isRouteEqual(point * arr1, point * arr2, int size){
 630              		.loc 1 28 0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 24
 633              		@ frame_needed = 1, uses_anonymous_args = 0
 634              		@ link register save eliminated.
 635 0000 80B4     		push	{r7}
 636              		.cfi_def_cfa_offset 4
 637              		.cfi_offset 7, -4
 638 0002 87B0     		sub	sp, sp, #28
 639              		.cfi_def_cfa_offset 32
 640 0004 00AF     		add	r7, sp, #0
 641              		.cfi_def_cfa_register 7
 642 0006 F860     		str	r0, [r7, #12]
 643 0008 B960     		str	r1, [r7, #8]
 644 000a 7A60     		str	r2, [r7, #4]
  29:.\BFS/helper.h ****     int i;
  30:.\BFS/helper.h ****     for (i = 0; i < size; i++){
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 13


 645              		.loc 1 30 0
 646 000c 0023     		movs	r3, #0
 647 000e 7B61     		str	r3, [r7, #20]
 648 0010 1CE0     		b	.L15
 649              	.L19:
  31:.\BFS/helper.h ****         if (arr1[i].x != arr2[i].x || arr1[i].y != arr2[i].y) return FALSE;
 650              		.loc 1 31 0
 651 0012 7B69     		ldr	r3, [r7, #20]
 652 0014 DB00     		lsls	r3, r3, #3
 653 0016 FA68     		ldr	r2, [r7, #12]
 654 0018 1344     		add	r3, r3, r2
 655 001a 1A68     		ldr	r2, [r3]
 656 001c 7B69     		ldr	r3, [r7, #20]
 657 001e DB00     		lsls	r3, r3, #3
 658 0020 B968     		ldr	r1, [r7, #8]
 659 0022 0B44     		add	r3, r3, r1
 660 0024 1B68     		ldr	r3, [r3]
 661 0026 9A42     		cmp	r2, r3
 662 0028 0BD1     		bne	.L16
 663              		.loc 1 31 0 is_stmt 0 discriminator 2
 664 002a 7B69     		ldr	r3, [r7, #20]
 665 002c DB00     		lsls	r3, r3, #3
 666 002e FA68     		ldr	r2, [r7, #12]
 667 0030 1344     		add	r3, r3, r2
 668 0032 5A68     		ldr	r2, [r3, #4]
 669 0034 7B69     		ldr	r3, [r7, #20]
 670 0036 DB00     		lsls	r3, r3, #3
 671 0038 B968     		ldr	r1, [r7, #8]
 672 003a 0B44     		add	r3, r3, r1
 673 003c 5B68     		ldr	r3, [r3, #4]
 674 003e 9A42     		cmp	r2, r3
 675 0040 01D0     		beq	.L17
 676              	.L16:
 677              		.loc 1 31 0 discriminator 3
 678 0042 0023     		movs	r3, #0
 679 0044 07E0     		b	.L18
 680              	.L17:
  30:.\BFS/helper.h ****         if (arr1[i].x != arr2[i].x || arr1[i].y != arr2[i].y) return FALSE;
 681              		.loc 1 30 0 is_stmt 1 discriminator 2
 682 0046 7B69     		ldr	r3, [r7, #20]
 683 0048 0133     		adds	r3, r3, #1
 684 004a 7B61     		str	r3, [r7, #20]
 685              	.L15:
  30:.\BFS/helper.h ****         if (arr1[i].x != arr2[i].x || arr1[i].y != arr2[i].y) return FALSE;
 686              		.loc 1 30 0 is_stmt 0 discriminator 1
 687 004c 7A69     		ldr	r2, [r7, #20]
 688 004e 7B68     		ldr	r3, [r7, #4]
 689 0050 9A42     		cmp	r2, r3
 690 0052 DEDB     		blt	.L19
  32:.\BFS/helper.h ****     }
  33:.\BFS/helper.h ****     return TRUE;
 691              		.loc 1 33 0 is_stmt 1
 692 0054 0123     		movs	r3, #1
 693              	.L18:
  34:.\BFS/helper.h **** }
 694              		.loc 1 34 0
 695 0056 1846     		mov	r0, r3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 14


 696 0058 1C37     		adds	r7, r7, #28
 697              		.cfi_def_cfa_offset 4
 698 005a BD46     		mov	sp, r7
 699              		.cfi_def_cfa_register 13
 700              		@ sp needed
 701 005c 5DF8047B 		ldr	r7, [sp], #4
 702              		.cfi_restore 7
 703              		.cfi_def_cfa_offset 0
 704 0060 7047     		bx	lr
 705              		.cfi_endproc
 706              	.LFE66:
 707              		.size	isRouteEqual, .-isRouteEqual
 708 0062 00BF     		.section	.text.appendArray,"ax",%progbits
 709              		.align	2
 710              		.global	appendArray
 711              		.thumb
 712              		.thumb_func
 713              		.type	appendArray, %function
 714              	appendArray:
 715              	.LFB67:
  35:.\BFS/helper.h **** 
  36:.\BFS/helper.h **** void appendArray(void *source, void *addition){
 716              		.loc 1 36 0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 8
 719              		@ frame_needed = 1, uses_anonymous_args = 0
 720              		@ link register save eliminated.
 721 0000 80B4     		push	{r7}
 722              		.cfi_def_cfa_offset 4
 723              		.cfi_offset 7, -4
 724 0002 83B0     		sub	sp, sp, #12
 725              		.cfi_def_cfa_offset 16
 726 0004 00AF     		add	r7, sp, #0
 727              		.cfi_def_cfa_register 7
 728 0006 7860     		str	r0, [r7, #4]
 729 0008 3960     		str	r1, [r7]
  37:.\BFS/helper.h ****     // TODO: Implement
  38:.\BFS/helper.h **** }
 730              		.loc 1 38 0
 731 000a 0C37     		adds	r7, r7, #12
 732              		.cfi_def_cfa_offset 4
 733 000c BD46     		mov	sp, r7
 734              		.cfi_def_cfa_register 13
 735              		@ sp needed
 736 000e 5DF8047B 		ldr	r7, [sp], #4
 737              		.cfi_restore 7
 738              		.cfi_def_cfa_offset 0
 739 0012 7047     		bx	lr
 740              		.cfi_endproc
 741              	.LFE67:
 742              		.size	appendArray, .-appendArray
 743              		.section	.text.len,"ax",%progbits
 744              		.align	2
 745              		.global	len
 746              		.thumb
 747              		.thumb_func
 748              		.type	len, %function
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 15


 749              	len:
 750              	.LFB68:
 751              		.file 2 ".\\BFS/map_addons.h"
   1:.\BFS/map_addons.h **** #ifndef MAP_ADDONS_H
   2:.\BFS/map_addons.h **** #define MAP_ADDONS_H
   3:.\BFS/map_addons.h **** 
   4:.\BFS/map_addons.h **** // Dimensions of map and paths in map
   5:.\BFS/map_addons.h **** #define MAP_ROW 15
   6:.\BFS/map_addons.h **** #define MAP_COL 19
   7:.\BFS/map_addons.h **** #define MAX_PATH_LENGTH 140
   8:.\BFS/map_addons.h **** #define MAX_NUM_PATHS 10
   9:.\BFS/map_addons.h **** #define MAX_NODES 30
  10:.\BFS/map_addons.h **** #define MAX_STACK_SIZE 20
  11:.\BFS/map_addons.h **** #define MAX_EDGES 15
  12:.\BFS/map_addons.h **** 
  13:.\BFS/map_addons.h **** // Colours for printing
  14:.\BFS/map_addons.h **** #define RED "\033[0;31m"
  15:.\BFS/map_addons.h **** #define BLUE "\033[0;34m"
  16:.\BFS/map_addons.h **** #define BOLD_GREEN "\033[1;32m"
  17:.\BFS/map_addons.h **** #define BOLD_YELLOW "\033[1;33m"
  18:.\BFS/map_addons.h **** #define DEFAULT_COLOUR "\033[0m"
  19:.\BFS/map_addons.h **** 
  20:.\BFS/map_addons.h **** // Labels for vertices on the map
  21:.\BFS/map_addons.h **** #define UNVISITED 0
  22:.\BFS/map_addons.h **** #define WALL 1
  23:.\BFS/map_addons.h **** #define VISITED 2
  24:.\BFS/map_addons.h **** #define FINAL_PATH 3
  25:.\BFS/map_addons.h **** #define START_OR_END 4
  26:.\BFS/map_addons.h **** #define EMPTY_VAL -1
  27:.\BFS/map_addons.h **** 
  28:.\BFS/map_addons.h **** // Command Macros
  29:.\BFS/map_addons.h **** #define LEFT_TURN -1
  30:.\BFS/map_addons.h **** #define RIGHT_TURN -2
  31:.\BFS/map_addons.h **** #define U_TURN -3
  32:.\BFS/map_addons.h **** 
  33:.\BFS/map_addons.h **** // Parameters for creating the command list
  34:.\BFS/map_addons.h **** #define MAX_COMMAND_LENGTH 50
  35:.\BFS/map_addons.h **** #define EMPTY_COMMAND 0
  36:.\BFS/map_addons.h **** #define CMD_NULL -1
  37:.\BFS/map_addons.h **** #define CMD_RIGHT 0
  38:.\BFS/map_addons.h **** #define CMD_DOWN 1
  39:.\BFS/map_addons.h **** #define CMD_LEFT 2
  40:.\BFS/map_addons.h **** #define CMD_UP 3
  41:.\BFS/map_addons.h **** #define START_FACING CMD_UP //-------------------Change Orientation here---------------------------
  42:.\BFS/map_addons.h **** 
  43:.\BFS/map_addons.h **** // Values that decide turning behaviour
  44:.\BFS/map_addons.h **** #define GO_STRAIGHT 0
  45:.\BFS/map_addons.h **** #define TURN_LEFT_1 -1
  46:.\BFS/map_addons.h **** #define TURN_LEFT_2 3
  47:.\BFS/map_addons.h **** #define TURN_RIGHT_1 1
  48:.\BFS/map_addons.h **** #define TURN_RIGHT_2 -3
  49:.\BFS/map_addons.h **** 
  50:.\BFS/map_addons.h **** // Includes
  51:.\BFS/map_addons.h **** #include <stdio.h>
  52:.\BFS/map_addons.h **** #include "helper.h"
  53:.\BFS/map_addons.h **** #include "point.h"
  54:.\BFS/map_addons.h **** #include "line_map.h"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 16


  55:.\BFS/map_addons.h **** #include "defines.h"
  56:.\BFS/map_addons.h **** 
  57:.\BFS/map_addons.h **** /* Get the length of a path*/
  58:.\BFS/map_addons.h **** int len(point * path){
 752              		.loc 2 58 0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 16
 755              		@ frame_needed = 1, uses_anonymous_args = 0
 756              		@ link register save eliminated.
 757 0000 80B4     		push	{r7}
 758              		.cfi_def_cfa_offset 4
 759              		.cfi_offset 7, -4
 760 0002 85B0     		sub	sp, sp, #20
 761              		.cfi_def_cfa_offset 24
 762 0004 00AF     		add	r7, sp, #0
 763              		.cfi_def_cfa_register 7
 764 0006 7860     		str	r0, [r7, #4]
  59:.\BFS/map_addons.h ****     int len = 0;
 765              		.loc 2 59 0
 766 0008 0023     		movs	r3, #0
 767 000a FB60     		str	r3, [r7, #12]
  60:.\BFS/map_addons.h ****     int i;
  61:.\BFS/map_addons.h ****     for (i = 0; i < MAX_PATH_LENGTH; i++){
 768              		.loc 2 61 0
 769 000c 0023     		movs	r3, #0
 770 000e BB60     		str	r3, [r7, #8]
 771 0010 16E0     		b	.L22
 772              	.L25:
  62:.\BFS/map_addons.h ****         if (path[i].x == EMPTY_VAL && path[i].y == EMPTY_VAL) break;
 773              		.loc 2 62 0
 774 0012 BB68     		ldr	r3, [r7, #8]
 775 0014 DB00     		lsls	r3, r3, #3
 776 0016 7A68     		ldr	r2, [r7, #4]
 777 0018 1344     		add	r3, r3, r2
 778 001a 1B68     		ldr	r3, [r3]
 779 001c B3F1FF3F 		cmp	r3, #-1
 780 0020 08D1     		bne	.L23
 781              		.loc 2 62 0 is_stmt 0 discriminator 1
 782 0022 BB68     		ldr	r3, [r7, #8]
 783 0024 DB00     		lsls	r3, r3, #3
 784 0026 7A68     		ldr	r2, [r7, #4]
 785 0028 1344     		add	r3, r3, r2
 786 002a 5B68     		ldr	r3, [r3, #4]
 787 002c B3F1FF3F 		cmp	r3, #-1
 788 0030 00D1     		bne	.L23
 789              		.loc 2 62 0
 790 0032 08E0     		b	.L24
 791              	.L23:
  63:.\BFS/map_addons.h ****         len++;
 792              		.loc 2 63 0 is_stmt 1 discriminator 2
 793 0034 FB68     		ldr	r3, [r7, #12]
 794 0036 0133     		adds	r3, r3, #1
 795 0038 FB60     		str	r3, [r7, #12]
  61:.\BFS/map_addons.h ****         if (path[i].x == EMPTY_VAL && path[i].y == EMPTY_VAL) break;
 796              		.loc 2 61 0 discriminator 2
 797 003a BB68     		ldr	r3, [r7, #8]
 798 003c 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 17


 799 003e BB60     		str	r3, [r7, #8]
 800              	.L22:
  61:.\BFS/map_addons.h ****         if (path[i].x == EMPTY_VAL && path[i].y == EMPTY_VAL) break;
 801              		.loc 2 61 0 is_stmt 0 discriminator 1
 802 0040 BB68     		ldr	r3, [r7, #8]
 803 0042 8B2B     		cmp	r3, #139
 804 0044 E5DD     		ble	.L25
 805              	.L24:
  64:.\BFS/map_addons.h ****     }
  65:.\BFS/map_addons.h ****     return len;
 806              		.loc 2 65 0 is_stmt 1
 807 0046 FB68     		ldr	r3, [r7, #12]
  66:.\BFS/map_addons.h **** }
 808              		.loc 2 66 0
 809 0048 1846     		mov	r0, r3
 810 004a 1437     		adds	r7, r7, #20
 811              		.cfi_def_cfa_offset 4
 812 004c BD46     		mov	sp, r7
 813              		.cfi_def_cfa_register 13
 814              		@ sp needed
 815 004e 5DF8047B 		ldr	r7, [sp], #4
 816              		.cfi_restore 7
 817              		.cfi_def_cfa_offset 0
 818 0052 7047     		bx	lr
 819              		.cfi_endproc
 820              	.LFE68:
 821              		.size	len, .-len
 822              		.section	.text.isEmpty,"ax",%progbits
 823              		.align	2
 824              		.global	isEmpty
 825              		.thumb
 826              		.thumb_func
 827              		.type	isEmpty, %function
 828              	isEmpty:
 829              	.LFB69:
  67:.\BFS/map_addons.h **** 
  68:.\BFS/map_addons.h **** /* Check if a path is empty i.e. full of EMPTY_VAL */
  69:.\BFS/map_addons.h **** int isEmpty(point * path, int size){
 830              		.loc 2 69 0
 831              		.cfi_startproc
 832              		@ args = 0, pretend = 0, frame = 16
 833              		@ frame_needed = 1, uses_anonymous_args = 0
 834              		@ link register save eliminated.
 835 0000 80B4     		push	{r7}
 836              		.cfi_def_cfa_offset 4
 837              		.cfi_offset 7, -4
 838 0002 85B0     		sub	sp, sp, #20
 839              		.cfi_def_cfa_offset 24
 840 0004 00AF     		add	r7, sp, #0
 841              		.cfi_def_cfa_register 7
 842 0006 7860     		str	r0, [r7, #4]
 843 0008 3960     		str	r1, [r7]
  70:.\BFS/map_addons.h ****     int i;
  71:.\BFS/map_addons.h ****     for (i = 0;i<size;i++){
 844              		.loc 2 71 0
 845 000a 0023     		movs	r3, #0
 846 000c FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 18


 847 000e 14E0     		b	.L28
 848              	.L31:
  72:.\BFS/map_addons.h ****         if (path[i].x != EMPTY_VAL && path[i].y != EMPTY_VAL) return FALSE;
 849              		.loc 2 72 0
 850 0010 FB68     		ldr	r3, [r7, #12]
 851 0012 DB00     		lsls	r3, r3, #3
 852 0014 7A68     		ldr	r2, [r7, #4]
 853 0016 1344     		add	r3, r3, r2
 854 0018 1B68     		ldr	r3, [r3]
 855 001a B3F1FF3F 		cmp	r3, #-1
 856 001e 09D0     		beq	.L29
 857              		.loc 2 72 0 is_stmt 0 discriminator 1
 858 0020 FB68     		ldr	r3, [r7, #12]
 859 0022 DB00     		lsls	r3, r3, #3
 860 0024 7A68     		ldr	r2, [r7, #4]
 861 0026 1344     		add	r3, r3, r2
 862 0028 5B68     		ldr	r3, [r3, #4]
 863 002a B3F1FF3F 		cmp	r3, #-1
 864 002e 01D0     		beq	.L29
 865              		.loc 2 72 0 discriminator 2
 866 0030 0023     		movs	r3, #0
 867 0032 07E0     		b	.L30
 868              	.L29:
  71:.\BFS/map_addons.h ****         if (path[i].x != EMPTY_VAL && path[i].y != EMPTY_VAL) return FALSE;
 869              		.loc 2 71 0 is_stmt 1 discriminator 2
 870 0034 FB68     		ldr	r3, [r7, #12]
 871 0036 0133     		adds	r3, r3, #1
 872 0038 FB60     		str	r3, [r7, #12]
 873              	.L28:
  71:.\BFS/map_addons.h ****         if (path[i].x != EMPTY_VAL && path[i].y != EMPTY_VAL) return FALSE;
 874              		.loc 2 71 0 is_stmt 0 discriminator 1
 875 003a FA68     		ldr	r2, [r7, #12]
 876 003c 3B68     		ldr	r3, [r7]
 877 003e 9A42     		cmp	r2, r3
 878 0040 E6DB     		blt	.L31
  73:.\BFS/map_addons.h ****     }
  74:.\BFS/map_addons.h ****     return TRUE;
 879              		.loc 2 74 0 is_stmt 1
 880 0042 0123     		movs	r3, #1
 881              	.L30:
  75:.\BFS/map_addons.h **** }
 882              		.loc 2 75 0
 883 0044 1846     		mov	r0, r3
 884 0046 1437     		adds	r7, r7, #20
 885              		.cfi_def_cfa_offset 4
 886 0048 BD46     		mov	sp, r7
 887              		.cfi_def_cfa_register 13
 888              		@ sp needed
 889 004a 5DF8047B 		ldr	r7, [sp], #4
 890              		.cfi_restore 7
 891              		.cfi_def_cfa_offset 0
 892 004e 7047     		bx	lr
 893              		.cfi_endproc
 894              	.LFE69:
 895              		.size	isEmpty, .-isEmpty
 896              		.section	.text.isPointOnPath,"ax",%progbits
 897              		.align	2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 19


 898              		.global	isPointOnPath
 899              		.thumb
 900              		.thumb_func
 901              		.type	isPointOnPath, %function
 902              	isPointOnPath:
 903              	.LFB70:
  76:.\BFS/map_addons.h **** 
  77:.\BFS/map_addons.h **** int isPointOnPath(point p, point * path, int size){
 904              		.loc 2 77 0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 24
 907              		@ frame_needed = 1, uses_anonymous_args = 0
 908              		@ link register save eliminated.
 909 0000 90B4     		push	{r4, r7}
 910              		.cfi_def_cfa_offset 8
 911              		.cfi_offset 4, -8
 912              		.cfi_offset 7, -4
 913 0002 86B0     		sub	sp, sp, #24
 914              		.cfi_def_cfa_offset 32
 915 0004 00AF     		add	r7, sp, #0
 916              		.cfi_def_cfa_register 7
 917 0006 07F10804 		add	r4, r7, #8
 918 000a 84E80300 		stmia	r4, {r0, r1}
 919 000e 7A60     		str	r2, [r7, #4]
 920 0010 3B60     		str	r3, [r7]
  78:.\BFS/map_addons.h ****     int i;
  79:.\BFS/map_addons.h ****     for (i = 0; i < size; i++){
 921              		.loc 2 79 0
 922 0012 0023     		movs	r3, #0
 923 0014 7B61     		str	r3, [r7, #20]
 924 0016 14E0     		b	.L33
 925              	.L36:
  80:.\BFS/map_addons.h ****         if (path[i].x == p.x && path[i].y == p.y) return TRUE;   
 926              		.loc 2 80 0
 927 0018 7B69     		ldr	r3, [r7, #20]
 928 001a DB00     		lsls	r3, r3, #3
 929 001c 7A68     		ldr	r2, [r7, #4]
 930 001e 1344     		add	r3, r3, r2
 931 0020 1A68     		ldr	r2, [r3]
 932 0022 BB68     		ldr	r3, [r7, #8]
 933 0024 9A42     		cmp	r2, r3
 934 0026 09D1     		bne	.L34
 935              		.loc 2 80 0 is_stmt 0 discriminator 1
 936 0028 7B69     		ldr	r3, [r7, #20]
 937 002a DB00     		lsls	r3, r3, #3
 938 002c 7A68     		ldr	r2, [r7, #4]
 939 002e 1344     		add	r3, r3, r2
 940 0030 5A68     		ldr	r2, [r3, #4]
 941 0032 FB68     		ldr	r3, [r7, #12]
 942 0034 9A42     		cmp	r2, r3
 943 0036 01D1     		bne	.L34
 944              		.loc 2 80 0 discriminator 2
 945 0038 0123     		movs	r3, #1
 946 003a 07E0     		b	.L35
 947              	.L34:
  79:.\BFS/map_addons.h ****         if (path[i].x == p.x && path[i].y == p.y) return TRUE;   
 948              		.loc 2 79 0 is_stmt 1 discriminator 2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 20


 949 003c 7B69     		ldr	r3, [r7, #20]
 950 003e 0133     		adds	r3, r3, #1
 951 0040 7B61     		str	r3, [r7, #20]
 952              	.L33:
  79:.\BFS/map_addons.h ****         if (path[i].x == p.x && path[i].y == p.y) return TRUE;   
 953              		.loc 2 79 0 is_stmt 0 discriminator 1
 954 0042 7A69     		ldr	r2, [r7, #20]
 955 0044 3B68     		ldr	r3, [r7]
 956 0046 9A42     		cmp	r2, r3
 957 0048 E6DB     		blt	.L36
  81:.\BFS/map_addons.h ****     }
  82:.\BFS/map_addons.h ****     return FALSE;
 958              		.loc 2 82 0 is_stmt 1
 959 004a 0023     		movs	r3, #0
 960              	.L35:
  83:.\BFS/map_addons.h **** }
 961              		.loc 2 83 0
 962 004c 1846     		mov	r0, r3
 963 004e 1837     		adds	r7, r7, #24
 964              		.cfi_def_cfa_offset 8
 965 0050 BD46     		mov	sp, r7
 966              		.cfi_def_cfa_register 13
 967              		@ sp needed
 968 0052 90BC     		pop	{r4, r7}
 969              		.cfi_restore 7
 970              		.cfi_restore 4
 971              		.cfi_def_cfa_offset 0
 972 0054 7047     		bx	lr
 973              		.cfi_endproc
 974              	.LFE70:
 975              		.size	isPointOnPath, .-isPointOnPath
 976 0056 00BF     		.section	.rodata
 977              		.align	2
 978              	.LC3:
 979 0000 2825642C 		.ascii	"(%d, %d)\000"
 979      20256429 
 979      00
 980 0009 000000   		.align	2
 981              	.LC4:
 982 000c 00       		.ascii	"\000"
 983              		.section	.text.printPath,"ax",%progbits
 984              		.align	2
 985              		.global	printPath
 986              		.thumb
 987              		.thumb_func
 988              		.type	printPath, %function
 989              	printPath:
 990              	.LFB71:
  84:.\BFS/map_addons.h **** 
  85:.\BFS/map_addons.h **** /* Print a path */
  86:.\BFS/map_addons.h **** void printPath(point * path){
 991              		.loc 2 86 0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 16
 994              		@ frame_needed = 1, uses_anonymous_args = 0
 995 0000 80B5     		push	{r7, lr}
 996              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 21


 997              		.cfi_offset 7, -8
 998              		.cfi_offset 14, -4
 999 0002 84B0     		sub	sp, sp, #16
 1000              		.cfi_def_cfa_offset 24
 1001 0004 00AF     		add	r7, sp, #0
 1002              		.cfi_def_cfa_register 7
 1003 0006 7860     		str	r0, [r7, #4]
  87:.\BFS/map_addons.h ****     int i;
  88:.\BFS/map_addons.h ****     for (i = 0; i < MAX_PATH_LENGTH; i++){
 1004              		.loc 2 88 0
 1005 0008 0023     		movs	r3, #0
 1006 000a FB60     		str	r3, [r7, #12]
 1007 000c 25E0     		b	.L38
 1008              	.L43:
  89:.\BFS/map_addons.h ****         if (path[i].x == EMPTY_VAL && path[i].y == EMPTY_VAL){
 1009              		.loc 2 89 0
 1010 000e FB68     		ldr	r3, [r7, #12]
 1011 0010 DB00     		lsls	r3, r3, #3
 1012 0012 7A68     		ldr	r2, [r7, #4]
 1013 0014 1344     		add	r3, r3, r2
 1014 0016 1B68     		ldr	r3, [r3]
 1015 0018 B3F1FF3F 		cmp	r3, #-1
 1016 001c 0CD1     		bne	.L39
 1017              		.loc 2 89 0 is_stmt 0 discriminator 1
 1018 001e FB68     		ldr	r3, [r7, #12]
 1019 0020 DB00     		lsls	r3, r3, #3
 1020 0022 7A68     		ldr	r2, [r7, #4]
 1021 0024 1344     		add	r3, r3, r2
 1022 0026 5B68     		ldr	r3, [r3, #4]
 1023 0028 B3F1FF3F 		cmp	r3, #-1
 1024 002c 04D1     		bne	.L39
  90:.\BFS/map_addons.h ****             if (i > 0) break;
 1025              		.loc 2 90 0 is_stmt 1
 1026 002e FB68     		ldr	r3, [r7, #12]
 1027 0030 002B     		cmp	r3, #0
 1028 0032 00DD     		ble	.L40
 1029 0034 14E0     		b	.L41
 1030              	.L40:
  91:.\BFS/map_addons.h ****             return;
 1031              		.loc 2 91 0
 1032 0036 16E0     		b	.L37
 1033              	.L39:
  92:.\BFS/map_addons.h ****         }
  93:.\BFS/map_addons.h ****         printf("(%d, %d)",path[i].x,path[i].y);
 1034              		.loc 2 93 0 discriminator 2
 1035 0038 FB68     		ldr	r3, [r7, #12]
 1036 003a DB00     		lsls	r3, r3, #3
 1037 003c 7A68     		ldr	r2, [r7, #4]
 1038 003e 1344     		add	r3, r3, r2
 1039 0040 1968     		ldr	r1, [r3]
 1040 0042 FB68     		ldr	r3, [r7, #12]
 1041 0044 DB00     		lsls	r3, r3, #3
 1042 0046 7A68     		ldr	r2, [r7, #4]
 1043 0048 1344     		add	r3, r3, r2
 1044 004a 5B68     		ldr	r3, [r3, #4]
 1045 004c 0748     		ldr	r0, .L44
 1046 004e 1A46     		mov	r2, r3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 22


 1047 0050 FFF7FEFF 		bl	printf
  88:.\BFS/map_addons.h ****         if (path[i].x == EMPTY_VAL && path[i].y == EMPTY_VAL){
 1048              		.loc 2 88 0 discriminator 2
 1049 0054 FB68     		ldr	r3, [r7, #12]
 1050 0056 0133     		adds	r3, r3, #1
 1051 0058 FB60     		str	r3, [r7, #12]
 1052              	.L38:
  88:.\BFS/map_addons.h ****         if (path[i].x == EMPTY_VAL && path[i].y == EMPTY_VAL){
 1053              		.loc 2 88 0 is_stmt 0 discriminator 1
 1054 005a FB68     		ldr	r3, [r7, #12]
 1055 005c 8B2B     		cmp	r3, #139
 1056 005e D6DD     		ble	.L43
 1057              	.L41:
  94:.\BFS/map_addons.h ****     }
  95:.\BFS/map_addons.h ****     puts("");
 1058              		.loc 2 95 0 is_stmt 1
 1059 0060 0348     		ldr	r0, .L44+4
 1060 0062 FFF7FEFF 		bl	puts
 1061              	.L37:
  96:.\BFS/map_addons.h **** }
 1062              		.loc 2 96 0
 1063 0066 1037     		adds	r7, r7, #16
 1064              		.cfi_def_cfa_offset 8
 1065 0068 BD46     		mov	sp, r7
 1066              		.cfi_def_cfa_register 13
 1067              		@ sp needed
 1068 006a 80BD     		pop	{r7, pc}
 1069              	.L45:
 1070              		.align	2
 1071              	.L44:
 1072 006c 00000000 		.word	.LC3
 1073 0070 0C000000 		.word	.LC4
 1074              		.cfi_endproc
 1075              	.LFE71:
 1076              		.size	printPath, .-printPath
 1077              		.section	.rodata
 1078 000d 000000   		.align	2
 1079              	.LC5:
 1080 0010 436F6D6D 		.ascii	"Commands: (\000"
 1080      616E6473 
 1080      3A202800 
 1081              		.align	2
 1082              	.LC6:
 1083 001c 256400   		.ascii	"%d\000"
 1084 001f 00       		.align	2
 1085              	.LC7:
 1086 0020 2900     		.ascii	")\000"
 1087              		.section	.text.printCommands,"ax",%progbits
 1088              		.align	2
 1089              		.global	printCommands
 1090              		.thumb
 1091              		.thumb_func
 1092              		.type	printCommands, %function
 1093              	printCommands:
 1094              	.LFB72:
  97:.\BFS/map_addons.h **** 
  98:.\BFS/map_addons.h **** /* Prints the commands */
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 23


  99:.\BFS/map_addons.h **** void printCommands(int *commands){
 1095              		.loc 2 99 0
 1096              		.cfi_startproc
 1097              		@ args = 0, pretend = 0, frame = 16
 1098              		@ frame_needed = 1, uses_anonymous_args = 0
 1099 0000 80B5     		push	{r7, lr}
 1100              		.cfi_def_cfa_offset 8
 1101              		.cfi_offset 7, -8
 1102              		.cfi_offset 14, -4
 1103 0002 84B0     		sub	sp, sp, #16
 1104              		.cfi_def_cfa_offset 24
 1105 0004 00AF     		add	r7, sp, #0
 1106              		.cfi_def_cfa_register 7
 1107 0006 7860     		str	r0, [r7, #4]
 100:.\BFS/map_addons.h ****     fputs("Commands: (",stdout);
 1108              		.loc 2 100 0
 1109 0008 254B     		ldr	r3, .L59
 1110 000a 1B68     		ldr	r3, [r3]
 1111 000c 9B68     		ldr	r3, [r3, #8]
 1112 000e 2548     		ldr	r0, .L59+4
 1113 0010 0121     		movs	r1, #1
 1114 0012 0B22     		movs	r2, #11
 1115 0014 FFF7FEFF 		bl	fwrite
 101:.\BFS/map_addons.h ****     int i;
 102:.\BFS/map_addons.h ****     for (i = 0; i < MAX_COMMAND_LENGTH; i++){
 1116              		.loc 2 102 0
 1117 0018 0023     		movs	r3, #0
 1118 001a FB60     		str	r3, [r7, #12]
 1119 001c 36E0     		b	.L47
 1120              	.L57:
 103:.\BFS/map_addons.h ****         if (commands[i] == EMPTY_COMMAND){
 1121              		.loc 2 103 0
 1122 001e FB68     		ldr	r3, [r7, #12]
 1123 0020 9B00     		lsls	r3, r3, #2
 1124 0022 7A68     		ldr	r2, [r7, #4]
 1125 0024 1344     		add	r3, r3, r2
 1126 0026 1B68     		ldr	r3, [r3]
 1127 0028 002B     		cmp	r3, #0
 1128 002a 04D1     		bne	.L48
 104:.\BFS/map_addons.h ****             if (i > 0) break;
 1129              		.loc 2 104 0
 1130 002c FB68     		ldr	r3, [r7, #12]
 1131 002e 002B     		cmp	r3, #0
 1132 0030 00DD     		ble	.L49
 1133 0032 2EE0     		b	.L50
 1134              	.L49:
 105:.\BFS/map_addons.h ****             return;
 1135              		.loc 2 105 0
 1136 0034 30E0     		b	.L46
 1137              	.L48:
 106:.\BFS/map_addons.h ****         }
 107:.\BFS/map_addons.h ****         switch(commands[i]){
 1138              		.loc 2 107 0
 1139 0036 FB68     		ldr	r3, [r7, #12]
 1140 0038 9B00     		lsls	r3, r3, #2
 1141 003a 7A68     		ldr	r2, [r7, #4]
 1142 003c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 24


 1143 003e 1B68     		ldr	r3, [r3]
 1144 0040 13F1020F 		cmn	r3, #2
 1145 0044 06D0     		beq	.L53
 1146 0046 B3F1FF3F 		cmp	r3, #-1
 1147 004a 07D1     		bne	.L58
 108:.\BFS/map_addons.h ****             case LEFT_TURN:
 109:.\BFS/map_addons.h ****                 printf("L");
 1148              		.loc 2 109 0
 1149 004c 4C20     		movs	r0, #76
 1150 004e FFF7FEFF 		bl	putchar
 110:.\BFS/map_addons.h ****                 break;
 1151              		.loc 2 110 0
 1152 0052 0DE0     		b	.L55
 1153              	.L53:
 111:.\BFS/map_addons.h ****             case RIGHT_TURN:
 112:.\BFS/map_addons.h ****                 printf("R");
 1154              		.loc 2 112 0
 1155 0054 5220     		movs	r0, #82
 1156 0056 FFF7FEFF 		bl	putchar
 113:.\BFS/map_addons.h ****                 break;
 1157              		.loc 2 113 0
 1158 005a 09E0     		b	.L55
 1159              	.L58:
 114:.\BFS/map_addons.h ****             default:
 115:.\BFS/map_addons.h ****                 printf("%d", commands[i]);
 1160              		.loc 2 115 0
 1161 005c FB68     		ldr	r3, [r7, #12]
 1162 005e 9B00     		lsls	r3, r3, #2
 1163 0060 7A68     		ldr	r2, [r7, #4]
 1164 0062 1344     		add	r3, r3, r2
 1165 0064 1B68     		ldr	r3, [r3]
 1166 0066 1048     		ldr	r0, .L59+8
 1167 0068 1946     		mov	r1, r3
 1168 006a FFF7FEFF 		bl	printf
 116:.\BFS/map_addons.h ****                 break;
 1169              		.loc 2 116 0
 1170 006e 00BF     		nop
 1171              	.L55:
 117:.\BFS/map_addons.h ****         };
 118:.\BFS/map_addons.h ****         if (commands[i+1] != EMPTY_COMMAND) printf(",");
 1172              		.loc 2 118 0
 1173 0070 FB68     		ldr	r3, [r7, #12]
 1174 0072 0133     		adds	r3, r3, #1
 1175 0074 9B00     		lsls	r3, r3, #2
 1176 0076 7A68     		ldr	r2, [r7, #4]
 1177 0078 1344     		add	r3, r3, r2
 1178 007a 1B68     		ldr	r3, [r3]
 1179 007c 002B     		cmp	r3, #0
 1180 007e 02D0     		beq	.L56
 1181              		.loc 2 118 0 is_stmt 0 discriminator 1
 1182 0080 2C20     		movs	r0, #44
 1183 0082 FFF7FEFF 		bl	putchar
 1184              	.L56:
 102:.\BFS/map_addons.h ****         if (commands[i] == EMPTY_COMMAND){
 1185              		.loc 2 102 0 is_stmt 1 discriminator 2
 1186 0086 FB68     		ldr	r3, [r7, #12]
 1187 0088 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 25


 1188 008a FB60     		str	r3, [r7, #12]
 1189              	.L47:
 102:.\BFS/map_addons.h ****         if (commands[i] == EMPTY_COMMAND){
 1190              		.loc 2 102 0 is_stmt 0 discriminator 1
 1191 008c FB68     		ldr	r3, [r7, #12]
 1192 008e 312B     		cmp	r3, #49
 1193 0090 C5DD     		ble	.L57
 1194              	.L50:
 119:.\BFS/map_addons.h ****     }
 120:.\BFS/map_addons.h ****     puts(")");
 1195              		.loc 2 120 0 is_stmt 1
 1196 0092 0648     		ldr	r0, .L59+12
 1197 0094 FFF7FEFF 		bl	puts
 1198              	.L46:
 121:.\BFS/map_addons.h **** }
 1199              		.loc 2 121 0
 1200 0098 1037     		adds	r7, r7, #16
 1201              		.cfi_def_cfa_offset 8
 1202 009a BD46     		mov	sp, r7
 1203              		.cfi_def_cfa_register 13
 1204              		@ sp needed
 1205 009c 80BD     		pop	{r7, pc}
 1206              	.L60:
 1207 009e 00BF     		.align	2
 1208              	.L59:
 1209 00a0 00000000 		.word	_impure_ptr
 1210 00a4 10000000 		.word	.LC5
 1211 00a8 1C000000 		.word	.LC6
 1212 00ac 20000000 		.word	.LC7
 1213              		.cfi_endproc
 1214              	.LFE72:
 1215              		.size	printCommands, .-printCommands
 1216              		.section	.rodata
 1217 0022 0000     		.align	2
 1218              	.LC8:
 1219 0024 2F2F2F2F 		.ascii	"////////////////BEGIN MAP////////////////\000"
 1219      2F2F2F2F 
 1219      2F2F2F2F 
 1219      2F2F2F2F 
 1219      42454749 
 1220 004e 0000     		.align	2
 1221              	.LC9:
 1222 0050 25642000 		.ascii	"%d \000"
 1223              		.align	2
 1224              	.LC10:
 1225 0054 1B5B303B 		.ascii	"\033[0;31m%d\033[0m \000"
 1225      33316D25 
 1225      641B5B30 
 1225      6D2000
 1226 0063 00       		.align	2
 1227              	.LC11:
 1228 0064 1B5B303B 		.ascii	"\033[0;34m%d\033[0m \000"
 1228      33346D25 
 1228      641B5B30 
 1228      6D2000
 1229 0073 00       		.align	2
 1230              	.LC12:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 26


 1231 0074 1B5B313B 		.ascii	"\033[1;32m%d\033[0m \000"
 1231      33326D25 
 1231      641B5B30 
 1231      6D2000
 1232 0083 00       		.align	2
 1233              	.LC13:
 1234 0084 1B5B313B 		.ascii	"\033[1;33m%d\033[0m \000"
 1234      33336D25 
 1234      641B5B30 
 1234      6D2000
 1235 0093 00       		.align	2
 1236              	.LC14:
 1237 0094 2F2F2F2F 		.ascii	"/////////////////END MAP/////////////////\000"
 1237      2F2F2F2F 
 1237      2F2F2F2F 
 1237      2F2F2F2F 
 1237      2F454E44 
 1238              		.section	.text.printMap,"ax",%progbits
 1239              		.align	2
 1240              		.global	printMap
 1241              		.thumb
 1242              		.thumb_func
 1243              		.type	printMap, %function
 1244              	printMap:
 1245              	.LFB73:
 122:.\BFS/map_addons.h **** 
 123:.\BFS/map_addons.h **** /* Now in colour! :O */
 124:.\BFS/map_addons.h **** void printMap(int map[MAP_ROW][MAP_COL]){
 1246              		.loc 2 124 0
 1247              		.cfi_startproc
 1248              		@ args = 0, pretend = 0, frame = 16
 1249              		@ frame_needed = 1, uses_anonymous_args = 0
 1250 0000 80B5     		push	{r7, lr}
 1251              		.cfi_def_cfa_offset 8
 1252              		.cfi_offset 7, -8
 1253              		.cfi_offset 14, -4
 1254 0002 84B0     		sub	sp, sp, #16
 1255              		.cfi_def_cfa_offset 24
 1256 0004 00AF     		add	r7, sp, #0
 1257              		.cfi_def_cfa_register 7
 1258 0006 7860     		str	r0, [r7, #4]
 125:.\BFS/map_addons.h **** 
 126:.\BFS/map_addons.h ****     printf("////////////////BEGIN MAP////////////////\n");
 1259              		.loc 2 126 0
 1260 0008 3E48     		ldr	r0, .L75
 1261 000a FFF7FEFF 		bl	puts
 127:.\BFS/map_addons.h **** 
 128:.\BFS/map_addons.h ****     int m;
 129:.\BFS/map_addons.h ****     int n;
 130:.\BFS/map_addons.h ****     for (m = 0; m < MAP_ROW; m++){
 1262              		.loc 2 130 0
 1263 000e 0023     		movs	r3, #0
 1264 0010 FB60     		str	r3, [r7, #12]
 1265 0012 6EE0     		b	.L62
 1266              	.L73:
 131:.\BFS/map_addons.h ****         for (n=0; n < MAP_COL; n++){
 1267              		.loc 2 131 0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 27


 1268 0014 0023     		movs	r3, #0
 1269 0016 BB60     		str	r3, [r7, #8]
 1270 0018 62E0     		b	.L63
 1271              	.L72:
 132:.\BFS/map_addons.h ****             switch (map[m][n]){
 1272              		.loc 2 132 0
 1273 001a FB68     		ldr	r3, [r7, #12]
 1274 001c 4C22     		movs	r2, #76
 1275 001e 02FB03F3 		mul	r3, r2, r3
 1276 0022 7A68     		ldr	r2, [r7, #4]
 1277 0024 1344     		add	r3, r3, r2
 1278 0026 BA68     		ldr	r2, [r7, #8]
 1279 0028 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1280 002c 042B     		cmp	r3, #4
 1281 002e 53D8     		bhi	.L74
 1282 0030 01A2     		adr	r2, .L66
 1283 0032 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1284 0036 00BF     		.p2align 2
 1285              	.L66:
 1286 0038 4D000000 		.word	.L65+1
 1287 003c 69000000 		.word	.L67+1
 1288 0040 85000000 		.word	.L68+1
 1289 0044 A1000000 		.word	.L69+1
 1290 0048 BD000000 		.word	.L70+1
 1291              		.p2align 1
 1292              	.L65:
 133:.\BFS/map_addons.h ****                 case UNVISITED:
 134:.\BFS/map_addons.h ****                     printf("%d ", map[m][n]);
 1293              		.loc 2 134 0
 1294 004c FB68     		ldr	r3, [r7, #12]
 1295 004e 4C22     		movs	r2, #76
 1296 0050 02FB03F3 		mul	r3, r2, r3
 1297 0054 7A68     		ldr	r2, [r7, #4]
 1298 0056 1344     		add	r3, r3, r2
 1299 0058 BA68     		ldr	r2, [r7, #8]
 1300 005a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1301 005e 2A48     		ldr	r0, .L75+4
 1302 0060 1946     		mov	r1, r3
 1303 0062 FFF7FEFF 		bl	printf
 135:.\BFS/map_addons.h ****                     break;
 1304              		.loc 2 135 0
 1305 0066 38E0     		b	.L71
 1306              	.L67:
 136:.\BFS/map_addons.h ****                 case WALL:
 137:.\BFS/map_addons.h ****                     // Prints red
 138:.\BFS/map_addons.h ****                     printf(RED "%d" DEFAULT_COLOUR " ", map[m][n]);
 1307              		.loc 2 138 0
 1308 0068 FB68     		ldr	r3, [r7, #12]
 1309 006a 4C22     		movs	r2, #76
 1310 006c 02FB03F3 		mul	r3, r2, r3
 1311 0070 7A68     		ldr	r2, [r7, #4]
 1312 0072 1344     		add	r3, r3, r2
 1313 0074 BA68     		ldr	r2, [r7, #8]
 1314 0076 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1315 007a 2448     		ldr	r0, .L75+8
 1316 007c 1946     		mov	r1, r3
 1317 007e FFF7FEFF 		bl	printf
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 28


 139:.\BFS/map_addons.h ****                     break;
 1318              		.loc 2 139 0
 1319 0082 2AE0     		b	.L71
 1320              	.L68:
 140:.\BFS/map_addons.h ****                 case VISITED:
 141:.\BFS/map_addons.h ****                     // Prints blue
 142:.\BFS/map_addons.h ****                     printf(BLUE "%d" DEFAULT_COLOUR " ", map[m][n]);
 1321              		.loc 2 142 0
 1322 0084 FB68     		ldr	r3, [r7, #12]
 1323 0086 4C22     		movs	r2, #76
 1324 0088 02FB03F3 		mul	r3, r2, r3
 1325 008c 7A68     		ldr	r2, [r7, #4]
 1326 008e 1344     		add	r3, r3, r2
 1327 0090 BA68     		ldr	r2, [r7, #8]
 1328 0092 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1329 0096 1E48     		ldr	r0, .L75+12
 1330 0098 1946     		mov	r1, r3
 1331 009a FFF7FEFF 		bl	printf
 143:.\BFS/map_addons.h ****                     break;
 1332              		.loc 2 143 0
 1333 009e 1CE0     		b	.L71
 1334              	.L69:
 144:.\BFS/map_addons.h ****                 case FINAL_PATH:
 145:.\BFS/map_addons.h ****                     // Prints bold green
 146:.\BFS/map_addons.h ****                     printf(BOLD_GREEN "%d" DEFAULT_COLOUR " ", map[m][n]);
 1335              		.loc 2 146 0
 1336 00a0 FB68     		ldr	r3, [r7, #12]
 1337 00a2 4C22     		movs	r2, #76
 1338 00a4 02FB03F3 		mul	r3, r2, r3
 1339 00a8 7A68     		ldr	r2, [r7, #4]
 1340 00aa 1344     		add	r3, r3, r2
 1341 00ac BA68     		ldr	r2, [r7, #8]
 1342 00ae 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1343 00b2 1848     		ldr	r0, .L75+16
 1344 00b4 1946     		mov	r1, r3
 1345 00b6 FFF7FEFF 		bl	printf
 147:.\BFS/map_addons.h ****                     break;
 1346              		.loc 2 147 0
 1347 00ba 0EE0     		b	.L71
 1348              	.L70:
 148:.\BFS/map_addons.h ****                 case START_OR_END:
 149:.\BFS/map_addons.h ****                     // Prints bold yellow
 150:.\BFS/map_addons.h ****                     printf(BOLD_YELLOW "%d" DEFAULT_COLOUR " ", map[m][n]);
 1349              		.loc 2 150 0
 1350 00bc FB68     		ldr	r3, [r7, #12]
 1351 00be 4C22     		movs	r2, #76
 1352 00c0 02FB03F3 		mul	r3, r2, r3
 1353 00c4 7A68     		ldr	r2, [r7, #4]
 1354 00c6 1344     		add	r3, r3, r2
 1355 00c8 BA68     		ldr	r2, [r7, #8]
 1356 00ca 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1357 00ce 1248     		ldr	r0, .L75+20
 1358 00d0 1946     		mov	r1, r3
 1359 00d2 FFF7FEFF 		bl	printf
 151:.\BFS/map_addons.h ****                     break;
 1360              		.loc 2 151 0
 1361 00d6 00E0     		b	.L71
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 29


 1362              	.L74:
 152:.\BFS/map_addons.h ****                 default:
 153:.\BFS/map_addons.h ****                     break;
 1363              		.loc 2 153 0
 1364 00d8 00BF     		nop
 1365              	.L71:
 131:.\BFS/map_addons.h ****             switch (map[m][n]){
 1366              		.loc 2 131 0 discriminator 2
 1367 00da BB68     		ldr	r3, [r7, #8]
 1368 00dc 0133     		adds	r3, r3, #1
 1369 00de BB60     		str	r3, [r7, #8]
 1370              	.L63:
 131:.\BFS/map_addons.h ****             switch (map[m][n]){
 1371              		.loc 2 131 0 is_stmt 0 discriminator 1
 1372 00e0 BB68     		ldr	r3, [r7, #8]
 1373 00e2 122B     		cmp	r3, #18
 1374 00e4 99DD     		ble	.L72
 154:.\BFS/map_addons.h ****             }
 155:.\BFS/map_addons.h ****         }
 156:.\BFS/map_addons.h ****         printf("\n");
 1375              		.loc 2 156 0 is_stmt 1 discriminator 2
 1376 00e6 0A20     		movs	r0, #10
 1377 00e8 FFF7FEFF 		bl	putchar
 130:.\BFS/map_addons.h ****         for (n=0; n < MAP_COL; n++){
 1378              		.loc 2 130 0 discriminator 2
 1379 00ec FB68     		ldr	r3, [r7, #12]
 1380 00ee 0133     		adds	r3, r3, #1
 1381 00f0 FB60     		str	r3, [r7, #12]
 1382              	.L62:
 130:.\BFS/map_addons.h ****         for (n=0; n < MAP_COL; n++){
 1383              		.loc 2 130 0 is_stmt 0 discriminator 1
 1384 00f2 FB68     		ldr	r3, [r7, #12]
 1385 00f4 0E2B     		cmp	r3, #14
 1386 00f6 8DDD     		ble	.L73
 157:.\BFS/map_addons.h ****     }
 158:.\BFS/map_addons.h **** 
 159:.\BFS/map_addons.h ****     printf("/////////////////END MAP/////////////////\n");
 1387              		.loc 2 159 0 is_stmt 1
 1388 00f8 0848     		ldr	r0, .L75+24
 1389 00fa FFF7FEFF 		bl	puts
 160:.\BFS/map_addons.h **** 
 161:.\BFS/map_addons.h **** }
 1390              		.loc 2 161 0
 1391 00fe 1037     		adds	r7, r7, #16
 1392              		.cfi_def_cfa_offset 8
 1393 0100 BD46     		mov	sp, r7
 1394              		.cfi_def_cfa_register 13
 1395              		@ sp needed
 1396 0102 80BD     		pop	{r7, pc}
 1397              	.L76:
 1398              		.align	2
 1399              	.L75:
 1400 0104 24000000 		.word	.LC8
 1401 0108 50000000 		.word	.LC9
 1402 010c 54000000 		.word	.LC10
 1403 0110 64000000 		.word	.LC11
 1404 0114 74000000 		.word	.LC12
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 30


 1405 0118 84000000 		.word	.LC13
 1406 011c 94000000 		.word	.LC14
 1407              		.cfi_endproc
 1408              	.LFE73:
 1409              		.size	printMap, .-printMap
 1410              		.section	.text.updateMapWithPath,"ax",%progbits
 1411              		.align	2
 1412              		.global	updateMapWithPath
 1413              		.thumb
 1414              		.thumb_func
 1415              		.type	updateMapWithPath, %function
 1416              	updateMapWithPath:
 1417              	.LFB74:
 162:.\BFS/map_addons.h **** 
 163:.\BFS/map_addons.h **** /* Modify the map with the final path */
 164:.\BFS/map_addons.h **** void updateMapWithPath(int map[MAP_ROW][MAP_COL], point * path, int path_length){
 1418              		.loc 2 164 0
 1419              		.cfi_startproc
 1420              		@ args = 0, pretend = 0, frame = 24
 1421              		@ frame_needed = 1, uses_anonymous_args = 0
 1422              		@ link register save eliminated.
 1423 0000 80B4     		push	{r7}
 1424              		.cfi_def_cfa_offset 4
 1425              		.cfi_offset 7, -4
 1426 0002 87B0     		sub	sp, sp, #28
 1427              		.cfi_def_cfa_offset 32
 1428 0004 00AF     		add	r7, sp, #0
 1429              		.cfi_def_cfa_register 7
 1430 0006 F860     		str	r0, [r7, #12]
 1431 0008 B960     		str	r1, [r7, #8]
 1432 000a 7A60     		str	r2, [r7, #4]
 165:.\BFS/map_addons.h **** 
 166:.\BFS/map_addons.h ****     // Set starting position
 167:.\BFS/map_addons.h ****     map[path[0].y][path[0].x] = 4;
 1433              		.loc 2 167 0
 1434 000c BB68     		ldr	r3, [r7, #8]
 1435 000e 5B68     		ldr	r3, [r3, #4]
 1436 0010 1A46     		mov	r2, r3
 1437 0012 4C23     		movs	r3, #76
 1438 0014 03FB02F3 		mul	r3, r3, r2
 1439 0018 FA68     		ldr	r2, [r7, #12]
 1440 001a 1344     		add	r3, r3, r2
 1441 001c BA68     		ldr	r2, [r7, #8]
 1442 001e 1268     		ldr	r2, [r2]
 1443 0020 0421     		movs	r1, #4
 1444 0022 43F82210 		str	r1, [r3, r2, lsl #2]
 168:.\BFS/map_addons.h **** 
 169:.\BFS/map_addons.h ****     // Fill up path
 170:.\BFS/map_addons.h ****     int i;
 171:.\BFS/map_addons.h ****     for (i = 1; i < path_length-1; i++){
 1445              		.loc 2 171 0
 1446 0026 0123     		movs	r3, #1
 1447 0028 7B61     		str	r3, [r7, #20]
 1448 002a 15E0     		b	.L78
 1449              	.L79:
 172:.\BFS/map_addons.h ****         map[path[i].y][path[i].x] = 3;
 1450              		.loc 2 172 0 discriminator 3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 31


 1451 002c 7B69     		ldr	r3, [r7, #20]
 1452 002e DB00     		lsls	r3, r3, #3
 1453 0030 BA68     		ldr	r2, [r7, #8]
 1454 0032 1344     		add	r3, r3, r2
 1455 0034 5B68     		ldr	r3, [r3, #4]
 1456 0036 1A46     		mov	r2, r3
 1457 0038 4C23     		movs	r3, #76
 1458 003a 03FB02F3 		mul	r3, r3, r2
 1459 003e FA68     		ldr	r2, [r7, #12]
 1460 0040 1344     		add	r3, r3, r2
 1461 0042 7A69     		ldr	r2, [r7, #20]
 1462 0044 D200     		lsls	r2, r2, #3
 1463 0046 B968     		ldr	r1, [r7, #8]
 1464 0048 0A44     		add	r2, r2, r1
 1465 004a 1268     		ldr	r2, [r2]
 1466 004c 0321     		movs	r1, #3
 1467 004e 43F82210 		str	r1, [r3, r2, lsl #2]
 171:.\BFS/map_addons.h ****         map[path[i].y][path[i].x] = 3;
 1468              		.loc 2 171 0 discriminator 3
 1469 0052 7B69     		ldr	r3, [r7, #20]
 1470 0054 0133     		adds	r3, r3, #1
 1471 0056 7B61     		str	r3, [r7, #20]
 1472              	.L78:
 171:.\BFS/map_addons.h ****         map[path[i].y][path[i].x] = 3;
 1473              		.loc 2 171 0 is_stmt 0 discriminator 1
 1474 0058 7B68     		ldr	r3, [r7, #4]
 1475 005a 5A1E     		subs	r2, r3, #1
 1476 005c 7B69     		ldr	r3, [r7, #20]
 1477 005e 9A42     		cmp	r2, r3
 1478 0060 E4DC     		bgt	.L79
 173:.\BFS/map_addons.h ****     }
 174:.\BFS/map_addons.h **** 
 175:.\BFS/map_addons.h ****     // Set ending position
 176:.\BFS/map_addons.h ****     map[path[path_length-1].y][path[path_length-1].x] = 4;
 1479              		.loc 2 176 0 is_stmt 1
 1480 0062 7B68     		ldr	r3, [r7, #4]
 1481 0064 03F10053 		add	r3, r3, #536870912
 1482 0068 013B     		subs	r3, r3, #1
 1483 006a DB00     		lsls	r3, r3, #3
 1484 006c BA68     		ldr	r2, [r7, #8]
 1485 006e 1344     		add	r3, r3, r2
 1486 0070 5B68     		ldr	r3, [r3, #4]
 1487 0072 1A46     		mov	r2, r3
 1488 0074 4C23     		movs	r3, #76
 1489 0076 03FB02F3 		mul	r3, r3, r2
 1490 007a FA68     		ldr	r2, [r7, #12]
 1491 007c 1A44     		add	r2, r2, r3
 1492 007e 7B68     		ldr	r3, [r7, #4]
 1493 0080 03F10053 		add	r3, r3, #536870912
 1494 0084 013B     		subs	r3, r3, #1
 1495 0086 DB00     		lsls	r3, r3, #3
 1496 0088 B968     		ldr	r1, [r7, #8]
 1497 008a 0B44     		add	r3, r3, r1
 1498 008c 1B68     		ldr	r3, [r3]
 1499 008e 0421     		movs	r1, #4
 1500 0090 42F82310 		str	r1, [r2, r3, lsl #2]
 177:.\BFS/map_addons.h **** }
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 32


 1501              		.loc 2 177 0
 1502 0094 1C37     		adds	r7, r7, #28
 1503              		.cfi_def_cfa_offset 4
 1504 0096 BD46     		mov	sp, r7
 1505              		.cfi_def_cfa_register 13
 1506              		@ sp needed
 1507 0098 5DF8047B 		ldr	r7, [sp], #4
 1508              		.cfi_restore 7
 1509              		.cfi_def_cfa_offset 0
 1510 009c 7047     		bx	lr
 1511              		.cfi_endproc
 1512              	.LFE74:
 1513              		.size	updateMapWithPath, .-updateMapWithPath
 1514 009e 00BF     		.section	.text.getMapValAtPoint,"ax",%progbits
 1515              		.align	2
 1516              		.global	getMapValAtPoint
 1517              		.thumb
 1518              		.thumb_func
 1519              		.type	getMapValAtPoint, %function
 1520              	getMapValAtPoint:
 1521              	.LFB75:
 178:.\BFS/map_addons.h **** 
 179:.\BFS/map_addons.h **** /* Retrieve the vertex at a specific point on the map */
 180:.\BFS/map_addons.h **** int getMapValAtPoint(point p){
 1522              		.loc 2 180 0
 1523              		.cfi_startproc
 1524              		@ args = 0, pretend = 0, frame = 8
 1525              		@ frame_needed = 1, uses_anonymous_args = 0
 1526              		@ link register save eliminated.
 1527 0000 80B4     		push	{r7}
 1528              		.cfi_def_cfa_offset 4
 1529              		.cfi_offset 7, -4
 1530 0002 83B0     		sub	sp, sp, #12
 1531              		.cfi_def_cfa_offset 16
 1532 0004 00AF     		add	r7, sp, #0
 1533              		.cfi_def_cfa_register 7
 1534 0006 3B46     		mov	r3, r7
 1535 0008 83E80300 		stmia	r3, {r0, r1}
 181:.\BFS/map_addons.h ****     if (p.x < 0 || p.x >= MAP_COL) return EMPTY_VAL;
 1536              		.loc 2 181 0
 1537 000c 3B68     		ldr	r3, [r7]
 1538 000e 002B     		cmp	r3, #0
 1539 0010 02DB     		blt	.L81
 1540              		.loc 2 181 0 is_stmt 0 discriminator 2
 1541 0012 3B68     		ldr	r3, [r7]
 1542 0014 122B     		cmp	r3, #18
 1543 0016 02DD     		ble	.L82
 1544              	.L81:
 1545              		.loc 2 181 0 discriminator 3
 1546 0018 4FF0FF33 		mov	r3, #-1
 1547 001c 13E0     		b	.L83
 1548              	.L82:
 182:.\BFS/map_addons.h ****     if (p.y < 0 || p.y >= MAP_ROW) return EMPTY_VAL;
 1549              		.loc 2 182 0 is_stmt 1
 1550 001e 7B68     		ldr	r3, [r7, #4]
 1551 0020 002B     		cmp	r3, #0
 1552 0022 02DB     		blt	.L84
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 33


 1553              		.loc 2 182 0 is_stmt 0 discriminator 2
 1554 0024 7B68     		ldr	r3, [r7, #4]
 1555 0026 0E2B     		cmp	r3, #14
 1556 0028 02DD     		ble	.L85
 1557              	.L84:
 1558              		.loc 2 182 0 discriminator 3
 1559 002a 4FF0FF33 		mov	r3, #-1
 1560 002e 0AE0     		b	.L83
 1561              	.L85:
 183:.\BFS/map_addons.h ****     return map[p.y][p.x];
 1562              		.loc 2 183 0 is_stmt 1
 1563 0030 7A68     		ldr	r2, [r7, #4]
 1564 0032 3968     		ldr	r1, [r7]
 1565 0034 0748     		ldr	r0, .L86
 1566 0036 1346     		mov	r3, r2
 1567 0038 DB00     		lsls	r3, r3, #3
 1568 003a 1344     		add	r3, r3, r2
 1569 003c 5B00     		lsls	r3, r3, #1
 1570 003e 1344     		add	r3, r3, r2
 1571 0040 0B44     		add	r3, r3, r1
 1572 0042 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1573              	.L83:
 184:.\BFS/map_addons.h **** }
 1574              		.loc 2 184 0
 1575 0046 1846     		mov	r0, r3
 1576 0048 0C37     		adds	r7, r7, #12
 1577              		.cfi_def_cfa_offset 4
 1578 004a BD46     		mov	sp, r7
 1579              		.cfi_def_cfa_register 13
 1580              		@ sp needed
 1581 004c 5DF8047B 		ldr	r7, [sp], #4
 1582              		.cfi_restore 7
 1583              		.cfi_def_cfa_offset 0
 1584 0050 7047     		bx	lr
 1585              	.L87:
 1586 0052 00BF     		.align	2
 1587              	.L86:
 1588 0054 00000000 		.word	map
 1589              		.cfi_endproc
 1590              	.LFE75:
 1591              		.size	getMapValAtPoint, .-getMapValAtPoint
 1592              		.section	.text.markPointAsVisited,"ax",%progbits
 1593              		.align	2
 1594              		.global	markPointAsVisited
 1595              		.thumb
 1596              		.thumb_func
 1597              		.type	markPointAsVisited, %function
 1598              	markPointAsVisited:
 1599              	.LFB76:
 185:.\BFS/map_addons.h **** 
 186:.\BFS/map_addons.h **** /* Mark a point on the map as visited */
 187:.\BFS/map_addons.h **** void markPointAsVisited(point p){ map[p.y][p.x] = VISITED; }
 1600              		.loc 2 187 0
 1601              		.cfi_startproc
 1602              		@ args = 0, pretend = 0, frame = 8
 1603              		@ frame_needed = 1, uses_anonymous_args = 0
 1604              		@ link register save eliminated.
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 34


 1605 0000 80B4     		push	{r7}
 1606              		.cfi_def_cfa_offset 4
 1607              		.cfi_offset 7, -4
 1608 0002 83B0     		sub	sp, sp, #12
 1609              		.cfi_def_cfa_offset 16
 1610 0004 00AF     		add	r7, sp, #0
 1611              		.cfi_def_cfa_register 7
 1612 0006 3B46     		mov	r3, r7
 1613 0008 83E80300 		stmia	r3, {r0, r1}
 1614              		.loc 2 187 0
 1615 000c 7A68     		ldr	r2, [r7, #4]
 1616 000e 3968     		ldr	r1, [r7]
 1617 0010 0748     		ldr	r0, .L89
 1618 0012 1346     		mov	r3, r2
 1619 0014 DB00     		lsls	r3, r3, #3
 1620 0016 1344     		add	r3, r3, r2
 1621 0018 5B00     		lsls	r3, r3, #1
 1622 001a 1344     		add	r3, r3, r2
 1623 001c 0B44     		add	r3, r3, r1
 1624 001e 0222     		movs	r2, #2
 1625 0020 40F82320 		str	r2, [r0, r3, lsl #2]
 1626 0024 0C37     		adds	r7, r7, #12
 1627              		.cfi_def_cfa_offset 4
 1628 0026 BD46     		mov	sp, r7
 1629              		.cfi_def_cfa_register 13
 1630              		@ sp needed
 1631 0028 5DF8047B 		ldr	r7, [sp], #4
 1632              		.cfi_restore 7
 1633              		.cfi_def_cfa_offset 0
 1634 002c 7047     		bx	lr
 1635              	.L90:
 1636 002e 00BF     		.align	2
 1637              	.L89:
 1638 0030 00000000 		.word	map
 1639              		.cfi_endproc
 1640              	.LFE76:
 1641              		.size	markPointAsVisited, .-markPointAsVisited
 1642              		.section	.text.convertCoordinatesToCommands,"ax",%progbits
 1643              		.align	2
 1644              		.global	convertCoordinatesToCommands
 1645              		.thumb
 1646              		.thumb_func
 1647              		.type	convertCoordinatesToCommands, %function
 1648              	convertCoordinatesToCommands:
 1649              	.LFB77:
 188:.\BFS/map_addons.h **** 
 189:.\BFS/map_addons.h **** /* Interpret coordinates of the final path and convert to commands for robot */
 190:.\BFS/map_addons.h **** void convertCoordinatesToCommands(point *concurrent_path, int *commands){
 1650              		.loc 2 190 0
 1651              		.cfi_startproc
 1652              		@ args = 0, pretend = 0, frame = 56
 1653              		@ frame_needed = 1, uses_anonymous_args = 0
 1654 0000 80B5     		push	{r7, lr}
 1655              		.cfi_def_cfa_offset 8
 1656              		.cfi_offset 7, -8
 1657              		.cfi_offset 14, -4
 1658 0002 8EB0     		sub	sp, sp, #56
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 35


 1659              		.cfi_def_cfa_offset 64
 1660 0004 00AF     		add	r7, sp, #0
 1661              		.cfi_def_cfa_register 7
 1662 0006 7860     		str	r0, [r7, #4]
 1663 0008 3960     		str	r1, [r7]
 191:.\BFS/map_addons.h **** 
 192:.\BFS/map_addons.h ****     int straight_count = -1;
 1664              		.loc 2 192 0
 1665 000a 4FF0FF33 		mov	r3, #-1
 1666 000e 7B63     		str	r3, [r7, #52]
 193:.\BFS/map_addons.h ****     point current, next;
 194:.\BFS/map_addons.h ****     int current_orientation = START_FACING;
 1667              		.loc 2 194 0
 1668 0010 0323     		movs	r3, #3
 1669 0012 3B63     		str	r3, [r7, #48]
 195:.\BFS/map_addons.h ****     int next_orientation = CMD_NULL;
 1670              		.loc 2 195 0
 1671 0014 4FF0FF33 		mov	r3, #-1
 1672 0018 FB62     		str	r3, [r7, #44]
 196:.\BFS/map_addons.h **** 
 197:.\BFS/map_addons.h ****     int cmd_length = 0;
 1673              		.loc 2 197 0
 1674 001a 0023     		movs	r3, #0
 1675 001c BB62     		str	r3, [r7, #40]
 198:.\BFS/map_addons.h ****     int path_length = len(concurrent_path);
 1676              		.loc 2 198 0
 1677 001e 7868     		ldr	r0, [r7, #4]
 1678 0020 FFF7FEFF 		bl	len
 1679 0024 3862     		str	r0, [r7, #32]
 199:.\BFS/map_addons.h **** 
 200:.\BFS/map_addons.h ****     int i;
 201:.\BFS/map_addons.h ****     for (i = 0; i < path_length - 1; i++){
 1680              		.loc 2 201 0
 1681 0026 0023     		movs	r3, #0
 1682 0028 7B62     		str	r3, [r7, #36]
 1683 002a 7DE0     		b	.L92
 1684              	.L108:
 1685              	.LBB2:
 202:.\BFS/map_addons.h **** 
 203:.\BFS/map_addons.h ****         current = concurrent_path[i];
 1686              		.loc 2 203 0
 1687 002c 7B6A     		ldr	r3, [r7, #36]
 1688 002e DB00     		lsls	r3, r3, #3
 1689 0030 7A68     		ldr	r2, [r7, #4]
 1690 0032 1A44     		add	r2, r2, r3
 1691 0034 07F11403 		add	r3, r7, #20
 1692 0038 92E80300 		ldmia	r2, {r0, r1}
 1693 003c 83E80300 		stmia	r3, {r0, r1}
 204:.\BFS/map_addons.h ****         next = concurrent_path[i+1];
 1694              		.loc 2 204 0
 1695 0040 7B6A     		ldr	r3, [r7, #36]
 1696 0042 0133     		adds	r3, r3, #1
 1697 0044 DB00     		lsls	r3, r3, #3
 1698 0046 7A68     		ldr	r2, [r7, #4]
 1699 0048 1A44     		add	r2, r2, r3
 1700 004a 07F10C03 		add	r3, r7, #12
 1701 004e 92E80300 		ldmia	r2, {r0, r1}
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 36


 1702 0052 83E80300 		stmia	r3, {r0, r1}
 205:.\BFS/map_addons.h **** 
 206:.\BFS/map_addons.h ****         // Since the robot only moves one coord at a time, one of the following branches must evalu
 207:.\BFS/map_addons.h ****         if (current.x == next.x){
 1703              		.loc 2 207 0
 1704 0056 7A69     		ldr	r2, [r7, #20]
 1705 0058 FB68     		ldr	r3, [r7, #12]
 1706 005a 9A42     		cmp	r2, r3
 1707 005c 08D1     		bne	.L93
 208:.\BFS/map_addons.h ****             next_orientation = (current.y > next.y) ? CMD_UP:CMD_DOWN;
 1708              		.loc 2 208 0
 1709 005e BA69     		ldr	r2, [r7, #24]
 1710 0060 3B69     		ldr	r3, [r7, #16]
 1711 0062 9A42     		cmp	r2, r3
 1712 0064 01DD     		ble	.L94
 1713              		.loc 2 208 0 is_stmt 0 discriminator 1
 1714 0066 0323     		movs	r3, #3
 1715 0068 00E0     		b	.L95
 1716              	.L94:
 1717              		.loc 2 208 0 discriminator 2
 1718 006a 0123     		movs	r3, #1
 1719              	.L95:
 1720              		.loc 2 208 0 discriminator 4
 1721 006c FB62     		str	r3, [r7, #44]
 1722 006e 0BE0     		b	.L96
 1723              	.L93:
 209:.\BFS/map_addons.h ****         }
 210:.\BFS/map_addons.h ****         else if (current.y == next.y){
 1724              		.loc 2 210 0 is_stmt 1
 1725 0070 BA69     		ldr	r2, [r7, #24]
 1726 0072 3B69     		ldr	r3, [r7, #16]
 1727 0074 9A42     		cmp	r2, r3
 1728 0076 07D1     		bne	.L96
 211:.\BFS/map_addons.h ****             next_orientation = (current.x > next.x) ? CMD_LEFT:CMD_RIGHT;
 1729              		.loc 2 211 0
 1730 0078 7A69     		ldr	r2, [r7, #20]
 1731 007a FB68     		ldr	r3, [r7, #12]
 1732 007c 9A42     		cmp	r2, r3
 1733 007e 01DD     		ble	.L97
 1734              		.loc 2 211 0 is_stmt 0 discriminator 1
 1735 0080 0223     		movs	r3, #2
 1736 0082 00E0     		b	.L98
 1737              	.L97:
 1738              		.loc 2 211 0 discriminator 2
 1739 0084 0023     		movs	r3, #0
 1740              	.L98:
 1741              		.loc 2 211 0 discriminator 4
 1742 0086 FB62     		str	r3, [r7, #44]
 1743              	.L96:
 212:.\BFS/map_addons.h ****         }
 213:.\BFS/map_addons.h **** 
 214:.\BFS/map_addons.h ****         // Evaluate change (or lack of change) in orientation based on diff
 215:.\BFS/map_addons.h ****         int diffMod4 = (next_orientation - current_orientation) % 4;
 1744              		.loc 2 215 0 is_stmt 1
 1745 0088 FA6A     		ldr	r2, [r7, #44]
 1746 008a 3B6B     		ldr	r3, [r7, #48]
 1747 008c D21A     		subs	r2, r2, r3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 37


 1748 008e 2E4B     		ldr	r3, .L109
 1749 0090 1340     		ands	r3, r3, r2
 1750 0092 002B     		cmp	r3, #0
 1751 0094 03DA     		bge	.L99
 1752 0096 013B     		subs	r3, r3, #1
 1753 0098 63F00303 		orn	r3, r3, #3
 1754 009c 0133     		adds	r3, r3, #1
 1755              	.L99:
 1756 009e FB61     		str	r3, [r7, #28]
 216:.\BFS/map_addons.h **** 
 217:.\BFS/map_addons.h ****         // Every iteration of the loop, the robot moves one square
 218:.\BFS/map_addons.h ****         straight_count++;
 1757              		.loc 2 218 0
 1758 00a0 7B6B     		ldr	r3, [r7, #52]
 1759 00a2 0133     		adds	r3, r3, #1
 1760 00a4 7B63     		str	r3, [r7, #52]
 219:.\BFS/map_addons.h **** 
 220:.\BFS/map_addons.h ****         // If the robot doesn't need to turn, just skip to the next iteration of the loop (i.e. nex
 221:.\BFS/map_addons.h ****         if (diffMod4 == GO_STRAIGHT){
 1761              		.loc 2 221 0
 1762 00a6 FB69     		ldr	r3, [r7, #28]
 1763 00a8 002B     		cmp	r3, #0
 1764 00aa 00D1     		bne	.L100
 222:.\BFS/map_addons.h ****             continue;
 1765              		.loc 2 222 0
 1766 00ac 39E0     		b	.L101
 1767              	.L100:
 223:.\BFS/map_addons.h ****         }
 224:.\BFS/map_addons.h **** 
 225:.\BFS/map_addons.h ****         // At this point, the robot must turn, so need to print the count value up until now
 226:.\BFS/map_addons.h ****         if (straight_count) commands[cmd_length++] = straight_count;
 1768              		.loc 2 226 0
 1769 00ae 7B6B     		ldr	r3, [r7, #52]
 1770 00b0 002B     		cmp	r3, #0
 1771 00b2 07D0     		beq	.L102
 1772              		.loc 2 226 0 is_stmt 0 discriminator 1
 1773 00b4 BB6A     		ldr	r3, [r7, #40]
 1774 00b6 5A1C     		adds	r2, r3, #1
 1775 00b8 BA62     		str	r2, [r7, #40]
 1776 00ba 9B00     		lsls	r3, r3, #2
 1777 00bc 3A68     		ldr	r2, [r7]
 1778 00be 1344     		add	r3, r3, r2
 1779 00c0 7A6B     		ldr	r2, [r7, #52]
 1780 00c2 1A60     		str	r2, [r3]
 1781              	.L102:
 227:.\BFS/map_addons.h **** 
 228:.\BFS/map_addons.h ****         // A turn has been encountered, add it the commands
 229:.\BFS/map_addons.h ****         if (diffMod4 == TURN_LEFT_1 || diffMod4 == TURN_LEFT_2) { commands[cmd_length++] = LEFT_TUR
 1782              		.loc 2 229 0 is_stmt 1
 1783 00c4 FB69     		ldr	r3, [r7, #28]
 1784 00c6 B3F1FF3F 		cmp	r3, #-1
 1785 00ca 02D0     		beq	.L103
 1786              		.loc 2 229 0 is_stmt 0 discriminator 2
 1787 00cc FB69     		ldr	r3, [r7, #28]
 1788 00ce 032B     		cmp	r3, #3
 1789 00d0 09D1     		bne	.L104
 1790              	.L103:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 38


 1791              		.loc 2 229 0 discriminator 3
 1792 00d2 BB6A     		ldr	r3, [r7, #40]
 1793 00d4 5A1C     		adds	r2, r3, #1
 1794 00d6 BA62     		str	r2, [r7, #40]
 1795 00d8 9B00     		lsls	r3, r3, #2
 1796 00da 3A68     		ldr	r2, [r7]
 1797 00dc 1344     		add	r3, r3, r2
 1798 00de 4FF0FF32 		mov	r2, #-1
 1799 00e2 1A60     		str	r2, [r3]
 1800 00e4 19E0     		b	.L105
 1801              	.L104:
 230:.\BFS/map_addons.h ****         else if (diffMod4 == TURN_RIGHT_1 || diffMod4 == TURN_RIGHT_2) { commands[cmd_length++] = R
 1802              		.loc 2 230 0 is_stmt 1
 1803 00e6 FB69     		ldr	r3, [r7, #28]
 1804 00e8 012B     		cmp	r3, #1
 1805 00ea 03D0     		beq	.L106
 1806              		.loc 2 230 0 is_stmt 0 discriminator 2
 1807 00ec FB69     		ldr	r3, [r7, #28]
 1808 00ee 13F1030F 		cmn	r3, #3
 1809 00f2 09D1     		bne	.L107
 1810              	.L106:
 1811              		.loc 2 230 0 discriminator 3
 1812 00f4 BB6A     		ldr	r3, [r7, #40]
 1813 00f6 5A1C     		adds	r2, r3, #1
 1814 00f8 BA62     		str	r2, [r7, #40]
 1815 00fa 9B00     		lsls	r3, r3, #2
 1816 00fc 3A68     		ldr	r2, [r7]
 1817 00fe 1344     		add	r3, r3, r2
 1818 0100 6FF00102 		mvn	r2, #1
 1819 0104 1A60     		str	r2, [r3]
 1820 0106 08E0     		b	.L105
 1821              	.L107:
 231:.\BFS/map_addons.h ****         else { commands[cmd_length++] = U_TURN; }
 1822              		.loc 2 231 0 is_stmt 1
 1823 0108 BB6A     		ldr	r3, [r7, #40]
 1824 010a 5A1C     		adds	r2, r3, #1
 1825 010c BA62     		str	r2, [r7, #40]
 1826 010e 9B00     		lsls	r3, r3, #2
 1827 0110 3A68     		ldr	r2, [r7]
 1828 0112 1344     		add	r3, r3, r2
 1829 0114 6FF00202 		mvn	r2, #2
 1830 0118 1A60     		str	r2, [r3]
 1831              	.L105:
 232:.\BFS/map_addons.h **** 
 233:.\BFS/map_addons.h ****         // Reset the count
 234:.\BFS/map_addons.h ****         straight_count = 0;
 1832              		.loc 2 234 0
 1833 011a 0023     		movs	r3, #0
 1834 011c 7B63     		str	r3, [r7, #52]
 235:.\BFS/map_addons.h **** 
 236:.\BFS/map_addons.h ****         // Update orientation
 237:.\BFS/map_addons.h ****         current_orientation = next_orientation;
 1835              		.loc 2 237 0
 1836 011e FB6A     		ldr	r3, [r7, #44]
 1837 0120 3B63     		str	r3, [r7, #48]
 1838              	.L101:
 1839              	.LBE2:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 39


 201:.\BFS/map_addons.h **** 
 1840              		.loc 2 201 0 discriminator 2
 1841 0122 7B6A     		ldr	r3, [r7, #36]
 1842 0124 0133     		adds	r3, r3, #1
 1843 0126 7B62     		str	r3, [r7, #36]
 1844              	.L92:
 201:.\BFS/map_addons.h **** 
 1845              		.loc 2 201 0 is_stmt 0 discriminator 1
 1846 0128 3B6A     		ldr	r3, [r7, #32]
 1847 012a 5A1E     		subs	r2, r3, #1
 1848 012c 7B6A     		ldr	r3, [r7, #36]
 1849 012e 9A42     		cmp	r2, r3
 1850 0130 3FF77CAF 		bgt	.L108
 238:.\BFS/map_addons.h **** 
 239:.\BFS/map_addons.h ****     }
 240:.\BFS/map_addons.h **** 
 241:.\BFS/map_addons.h ****     commands[cmd_length] = straight_count+1;
 1851              		.loc 2 241 0 is_stmt 1
 1852 0134 BB6A     		ldr	r3, [r7, #40]
 1853 0136 9B00     		lsls	r3, r3, #2
 1854 0138 3A68     		ldr	r2, [r7]
 1855 013a 1344     		add	r3, r3, r2
 1856 013c 7A6B     		ldr	r2, [r7, #52]
 1857 013e 0132     		adds	r2, r2, #1
 1858 0140 1A60     		str	r2, [r3]
 242:.\BFS/map_addons.h **** 
 243:.\BFS/map_addons.h **** }
 1859              		.loc 2 243 0
 1860 0142 3837     		adds	r7, r7, #56
 1861              		.cfi_def_cfa_offset 8
 1862 0144 BD46     		mov	sp, r7
 1863              		.cfi_def_cfa_register 13
 1864              		@ sp needed
 1865 0146 80BD     		pop	{r7, pc}
 1866              	.L110:
 1867              		.align	2
 1868              	.L109:
 1869 0148 03000080 		.word	-2147483645
 1870              		.cfi_endproc
 1871              	.LFE77:
 1872              		.size	convertCoordinatesToCommands, .-convertCoordinatesToCommands
 1873              		.section	.text.getNumOfSurroundingPoints,"ax",%progbits
 1874              		.align	2
 1875              		.global	getNumOfSurroundingPoints
 1876              		.thumb
 1877              		.thumb_func
 1878              		.type	getNumOfSurroundingPoints, %function
 1879              	getNumOfSurroundingPoints:
 1880              	.LFB78:
 244:.\BFS/map_addons.h **** 
 245:.\BFS/map_addons.h **** /* Get the number of valid points surrounding a given point on the map */
 246:.\BFS/map_addons.h **** int getNumOfSurroundingPoints(point p){
 1881              		.loc 2 246 0
 1882              		.cfi_startproc
 1883              		@ args = 0, pretend = 0, frame = 32
 1884              		@ frame_needed = 1, uses_anonymous_args = 0
 1885 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 40


 1886              		.cfi_def_cfa_offset 8
 1887              		.cfi_offset 7, -8
 1888              		.cfi_offset 14, -4
 1889 0002 88B0     		sub	sp, sp, #32
 1890              		.cfi_def_cfa_offset 40
 1891 0004 00AF     		add	r7, sp, #0
 1892              		.cfi_def_cfa_register 7
 1893 0006 3B46     		mov	r3, r7
 1894 0008 83E80300 		stmia	r3, {r0, r1}
 247:.\BFS/map_addons.h ****     int num, mapval;
 248:.\BFS/map_addons.h ****     int i;
 249:.\BFS/map_addons.h ****     int j;
 250:.\BFS/map_addons.h ****     for (i = p.x-1; i < p.x+2; i++){
 1895              		.loc 2 250 0
 1896 000c 3B68     		ldr	r3, [r7]
 1897 000e 013B     		subs	r3, r3, #1
 1898 0010 BB61     		str	r3, [r7, #24]
 1899 0012 2BE0     		b	.L112
 1900              	.L118:
 251:.\BFS/map_addons.h ****         for (j = p.y-1; j < p.y+2; j++){
 1901              		.loc 2 251 0
 1902 0014 7B68     		ldr	r3, [r7, #4]
 1903 0016 013B     		subs	r3, r3, #1
 1904 0018 7B61     		str	r3, [r7, #20]
 1905 001a 1FE0     		b	.L113
 1906              	.L117:
 252:.\BFS/map_addons.h ****             if (i == p.x && j == p.y) continue;
 1907              		.loc 2 252 0
 1908 001c 3A68     		ldr	r2, [r7]
 1909 001e BB69     		ldr	r3, [r7, #24]
 1910 0020 9A42     		cmp	r2, r3
 1911 0022 04D1     		bne	.L114
 1912              		.loc 2 252 0 is_stmt 0 discriminator 1
 1913 0024 7A68     		ldr	r2, [r7, #4]
 1914 0026 7B69     		ldr	r3, [r7, #20]
 1915 0028 9A42     		cmp	r2, r3
 1916 002a 00D1     		bne	.L114
 1917              		.loc 2 252 0 discriminator 2
 1918 002c 13E0     		b	.L115
 1919              	.L114:
 253:.\BFS/map_addons.h ****             mapval = getMapValAtPoint((point){.x=i,.y=j});
 1920              		.loc 2 253 0 is_stmt 1
 1921 002e BB69     		ldr	r3, [r7, #24]
 1922 0030 BB60     		str	r3, [r7, #8]
 1923 0032 7B69     		ldr	r3, [r7, #20]
 1924 0034 FB60     		str	r3, [r7, #12]
 1925 0036 07F10803 		add	r3, r7, #8
 1926 003a 93E80300 		ldmia	r3, {r0, r1}
 1927 003e FFF7FEFF 		bl	getMapValAtPoint
 1928 0042 3861     		str	r0, [r7, #16]
 254:.\BFS/map_addons.h ****             if (mapval == UNVISITED || mapval == 3 /* different to FINAL_PATH */) 
 1929              		.loc 2 254 0
 1930 0044 3B69     		ldr	r3, [r7, #16]
 1931 0046 002B     		cmp	r3, #0
 1932 0048 02D0     		beq	.L116
 1933              		.loc 2 254 0 is_stmt 0 discriminator 1
 1934 004a 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 41


 1935 004c 032B     		cmp	r3, #3
 1936 004e 02D1     		bne	.L115
 1937              	.L116:
 255:.\BFS/map_addons.h ****                 num++;
 1938              		.loc 2 255 0 is_stmt 1
 1939 0050 FB69     		ldr	r3, [r7, #28]
 1940 0052 0133     		adds	r3, r3, #1
 1941 0054 FB61     		str	r3, [r7, #28]
 1942              	.L115:
 251:.\BFS/map_addons.h ****             if (i == p.x && j == p.y) continue;
 1943              		.loc 2 251 0 discriminator 2
 1944 0056 7B69     		ldr	r3, [r7, #20]
 1945 0058 0133     		adds	r3, r3, #1
 1946 005a 7B61     		str	r3, [r7, #20]
 1947              	.L113:
 251:.\BFS/map_addons.h ****             if (i == p.x && j == p.y) continue;
 1948              		.loc 2 251 0 is_stmt 0 discriminator 1
 1949 005c 7B68     		ldr	r3, [r7, #4]
 1950 005e 9A1C     		adds	r2, r3, #2
 1951 0060 7B69     		ldr	r3, [r7, #20]
 1952 0062 9A42     		cmp	r2, r3
 1953 0064 DADC     		bgt	.L117
 250:.\BFS/map_addons.h ****         for (j = p.y-1; j < p.y+2; j++){
 1954              		.loc 2 250 0 is_stmt 1 discriminator 2
 1955 0066 BB69     		ldr	r3, [r7, #24]
 1956 0068 0133     		adds	r3, r3, #1
 1957 006a BB61     		str	r3, [r7, #24]
 1958              	.L112:
 250:.\BFS/map_addons.h ****         for (j = p.y-1; j < p.y+2; j++){
 1959              		.loc 2 250 0 is_stmt 0 discriminator 1
 1960 006c 3B68     		ldr	r3, [r7]
 1961 006e 9A1C     		adds	r2, r3, #2
 1962 0070 BB69     		ldr	r3, [r7, #24]
 1963 0072 9A42     		cmp	r2, r3
 1964 0074 CEDC     		bgt	.L118
 256:.\BFS/map_addons.h ****         }
 257:.\BFS/map_addons.h ****     }
 258:.\BFS/map_addons.h **** 
 259:.\BFS/map_addons.h ****     return num;
 1965              		.loc 2 259 0 is_stmt 1
 1966 0076 FB69     		ldr	r3, [r7, #28]
 260:.\BFS/map_addons.h **** }
 1967              		.loc 2 260 0
 1968 0078 1846     		mov	r0, r3
 1969 007a 2037     		adds	r7, r7, #32
 1970              		.cfi_def_cfa_offset 8
 1971 007c BD46     		mov	sp, r7
 1972              		.cfi_def_cfa_register 13
 1973              		@ sp needed
 1974 007e 80BD     		pop	{r7, pc}
 1975              		.cfi_endproc
 1976              	.LFE78:
 1977              		.size	getNumOfSurroundingPoints, .-getNumOfSurroundingPoints
 1978              		.section	.text.checkPath,"ax",%progbits
 1979              		.align	2
 1980              		.global	checkPath
 1981              		.thumb
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 42


 1982              		.thumb_func
 1983              		.type	checkPath, %function
 1984              	checkPath:
 1985              	.LFB79:
 1986              		.file 3 ".\\BFS/bfs.h"
   1:.\BFS/bfs.h   **** #ifndef BFS_H
   2:.\BFS/bfs.h   **** #define BFS_H
   3:.\BFS/bfs.h   **** 
   4:.\BFS/bfs.h   **** #include <stdlib.h>
   5:.\BFS/bfs.h   **** #include <string.h>
   6:.\BFS/bfs.h   **** #include "line_map.h"
   7:.\BFS/bfs.h   **** #include "map_addons.h"
   8:.\BFS/bfs.h   **** #include "point.h"
   9:.\BFS/bfs.h   **** #include "helper.h"
  10:.\BFS/bfs.h   **** 
  11:.\BFS/bfs.h   **** /* Verify a valid path and store it */
  12:.\BFS/bfs.h   **** void checkPath(point new_paths[MAX_NUM_PATHS][MAX_PATH_LENGTH], int * cnt,
  13:.\BFS/bfs.h   ****     point * concurrent_path, int length, point p){
 1987              		.loc 3 13 0
 1988              		.cfi_startproc
 1989              		@ args = 8, pretend = 0, frame = 24
 1990              		@ frame_needed = 1, uses_anonymous_args = 0
 1991 0000 80B5     		push	{r7, lr}
 1992              		.cfi_def_cfa_offset 8
 1993              		.cfi_offset 7, -8
 1994              		.cfi_offset 14, -4
 1995 0002 86B0     		sub	sp, sp, #24
 1996              		.cfi_def_cfa_offset 32
 1997 0004 00AF     		add	r7, sp, #0
 1998              		.cfi_def_cfa_register 7
 1999 0006 F860     		str	r0, [r7, #12]
 2000 0008 B960     		str	r1, [r7, #8]
 2001 000a 7A60     		str	r2, [r7, #4]
 2002 000c 3B60     		str	r3, [r7]
  14:.\BFS/bfs.h   **** 
  15:.\BFS/bfs.h   ****     int mapval = getMapValAtPoint(p);
 2003              		.loc 3 15 0
 2004 000e 07F12003 		add	r3, r7, #32
 2005 0012 93E80300 		ldmia	r3, {r0, r1}
 2006 0016 FFF7FEFF 		bl	getMapValAtPoint
 2007 001a 7861     		str	r0, [r7, #20]
  16:.\BFS/bfs.h   ****     
  17:.\BFS/bfs.h   ****     if (mapval == 0){
 2008              		.loc 3 17 0
 2009 001c 7B69     		ldr	r3, [r7, #20]
 2010 001e 002B     		cmp	r3, #0
 2011 0020 21D1     		bne	.L120
  18:.\BFS/bfs.h   ****         markPointAsVisited(p);
 2012              		.loc 3 18 0
 2013 0022 07F12003 		add	r3, r7, #32
 2014 0026 93E80300 		ldmia	r3, {r0, r1}
 2015 002a FFF7FEFF 		bl	markPointAsVisited
  19:.\BFS/bfs.h   ****         concurrent_path[length] = p;
 2016              		.loc 3 19 0
 2017 002e 3B68     		ldr	r3, [r7]
 2018 0030 DB00     		lsls	r3, r3, #3
 2019 0032 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 43


 2020 0034 1344     		add	r3, r3, r2
 2021 0036 07F12002 		add	r2, r7, #32
 2022 003a 92E80300 		ldmia	r2, {r0, r1}
 2023 003e 83E80300 		stmia	r3, {r0, r1}
  20:.\BFS/bfs.h   ****         memcpy(new_paths[(*cnt)++],concurrent_path,MAX_PATH_LENGTH*sizeof(point));
 2024              		.loc 3 20 0
 2025 0042 BB68     		ldr	r3, [r7, #8]
 2026 0044 1B68     		ldr	r3, [r3]
 2027 0046 591C     		adds	r1, r3, #1
 2028 0048 BA68     		ldr	r2, [r7, #8]
 2029 004a 1160     		str	r1, [r2]
 2030 004c 1A46     		mov	r2, r3
 2031 004e 4FF48C63 		mov	r3, #1120
 2032 0052 03FB02F3 		mul	r3, r3, r2
 2033 0056 FA68     		ldr	r2, [r7, #12]
 2034 0058 1344     		add	r3, r3, r2
 2035 005a 1846     		mov	r0, r3
 2036 005c 7968     		ldr	r1, [r7, #4]
 2037 005e 4FF48C62 		mov	r2, #1120
 2038 0062 FFF7FEFF 		bl	memcpy
 2039              	.L120:
  21:.\BFS/bfs.h   ****     }
  22:.\BFS/bfs.h   **** }
 2040              		.loc 3 22 0
 2041 0066 1837     		adds	r7, r7, #24
 2042              		.cfi_def_cfa_offset 8
 2043 0068 BD46     		mov	sp, r7
 2044              		.cfi_def_cfa_register 13
 2045              		@ sp needed
 2046 006a 80BD     		pop	{r7, pc}
 2047              		.cfi_endproc
 2048              	.LFE79:
 2049              		.size	checkPath, .-checkPath
 2050              		.section	.text.BFS,"ax",%progbits
 2051              		.align	2
 2052              		.global	BFS
 2053              		.thumb
 2054              		.thumb_func
 2055              		.type	BFS, %function
 2056              	BFS:
 2057              	.LFB80:
  23:.\BFS/bfs.h   **** 
  24:.\BFS/bfs.h   **** /* Breadth First Search */
  25:.\BFS/bfs.h   **** void BFS(point start, point finish, point * concurrent_path){
 2058              		.loc 3 25 0
 2059              		.cfi_startproc
 2060              		@ args = 4, pretend = 0, frame = 22472
 2061              		@ frame_needed = 1, uses_anonymous_args = 0
 2062 0000 90B5     		push	{r4, r7, lr}
 2063              		.cfi_def_cfa_offset 12
 2064              		.cfi_offset 4, -12
 2065              		.cfi_offset 7, -8
 2066              		.cfi_offset 14, -4
 2067 0002 ADF5AF4D 		sub	sp, sp, #22400
 2068              		.cfi_def_cfa_offset 22412
 2069 0006 95B0     		sub	sp, sp, #84
 2070              		.cfi_def_cfa_offset 22496
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 44


 2071 0008 02AF     		add	r7, sp, #8
 2072              		.cfi_def_cfa 7, 22488
 2073 000a 07F14804 		add	r4, r7, #72
 2074 000e 403C     		subs	r4, r4, #64
 2075 0010 84E80300 		stmia	r4, {r0, r1}
 2076 0014 07F14801 		add	r1, r7, #72
 2077 0018 4839     		subs	r1, r1, #72
 2078 001a 81E80C00 		stmia	r1, {r2, r3}
  26:.\BFS/bfs.h   **** 
  27:.\BFS/bfs.h   ****     point paths[MAX_NUM_PATHS][MAX_PATH_LENGTH];
  28:.\BFS/bfs.h   ****     point new_paths[MAX_NUM_PATHS][MAX_PATH_LENGTH];
  29:.\BFS/bfs.h   **** 
  30:.\BFS/bfs.h   ****     // Initialise all paths as empty
  31:.\BFS/bfs.h   ****     memset(concurrent_path,EMPTY_VAL,MAX_PATH_LENGTH*sizeof(point));
 2079              		.loc 3 31 0
 2080 001e 07F5AF43 		add	r3, r7, #22400
 2081 0022 03F15803 		add	r3, r3, #88
 2082 0026 1868     		ldr	r0, [r3]
 2083 0028 4FF0FF31 		mov	r1, #-1
 2084 002c 4FF48C62 		mov	r2, #1120
 2085 0030 FFF7FEFF 		bl	memset
  32:.\BFS/bfs.h   ****     int i;
  33:.\BFS/bfs.h   ****     for (i = 0; i < MAX_NUM_PATHS; i++){
 2086              		.loc 3 33 0
 2087 0034 0023     		movs	r3, #0
 2088 0036 07F5AF42 		add	r2, r7, #22400
 2089 003a 02F14402 		add	r2, r2, #68
 2090 003e 1360     		str	r3, [r2]
 2091 0040 34E0     		b	.L123
 2092              	.L124:
  34:.\BFS/bfs.h   ****         memset(paths[i],EMPTY_VAL,MAX_PATH_LENGTH*sizeof(point));
 2093              		.loc 3 34 0 discriminator 3
 2094 0042 07F53053 		add	r3, r7, #11264
 2095 0046 03F10803 		add	r3, r3, #8
 2096 004a 2C3B     		subs	r3, r3, #44
 2097 004c 07F5AF42 		add	r2, r7, #22400
 2098 0050 02F14402 		add	r2, r2, #68
 2099 0054 1268     		ldr	r2, [r2]
 2100 0056 4FF48C61 		mov	r1, #1120
 2101 005a 01FB02F2 		mul	r2, r1, r2
 2102 005e 1344     		add	r3, r3, r2
 2103 0060 1846     		mov	r0, r3
 2104 0062 4FF0FF31 		mov	r1, #-1
 2105 0066 4FF48C62 		mov	r2, #1120
 2106 006a FFF7FEFF 		bl	memset
  35:.\BFS/bfs.h   ****         memset(new_paths[i],EMPTY_VAL,MAX_PATH_LENGTH*sizeof(point));
 2107              		.loc 3 35 0 discriminator 3
 2108 006e 07F14803 		add	r3, r7, #72
 2109 0072 2C3B     		subs	r3, r3, #44
 2110 0074 07F5AF42 		add	r2, r7, #22400
 2111 0078 02F14402 		add	r2, r2, #68
 2112 007c 1268     		ldr	r2, [r2]
 2113 007e 4FF48C61 		mov	r1, #1120
 2114 0082 01FB02F2 		mul	r2, r1, r2
 2115 0086 1344     		add	r3, r3, r2
 2116 0088 1846     		mov	r0, r3
 2117 008a 4FF0FF31 		mov	r1, #-1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 45


 2118 008e 4FF48C62 		mov	r2, #1120
 2119 0092 FFF7FEFF 		bl	memset
  33:.\BFS/bfs.h   ****         memset(paths[i],EMPTY_VAL,MAX_PATH_LENGTH*sizeof(point));
 2120              		.loc 3 33 0 discriminator 3
 2121 0096 07F5AF43 		add	r3, r7, #22400
 2122 009a 03F14403 		add	r3, r3, #68
 2123 009e 1B68     		ldr	r3, [r3]
 2124 00a0 0133     		adds	r3, r3, #1
 2125 00a2 07F5AF42 		add	r2, r7, #22400
 2126 00a6 02F14402 		add	r2, r2, #68
 2127 00aa 1360     		str	r3, [r2]
 2128              	.L123:
  33:.\BFS/bfs.h   ****         memset(paths[i],EMPTY_VAL,MAX_PATH_LENGTH*sizeof(point));
 2129              		.loc 3 33 0 is_stmt 0 discriminator 1
 2130 00ac 07F5AF43 		add	r3, r7, #22400
 2131 00b0 03F14403 		add	r3, r3, #68
 2132 00b4 1B68     		ldr	r3, [r3]
 2133 00b6 092B     		cmp	r3, #9
 2134 00b8 C3DD     		ble	.L124
  36:.\BFS/bfs.h   ****     }
  37:.\BFS/bfs.h   **** 
  38:.\BFS/bfs.h   ****     // Setup initial starting point
  39:.\BFS/bfs.h   ****     paths[0][0] = start;
 2135              		.loc 3 39 0 is_stmt 1
 2136 00ba 07F53052 		add	r2, r7, #11264
 2137 00be 02F10802 		add	r2, r2, #8
 2138 00c2 2C3A     		subs	r2, r2, #44
 2139 00c4 07F14803 		add	r3, r7, #72
 2140 00c8 403B     		subs	r3, r3, #64
 2141 00ca 93E80300 		ldmia	r3, {r0, r1}
 2142 00ce 82E80300 		stmia	r2, {r0, r1}
  40:.\BFS/bfs.h   ****     markPointAsVisited(start);
 2143              		.loc 3 40 0
 2144 00d2 07F14803 		add	r3, r7, #72
 2145 00d6 403B     		subs	r3, r3, #64
 2146 00d8 93E80300 		ldmia	r3, {r0, r1}
 2147 00dc FFF7FEFF 		bl	markPointAsVisited
  41:.\BFS/bfs.h   ****     int length = 1; // relates to concurrent_path
 2148              		.loc 3 41 0
 2149 00e0 0123     		movs	r3, #1
 2150 00e2 07F5AF42 		add	r2, r7, #22400
 2151 00e6 02F14002 		add	r2, r2, #64
 2152 00ea 1360     		str	r3, [r2]
  42:.\BFS/bfs.h   ****     int cnt = 0;
 2153              		.loc 3 42 0
 2154 00ec 07F14803 		add	r3, r7, #72
 2155 00f0 303B     		subs	r3, r3, #48
 2156 00f2 0022     		movs	r2, #0
 2157 00f4 1A60     		str	r2, [r3]
 2158              	.L133:
 2159              	.LBB3:
  43:.\BFS/bfs.h   **** 
  44:.\BFS/bfs.h   ****     while (TRUE){
  45:.\BFS/bfs.h   ****         cnt = 0;
 2160              		.loc 3 45 0
 2161 00f6 07F14803 		add	r3, r7, #72
 2162 00fa 303B     		subs	r3, r3, #48
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 46


 2163 00fc 0022     		movs	r2, #0
 2164 00fe 1A60     		str	r2, [r3]
  46:.\BFS/bfs.h   ****         int i;
  47:.\BFS/bfs.h   ****         for (i = 0; i < MAX_NUM_PATHS; i++){
 2165              		.loc 3 47 0
 2166 0100 0023     		movs	r3, #0
 2167 0102 07F5AF42 		add	r2, r7, #22400
 2168 0106 02F13C02 		add	r2, r2, #60
 2169 010a 1360     		str	r3, [r2]
 2170 010c 37E1     		b	.L125
 2171              	.L130:
 2172              	.LBB4:
  48:.\BFS/bfs.h   **** 
  49:.\BFS/bfs.h   ****             // Skip empty paths
  50:.\BFS/bfs.h   ****             if (isEmpty(paths[i],MAX_PATH_LENGTH)) continue;
 2173              		.loc 3 50 0
 2174 010e 07F53053 		add	r3, r7, #11264
 2175 0112 03F10803 		add	r3, r3, #8
 2176 0116 2C3B     		subs	r3, r3, #44
 2177 0118 07F5AF42 		add	r2, r7, #22400
 2178 011c 02F13C02 		add	r2, r2, #60
 2179 0120 1268     		ldr	r2, [r2]
 2180 0122 4FF48C61 		mov	r1, #1120
 2181 0126 01FB02F2 		mul	r2, r1, r2
 2182 012a 1344     		add	r3, r3, r2
 2183 012c 1846     		mov	r0, r3
 2184 012e 8C21     		movs	r1, #140
 2185 0130 FFF7FEFF 		bl	isEmpty
 2186 0134 0346     		mov	r3, r0
 2187 0136 002B     		cmp	r3, #0
 2188 0138 40F01681 		bne	.L127
  51:.\BFS/bfs.h   **** 
  52:.\BFS/bfs.h   ****             // Set the concurrent_path equal to path
  53:.\BFS/bfs.h   ****             memcpy(concurrent_path,paths[i],MAX_PATH_LENGTH*sizeof(point));
 2189              		.loc 3 53 0
 2190 013c 07F53053 		add	r3, r7, #11264
 2191 0140 03F10803 		add	r3, r3, #8
 2192 0144 2C3B     		subs	r3, r3, #44
 2193 0146 07F5AF42 		add	r2, r7, #22400
 2194 014a 02F13C02 		add	r2, r2, #60
 2195 014e 1268     		ldr	r2, [r2]
 2196 0150 4FF48C61 		mov	r1, #1120
 2197 0154 01FB02F2 		mul	r2, r1, r2
 2198 0158 1344     		add	r3, r3, r2
 2199 015a 07F5AF42 		add	r2, r7, #22400
 2200 015e 02F15802 		add	r2, r2, #88
 2201 0162 1068     		ldr	r0, [r2]
 2202 0164 1946     		mov	r1, r3
 2203 0166 4FF48C62 		mov	r2, #1120
 2204 016a FFF7FEFF 		bl	memcpy
  54:.\BFS/bfs.h   **** 
  55:.\BFS/bfs.h   ****             // Clear path
  56:.\BFS/bfs.h   ****             //clearArray(paths[i],MAX_PATH_LENGTH);
  57:.\BFS/bfs.h   ****             memset(paths[i],EMPTY_VAL,MAX_PATH_LENGTH*sizeof(point));
 2205              		.loc 3 57 0
 2206 016e 07F53053 		add	r3, r7, #11264
 2207 0172 03F10803 		add	r3, r3, #8
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 47


 2208 0176 2C3B     		subs	r3, r3, #44
 2209 0178 07F5AF42 		add	r2, r7, #22400
 2210 017c 02F13C02 		add	r2, r2, #60
 2211 0180 1268     		ldr	r2, [r2]
 2212 0182 4FF48C61 		mov	r1, #1120
 2213 0186 01FB02F2 		mul	r2, r1, r2
 2214 018a 1344     		add	r3, r3, r2
 2215 018c 1846     		mov	r0, r3
 2216 018e 4FF0FF31 		mov	r1, #-1
 2217 0192 4FF48C62 		mov	r2, #1120
 2218 0196 FFF7FEFF 		bl	memset
  58:.\BFS/bfs.h   **** 
  59:.\BFS/bfs.h   ****             point p = concurrent_path[length-1];
 2219              		.loc 3 59 0
 2220 019a 07F5AF43 		add	r3, r7, #22400
 2221 019e 03F14003 		add	r3, r3, #64
 2222 01a2 1B68     		ldr	r3, [r3]
 2223 01a4 03F10053 		add	r3, r3, #536870912
 2224 01a8 013B     		subs	r3, r3, #1
 2225 01aa DB00     		lsls	r3, r3, #3
 2226 01ac 07F5AF42 		add	r2, r7, #22400
 2227 01b0 02F15802 		add	r2, r2, #88
 2228 01b4 1268     		ldr	r2, [r2]
 2229 01b6 1A44     		add	r2, r2, r3
 2230 01b8 07F14803 		add	r3, r7, #72
 2231 01bc 383B     		subs	r3, r3, #56
 2232 01be 92E80300 		ldmia	r2, {r0, r1}
 2233 01c2 83E80300 		stmia	r3, {r0, r1}
  60:.\BFS/bfs.h   ****             
  61:.\BFS/bfs.h   ****             // Path has been found
  62:.\BFS/bfs.h   ****             if (p.x == finish.x && p.y == finish.y) {
 2234              		.loc 3 62 0
 2235 01c6 07F14803 		add	r3, r7, #72
 2236 01ca 383B     		subs	r3, r3, #56
 2237 01cc 1A68     		ldr	r2, [r3]
 2238 01ce 07F14803 		add	r3, r7, #72
 2239 01d2 483B     		subs	r3, r3, #72
 2240 01d4 1B68     		ldr	r3, [r3]
 2241 01d6 9A42     		cmp	r2, r3
 2242 01d8 0AD1     		bne	.L128
 2243              		.loc 3 62 0 is_stmt 0 discriminator 1
 2244 01da 07F14803 		add	r3, r7, #72
 2245 01de 383B     		subs	r3, r3, #56
 2246 01e0 5A68     		ldr	r2, [r3, #4]
 2247 01e2 07F14803 		add	r3, r7, #72
 2248 01e6 483B     		subs	r3, r3, #72
 2249 01e8 5B68     		ldr	r3, [r3, #4]
 2250 01ea 9A42     		cmp	r2, r3
 2251 01ec 00F02D81 		beq	.L134
 2252              	.L128:
  63:.\BFS/bfs.h   ****                 return;
  64:.\BFS/bfs.h   ****             }
  65:.\BFS/bfs.h   **** 
  66:.\BFS/bfs.h   ****             // Check above
  67:.\BFS/bfs.h   ****             checkPath(new_paths,&cnt,concurrent_path,length,(point){.x=p.x,.y=p.y-1});
 2253              		.loc 3 67 0 is_stmt 1
 2254 01f0 07F14803 		add	r3, r7, #72
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 48


 2255 01f4 383B     		subs	r3, r3, #56
 2256 01f6 1B68     		ldr	r3, [r3]
 2257 01f8 07F5AF42 		add	r2, r7, #22400
 2258 01fc 02F11C02 		add	r2, r2, #28
 2259 0200 1360     		str	r3, [r2]
 2260 0202 07F14803 		add	r3, r7, #72
 2261 0206 383B     		subs	r3, r3, #56
 2262 0208 5B68     		ldr	r3, [r3, #4]
 2263 020a 013B     		subs	r3, r3, #1
 2264 020c 07F5AF42 		add	r2, r7, #22400
 2265 0210 02F12002 		add	r2, r2, #32
 2266 0214 1360     		str	r3, [r2]
 2267 0216 07F14802 		add	r2, r7, #72
 2268 021a 2C3A     		subs	r2, r2, #44
 2269 021c 07F14803 		add	r3, r7, #72
 2270 0220 303B     		subs	r3, r3, #48
 2271 0222 6C46     		mov	r4, sp
 2272 0224 07F5AF41 		add	r1, r7, #22400
 2273 0228 01F11C01 		add	r1, r1, #28
 2274 022c 03C9     		ldmia	r1, {r0, r1}
 2275 022e 84E80300 		stmia	r4, {r0, r1}
 2276 0232 1046     		mov	r0, r2
 2277 0234 1946     		mov	r1, r3
 2278 0236 07F5AF43 		add	r3, r7, #22400
 2279 023a 03F15803 		add	r3, r3, #88
 2280 023e 1A68     		ldr	r2, [r3]
 2281 0240 07F5AF43 		add	r3, r7, #22400
 2282 0244 03F14003 		add	r3, r3, #64
 2283 0248 1B68     		ldr	r3, [r3]
 2284 024a FFF7FEFF 		bl	checkPath
  68:.\BFS/bfs.h   ****             // Check below
  69:.\BFS/bfs.h   ****             checkPath(new_paths,&cnt,concurrent_path,length,(point){.x=p.x,.y=p.y+1});
 2285              		.loc 3 69 0
 2286 024e 07F14803 		add	r3, r7, #72
 2287 0252 383B     		subs	r3, r3, #56
 2288 0254 1B68     		ldr	r3, [r3]
 2289 0256 07F5AF42 		add	r2, r7, #22400
 2290 025a 02F12402 		add	r2, r2, #36
 2291 025e 1360     		str	r3, [r2]
 2292 0260 07F14803 		add	r3, r7, #72
 2293 0264 383B     		subs	r3, r3, #56
 2294 0266 5B68     		ldr	r3, [r3, #4]
 2295 0268 0133     		adds	r3, r3, #1
 2296 026a 07F5AF42 		add	r2, r7, #22400
 2297 026e 02F12802 		add	r2, r2, #40
 2298 0272 1360     		str	r3, [r2]
 2299 0274 07F14802 		add	r2, r7, #72
 2300 0278 2C3A     		subs	r2, r2, #44
 2301 027a 07F14803 		add	r3, r7, #72
 2302 027e 303B     		subs	r3, r3, #48
 2303 0280 6C46     		mov	r4, sp
 2304 0282 07F5AF41 		add	r1, r7, #22400
 2305 0286 01F12401 		add	r1, r1, #36
 2306 028a 03C9     		ldmia	r1, {r0, r1}
 2307 028c 84E80300 		stmia	r4, {r0, r1}
 2308 0290 1046     		mov	r0, r2
 2309 0292 1946     		mov	r1, r3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 49


 2310 0294 07F5AF43 		add	r3, r7, #22400
 2311 0298 03F15803 		add	r3, r3, #88
 2312 029c 1A68     		ldr	r2, [r3]
 2313 029e 07F5AF43 		add	r3, r7, #22400
 2314 02a2 03F14003 		add	r3, r3, #64
 2315 02a6 1B68     		ldr	r3, [r3]
 2316 02a8 FFF7FEFF 		bl	checkPath
  70:.\BFS/bfs.h   ****             // Check left
  71:.\BFS/bfs.h   ****             checkPath(new_paths,&cnt,concurrent_path,length,(point){.x=p.x-1,.y=p.y});
 2317              		.loc 3 71 0
 2318 02ac 07F14803 		add	r3, r7, #72
 2319 02b0 383B     		subs	r3, r3, #56
 2320 02b2 1B68     		ldr	r3, [r3]
 2321 02b4 013B     		subs	r3, r3, #1
 2322 02b6 07F5AF42 		add	r2, r7, #22400
 2323 02ba 02F12C02 		add	r2, r2, #44
 2324 02be 1360     		str	r3, [r2]
 2325 02c0 07F14803 		add	r3, r7, #72
 2326 02c4 383B     		subs	r3, r3, #56
 2327 02c6 5B68     		ldr	r3, [r3, #4]
 2328 02c8 07F5AF42 		add	r2, r7, #22400
 2329 02cc 02F13002 		add	r2, r2, #48
 2330 02d0 1360     		str	r3, [r2]
 2331 02d2 07F14802 		add	r2, r7, #72
 2332 02d6 2C3A     		subs	r2, r2, #44
 2333 02d8 07F14803 		add	r3, r7, #72
 2334 02dc 303B     		subs	r3, r3, #48
 2335 02de 6C46     		mov	r4, sp
 2336 02e0 07F5AF41 		add	r1, r7, #22400
 2337 02e4 01F12C01 		add	r1, r1, #44
 2338 02e8 03C9     		ldmia	r1, {r0, r1}
 2339 02ea 84E80300 		stmia	r4, {r0, r1}
 2340 02ee 1046     		mov	r0, r2
 2341 02f0 1946     		mov	r1, r3
 2342 02f2 07F5AF43 		add	r3, r7, #22400
 2343 02f6 03F15803 		add	r3, r3, #88
 2344 02fa 1A68     		ldr	r2, [r3]
 2345 02fc 07F5AF43 		add	r3, r7, #22400
 2346 0300 03F14003 		add	r3, r3, #64
 2347 0304 1B68     		ldr	r3, [r3]
 2348 0306 FFF7FEFF 		bl	checkPath
  72:.\BFS/bfs.h   ****             // Check right
  73:.\BFS/bfs.h   ****             checkPath(new_paths,&cnt,concurrent_path,length,(point){.x=p.x+1,.y=p.y});
 2349              		.loc 3 73 0
 2350 030a 07F14803 		add	r3, r7, #72
 2351 030e 383B     		subs	r3, r3, #56
 2352 0310 1B68     		ldr	r3, [r3]
 2353 0312 0133     		adds	r3, r3, #1
 2354 0314 07F5AF42 		add	r2, r7, #22400
 2355 0318 02F13402 		add	r2, r2, #52
 2356 031c 1360     		str	r3, [r2]
 2357 031e 07F14803 		add	r3, r7, #72
 2358 0322 383B     		subs	r3, r3, #56
 2359 0324 5B68     		ldr	r3, [r3, #4]
 2360 0326 07F5AF42 		add	r2, r7, #22400
 2361 032a 02F13802 		add	r2, r2, #56
 2362 032e 1360     		str	r3, [r2]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 50


 2363 0330 07F14802 		add	r2, r7, #72
 2364 0334 2C3A     		subs	r2, r2, #44
 2365 0336 07F14803 		add	r3, r7, #72
 2366 033a 303B     		subs	r3, r3, #48
 2367 033c 6C46     		mov	r4, sp
 2368 033e 07F5AF41 		add	r1, r7, #22400
 2369 0342 01F13401 		add	r1, r1, #52
 2370 0346 03C9     		ldmia	r1, {r0, r1}
 2371 0348 84E80300 		stmia	r4, {r0, r1}
 2372 034c 1046     		mov	r0, r2
 2373 034e 1946     		mov	r1, r3
 2374 0350 07F5AF43 		add	r3, r7, #22400
 2375 0354 03F15803 		add	r3, r3, #88
 2376 0358 1A68     		ldr	r2, [r3]
 2377 035a 07F5AF43 		add	r3, r7, #22400
 2378 035e 03F14003 		add	r3, r3, #64
 2379 0362 1B68     		ldr	r3, [r3]
 2380 0364 FFF7FEFF 		bl	checkPath
 2381              	.L127:
 2382              	.LBE4:
  47:.\BFS/bfs.h   **** 
 2383              		.loc 3 47 0 discriminator 2
 2384 0368 07F5AF43 		add	r3, r7, #22400
 2385 036c 03F13C03 		add	r3, r3, #60
 2386 0370 1B68     		ldr	r3, [r3]
 2387 0372 0133     		adds	r3, r3, #1
 2388 0374 07F5AF42 		add	r2, r7, #22400
 2389 0378 02F13C02 		add	r2, r2, #60
 2390 037c 1360     		str	r3, [r2]
 2391              	.L125:
  47:.\BFS/bfs.h   **** 
 2392              		.loc 3 47 0 is_stmt 0 discriminator 1
 2393 037e 07F5AF43 		add	r3, r7, #22400
 2394 0382 03F13C03 		add	r3, r3, #60
 2395 0386 1B68     		ldr	r3, [r3]
 2396 0388 092B     		cmp	r3, #9
 2397 038a 7FF7C0AE 		ble	.L130
  74:.\BFS/bfs.h   **** 
  75:.\BFS/bfs.h   ****         }
  76:.\BFS/bfs.h   **** 
  77:.\BFS/bfs.h   ****         // Take new paths and put them into paths
  78:.\BFS/bfs.h   ****         for (i = 0; i < MAX_NUM_PATHS; i++){
 2398              		.loc 3 78 0 is_stmt 1
 2399 038e 0023     		movs	r3, #0
 2400 0390 07F5AF42 		add	r2, r7, #22400
 2401 0394 02F13C02 		add	r2, r2, #60
 2402 0398 1360     		str	r3, [r2]
 2403 039a 43E0     		b	.L131
 2404              	.L132:
  79:.\BFS/bfs.h   ****             memcpy(paths[i],new_paths[i],MAX_PATH_LENGTH*sizeof(point)); // Copy new_paths to paths
 2405              		.loc 3 79 0 discriminator 3
 2406 039c 07F53053 		add	r3, r7, #11264
 2407 03a0 03F10803 		add	r3, r3, #8
 2408 03a4 2C3B     		subs	r3, r3, #44
 2409 03a6 07F5AF42 		add	r2, r7, #22400
 2410 03aa 02F13C02 		add	r2, r2, #60
 2411 03ae 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 51


 2412 03b0 4FF48C61 		mov	r1, #1120
 2413 03b4 01FB02F2 		mul	r2, r1, r2
 2414 03b8 9818     		adds	r0, r3, r2
 2415 03ba 07F14803 		add	r3, r7, #72
 2416 03be 2C3B     		subs	r3, r3, #44
 2417 03c0 07F5AF42 		add	r2, r7, #22400
 2418 03c4 02F13C02 		add	r2, r2, #60
 2419 03c8 1268     		ldr	r2, [r2]
 2420 03ca 4FF48C61 		mov	r1, #1120
 2421 03ce 01FB02F2 		mul	r2, r1, r2
 2422 03d2 1344     		add	r3, r3, r2
 2423 03d4 0146     		mov	r1, r0
 2424 03d6 1A46     		mov	r2, r3
 2425 03d8 4FF48C63 		mov	r3, #1120
 2426 03dc 0846     		mov	r0, r1
 2427 03de 1146     		mov	r1, r2
 2428 03e0 1A46     		mov	r2, r3
 2429 03e2 FFF7FEFF 		bl	memcpy
  80:.\BFS/bfs.h   ****             memset(new_paths[i],EMPTY_VAL,MAX_PATH_LENGTH*sizeof(point)); // Empty new_paths
 2430              		.loc 3 80 0 discriminator 3
 2431 03e6 07F14803 		add	r3, r7, #72
 2432 03ea 2C3B     		subs	r3, r3, #44
 2433 03ec 07F5AF42 		add	r2, r7, #22400
 2434 03f0 02F13C02 		add	r2, r2, #60
 2435 03f4 1268     		ldr	r2, [r2]
 2436 03f6 4FF48C61 		mov	r1, #1120
 2437 03fa 01FB02F2 		mul	r2, r1, r2
 2438 03fe 1344     		add	r3, r3, r2
 2439 0400 1846     		mov	r0, r3
 2440 0402 4FF0FF31 		mov	r1, #-1
 2441 0406 4FF48C62 		mov	r2, #1120
 2442 040a FFF7FEFF 		bl	memset
  78:.\BFS/bfs.h   ****             memcpy(paths[i],new_paths[i],MAX_PATH_LENGTH*sizeof(point)); // Copy new_paths to paths
 2443              		.loc 3 78 0 discriminator 3
 2444 040e 07F5AF43 		add	r3, r7, #22400
 2445 0412 03F13C03 		add	r3, r3, #60
 2446 0416 1B68     		ldr	r3, [r3]
 2447 0418 0133     		adds	r3, r3, #1
 2448 041a 07F5AF42 		add	r2, r7, #22400
 2449 041e 02F13C02 		add	r2, r2, #60
 2450 0422 1360     		str	r3, [r2]
 2451              	.L131:
  78:.\BFS/bfs.h   ****             memcpy(paths[i],new_paths[i],MAX_PATH_LENGTH*sizeof(point)); // Copy new_paths to paths
 2452              		.loc 3 78 0 is_stmt 0 discriminator 1
 2453 0424 07F5AF43 		add	r3, r7, #22400
 2454 0428 03F13C03 		add	r3, r3, #60
 2455 042c 1B68     		ldr	r3, [r3]
 2456 042e 092B     		cmp	r3, #9
 2457 0430 B4DD     		ble	.L132
  81:.\BFS/bfs.h   ****         }
  82:.\BFS/bfs.h   **** 
  83:.\BFS/bfs.h   ****         length++;
 2458              		.loc 3 83 0 is_stmt 1
 2459 0432 07F5AF43 		add	r3, r7, #22400
 2460 0436 03F14003 		add	r3, r3, #64
 2461 043a 1B68     		ldr	r3, [r3]
 2462 043c 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 52


 2463 043e 07F5AF42 		add	r2, r7, #22400
 2464 0442 02F14002 		add	r2, r2, #64
 2465 0446 1360     		str	r3, [r2]
 2466              	.LBE3:
  84:.\BFS/bfs.h   **** 
  85:.\BFS/bfs.h   ****     }
 2467              		.loc 3 85 0
 2468 0448 55E6     		b	.L133
 2469              	.L134:
  86:.\BFS/bfs.h   **** 
  87:.\BFS/bfs.h   **** }
 2470              		.loc 3 87 0
 2471 044a 07F5AF47 		add	r7, r7, #22400
 2472 044e 4C37     		adds	r7, r7, #76
 2473              		.cfi_def_cfa_offset 12
 2474 0450 BD46     		mov	sp, r7
 2475              		.cfi_def_cfa_register 13
 2476              		@ sp needed
 2477 0452 90BD     		pop	{r4, r7, pc}
 2478              		.cfi_endproc
 2479              	.LFE80:
 2480              		.size	BFS, .-BFS
 2481              		.global	adc_flag
 2482              		.bss
 2483 0012 0000     		.align	2
 2484              		.type	adc_flag, %object
 2485              		.size	adc_flag, 4
 2486              	adc_flag:
 2487 0014 00000000 		.space	4
 2488              		.global	sensor_readings
 2489              		.align	2
 2490              		.type	sensor_readings, %object
 2491              		.size	sensor_readings, 6
 2492              	sensor_readings:
 2493 0018 00000000 		.space	6
 2493      0000
 2494              		.global	adc_readings
 2495 001e 0000     		.align	2
 2496              		.type	adc_readings, %object
 2497              		.size	adc_readings, 24
 2498              	adc_readings:
 2499 0020 00000000 		.space	24
 2499      00000000 
 2499      00000000 
 2499      00000000 
 2499      00000000 
 2500              		.global	sample_count
 2501              		.align	2
 2502              		.type	sample_count, %object
 2503              		.size	sample_count, 4
 2504              	sample_count:
 2505 0038 00000000 		.space	4
 2506              		.global	timer_flag
 2507              		.align	2
 2508              		.type	timer_flag, %object
 2509              		.size	timer_flag, 4
 2510              	timer_flag:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 53


 2511 003c 00000000 		.space	4
 2512              		.global	countM1
 2513              		.align	2
 2514              		.type	countM1, %object
 2515              		.size	countM1, 4
 2516              	countM1:
 2517 0040 00000000 		.space	4
 2518              		.global	countM2
 2519              		.align	2
 2520              		.type	countM2, %object
 2521              		.size	countM2, 4
 2522              	countM2:
 2523 0044 00000000 		.space	4
 2524              		.global	prevCountM1
 2525              		.align	2
 2526              		.type	prevCountM1, %object
 2527              		.size	prevCountM1, 4
 2528              	prevCountM1:
 2529 0048 00000000 		.space	4
 2530              		.global	prevCountM2
 2531              		.align	2
 2532              		.type	prevCountM2, %object
 2533              		.size	prevCountM2, 4
 2534              	prevCountM2:
 2535 004c 00000000 		.space	4
 2536              		.section	.text.ENCODER_ISR,"ax",%progbits
 2537              		.align	2
 2538              		.global	ENCODER_ISR
 2539              		.thumb
 2540              		.thumb_func
 2541              		.type	ENCODER_ISR, %function
 2542              	ENCODER_ISR:
 2543              	.LFB81:
 2544              		.file 4 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  * 2019 COMPSYS 
   3:.\main.c      ****  * 302 GROUP 2
   4:.\main.c      ****  * FLIK
   5:.\main.c      **** */
   6:.\main.c      **** // ================== INCLUDE ======================
   7:.\main.c      **** #include <stdio.h>
   8:.\main.c      **** #include <string.h>
   9:.\main.c      **** #include <stdlib.h>
  10:.\main.c      **** #include <project.h>
  11:.\main.c      **** 
  12:.\main.c      **** #include "defines.h"
  13:.\main.c      **** #include "vars.h"
  14:.\main.c      **** #include "BFS/bfs.h"
  15:.\main.c      **** // =================== MACROS =====================
  16:.\main.c      **** // SENSOR MAPPINGS
  17:.\main.c      **** #define TOP_LEFT_SENSOR 0
  18:.\main.c      **** #define TOP_MID_SENSOR 1
  19:.\main.c      **** #define TOP_RIGHT_SENSOR 2
  20:.\main.c      **** #define BOTTOM_LEFT_SENSOR 3
  21:.\main.c      **** #define BOTTOM_MID_SENSOR 4
  22:.\main.c      **** #define BOTTOM_RIGHT_SENSOR 5
  23:.\main.c      **** 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 54


  24:.\main.c      **** // LIGHT SENSORS
  25:.\main.c      **** #define NUM_SENSORS 6
  26:.\main.c      **** #define LIGHT_LEVEL 300
  27:.\main.c      **** 
  28:.\main.c      **** // ADC
  29:.\main.c      **** #define ADC_READINGS_SIZE 200
  30:.\main.c      **** 
  31:.\main.c      **** // Speed calculations
  32:.\main.c      **** #define LINEAR_DISTANCE_PER_REV 20.42035225
  33:.\main.c      **** #define TICKS_PER_REV 228
  34:.\main.c      **** #define TIMER_PERIOD 0.03
  35:.\main.c      **** 
  36:.\main.c      **** // Speed control
  37:.\main.c      **** #define DESIRED_COUNT 8
  38:.\main.c      **** #define TURN_SPEED 450
  39:.\main.c      **** 
  40:.\main.c      **** // Distances
  41:.\main.c      **** #define GRID_SIZE 12
  42:.\main.c      **** #define HALF_ROBOT_LENGTH 8
  43:.\main.c      **** #define SMALL_FORWARD_DISTANCE 8
  44:.\main.c      **** 
  45:.\main.c      **** // Line following macros - require calibration
  46:.\main.c      **** #define ADJUST_SPEED_LARGE 3
  47:.\main.c      **** #define ADJUST_SPEED_SMALL 1
  48:.\main.c      **** #define MAX_SPEED 9
  49:.\main.c      **** #define MIN_SPEED 4
  50:.\main.c      **** #define SLOW_DOWN_SPEED 1
  51:.\main.c      **** 
  52:.\main.c      **** // algorithms
  53:.\main.c      **** #define BFS_ROUTE_SIZE 68
  54:.\main.c      **** #define DISTANCE_THRESHOLD 20
  55:.\main.c      **** 
  56:.\main.c      **** // Debug flag - uncomment when debugging
  57:.\main.c      **** //#define PUTTY
  58:.\main.c      **** //* ================= FUNCTIONS =======================
  59:.\main.c      **** void usbPutString(char *s);
  60:.\main.c      **** 
  61:.\main.c      **** // sensors
  62:.\main.c      **** int32 getValForChannel(int16 n);
  63:.\main.c      **** void updateSensorValues();
  64:.\main.c      **** 
  65:.\main.c      **** // general
  66:.\main.c      **** void changeRightWheelSpeed(int amount);
  67:.\main.c      **** void changeLeftWheelSpeed(int amount);
  68:.\main.c      **** void invertWheels();
  69:.\main.c      **** void startWheels();
  70:.\main.c      **** void stopWheels();
  71:.\main.c      **** void setWheelDirection(int isLeftForward, int isRightForward);
  72:.\main.c      **** void correctSpeed(int prevCount, int count, int desired_count, int isLeftWheel);
  73:.\main.c      **** float getDistance(int prevCountM1, int prevCountM2);
  74:.\main.c      **** 
  75:.\main.c      **** // straight
  76:.\main.c      **** void turnRight();
  77:.\main.c      **** void turnLeft();
  78:.\main.c      **** void goStraightForBlock(int desired_blocks, int *right_speed_count, int *left_wheel_count);
  79:.\main.c      **** 
  80:.\main.c      **** // turning
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 55


  81:.\main.c      **** void turnForDegrees(int degrees);
  82:.\main.c      **** void sharpTurnRight();
  83:.\main.c      **** void sharpTurnLeft();
  84:.\main.c      **** void uTurn(int *left_wheel_count, int *right_wheel_count);
  85:.\main.c      **** 
  86:.\main.c      **** // debugging
  87:.\main.c      **** void printCommandsUSB(int *commands);
  88:.\main.c      **** void printSingleCommandUSB(int command);
  89:.\main.c      **** //* ================= GLOBAL VARIABLES =======================
  90:.\main.c      **** // ADC
  91:.\main.c      **** volatile int adc_flag = FALSE;
  92:.\main.c      **** int8 sensor_readings[NUM_SENSORS] = { 0 };
  93:.\main.c      **** int adc_readings[NUM_SENSORS] = { 0 };
  94:.\main.c      **** int sample_count = 0;
  95:.\main.c      **** // Encoder
  96:.\main.c      **** volatile int timer_flag = FALSE;
  97:.\main.c      **** volatile int countM1 = 0;
  98:.\main.c      **** volatile int countM2 = 0;
  99:.\main.c      **** int prevCountM1 = 0;
 100:.\main.c      **** int prevCountM2 = 0;
 101:.\main.c      **** //* ================== ISR ======================
 102:.\main.c      **** CY_ISR(ENCODER_ISR) {
 2545              		.loc 4 102 0
 2546              		.cfi_startproc
 2547              		@ args = 0, pretend = 0, frame = 0
 2548              		@ frame_needed = 1, uses_anonymous_args = 0
 2549 0000 80B5     		push	{r7, lr}
 2550              		.cfi_def_cfa_offset 8
 2551              		.cfi_offset 7, -8
 2552              		.cfi_offset 14, -4
 2553 0002 00AF     		add	r7, sp, #0
 2554              		.cfi_def_cfa_register 7
 103:.\main.c      ****     countM1 = QuadDec_M1_GetCounter();
 2555              		.loc 4 103 0
 2556 0004 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 2557 0008 0346     		mov	r3, r0
 2558 000a 1A46     		mov	r2, r3
 2559 000c 054B     		ldr	r3, .L136
 2560 000e 1A60     		str	r2, [r3]
 104:.\main.c      ****     countM2 = QuadDec_M2_GetCounter();
 2561              		.loc 4 104 0
 2562 0010 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 2563 0014 0346     		mov	r3, r0
 2564 0016 1A46     		mov	r2, r3
 2565 0018 034B     		ldr	r3, .L136+4
 2566 001a 1A60     		str	r2, [r3]
 105:.\main.c      ****     timer_flag = TRUE;
 2567              		.loc 4 105 0
 2568 001c 034B     		ldr	r3, .L136+8
 2569 001e 0122     		movs	r2, #1
 2570 0020 1A60     		str	r2, [r3]
 106:.\main.c      **** }
 2571              		.loc 4 106 0
 2572 0022 80BD     		pop	{r7, pc}
 2573              	.L137:
 2574              		.align	2
 2575              	.L136:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 56


 2576 0024 00000000 		.word	countM1
 2577 0028 00000000 		.word	countM2
 2578 002c 00000000 		.word	timer_flag
 2579              		.cfi_endproc
 2580              	.LFE81:
 2581              		.size	ENCODER_ISR, .-ENCODER_ISR
 2582              		.section	.text.ADC_ISR,"ax",%progbits
 2583              		.align	2
 2584              		.global	ADC_ISR
 2585              		.thumb
 2586              		.thumb_func
 2587              		.type	ADC_ISR, %function
 2588              	ADC_ISR:
 2589              	.LFB82:
 107:.\main.c      **** 
 108:.\main.c      **** /* ### Retrieve and Store Measurements ### */
 109:.\main.c      **** CY_ISR(ADC_ISR) {
 2590              		.loc 4 109 0
 2591              		.cfi_startproc
 2592              		@ args = 0, pretend = 0, frame = 0
 2593              		@ frame_needed = 1, uses_anonymous_args = 0
 2594              		@ link register save eliminated.
 2595 0000 80B4     		push	{r7}
 2596              		.cfi_def_cfa_offset 4
 2597              		.cfi_offset 7, -4
 2598 0002 00AF     		add	r7, sp, #0
 2599              		.cfi_def_cfa_register 7
 110:.\main.c      ****     adc_flag = TRUE;
 2600              		.loc 4 110 0
 2601 0004 034B     		ldr	r3, .L139
 2602 0006 0122     		movs	r2, #1
 2603 0008 1A60     		str	r2, [r3]
 111:.\main.c      **** }
 2604              		.loc 4 111 0
 2605 000a BD46     		mov	sp, r7
 2606              		.cfi_def_cfa_register 13
 2607              		@ sp needed
 2608 000c 5DF8047B 		ldr	r7, [sp], #4
 2609              		.cfi_restore 7
 2610              		.cfi_def_cfa_offset 0
 2611 0010 7047     		bx	lr
 2612              	.L140:
 2613 0012 00BF     		.align	2
 2614              	.L139:
 2615 0014 00000000 		.word	adc_flag
 2616              		.cfi_endproc
 2617              	.LFE82:
 2618              		.size	ADC_ISR, .-ADC_ISR
 2619              		.section	.rodata
 2620 00be 0000     		.align	2
 2621              	.LC15:
 2622 00c0 23232054 		.ascii	"## Testing Algorithm ##\015\012\000"
 2622      65737469 
 2622      6E672041 
 2622      6C676F72 
 2622      6974686D 
 2623 00da 0000     		.align	2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 57


 2624              	.LC16:
 2625 00dc 53686172 		.ascii	"Sharp turn right\015\012\000"
 2625      70207475 
 2625      726E2072 
 2625      69676874 
 2625      0D0A00
 2626 00ef 00       		.align	2
 2627              	.LC17:
 2628 00f0 53686172 		.ascii	"Sharp turn left\015\012\000"
 2628      70207475 
 2628      726E206C 
 2628      6566740D 
 2628      0A00
 2629 0102 0000     		.align	2
 2630              	.LC18:
 2631 0104 55207475 		.ascii	"U turn\015\012\000"
 2631      726E0D0A 
 2631      00
 2632 010d 000000   		.align	2
 2633              	.LC19:
 2634 0110 53747261 		.ascii	"Straight\015\012\000"
 2634      69676874 
 2634      0D0A00
 2635 011b 00       		.align	2
 2636              	.LC0:
 2637 011c 11000000 		.word	17
 2638 0120 05000000 		.word	5
 2639              		.align	2
 2640              	.LC1:
 2641 0124 03000000 		.word	3
 2642 0128 0D000000 		.word	13
 2643              		.align	2
 2644              	.LC2:
 2645 012c FFFFFFFF 		.word	-1
 2646 0130 FFFFFFFF 		.word	-1
 2647              		.section	.text.main,"ax",%progbits
 2648              		.align	2
 2649              		.global	main
 2650              		.thumb
 2651              		.thumb_func
 2652              		.type	main, %function
 2653              	main:
 2654              	.LFB83:
 112:.\main.c      **** 
 113:.\main.c      **** /** ## Notes
 114:.\main.c      ****     
 115:.\main.c      ****     Ratio of linear distance to quad decoder ticks
 116:.\main.c      ****     One revolution gives a linear distance (in cm)
 117:.\main.c      ****     Each revolution is 57 ticks (228 for 4x mode)
 118:.\main.c      ****     Centimetres per tick = linear distance / countM(1|2)
 119:.\main.c      ****     
 120:.\main.c      ****     Decoder use a 4x count, so each revolution gives 4 counts
 121:.\main.c      ****     Sampling rate is determined by our 100ms timer (might be a little slow)
 122:.\main.c      ****     
 123:.\main.c      ****     ## Algorithm Control Flow
 124:.\main.c      ****     - Get ADC value for each channel
 125:.\main.c      ****     - Get decoder val for M1 & M2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 58


 126:.\main.c      ****     - Use these values to drive the movement of the robot
 127:.\main.c      ****     
 128:.\main.c      **** */
 129:.\main.c      **** 
 130:.\main.c      **** int main()
 131:.\main.c      **** {
 2655              		.loc 4 131 0
 2656              		.cfi_startproc
 2657              		@ args = 0, pretend = 0, frame = 784
 2658              		@ frame_needed = 1, uses_anonymous_args = 0
 2659 0000 80B5     		push	{r7, lr}
 2660              		.cfi_def_cfa_offset 8
 2661              		.cfi_offset 7, -8
 2662              		.cfi_offset 14, -4
 2663 0002 ADF5467D 		sub	sp, sp, #792
 2664              		.cfi_def_cfa_offset 800
 2665 0006 02AF     		add	r7, sp, #8
 2666              		.cfi_def_cfa 7, 792
 132:.\main.c      ****     // Change these for pathing
 133:.\main.c      ****     point start = {.x=17, .y=5};
 2667              		.loc 4 133 0
 2668 0008 7F4A     		ldr	r2, .L153
 2669 000a 07F53F73 		add	r3, r7, #764
 2670 000e 92E80300 		ldmia	r2, {r0, r1}
 2671 0012 83E80300 		stmia	r3, {r0, r1}
 134:.\main.c      ****     point destination = {.x = 3, .y = 13};
 2672              		.loc 4 134 0
 2673 0016 7D4A     		ldr	r2, .L153+4
 2674 0018 07F53D73 		add	r3, r7, #756
 2675 001c 92E80300 		ldmia	r2, {r0, r1}
 2676 0020 83E80300 		stmia	r3, {r0, r1}
 135:.\main.c      ****     point route[BFS_ROUTE_SIZE];
 136:.\main.c      **** 
 137:.\main.c      ****     int i;
 138:.\main.c      ****     for (i = 0; i < BFS_ROUTE_SIZE; i++) {
 2677              		.loc 4 138 0
 2678 0024 0023     		movs	r3, #0
 2679 0026 C7F80C33 		str	r3, [r7, #780]
 2680 002a 10E0     		b	.L142
 2681              	.L143:
 139:.\main.c      ****         route[i] = (point){.x=-1, .y=-1};
 2682              		.loc 4 139 0 discriminator 3
 2683 002c 07F1D402 		add	r2, r7, #212
 2684 0030 D7F80C33 		ldr	r3, [r7, #780]
 2685 0034 7649     		ldr	r1, .L153+8
 2686 0036 DB00     		lsls	r3, r3, #3
 2687 0038 1344     		add	r3, r3, r2
 2688 003a 0A46     		mov	r2, r1
 2689 003c 92E80300 		ldmia	r2, {r0, r1}
 2690 0040 83E80300 		stmia	r3, {r0, r1}
 138:.\main.c      ****         route[i] = (point){.x=-1, .y=-1};
 2691              		.loc 4 138 0 discriminator 3
 2692 0044 D7F80C33 		ldr	r3, [r7, #780]
 2693 0048 0133     		adds	r3, r3, #1
 2694 004a C7F80C33 		str	r3, [r7, #780]
 2695              	.L142:
 138:.\main.c      ****         route[i] = (point){.x=-1, .y=-1};
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 59


 2696              		.loc 4 138 0 is_stmt 0 discriminator 1
 2697 004e D7F80C33 		ldr	r3, [r7, #780]
 2698 0052 432B     		cmp	r3, #67
 2699 0054 EADD     		ble	.L143
 140:.\main.c      ****     }
 141:.\main.c      **** 
 142:.\main.c      ****     BFS(start, destination, route);
 2700              		.loc 4 142 0 is_stmt 1
 2701 0056 07F1D403 		add	r3, r7, #212
 2702 005a 0093     		str	r3, [sp]
 2703 005c 07F53F73 		add	r3, r7, #764
 2704 0060 93E80300 		ldmia	r3, {r0, r1}
 2705 0064 07F53D73 		add	r3, r7, #756
 2706 0068 0CCB     		ldmia	r3, {r2, r3}
 2707 006a FFF7FEFF 		bl	BFS
 143:.\main.c      **** 
 144:.\main.c      ****     int directions[MAX_COMMAND_LENGTH];
 145:.\main.c      ****     convertCoordinatesToCommands(route, directions);
 2708              		.loc 4 145 0
 2709 006e 07F1D402 		add	r2, r7, #212
 2710 0072 07F10C03 		add	r3, r7, #12
 2711 0076 1046     		mov	r0, r2
 2712 0078 1946     		mov	r1, r3
 2713 007a FFF7FEFF 		bl	convertCoordinatesToCommands
 146:.\main.c      ****     
 147:.\main.c      ****     // delay
 148:.\main.c      ****     CyDelay(2000);
 2714              		.loc 4 148 0
 2715 007e 4FF4FA60 		mov	r0, #2000
 2716 0082 FFF7FEFF 		bl	CyDelay
 149:.\main.c      ****     
 150:.\main.c      ****     // --------------------------------
 151:.\main.c      ****     // ----- INITIALIZATIONS ----------
 152:.\main.c      ****     // ================================
 153:.\main.c      ****     CYGlobalIntEnable;
 2717              		.loc 4 153 0
 2718              	@ 153 ".\main.c" 1
 2719 0086 62B6     		CPSIE   i
 2720              	@ 0 "" 2
 154:.\main.c      ****     
 155:.\main.c      ****     // ------------ USB SETUP ------------    
 156:.\main.c      ****     #ifdef USE_USB    
 157:.\main.c      ****         USBUART_Start(0, USBUART_5V_OPERATION);
 2721              		.loc 4 157 0
 2722              		.thumb
 2723 0088 0020     		movs	r0, #0
 2724 008a 0121     		movs	r1, #1
 2725 008c FFF7FEFF 		bl	USBUART_Start
 158:.\main.c      ****     #endif
 159:.\main.c      ****     
 160:.\main.c      ****     // PWMs
 161:.\main.c      ****     PWM_1_Start();
 2726              		.loc 4 161 0
 2727 0090 FFF7FEFF 		bl	PWM_1_Start
 162:.\main.c      ****     PWM_2_Start();
 2728              		.loc 4 162 0
 2729 0094 FFF7FEFF 		bl	PWM_2_Start
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 60


 163:.\main.c      ****     
 164:.\main.c      ****     // Timer for encoder
 165:.\main.c      ****     Timer_TS_Start();
 2730              		.loc 4 165 0
 2731 0098 FFF7FEFF 		bl	Timer_TS_Start
 166:.\main.c      ****     isr_TS_Start(); // Timer interrupts need to be started independently
 2732              		.loc 4 166 0
 2733 009c FFF7FEFF 		bl	isr_TS_Start
 167:.\main.c      ****     isr_TS_StartEx(ENCODER_ISR);
 2734              		.loc 4 167 0
 2735 00a0 5C48     		ldr	r0, .L153+12
 2736 00a2 FFF7FEFF 		bl	isr_TS_StartEx
 168:.\main.c      ****     
 169:.\main.c      ****     // Quad Decoders
 170:.\main.c      ****     QuadDec_M1_Start();
 2737              		.loc 4 170 0
 2738 00a6 FFF7FEFF 		bl	QuadDec_M1_Start
 171:.\main.c      ****     QuadDec_M2_Start();
 2739              		.loc 4 171 0
 2740 00aa FFF7FEFF 		bl	QuadDec_M2_Start
 172:.\main.c      ****     
 173:.\main.c      ****     // ADC
 174:.\main.c      ****     ADC_Start(); // Start ADC
 2741              		.loc 4 174 0
 2742 00ae FFF7FEFF 		bl	ADC_Start
 175:.\main.c      ****     ADC_IRQ_Enable(); // Enable ADC interrupts
 2743              		.loc 4 175 0
 2744 00b2 FFF7FEFF 		bl	ADC_IRQ_Enable
 176:.\main.c      ****     ADC_StartConvert(); // Start conversions
 2745              		.loc 4 176 0
 2746 00b6 FFF7FEFF 		bl	ADC_StartConvert
 177:.\main.c      ****     isr_eoc_StartEx(ADC_ISR); // link interrupt for ADC
 2747              		.loc 4 177 0
 2748 00ba 5748     		ldr	r0, .L153+16
 2749 00bc FFF7FEFF 		bl	isr_eoc_StartEx
 178:.\main.c      ****     
 179:.\main.c      ****     // To make sure wheels rotate in the same direction i.e. forward
 180:.\main.c      ****     INV2_Write(1);
 2750              		.loc 4 180 0
 2751 00c0 0120     		movs	r0, #1
 2752 00c2 FFF7FEFF 		bl	INV2_Write
 181:.\main.c      ****     
 182:.\main.c      ****     int right_wheel_count = DESIRED_COUNT;
 2753              		.loc 4 182 0
 2754 00c6 07F10803 		add	r3, r7, #8
 2755 00ca 0822     		movs	r2, #8
 2756 00cc 1A60     		str	r2, [r3]
 183:.\main.c      ****     int left_wheel_count = DESIRED_COUNT;
 2757              		.loc 4 183 0
 2758 00ce 3B1D     		adds	r3, r7, #4
 2759 00d0 0822     		movs	r2, #8
 2760 00d2 1A60     		str	r2, [r3]
 184:.\main.c      ****     
 185:.\main.c      ****     int direction_index = 0;
 2761              		.loc 4 185 0
 2762 00d4 0023     		movs	r3, #0
 2763 00d6 C7F80833 		str	r3, [r7, #776]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 61


 186:.\main.c      ****     //int directions[30] = {2, RIGHT_TURN, 2, RIGHT_TURN, 4, RIGHT_TURN,2, LEFT_TURN, 4, LEFT_TURN,
 187:.\main.c      ****     
 188:.\main.c      ****     //int directions[2] = {RIGHT_TURN, EMPTY_COMMAND};
 189:.\main.c      ****     
 190:.\main.c      ****     //sharpTurnRight(&right_wheel_count, &left_wheel_count);
 191:.\main.c      ****     
 192:.\main.c      **** //    while(1){
 193:.\main.c      **** //        if (adc_flag) {
 194:.\main.c      **** //            updateSensorValues();
 195:.\main.c      **** //            adc_flag = FALSE;
 196:.\main.c      **** //        }
 197:.\main.c      **** //    }
 198:.\main.c      ****         
 199:.\main.c      ****     
 200:.\main.c      **** //    LED_Write(1);
 201:.\main.c      **** //    
 202:.\main.c      **** //    PWM_1_WriteCompare(0);
 203:.\main.c      **** //    PWM_2_WriteCompare(0);
 204:.\main.c      **** //    
 205:.\main.c      **** //    return 0;
 206:.\main.c      ****     
 207:.\main.c      ****     
 208:.\main.c      ****     usbPutString("## Testing Algorithm ##\r\n");
 2764              		.loc 4 208 0
 2765 00da 5048     		ldr	r0, .L153+20
 2766 00dc FFF7FEFF 		bl	usbPutString
 209:.\main.c      ****     printCommandsUSB(directions);
 2767              		.loc 4 209 0
 2768 00e0 07F10C03 		add	r3, r7, #12
 2769 00e4 1846     		mov	r0, r3
 2770 00e6 FFF7FEFF 		bl	printCommandsUSB
 210:.\main.c      ****         
 211:.\main.c      ****     while (directions[direction_index] != 0) {
 2771              		.loc 4 211 0
 2772 00ea 76E0     		b	.L144
 2773              	.L151:
 212:.\main.c      ****         startWheels();
 2774              		.loc 4 212 0
 2775 00ec FFF7FEFF 		bl	startWheels
 213:.\main.c      ****         //usbPutString("Test!\n");
 214:.\main.c      ****         
 215:.\main.c      ****         if (directions[direction_index] > DISTANCE_THRESHOLD) break;
 2776              		.loc 4 215 0
 2777 00f0 07F10C03 		add	r3, r7, #12
 2778 00f4 D7F80823 		ldr	r2, [r7, #776]
 2779 00f8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2780 00fc 142B     		cmp	r3, #20
 2781 00fe 00DD     		ble	.L145
 2782 0100 73E0     		b	.L146
 2783              	.L145:
 216:.\main.c      ****         
 217:.\main.c      ****         if (directions[direction_index] == RIGHT_TURN) {
 2784              		.loc 4 217 0
 2785 0102 07F10C03 		add	r3, r7, #12
 2786 0106 D7F80823 		ldr	r2, [r7, #776]
 2787 010a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2788 010e 13F1020F 		cmn	r3, #2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 62


 2789 0112 0AD1     		bne	.L147
 218:.\main.c      ****             usbPutString("Sharp turn right\r\n");
 2790              		.loc 4 218 0
 2791 0114 4248     		ldr	r0, .L153+24
 2792 0116 FFF7FEFF 		bl	usbPutString
 219:.\main.c      ****             sharpTurnRight(&right_wheel_count, &left_wheel_count);
 2793              		.loc 4 219 0
 2794 011a 07F10802 		add	r2, r7, #8
 2795 011e 3B1D     		adds	r3, r7, #4
 2796 0120 1046     		mov	r0, r2
 2797 0122 1946     		mov	r1, r3
 2798 0124 FFF7FEFF 		bl	sharpTurnRight
 2799 0128 43E0     		b	.L148
 2800              	.L147:
 220:.\main.c      ****         } else if (directions[direction_index] == LEFT_TURN) {
 2801              		.loc 4 220 0
 2802 012a 07F10C03 		add	r3, r7, #12
 2803 012e D7F80823 		ldr	r2, [r7, #776]
 2804 0132 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2805 0136 B3F1FF3F 		cmp	r3, #-1
 2806 013a 0AD1     		bne	.L149
 221:.\main.c      ****             usbPutString("Sharp turn left\r\n");
 2807              		.loc 4 221 0
 2808 013c 3948     		ldr	r0, .L153+28
 2809 013e FFF7FEFF 		bl	usbPutString
 222:.\main.c      ****             sharpTurnLeft(&right_wheel_count, &left_wheel_count);
 2810              		.loc 4 222 0
 2811 0142 07F10802 		add	r2, r7, #8
 2812 0146 3B1D     		adds	r3, r7, #4
 2813 0148 1046     		mov	r0, r2
 2814 014a 1946     		mov	r1, r3
 2815 014c FFF7FEFF 		bl	sharpTurnLeft
 2816 0150 2FE0     		b	.L148
 2817              	.L149:
 223:.\main.c      ****         } else if (directions[direction_index] == U_TURN) {
 2818              		.loc 4 223 0
 2819 0152 07F10C03 		add	r3, r7, #12
 2820 0156 D7F80823 		ldr	r2, [r7, #776]
 2821 015a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2822 015e 13F1030F 		cmn	r3, #3
 2823 0162 0AD1     		bne	.L150
 224:.\main.c      ****             usbPutString("U turn\r\n");
 2824              		.loc 4 224 0
 2825 0164 3048     		ldr	r0, .L153+32
 2826 0166 FFF7FEFF 		bl	usbPutString
 225:.\main.c      ****             uTurn(&right_wheel_count, &left_wheel_count);
 2827              		.loc 4 225 0
 2828 016a 07F10802 		add	r2, r7, #8
 2829 016e 3B1D     		adds	r3, r7, #4
 2830 0170 1046     		mov	r0, r2
 2831 0172 1946     		mov	r1, r3
 2832 0174 FFF7FEFF 		bl	uTurn
 2833 0178 1BE0     		b	.L148
 2834              	.L150:
 226:.\main.c      ****         } else if (directions[direction_index] <= DISTANCE_THRESHOLD){
 2835              		.loc 4 226 0
 2836 017a 07F10C03 		add	r3, r7, #12
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 63


 2837 017e D7F80823 		ldr	r2, [r7, #776]
 2838 0182 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2839 0186 142B     		cmp	r3, #20
 2840 0188 13DC     		bgt	.L148
 2841              	.LBB5:
 227:.\main.c      ****             usbPutString("Straight\r\n");
 2842              		.loc 4 227 0
 2843 018a 2848     		ldr	r0, .L153+36
 2844 018c FFF7FEFF 		bl	usbPutString
 228:.\main.c      ****             // Change this for int array
 229:.\main.c      ****             //int num_coords = directions[direction_index] - '0';
 230:.\main.c      ****             int num_coords = directions[direction_index];
 2845              		.loc 4 230 0
 2846 0190 07F10C03 		add	r3, r7, #12
 2847 0194 D7F80823 		ldr	r2, [r7, #776]
 2848 0198 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2849 019c C7F80433 		str	r3, [r7, #772]
 231:.\main.c      ****             goStraightForBlock(num_coords, &right_wheel_count, &left_wheel_count);
 2850              		.loc 4 231 0
 2851 01a0 07F10802 		add	r2, r7, #8
 2852 01a4 3B1D     		adds	r3, r7, #4
 2853 01a6 D7F80403 		ldr	r0, [r7, #772]
 2854 01aa 1146     		mov	r1, r2
 2855 01ac 1A46     		mov	r2, r3
 2856 01ae FFF7FEFF 		bl	goStraightForBlock
 2857              	.L148:
 2858              	.LBE5:
 232:.\main.c      ****         }
 233:.\main.c      ****         stopWheels();
 2859              		.loc 4 233 0
 2860 01b2 FFF7FEFF 		bl	stopWheels
 234:.\main.c      ****         printSingleCommandUSB(directions[direction_index]);
 2861              		.loc 4 234 0
 2862 01b6 07F10C03 		add	r3, r7, #12
 2863 01ba D7F80823 		ldr	r2, [r7, #776]
 2864 01be 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2865 01c2 1846     		mov	r0, r3
 2866 01c4 FFF7FEFF 		bl	printSingleCommandUSB
 235:.\main.c      ****         CyDelay(1000);
 2867              		.loc 4 235 0
 2868 01c8 4FF47A70 		mov	r0, #1000
 2869 01cc FFF7FEFF 		bl	CyDelay
 236:.\main.c      ****         
 237:.\main.c      **** //        int num_coords;
 238:.\main.c      **** //            
 239:.\main.c      **** //        switch(directions[direction_index]) {
 240:.\main.c      **** //            case 'R':
 241:.\main.c      **** //                sharpTurnRight(&right_wheel_count, &left_wheel_count);
 242:.\main.c      **** //                usbPutString("Sharp turn right\r\n");
 243:.\main.c      **** //                break;
 244:.\main.c      **** //            case 'L':
 245:.\main.c      **** //                sharpTurnLeft(&right_wheel_count, &left_wheel_count);
 246:.\main.c      **** //                usbPutString("Sharp turn left\r\n");
 247:.\main.c      **** //                break;
 248:.\main.c      **** //            case 'U':
 249:.\main.c      **** //                uTurn(&right_wheel_count, &left_wheel_count);
 250:.\main.c      **** //                usbPutString("U turn\r\n");
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 64


 251:.\main.c      **** //                break;
 252:.\main.c      **** //            default: 
 253:.\main.c      **** //                usbPutString("Straight\r\n");
 254:.\main.c      **** //                num_coords = directions[direction_index] - '0';
 255:.\main.c      **** //                goStraightForBlock(num_coords, &right_wheel_count, &left_wheel_count);
 256:.\main.c      **** //                break;
 257:.\main.c      **** //        }
 258:.\main.c      ****         direction_index++;
 2870              		.loc 4 258 0
 2871 01d0 D7F80833 		ldr	r3, [r7, #776]
 2872 01d4 0133     		adds	r3, r3, #1
 2873 01d6 C7F80833 		str	r3, [r7, #776]
 2874              	.L144:
 211:.\main.c      ****         startWheels();
 2875              		.loc 4 211 0
 2876 01da 07F10C03 		add	r3, r7, #12
 2877 01de D7F80823 		ldr	r2, [r7, #776]
 2878 01e2 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2879 01e6 002B     		cmp	r3, #0
 2880 01e8 80D1     		bne	.L151
 2881              	.L146:
 259:.\main.c      ****     }
 260:.\main.c      ****     
 261:.\main.c      ****     LED_Write(1);
 2882              		.loc 4 261 0
 2883 01ea 0120     		movs	r0, #1
 2884 01ec FFF7FEFF 		bl	LED_Write
 262:.\main.c      ****     
 263:.\main.c      ****     PWM_1_WriteCompare(0);
 2885              		.loc 4 263 0
 2886 01f0 0020     		movs	r0, #0
 2887 01f2 FFF7FEFF 		bl	PWM_1_WriteCompare
 264:.\main.c      ****     PWM_2_WriteCompare(0);
 2888              		.loc 4 264 0
 2889 01f6 0020     		movs	r0, #0
 2890 01f8 FFF7FEFF 		bl	PWM_2_WriteCompare
 265:.\main.c      ****     
 266:.\main.c      ****     return 0;
 2891              		.loc 4 266 0
 2892 01fc 0023     		movs	r3, #0
 267:.\main.c      **** }
 2893              		.loc 4 267 0
 2894 01fe 1846     		mov	r0, r3
 2895 0200 07F54477 		add	r7, r7, #784
 2896              		.cfi_def_cfa_offset 8
 2897 0204 BD46     		mov	sp, r7
 2898              		.cfi_def_cfa_register 13
 2899              		@ sp needed
 2900 0206 80BD     		pop	{r7, pc}
 2901              	.L154:
 2902              		.align	2
 2903              	.L153:
 2904 0208 1C010000 		.word	.LC0
 2905 020c 24010000 		.word	.LC1
 2906 0210 2C010000 		.word	.LC2
 2907 0214 00000000 		.word	ENCODER_ISR
 2908 0218 00000000 		.word	ADC_ISR
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 65


 2909 021c C0000000 		.word	.LC15
 2910 0220 DC000000 		.word	.LC16
 2911 0224 F0000000 		.word	.LC17
 2912 0228 04010000 		.word	.LC18
 2913 022c 10010000 		.word	.LC19
 2914              		.cfi_endproc
 2915              	.LFE83:
 2916              		.size	main, .-main
 2917              		.section	.text.getValForChannel,"ax",%progbits
 2918              		.align	2
 2919              		.global	getValForChannel
 2920              		.thumb
 2921              		.thumb_func
 2922              		.type	getValForChannel, %function
 2923              	getValForChannel:
 2924              	.LFB84:
 268:.\main.c      **** 
 269:.\main.c      **** // --------------------------------------------- ADC ------------------------------------------
 270:.\main.c      **** // Simple ADC conversion
 271:.\main.c      **** int32 getValForChannel(int16 n){
 2925              		.loc 4 271 0
 2926              		.cfi_startproc
 2927              		@ args = 0, pretend = 0, frame = 8
 2928              		@ frame_needed = 1, uses_anonymous_args = 0
 2929 0000 80B5     		push	{r7, lr}
 2930              		.cfi_def_cfa_offset 8
 2931              		.cfi_offset 7, -8
 2932              		.cfi_offset 14, -4
 2933 0002 82B0     		sub	sp, sp, #8
 2934              		.cfi_def_cfa_offset 16
 2935 0004 00AF     		add	r7, sp, #0
 2936              		.cfi_def_cfa_register 7
 2937 0006 0346     		mov	r3, r0
 2938 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 272:.\main.c      ****     return ADC_CountsTo_mVolts(ADC_GetResult16(n));
 2939              		.loc 4 272 0
 2940 000a FB88     		ldrh	r3, [r7, #6]
 2941 000c 1846     		mov	r0, r3
 2942 000e FFF7FEFF 		bl	ADC_GetResult16
 2943 0012 0346     		mov	r3, r0
 2944 0014 1846     		mov	r0, r3
 2945 0016 FFF7FEFF 		bl	ADC_CountsTo_mVolts
 2946 001a 0346     		mov	r3, r0
 273:.\main.c      **** }
 2947              		.loc 4 273 0
 2948 001c 1846     		mov	r0, r3
 2949 001e 0837     		adds	r7, r7, #8
 2950              		.cfi_def_cfa_offset 8
 2951 0020 BD46     		mov	sp, r7
 2952              		.cfi_def_cfa_register 13
 2953              		@ sp needed
 2954 0022 80BD     		pop	{r7, pc}
 2955              		.cfi_endproc
 2956              	.LFE84:
 2957              		.size	getValForChannel, .-getValForChannel
 2958              		.section	.rodata
 2959              		.align	2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 66


 2960              	.LC20:
 2961 0134 2000     		.ascii	" \000"
 2962 0136 0000     		.align	2
 2963              	.LC21:
 2964 0138 0D0A00   		.ascii	"\015\012\000"
 2965              		.section	.text.updateSensorValues,"ax",%progbits
 2966              		.align	2
 2967              		.global	updateSensorValues
 2968              		.thumb
 2969              		.thumb_func
 2970              		.type	updateSensorValues, %function
 2971              	updateSensorValues:
 2972              	.LFB85:
 274:.\main.c      **** 
 275:.\main.c      **** void updateSensorValues(){
 2973              		.loc 4 275 0
 2974              		.cfi_startproc
 2975              		@ args = 0, pretend = 0, frame = 40
 2976              		@ frame_needed = 1, uses_anonymous_args = 0
 2977 0000 80B5     		push	{r7, lr}
 2978              		.cfi_def_cfa_offset 8
 2979              		.cfi_offset 7, -8
 2980              		.cfi_offset 14, -4
 2981 0002 8AB0     		sub	sp, sp, #40
 2982              		.cfi_def_cfa_offset 48
 2983 0004 00AF     		add	r7, sp, #0
 2984              		.cfi_def_cfa_register 7
 276:.\main.c      ****     // update each sensor with the maximum reading so far
 277:.\main.c      ****     int i;
 278:.\main.c      ****     for (i = 0; i < NUM_SENSORS; i++){
 2985              		.loc 4 278 0
 2986 0006 0023     		movs	r3, #0
 2987 0008 7B62     		str	r3, [r7, #36]
 2988 000a 15E0     		b	.L158
 2989              	.L160:
 2990              	.LBB6:
 279:.\main.c      ****         int reading = getValForChannel(i);
 2991              		.loc 4 279 0
 2992 000c 7B6A     		ldr	r3, [r7, #36]
 2993 000e 9BB2     		uxth	r3, r3
 2994 0010 1BB2     		sxth	r3, r3
 2995 0012 1846     		mov	r0, r3
 2996 0014 FFF7FEFF 		bl	getValForChannel
 2997 0018 3862     		str	r0, [r7, #32]
 280:.\main.c      ****         if (reading > adc_readings[i]) {
 2998              		.loc 4 280 0
 2999 001a 2D4A     		ldr	r2, .L165
 3000 001c 7B6A     		ldr	r3, [r7, #36]
 3001 001e 52F82320 		ldr	r2, [r2, r3, lsl #2]
 3002 0022 3B6A     		ldr	r3, [r7, #32]
 3003 0024 9A42     		cmp	r2, r3
 3004 0026 04DA     		bge	.L159
 281:.\main.c      ****             adc_readings[i] = reading;
 3005              		.loc 4 281 0
 3006 0028 2949     		ldr	r1, .L165
 3007 002a 7B6A     		ldr	r3, [r7, #36]
 3008 002c 3A6A     		ldr	r2, [r7, #32]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 67


 3009 002e 41F82320 		str	r2, [r1, r3, lsl #2]
 3010              	.L159:
 3011              	.LBE6:
 278:.\main.c      ****         int reading = getValForChannel(i);
 3012              		.loc 4 278 0 discriminator 2
 3013 0032 7B6A     		ldr	r3, [r7, #36]
 3014 0034 0133     		adds	r3, r3, #1
 3015 0036 7B62     		str	r3, [r7, #36]
 3016              	.L158:
 278:.\main.c      ****         int reading = getValForChannel(i);
 3017              		.loc 4 278 0 is_stmt 0 discriminator 1
 3018 0038 7B6A     		ldr	r3, [r7, #36]
 3019 003a 052B     		cmp	r3, #5
 3020 003c E6DD     		ble	.L160
 282:.\main.c      ****         }
 283:.\main.c      ****     }
 284:.\main.c      **** 
 285:.\main.c      ****     char buff[32];
 286:.\main.c      ****     
 287:.\main.c      ****     sample_count++;
 3021              		.loc 4 287 0 is_stmt 1
 3022 003e 254B     		ldr	r3, .L165+4
 3023 0040 1B68     		ldr	r3, [r3]
 3024 0042 0133     		adds	r3, r3, #1
 3025 0044 234A     		ldr	r2, .L165+4
 3026 0046 1360     		str	r3, [r2]
 288:.\main.c      ****     if (sample_count == ADC_READINGS_SIZE){
 3027              		.loc 4 288 0
 3028 0048 224B     		ldr	r3, .L165+4
 3029 004a 1B68     		ldr	r3, [r3]
 3030 004c C82B     		cmp	r3, #200
 3031 004e 39D1     		bne	.L161
 289:.\main.c      ****         // Black = 1 (high voltage level)
 290:.\main.c      ****         for (i = 0; i < NUM_SENSORS; i++){
 3032              		.loc 4 290 0
 3033 0050 0023     		movs	r3, #0
 3034 0052 7B62     		str	r3, [r7, #36]
 3035 0054 29E0     		b	.L162
 3036              	.L163:
 291:.\main.c      ****             itoa(adc_readings[i], buff, 10);
 3037              		.loc 4 291 0 discriminator 3
 3038 0056 1E4A     		ldr	r2, .L165
 3039 0058 7B6A     		ldr	r3, [r7, #36]
 3040 005a 52F82320 		ldr	r2, [r2, r3, lsl #2]
 3041 005e 3B46     		mov	r3, r7
 3042 0060 1046     		mov	r0, r2
 3043 0062 1946     		mov	r1, r3
 3044 0064 0A22     		movs	r2, #10
 3045 0066 FFF7FEFF 		bl	itoa
 292:.\main.c      ****             usbPutString(buff);
 3046              		.loc 4 292 0 discriminator 3
 3047 006a 3B46     		mov	r3, r7
 3048 006c 1846     		mov	r0, r3
 3049 006e FFF7FEFF 		bl	usbPutString
 293:.\main.c      ****             usbPutString(" ");
 3050              		.loc 4 293 0 discriminator 3
 3051 0072 1948     		ldr	r0, .L165+8
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 68


 3052 0074 FFF7FEFF 		bl	usbPutString
 294:.\main.c      ****             sensor_readings[i] = !!(adc_readings[i] < LIGHT_LEVEL);
 3053              		.loc 4 294 0 discriminator 3
 3054 0078 154A     		ldr	r2, .L165
 3055 007a 7B6A     		ldr	r3, [r7, #36]
 3056 007c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3057 0080 40F22B12 		movw	r2, #299
 3058 0084 9342     		cmp	r3, r2
 3059 0086 D4BF     		ite	le
 3060 0088 0123     		movle	r3, #1
 3061 008a 0023     		movgt	r3, #0
 3062 008c DBB2     		uxtb	r3, r3
 3063 008e D9B2     		uxtb	r1, r3
 3064 0090 124A     		ldr	r2, .L165+12
 3065 0092 7B6A     		ldr	r3, [r7, #36]
 3066 0094 1344     		add	r3, r3, r2
 3067 0096 0A46     		mov	r2, r1
 3068 0098 1A70     		strb	r2, [r3]
 295:.\main.c      ****             adc_readings[i] = 0; // Reset max value from samples
 3069              		.loc 4 295 0 discriminator 3
 3070 009a 0D4A     		ldr	r2, .L165
 3071 009c 7B6A     		ldr	r3, [r7, #36]
 3072 009e 0021     		movs	r1, #0
 3073 00a0 42F82310 		str	r1, [r2, r3, lsl #2]
 290:.\main.c      ****             itoa(adc_readings[i], buff, 10);
 3074              		.loc 4 290 0 discriminator 3
 3075 00a4 7B6A     		ldr	r3, [r7, #36]
 3076 00a6 0133     		adds	r3, r3, #1
 3077 00a8 7B62     		str	r3, [r7, #36]
 3078              	.L162:
 290:.\main.c      ****             itoa(adc_readings[i], buff, 10);
 3079              		.loc 4 290 0 is_stmt 0 discriminator 1
 3080 00aa 7B6A     		ldr	r3, [r7, #36]
 3081 00ac 052B     		cmp	r3, #5
 3082 00ae D2DD     		ble	.L163
 296:.\main.c      ****         }
 297:.\main.c      ****         
 298:.\main.c      ****         usbPutString("\r\n");
 3083              		.loc 4 298 0 is_stmt 1
 3084 00b0 0B48     		ldr	r0, .L165+16
 3085 00b2 FFF7FEFF 		bl	usbPutString
 299:.\main.c      ****         
 300:.\main.c      ****         ADC_DEBUG_Write(1);
 3086              		.loc 4 300 0
 3087 00b6 0120     		movs	r0, #1
 3088 00b8 FFF7FEFF 		bl	ADC_DEBUG_Write
 301:.\main.c      ****         sample_count = 0;
 3089              		.loc 4 301 0
 3090 00bc 054B     		ldr	r3, .L165+4
 3091 00be 0022     		movs	r2, #0
 3092 00c0 1A60     		str	r2, [r3]
 3093 00c2 02E0     		b	.L157
 3094              	.L161:
 302:.\main.c      ****     }
 303:.\main.c      ****     else ADC_DEBUG_Write(0);
 3095              		.loc 4 303 0
 3096 00c4 0020     		movs	r0, #0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 69


 3097 00c6 FFF7FEFF 		bl	ADC_DEBUG_Write
 3098              	.L157:
 304:.\main.c      ****     
 305:.\main.c      **** }
 3099              		.loc 4 305 0
 3100 00ca 2837     		adds	r7, r7, #40
 3101              		.cfi_def_cfa_offset 8
 3102 00cc BD46     		mov	sp, r7
 3103              		.cfi_def_cfa_register 13
 3104              		@ sp needed
 3105 00ce 80BD     		pop	{r7, pc}
 3106              	.L166:
 3107              		.align	2
 3108              	.L165:
 3109 00d0 00000000 		.word	adc_readings
 3110 00d4 00000000 		.word	sample_count
 3111 00d8 34010000 		.word	.LC20
 3112 00dc 00000000 		.word	sensor_readings
 3113 00e0 38010000 		.word	.LC21
 3114              		.cfi_endproc
 3115              	.LFE85:
 3116              		.size	updateSensorValues, .-updateSensorValues
 3117              		.global	__aeabi_fadd
 3118              		.section	.rodata
 3119 013b 00       		.align	2
 3120              	.LC22:
 3121 013c 202D2074 		.ascii	" - turn right\015\012\000"
 3121      75726E20 
 3121      72696768 
 3121      740D0A00 
 3122              		.align	2
 3123              	.LC23:
 3124 014c 202D2074 		.ascii	" - turn left\015\012\000"
 3124      75726E20 
 3124      6C656674 
 3124      0D0A00
 3125              		.global	__aeabi_i2f
 3126              		.global	__aeabi_fcmpgt
 3127              		.section	.text.goStraightForBlock,"ax",%progbits
 3128              		.align	2
 3129              		.global	goStraightForBlock
 3130              		.thumb
 3131              		.thumb_func
 3132              		.type	goStraightForBlock, %function
 3133              	goStraightForBlock:
 3134              	.LFB86:
 306:.\main.c      **** 
 307:.\main.c      **** // --------------------------------------------- STRAIGHT -----------------------------------------
 308:.\main.c      **** void goStraightForBlock(int desired_blocks, int *right_wheel_count, int *left_wheel_count) {
 3135              		.loc 4 308 0
 3136              		.cfi_startproc
 3137              		@ args = 0, pretend = 0, frame = 24
 3138              		@ frame_needed = 1, uses_anonymous_args = 0
 3139 0000 80B5     		push	{r7, lr}
 3140              		.cfi_def_cfa_offset 8
 3141              		.cfi_offset 7, -8
 3142              		.cfi_offset 14, -4
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 70


 3143 0002 86B0     		sub	sp, sp, #24
 3144              		.cfi_def_cfa_offset 32
 3145 0004 00AF     		add	r7, sp, #0
 3146              		.cfi_def_cfa_register 7
 3147 0006 F860     		str	r0, [r7, #12]
 3148 0008 B960     		str	r1, [r7, #8]
 3149 000a 7A60     		str	r2, [r7, #4]
 309:.\main.c      **** //    usbPutString("\r\n");
 310:.\main.c      **** //    usbPutString(" - desired  ");
 311:.\main.c      ****     
 312:.\main.c      ****     *right_wheel_count = DESIRED_COUNT;//TODO: check if needed
 3150              		.loc 4 312 0
 3151 000c BB68     		ldr	r3, [r7, #8]
 3152 000e 0822     		movs	r2, #8
 3153 0010 1A60     		str	r2, [r3]
 313:.\main.c      ****     *left_wheel_count = DESIRED_COUNT;
 3154              		.loc 4 313 0
 3155 0012 7B68     		ldr	r3, [r7, #4]
 3156 0014 0822     		movs	r2, #8
 3157 0016 1A60     		str	r2, [r3]
 314:.\main.c      ****     
 315:.\main.c      ****     float distance = 0;
 3158              		.loc 4 315 0
 3159 0018 4FF00003 		mov	r3, #0
 3160 001c 7B61     		str	r3, [r7, #20]	@ float
 316:.\main.c      ****     int desired_distance = GRID_SIZE * desired_blocks - HALF_ROBOT_LENGTH;
 3161              		.loc 4 316 0
 3162 001e FA68     		ldr	r2, [r7, #12]
 3163 0020 1346     		mov	r3, r2
 3164 0022 5B00     		lsls	r3, r3, #1
 3165 0024 1344     		add	r3, r3, r2
 3166 0026 9B00     		lsls	r3, r3, #2
 3167 0028 083B     		subs	r3, r3, #8
 3168 002a 3B61     		str	r3, [r7, #16]
 317:.\main.c      ****     
 318:.\main.c      **** //    char buf[32];
 319:.\main.c      **** //    itoa(desired_distance, buf, 10);
 320:.\main.c      **** //    usbPutString(buf);
 321:.\main.c      **** //    usbPutString("\r\n - distance ");
 322:.\main.c      **** //    itoa(distance, buf, 10);
 323:.\main.c      **** //    usbPutString(buf);
 324:.\main.c      **** //    usbPutString("\r\n");
 325:.\main.c      **** //    usbPutString("\r\n");
 326:.\main.c      ****     
 327:.\main.c      ****     while (distance < desired_distance) {
 3169              		.loc 4 327 0
 3170 002c A3E0     		b	.L168
 3171              	.L179:
 328:.\main.c      ****         if (adc_flag) {
 3172              		.loc 4 328 0
 3173 002e 594B     		ldr	r3, .L180
 3174 0030 1B68     		ldr	r3, [r3]
 3175 0032 002B     		cmp	r3, #0
 3176 0034 04D0     		beq	.L169
 329:.\main.c      ****             updateSensorValues();
 3177              		.loc 4 329 0
 3178 0036 FFF7FEFF 		bl	updateSensorValues
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 71


 330:.\main.c      ****             adc_flag = FALSE;
 3179              		.loc 4 330 0
 3180 003a 564B     		ldr	r3, .L180
 3181 003c 0022     		movs	r2, #0
 3182 003e 1A60     		str	r2, [r3]
 3183              	.L169:
 331:.\main.c      ****         }
 332:.\main.c      ****         
 333:.\main.c      ****          // New count values from encoder are ready
 334:.\main.c      ****         if (timer_flag){
 3184              		.loc 4 334 0
 3185 0040 554B     		ldr	r3, .L180+4
 3186 0042 1B68     		ldr	r3, [r3]
 3187 0044 002B     		cmp	r3, #0
 3188 0046 35D0     		beq	.L170
 335:.\main.c      ****             isr_TS_Disable();
 3189              		.loc 4 335 0
 3190 0048 FFF7FEFF 		bl	isr_TS_Disable
 336:.\main.c      ****             
 337:.\main.c      ****             // update distance
 338:.\main.c      ****             distance += getDistance(prevCountM1, prevCountM2);
 3191              		.loc 4 338 0
 3192 004c 534B     		ldr	r3, .L180+8
 3193 004e 1A68     		ldr	r2, [r3]
 3194 0050 534B     		ldr	r3, .L180+12
 3195 0052 1B68     		ldr	r3, [r3]
 3196 0054 1046     		mov	r0, r2
 3197 0056 1946     		mov	r1, r3
 3198 0058 FFF7FEFF 		bl	getDistance
 3199 005c 0346     		mov	r3, r0
 3200 005e 7869     		ldr	r0, [r7, #20]	@ float
 3201 0060 1946     		mov	r1, r3
 3202 0062 FFF7FEFF 		bl	__aeabi_fadd
 3203 0066 0346     		mov	r3, r0
 3204 0068 7B61     		str	r3, [r7, #20]	@ float
 339:.\main.c      ****             
 340:.\main.c      **** //            usbPutString("\r\n - desired - ");
 341:.\main.c      **** //            itoa(desired_distance, buf, 10);
 342:.\main.c      **** //            usbPutString(buf);
 343:.\main.c      **** //            usbPutString(" - distance - ");
 344:.\main.c      **** //            itoa(distance, buf, 10);
 345:.\main.c      **** //            usbPutString(buf);
 346:.\main.c      ****             
 347:.\main.c      ****             
 348:.\main.c      ****             // Correct speed
 349:.\main.c      ****             correctSpeed(prevCountM1,countM1,*left_wheel_count,TRUE);
 3205              		.loc 4 349 0
 3206 006a 4C4B     		ldr	r3, .L180+8
 3207 006c 1968     		ldr	r1, [r3]
 3208 006e 4D4B     		ldr	r3, .L180+16
 3209 0070 1A68     		ldr	r2, [r3]
 3210 0072 7B68     		ldr	r3, [r7, #4]
 3211 0074 1B68     		ldr	r3, [r3]
 3212 0076 0846     		mov	r0, r1
 3213 0078 1146     		mov	r1, r2
 3214 007a 1A46     		mov	r2, r3
 3215 007c 0123     		movs	r3, #1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 72


 3216 007e FFF7FEFF 		bl	correctSpeed
 350:.\main.c      ****             correctSpeed(prevCountM2,countM2,*right_wheel_count,FALSE);
 3217              		.loc 4 350 0
 3218 0082 474B     		ldr	r3, .L180+12
 3219 0084 1968     		ldr	r1, [r3]
 3220 0086 484B     		ldr	r3, .L180+20
 3221 0088 1A68     		ldr	r2, [r3]
 3222 008a BB68     		ldr	r3, [r7, #8]
 3223 008c 1B68     		ldr	r3, [r3]
 3224 008e 0846     		mov	r0, r1
 3225 0090 1146     		mov	r1, r2
 3226 0092 1A46     		mov	r2, r3
 3227 0094 0023     		movs	r3, #0
 3228 0096 FFF7FEFF 		bl	correctSpeed
 351:.\main.c      ****             
 352:.\main.c      ****             // Update previous values
 353:.\main.c      ****             prevCountM1 = countM1;
 3229              		.loc 4 353 0
 3230 009a 424B     		ldr	r3, .L180+16
 3231 009c 1B68     		ldr	r3, [r3]
 3232 009e 3F4A     		ldr	r2, .L180+8
 3233 00a0 1360     		str	r3, [r2]
 354:.\main.c      ****             prevCountM2 = countM2;
 3234              		.loc 4 354 0
 3235 00a2 414B     		ldr	r3, .L180+20
 3236 00a4 1B68     		ldr	r3, [r3]
 3237 00a6 3E4A     		ldr	r2, .L180+12
 3238 00a8 1360     		str	r3, [r2]
 355:.\main.c      ****             
 356:.\main.c      ****             // Reset flag
 357:.\main.c      ****             timer_flag = FALSE;
 3239              		.loc 4 357 0
 3240 00aa 3B4B     		ldr	r3, .L180+4
 3241 00ac 0022     		movs	r2, #0
 3242 00ae 1A60     		str	r2, [r3]
 358:.\main.c      ****             isr_TS_Enable();
 3243              		.loc 4 358 0
 3244 00b0 FFF7FEFF 		bl	isr_TS_Enable
 3245              	.L170:
 359:.\main.c      ****         }
 360:.\main.c      ****         
 361:.\main.c      ****         // follow a line algorithm
 362:.\main.c      ****         if (sensor_readings[TOP_MID_SENSOR]) { // on line
 3246              		.loc 4 362 0
 3247 00b4 3D4B     		ldr	r3, .L180+24
 3248 00b6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3249 00b8 002B     		cmp	r3, #0
 3250 00ba 25D0     		beq	.L171
 363:.\main.c      ****             if (!sensor_readings[TOP_LEFT_SENSOR] && sensor_readings[TOP_RIGHT_SENSOR]) {// Deviate
 3251              		.loc 4 363 0
 3252 00bc 3B4B     		ldr	r3, .L180+24
 3253 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3254 00c0 002B     		cmp	r3, #0
 3255 00c2 0ED1     		bne	.L172
 3256              		.loc 4 363 0 is_stmt 0 discriminator 1
 3257 00c4 394B     		ldr	r3, .L180+24
 3258 00c6 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 73


 3259 00c8 002B     		cmp	r3, #0
 3260 00ca 0AD0     		beq	.L172
 364:.\main.c      ****                 *right_wheel_count -= ADJUST_SPEED_SMALL;
 3261              		.loc 4 364 0 is_stmt 1
 3262 00cc BB68     		ldr	r3, [r7, #8]
 3263 00ce 1B68     		ldr	r3, [r3]
 3264 00d0 5A1E     		subs	r2, r3, #1
 3265 00d2 BB68     		ldr	r3, [r7, #8]
 3266 00d4 1A60     		str	r2, [r3]
 365:.\main.c      ****                 *left_wheel_count += ADJUST_SPEED_SMALL;
 3267              		.loc 4 365 0
 3268 00d6 7B68     		ldr	r3, [r7, #4]
 3269 00d8 1B68     		ldr	r3, [r3]
 3270 00da 5A1C     		adds	r2, r3, #1
 3271 00dc 7B68     		ldr	r3, [r7, #4]
 3272 00de 1A60     		str	r2, [r3]
 3273 00e0 2DE0     		b	.L174
 3274              	.L172:
 366:.\main.c      ****             } else if (sensor_readings[TOP_LEFT_SENSOR] && !sensor_readings[TOP_RIGHT_SENSOR]) { //
 3275              		.loc 4 366 0
 3276 00e2 324B     		ldr	r3, .L180+24
 3277 00e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3278 00e6 002B     		cmp	r3, #0
 3279 00e8 29D0     		beq	.L174
 3280              		.loc 4 366 0 is_stmt 0 discriminator 1
 3281 00ea 304B     		ldr	r3, .L180+24
 3282 00ec 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 3283 00ee 002B     		cmp	r3, #0
 3284 00f0 25D1     		bne	.L174
 367:.\main.c      ****                 *right_wheel_count += ADJUST_SPEED_SMALL;
 3285              		.loc 4 367 0 is_stmt 1
 3286 00f2 BB68     		ldr	r3, [r7, #8]
 3287 00f4 1B68     		ldr	r3, [r3]
 3288 00f6 5A1C     		adds	r2, r3, #1
 3289 00f8 BB68     		ldr	r3, [r7, #8]
 3290 00fa 1A60     		str	r2, [r3]
 368:.\main.c      ****                 *left_wheel_count -= ADJUST_SPEED_SMALL;
 3291              		.loc 4 368 0
 3292 00fc 7B68     		ldr	r3, [r7, #4]
 3293 00fe 1B68     		ldr	r3, [r3]
 3294 0100 5A1E     		subs	r2, r3, #1
 3295 0102 7B68     		ldr	r3, [r7, #4]
 3296 0104 1A60     		str	r2, [r3]
 3297 0106 1AE0     		b	.L174
 3298              	.L171:
 369:.\main.c      ****             }
 370:.\main.c      ****         } else { // moved off
 371:.\main.c      ****             if (!sensor_readings[TOP_LEFT_SENSOR] && sensor_readings[TOP_RIGHT_SENSOR]) {// Deviate
 3299              		.loc 4 371 0
 3300 0108 284B     		ldr	r3, .L180+24
 3301 010a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3302 010c 002B     		cmp	r3, #0
 3303 010e 09D1     		bne	.L175
 3304              		.loc 4 371 0 is_stmt 0 discriminator 1
 3305 0110 264B     		ldr	r3, .L180+24
 3306 0112 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 3307 0114 002B     		cmp	r3, #0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 74


 3308 0116 05D0     		beq	.L175
 372:.\main.c      ****                 usbPutString(" - turn right\r\n");
 3309              		.loc 4 372 0 is_stmt 1
 3310 0118 2548     		ldr	r0, .L180+28
 3311 011a FFF7FEFF 		bl	usbPutString
 373:.\main.c      ****                 turnRight();
 3312              		.loc 4 373 0
 3313 011e FFF7FEFF 		bl	turnRight
 3314 0122 0CE0     		b	.L174
 3315              	.L175:
 374:.\main.c      ****             } else if (sensor_readings[TOP_LEFT_SENSOR] && !sensor_readings[TOP_RIGHT_SENSOR]) {// 
 3316              		.loc 4 374 0
 3317 0124 214B     		ldr	r3, .L180+24
 3318 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3319 0128 002B     		cmp	r3, #0
 3320 012a 08D0     		beq	.L174
 3321              		.loc 4 374 0 is_stmt 0 discriminator 1
 3322 012c 1F4B     		ldr	r3, .L180+24
 3323 012e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 3324 0130 002B     		cmp	r3, #0
 3325 0132 04D1     		bne	.L174
 375:.\main.c      ****                 usbPutString(" - turn left\r\n");
 3326              		.loc 4 375 0 is_stmt 1
 3327 0134 1F48     		ldr	r0, .L180+32
 3328 0136 FFF7FEFF 		bl	usbPutString
 376:.\main.c      **** 				turnLeft();
 3329              		.loc 4 376 0
 3330 013a FFF7FEFF 		bl	turnLeft
 3331              	.L174:
 377:.\main.c      ****             }
 378:.\main.c      ****         }
 379:.\main.c      ****         
 380:.\main.c      ****         if (*right_wheel_count > MAX_SPEED) {
 3332              		.loc 4 380 0
 3333 013e BB68     		ldr	r3, [r7, #8]
 3334 0140 1B68     		ldr	r3, [r3]
 3335 0142 092B     		cmp	r3, #9
 3336 0144 02DD     		ble	.L176
 381:.\main.c      ****             *right_wheel_count = MAX_SPEED;
 3337              		.loc 4 381 0
 3338 0146 BB68     		ldr	r3, [r7, #8]
 3339 0148 0922     		movs	r2, #9
 3340 014a 1A60     		str	r2, [r3]
 3341              	.L176:
 382:.\main.c      ****         }
 383:.\main.c      ****         if (*left_wheel_count > MAX_SPEED) {
 3342              		.loc 4 383 0
 3343 014c 7B68     		ldr	r3, [r7, #4]
 3344 014e 1B68     		ldr	r3, [r3]
 3345 0150 092B     		cmp	r3, #9
 3346 0152 02DD     		ble	.L177
 384:.\main.c      ****             *left_wheel_count = MAX_SPEED;
 3347              		.loc 4 384 0
 3348 0154 7B68     		ldr	r3, [r7, #4]
 3349 0156 0922     		movs	r2, #9
 3350 0158 1A60     		str	r2, [r3]
 3351              	.L177:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 75


 385:.\main.c      ****         }
 386:.\main.c      ****         if (*right_wheel_count < MIN_SPEED) {
 3352              		.loc 4 386 0
 3353 015a BB68     		ldr	r3, [r7, #8]
 3354 015c 1B68     		ldr	r3, [r3]
 3355 015e 032B     		cmp	r3, #3
 3356 0160 02DC     		bgt	.L178
 387:.\main.c      ****             *right_wheel_count = MIN_SPEED;
 3357              		.loc 4 387 0
 3358 0162 BB68     		ldr	r3, [r7, #8]
 3359 0164 0422     		movs	r2, #4
 3360 0166 1A60     		str	r2, [r3]
 3361              	.L178:
 388:.\main.c      ****         }
 389:.\main.c      ****         if (*left_wheel_count < MIN_SPEED) {
 3362              		.loc 4 389 0
 3363 0168 7B68     		ldr	r3, [r7, #4]
 3364 016a 1B68     		ldr	r3, [r3]
 3365 016c 032B     		cmp	r3, #3
 3366 016e 02DC     		bgt	.L168
 390:.\main.c      ****             *left_wheel_count = MIN_SPEED;
 3367              		.loc 4 390 0
 3368 0170 7B68     		ldr	r3, [r7, #4]
 3369 0172 0422     		movs	r2, #4
 3370 0174 1A60     		str	r2, [r3]
 3371              	.L168:
 327:.\main.c      ****         if (adc_flag) {
 3372              		.loc 4 327 0
 3373 0176 3869     		ldr	r0, [r7, #16]
 3374 0178 FFF7FEFF 		bl	__aeabi_i2f
 3375 017c 0346     		mov	r3, r0
 3376 017e 1846     		mov	r0, r3
 3377 0180 7969     		ldr	r1, [r7, #20]	@ float
 3378 0182 FFF7FEFF 		bl	__aeabi_fcmpgt
 3379 0186 0346     		mov	r3, r0
 3380 0188 002B     		cmp	r3, #0
 3381 018a 7FF450AF 		bne	.L179
 391:.\main.c      ****         }
 392:.\main.c      ****     }
 393:.\main.c      **** }
 3382              		.loc 4 393 0
 3383 018e 1837     		adds	r7, r7, #24
 3384              		.cfi_def_cfa_offset 8
 3385 0190 BD46     		mov	sp, r7
 3386              		.cfi_def_cfa_register 13
 3387              		@ sp needed
 3388 0192 80BD     		pop	{r7, pc}
 3389              	.L181:
 3390              		.align	2
 3391              	.L180:
 3392 0194 00000000 		.word	adc_flag
 3393 0198 00000000 		.word	timer_flag
 3394 019c 00000000 		.word	prevCountM1
 3395 01a0 00000000 		.word	prevCountM2
 3396 01a4 00000000 		.word	countM1
 3397 01a8 00000000 		.word	countM2
 3398 01ac 00000000 		.word	sensor_readings
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 76


 3399 01b0 3C010000 		.word	.LC22
 3400 01b4 4C010000 		.word	.LC23
 3401              		.cfi_endproc
 3402              	.LFE86:
 3403              		.size	goStraightForBlock, .-goStraightForBlock
 3404              		.section	.text.turnLeft,"ax",%progbits
 3405              		.align	2
 3406              		.global	turnLeft
 3407              		.thumb
 3408              		.thumb_func
 3409              		.type	turnLeft, %function
 3410              	turnLeft:
 3411              	.LFB87:
 394:.\main.c      **** 
 395:.\main.c      **** void turnLeft() {
 3412              		.loc 4 395 0
 3413              		.cfi_startproc
 3414              		@ args = 0, pretend = 0, frame = 8
 3415              		@ frame_needed = 1, uses_anonymous_args = 0
 3416 0000 80B5     		push	{r7, lr}
 3417              		.cfi_def_cfa_offset 8
 3418              		.cfi_offset 7, -8
 3419              		.cfi_offset 14, -4
 3420 0002 82B0     		sub	sp, sp, #8
 3421              		.cfi_def_cfa_offset 16
 3422 0004 00AF     		add	r7, sp, #0
 3423              		.cfi_def_cfa_register 7
 396:.\main.c      ****     isr_TS_Disable();
 3424              		.loc 4 396 0
 3425 0006 FFF7FEFF 		bl	isr_TS_Disable
 397:.\main.c      ****     int prevCountM1 = QuadDec_M1_GetCounter();
 3426              		.loc 4 397 0
 3427 000a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3428 000e 0346     		mov	r3, r0
 3429 0010 7B60     		str	r3, [r7, #4]
 398:.\main.c      ****     int prevCountM2 = QuadDec_M2_GetCounter();
 3430              		.loc 4 398 0
 3431 0012 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 3432 0016 0346     		mov	r3, r0
 3433 0018 3B60     		str	r3, [r7]
 399:.\main.c      ****     PWM_1_WriteCompare(0);
 3434              		.loc 4 399 0
 3435 001a 0020     		movs	r0, #0
 3436 001c FFF7FEFF 		bl	PWM_1_WriteCompare
 400:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 3437              		.loc 4 400 0
 3438 0020 4FF4E170 		mov	r0, #450
 3439 0024 FFF7FEFF 		bl	PWM_2_WriteCompare
 401:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 3440              		.loc 4 401 0
 3441 0028 08E0     		b	.L183
 3442              	.L184:
 402:.\main.c      ****         if (adc_flag) {
 3443              		.loc 4 402 0
 3444 002a 114B     		ldr	r3, .L185
 3445 002c 1B68     		ldr	r3, [r3]
 3446 002e 002B     		cmp	r3, #0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 77


 3447 0030 04D0     		beq	.L183
 403:.\main.c      ****             updateSensorValues();
 3448              		.loc 4 403 0
 3449 0032 FFF7FEFF 		bl	updateSensorValues
 404:.\main.c      ****             adc_flag = FALSE;
 3450              		.loc 4 404 0
 3451 0036 0E4B     		ldr	r3, .L185
 3452 0038 0022     		movs	r2, #0
 3453 003a 1A60     		str	r2, [r3]
 3454              	.L183:
 401:.\main.c      ****         if (adc_flag) {
 3455              		.loc 4 401 0
 3456 003c 0D4B     		ldr	r3, .L185+4
 3457 003e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3458 0040 002B     		cmp	r3, #0
 3459 0042 F2D0     		beq	.L184
 405:.\main.c      ****         }
 406:.\main.c      ****     }
 407:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 3460              		.loc 4 407 0
 3461 0044 4FF4E170 		mov	r0, #450
 3462 0048 FFF7FEFF 		bl	PWM_1_WriteCompare
 408:.\main.c      ****     QuadDec_M1_SetCounter(prevCountM1);
 3463              		.loc 4 408 0
 3464 004c 7B68     		ldr	r3, [r7, #4]
 3465 004e 9BB2     		uxth	r3, r3
 3466 0050 1BB2     		sxth	r3, r3
 3467 0052 1846     		mov	r0, r3
 3468 0054 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 409:.\main.c      ****     QuadDec_M2_SetCounter(prevCountM2);
 3469              		.loc 4 409 0
 3470 0058 3B68     		ldr	r3, [r7]
 3471 005a 9BB2     		uxth	r3, r3
 3472 005c 1BB2     		sxth	r3, r3
 3473 005e 1846     		mov	r0, r3
 3474 0060 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 410:.\main.c      ****     isr_TS_Enable();
 3475              		.loc 4 410 0
 3476 0064 FFF7FEFF 		bl	isr_TS_Enable
 411:.\main.c      **** }
 3477              		.loc 4 411 0
 3478 0068 0837     		adds	r7, r7, #8
 3479              		.cfi_def_cfa_offset 8
 3480 006a BD46     		mov	sp, r7
 3481              		.cfi_def_cfa_register 13
 3482              		@ sp needed
 3483 006c 80BD     		pop	{r7, pc}
 3484              	.L186:
 3485 006e 00BF     		.align	2
 3486              	.L185:
 3487 0070 00000000 		.word	adc_flag
 3488 0074 00000000 		.word	sensor_readings
 3489              		.cfi_endproc
 3490              	.LFE87:
 3491              		.size	turnLeft, .-turnLeft
 3492              		.section	.text.turnRight,"ax",%progbits
 3493              		.align	2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 78


 3494              		.global	turnRight
 3495              		.thumb
 3496              		.thumb_func
 3497              		.type	turnRight, %function
 3498              	turnRight:
 3499              	.LFB88:
 412:.\main.c      **** 
 413:.\main.c      **** void turnRight() {
 3500              		.loc 4 413 0
 3501              		.cfi_startproc
 3502              		@ args = 0, pretend = 0, frame = 8
 3503              		@ frame_needed = 1, uses_anonymous_args = 0
 3504 0000 80B5     		push	{r7, lr}
 3505              		.cfi_def_cfa_offset 8
 3506              		.cfi_offset 7, -8
 3507              		.cfi_offset 14, -4
 3508 0002 82B0     		sub	sp, sp, #8
 3509              		.cfi_def_cfa_offset 16
 3510 0004 00AF     		add	r7, sp, #0
 3511              		.cfi_def_cfa_register 7
 414:.\main.c      ****     isr_TS_Disable();
 3512              		.loc 4 414 0
 3513 0006 FFF7FEFF 		bl	isr_TS_Disable
 415:.\main.c      ****     int prevCountM1 = QuadDec_M1_GetCounter();
 3514              		.loc 4 415 0
 3515 000a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3516 000e 0346     		mov	r3, r0
 3517 0010 7B60     		str	r3, [r7, #4]
 416:.\main.c      ****     int prevCountM2 = QuadDec_M2_GetCounter();
 3518              		.loc 4 416 0
 3519 0012 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 3520 0016 0346     		mov	r3, r0
 3521 0018 3B60     		str	r3, [r7]
 417:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 3522              		.loc 4 417 0
 3523 001a 4FF4E170 		mov	r0, #450
 3524 001e FFF7FEFF 		bl	PWM_1_WriteCompare
 418:.\main.c      ****     PWM_2_WriteCompare(0);
 3525              		.loc 4 418 0
 3526 0022 0020     		movs	r0, #0
 3527 0024 FFF7FEFF 		bl	PWM_2_WriteCompare
 419:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 3528              		.loc 4 419 0
 3529 0028 08E0     		b	.L188
 3530              	.L189:
 420:.\main.c      ****         if (adc_flag) {
 3531              		.loc 4 420 0
 3532 002a 114B     		ldr	r3, .L190
 3533 002c 1B68     		ldr	r3, [r3]
 3534 002e 002B     		cmp	r3, #0
 3535 0030 04D0     		beq	.L188
 421:.\main.c      ****             updateSensorValues();
 3536              		.loc 4 421 0
 3537 0032 FFF7FEFF 		bl	updateSensorValues
 422:.\main.c      ****             adc_flag = FALSE;
 3538              		.loc 4 422 0
 3539 0036 0E4B     		ldr	r3, .L190
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 79


 3540 0038 0022     		movs	r2, #0
 3541 003a 1A60     		str	r2, [r3]
 3542              	.L188:
 419:.\main.c      ****         if (adc_flag) {
 3543              		.loc 4 419 0
 3544 003c 0D4B     		ldr	r3, .L190+4
 3545 003e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3546 0040 002B     		cmp	r3, #0
 3547 0042 F2D0     		beq	.L189
 423:.\main.c      ****         }
 424:.\main.c      ****     }
 425:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 3548              		.loc 4 425 0
 3549 0044 4FF4E170 		mov	r0, #450
 3550 0048 FFF7FEFF 		bl	PWM_2_WriteCompare
 426:.\main.c      ****     QuadDec_M1_SetCounter(prevCountM1);
 3551              		.loc 4 426 0
 3552 004c 7B68     		ldr	r3, [r7, #4]
 3553 004e 9BB2     		uxth	r3, r3
 3554 0050 1BB2     		sxth	r3, r3
 3555 0052 1846     		mov	r0, r3
 3556 0054 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 427:.\main.c      ****     QuadDec_M2_SetCounter(prevCountM2);
 3557              		.loc 4 427 0
 3558 0058 3B68     		ldr	r3, [r7]
 3559 005a 9BB2     		uxth	r3, r3
 3560 005c 1BB2     		sxth	r3, r3
 3561 005e 1846     		mov	r0, r3
 3562 0060 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 428:.\main.c      ****     isr_TS_Enable();
 3563              		.loc 4 428 0
 3564 0064 FFF7FEFF 		bl	isr_TS_Enable
 429:.\main.c      **** }
 3565              		.loc 4 429 0
 3566 0068 0837     		adds	r7, r7, #8
 3567              		.cfi_def_cfa_offset 8
 3568 006a BD46     		mov	sp, r7
 3569              		.cfi_def_cfa_register 13
 3570              		@ sp needed
 3571 006c 80BD     		pop	{r7, pc}
 3572              	.L191:
 3573 006e 00BF     		.align	2
 3574              	.L190:
 3575 0070 00000000 		.word	adc_flag
 3576 0074 00000000 		.word	sensor_readings
 3577              		.cfi_endproc
 3578              	.LFE88:
 3579              		.size	turnRight, .-turnRight
 3580              		.global	__aeabi_fcmplt
 3581              		.section	.text.turnForDegrees,"ax",%progbits
 3582              		.align	2
 3583              		.global	turnForDegrees
 3584              		.thumb
 3585              		.thumb_func
 3586              		.type	turnForDegrees, %function
 3587              	turnForDegrees:
 3588              	.LFB89:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 80


 430:.\main.c      **** 
 431:.\main.c      **** // --------------------------------------------- TURNS ------------------------------------------
 432:.\main.c      **** void turnForDegrees(int degrees) {
 3589              		.loc 4 432 0
 3590              		.cfi_startproc
 3591              		@ args = 0, pretend = 0, frame = 16
 3592              		@ frame_needed = 1, uses_anonymous_args = 0
 3593 0000 80B5     		push	{r7, lr}
 3594              		.cfi_def_cfa_offset 8
 3595              		.cfi_offset 7, -8
 3596              		.cfi_offset 14, -4
 3597 0002 84B0     		sub	sp, sp, #16
 3598              		.cfi_def_cfa_offset 24
 3599 0004 00AF     		add	r7, sp, #0
 3600              		.cfi_def_cfa_register 7
 3601 0006 7860     		str	r0, [r7, #4]
 433:.\main.c      ****     float distance_to_turn = degrees / 13;
 3602              		.loc 4 433 0
 3603 0008 7B68     		ldr	r3, [r7, #4]
 3604 000a 224A     		ldr	r2, .L196
 3605 000c 82FB0312 		smull	r1, r2, r2, r3
 3606 0010 9210     		asrs	r2, r2, #2
 3607 0012 DB17     		asrs	r3, r3, #31
 3608 0014 D31A     		subs	r3, r2, r3
 3609 0016 1846     		mov	r0, r3
 3610 0018 FFF7FEFF 		bl	__aeabi_i2f
 3611 001c 0346     		mov	r3, r0
 3612 001e BB60     		str	r3, [r7, #8]	@ float
 434:.\main.c      ****     float distance_turned = 0;
 3613              		.loc 4 434 0
 3614 0020 4FF00003 		mov	r3, #0
 3615 0024 FB60     		str	r3, [r7, #12]	@ float
 435:.\main.c      ****     
 436:.\main.c      ****     while (distance_turned < distance_to_turn) {
 3616              		.loc 4 436 0
 3617 0026 2AE0     		b	.L193
 3618              	.L195:
 437:.\main.c      ****         // update sensor values so they're not 'stuck' when we leave function
 438:.\main.c      ****         if (adc_flag) {
 3619              		.loc 4 438 0
 3620 0028 1B4B     		ldr	r3, .L196+4
 3621 002a 1B68     		ldr	r3, [r3]
 3622 002c 002B     		cmp	r3, #0
 3623 002e 04D0     		beq	.L194
 439:.\main.c      ****             updateSensorValues();
 3624              		.loc 4 439 0
 3625 0030 FFF7FEFF 		bl	updateSensorValues
 440:.\main.c      ****             adc_flag = FALSE;
 3626              		.loc 4 440 0
 3627 0034 184B     		ldr	r3, .L196+4
 3628 0036 0022     		movs	r2, #0
 3629 0038 1A60     		str	r2, [r3]
 3630              	.L194:
 441:.\main.c      ****         }
 442:.\main.c      ****         
 443:.\main.c      ****          // New count values from encoder are ready
 444:.\main.c      ****         if (timer_flag){
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 81


 3631              		.loc 4 444 0
 3632 003a 184B     		ldr	r3, .L196+8
 3633 003c 1B68     		ldr	r3, [r3]
 3634 003e 002B     		cmp	r3, #0
 3635 0040 1DD0     		beq	.L193
 445:.\main.c      ****             isr_TS_Disable();
 3636              		.loc 4 445 0
 3637 0042 FFF7FEFF 		bl	isr_TS_Disable
 446:.\main.c      ****             
 447:.\main.c      ****             distance_turned += getDistance(prevCountM1, prevCountM2);
 3638              		.loc 4 447 0
 3639 0046 164B     		ldr	r3, .L196+12
 3640 0048 1A68     		ldr	r2, [r3]
 3641 004a 164B     		ldr	r3, .L196+16
 3642 004c 1B68     		ldr	r3, [r3]
 3643 004e 1046     		mov	r0, r2
 3644 0050 1946     		mov	r1, r3
 3645 0052 FFF7FEFF 		bl	getDistance
 3646 0056 0346     		mov	r3, r0
 3647 0058 F868     		ldr	r0, [r7, #12]	@ float
 3648 005a 1946     		mov	r1, r3
 3649 005c FFF7FEFF 		bl	__aeabi_fadd
 3650 0060 0346     		mov	r3, r0
 3651 0062 FB60     		str	r3, [r7, #12]	@ float
 448:.\main.c      ****             
 449:.\main.c      ****             // Update previous values
 450:.\main.c      ****             prevCountM1 = countM1;
 3652              		.loc 4 450 0
 3653 0064 104B     		ldr	r3, .L196+20
 3654 0066 1B68     		ldr	r3, [r3]
 3655 0068 0D4A     		ldr	r2, .L196+12
 3656 006a 1360     		str	r3, [r2]
 451:.\main.c      ****             prevCountM2 = countM2;
 3657              		.loc 4 451 0
 3658 006c 0F4B     		ldr	r3, .L196+24
 3659 006e 1B68     		ldr	r3, [r3]
 3660 0070 0C4A     		ldr	r2, .L196+16
 3661 0072 1360     		str	r3, [r2]
 452:.\main.c      ****             
 453:.\main.c      ****             // Reset flag
 454:.\main.c      ****             timer_flag = FALSE;
 3662              		.loc 4 454 0
 3663 0074 094B     		ldr	r3, .L196+8
 3664 0076 0022     		movs	r2, #0
 3665 0078 1A60     		str	r2, [r3]
 455:.\main.c      ****             
 456:.\main.c      ****             isr_TS_Enable();
 3666              		.loc 4 456 0
 3667 007a FFF7FEFF 		bl	isr_TS_Enable
 3668              	.L193:
 436:.\main.c      ****         // update sensor values so they're not 'stuck' when we leave function
 3669              		.loc 4 436 0
 3670 007e F868     		ldr	r0, [r7, #12]	@ float
 3671 0080 B968     		ldr	r1, [r7, #8]	@ float
 3672 0082 FFF7FEFF 		bl	__aeabi_fcmplt
 3673 0086 0346     		mov	r3, r0
 3674 0088 002B     		cmp	r3, #0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 82


 3675 008a CDD1     		bne	.L195
 457:.\main.c      ****         }
 458:.\main.c      ****     }
 459:.\main.c      **** }
 3676              		.loc 4 459 0
 3677 008c 1037     		adds	r7, r7, #16
 3678              		.cfi_def_cfa_offset 8
 3679 008e BD46     		mov	sp, r7
 3680              		.cfi_def_cfa_register 13
 3681              		@ sp needed
 3682 0090 80BD     		pop	{r7, pc}
 3683              	.L197:
 3684 0092 00BF     		.align	2
 3685              	.L196:
 3686 0094 4FECC44E 		.word	1321528399
 3687 0098 00000000 		.word	adc_flag
 3688 009c 00000000 		.word	timer_flag
 3689 00a0 00000000 		.word	prevCountM1
 3690 00a4 00000000 		.word	prevCountM2
 3691 00a8 00000000 		.word	countM1
 3692 00ac 00000000 		.word	countM2
 3693              		.cfi_endproc
 3694              	.LFE89:
 3695              		.size	turnForDegrees, .-turnForDegrees
 3696              		.section	.rodata
 3697 015b 00       		.align	2
 3698              	.LC24:
 3699 015c 202D2066 		.ascii	" - forward\015\012\000"
 3699      6F727761 
 3699      72640D0A 
 3699      00
 3700 0169 000000   		.align	2
 3701              	.LC25:
 3702 016c 202D2074 		.ascii	" - turn 45\015\012\000"
 3702      75726E20 
 3702      34350D0A 
 3702      00
 3703 0179 000000   		.align	2
 3704              	.LC26:
 3705 017c 202D2066 		.ascii	" - finish turn\015\012\000"
 3705      696E6973 
 3705      68207475 
 3705      726E0D0A 
 3705      00
 3706              		.section	.text.sharpTurnLeft,"ax",%progbits
 3707              		.align	2
 3708              		.global	sharpTurnLeft
 3709              		.thumb
 3710              		.thumb_func
 3711              		.type	sharpTurnLeft, %function
 3712              	sharpTurnLeft:
 3713              	.LFB90:
 460:.\main.c      **** 
 461:.\main.c      **** void sharpTurnLeft() {
 3714              		.loc 4 461 0
 3715              		.cfi_startproc
 3716              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 83


 3717              		@ frame_needed = 1, uses_anonymous_args = 0
 3718 0000 80B5     		push	{r7, lr}
 3719              		.cfi_def_cfa_offset 8
 3720              		.cfi_offset 7, -8
 3721              		.cfi_offset 14, -4
 3722 0002 82B0     		sub	sp, sp, #8
 3723              		.cfi_def_cfa_offset 16
 3724 0004 00AF     		add	r7, sp, #0
 3725              		.cfi_def_cfa_register 7
 462:.\main.c      ****     isr_TS_Disable();
 3726              		.loc 4 462 0
 3727 0006 FFF7FEFF 		bl	isr_TS_Disable
 463:.\main.c      ****     int prevCountM1 = QuadDec_M1_GetCounter();
 3728              		.loc 4 463 0
 3729 000a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3730 000e 0346     		mov	r3, r0
 3731 0010 7B60     		str	r3, [r7, #4]
 464:.\main.c      ****     int prevCountM2 = QuadDec_M2_GetCounter();
 3732              		.loc 4 464 0
 3733 0012 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 3734 0016 0346     		mov	r3, r0
 3735 0018 3B60     		str	r3, [r7]
 465:.\main.c      ****     usbPutString(" - forward\r\n");
 3736              		.loc 4 465 0
 3737 001a 2448     		ldr	r0, .L203
 3738 001c FFF7FEFF 		bl	usbPutString
 466:.\main.c      ****     // go until we reach the junction
 467:.\main.c      ****     while (!sensor_readings[BOTTOM_LEFT_SENSOR]) {
 3739              		.loc 4 467 0
 3740 0020 08E0     		b	.L199
 3741              	.L200:
 468:.\main.c      ****         if (adc_flag) {
 3742              		.loc 4 468 0
 3743 0022 234B     		ldr	r3, .L203+4
 3744 0024 1B68     		ldr	r3, [r3]
 3745 0026 002B     		cmp	r3, #0
 3746 0028 04D0     		beq	.L199
 469:.\main.c      ****             updateSensorValues();
 3747              		.loc 4 469 0
 3748 002a FFF7FEFF 		bl	updateSensorValues
 470:.\main.c      ****             adc_flag = FALSE;
 3749              		.loc 4 470 0
 3750 002e 204B     		ldr	r3, .L203+4
 3751 0030 0022     		movs	r2, #0
 3752 0032 1A60     		str	r2, [r3]
 3753              	.L199:
 467:.\main.c      ****         if (adc_flag) {
 3754              		.loc 4 467 0
 3755 0034 1F4B     		ldr	r3, .L203+8
 3756 0036 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 3757 0038 002B     		cmp	r3, #0
 3758 003a F2D0     		beq	.L200
 471:.\main.c      ****         }
 472:.\main.c      ****     }
 473:.\main.c      ****     
 474:.\main.c      ****     usbPutString(" - turn 45\r\n");
 3759              		.loc 4 474 0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 84


 3760 003c 1E48     		ldr	r0, .L203+12
 3761 003e FFF7FEFF 		bl	usbPutString
 475:.\main.c      ****     
 476:.\main.c      ****     // make the turn
 477:.\main.c      ****     setWheelDirection(FALSE, TRUE);
 3762              		.loc 4 477 0
 3763 0042 0020     		movs	r0, #0
 3764 0044 0121     		movs	r1, #1
 3765 0046 FFF7FEFF 		bl	setWheelDirection
 478:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 3766              		.loc 4 478 0
 3767 004a 4FF4E170 		mov	r0, #450
 3768 004e FFF7FEFF 		bl	PWM_1_WriteCompare
 479:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 3769              		.loc 4 479 0
 3770 0052 4FF4E170 		mov	r0, #450
 3771 0056 FFF7FEFF 		bl	PWM_2_WriteCompare
 480:.\main.c      ****     QuadDec_M1_SetCounter(prevCountM1);
 3772              		.loc 4 480 0
 3773 005a 7B68     		ldr	r3, [r7, #4]
 3774 005c 9BB2     		uxth	r3, r3
 3775 005e 1BB2     		sxth	r3, r3
 3776 0060 1846     		mov	r0, r3
 3777 0062 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 481:.\main.c      ****     QuadDec_M2_SetCounter(prevCountM2);
 3778              		.loc 4 481 0
 3779 0066 3B68     		ldr	r3, [r7]
 3780 0068 9BB2     		uxth	r3, r3
 3781 006a 1BB2     		sxth	r3, r3
 3782 006c 1846     		mov	r0, r3
 3783 006e FFF7FEFF 		bl	QuadDec_M2_SetCounter
 482:.\main.c      ****     isr_TS_Enable();
 3784              		.loc 4 482 0
 3785 0072 FFF7FEFF 		bl	isr_TS_Enable
 483:.\main.c      ****     
 484:.\main.c      ****     turnForDegrees(45); // so that it doesn't stop if it's already on a line
 3786              		.loc 4 484 0
 3787 0076 2D20     		movs	r0, #45
 3788 0078 FFF7FEFF 		bl	turnForDegrees
 485:.\main.c      ****     
 486:.\main.c      ****     usbPutString(" - finish turn\r\n");
 3789              		.loc 4 486 0
 3790 007c 0F48     		ldr	r0, .L203+16
 3791 007e FFF7FEFF 		bl	usbPutString
 487:.\main.c      ****     
 488:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 3792              		.loc 4 488 0
 3793 0082 08E0     		b	.L201
 3794              	.L202:
 489:.\main.c      ****         if (adc_flag) {
 3795              		.loc 4 489 0
 3796 0084 0A4B     		ldr	r3, .L203+4
 3797 0086 1B68     		ldr	r3, [r3]
 3798 0088 002B     		cmp	r3, #0
 3799 008a 04D0     		beq	.L201
 490:.\main.c      ****             updateSensorValues();
 3800              		.loc 4 490 0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 85


 3801 008c FFF7FEFF 		bl	updateSensorValues
 491:.\main.c      ****             adc_flag = FALSE;
 3802              		.loc 4 491 0
 3803 0090 074B     		ldr	r3, .L203+4
 3804 0092 0022     		movs	r2, #0
 3805 0094 1A60     		str	r2, [r3]
 3806              	.L201:
 488:.\main.c      ****         if (adc_flag) {
 3807              		.loc 4 488 0
 3808 0096 074B     		ldr	r3, .L203+8
 3809 0098 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3810 009a 002B     		cmp	r3, #0
 3811 009c F2D0     		beq	.L202
 492:.\main.c      ****         }
 493:.\main.c      ****     }
 494:.\main.c      ****     setWheelDirection(TRUE, TRUE);
 3812              		.loc 4 494 0
 3813 009e 0120     		movs	r0, #1
 3814 00a0 0121     		movs	r1, #1
 3815 00a2 FFF7FEFF 		bl	setWheelDirection
 495:.\main.c      **** }
 3816              		.loc 4 495 0
 3817 00a6 0837     		adds	r7, r7, #8
 3818              		.cfi_def_cfa_offset 8
 3819 00a8 BD46     		mov	sp, r7
 3820              		.cfi_def_cfa_register 13
 3821              		@ sp needed
 3822 00aa 80BD     		pop	{r7, pc}
 3823              	.L204:
 3824              		.align	2
 3825              	.L203:
 3826 00ac 5C010000 		.word	.LC24
 3827 00b0 00000000 		.word	adc_flag
 3828 00b4 00000000 		.word	sensor_readings
 3829 00b8 6C010000 		.word	.LC25
 3830 00bc 7C010000 		.word	.LC26
 3831              		.cfi_endproc
 3832              	.LFE90:
 3833              		.size	sharpTurnLeft, .-sharpTurnLeft
 3834              		.section	.rodata
 3835 018d 000000   		.align	2
 3836              	.LC27:
 3837 0190 2D2D2D2D 		.ascii	"---------------------------\015\012\000"
 3837      2D2D2D2D 
 3837      2D2D2D2D 
 3837      2D2D2D2D 
 3837      2D2D2D2D 
 3838 01ae 0000     		.align	2
 3839              	.LC28:
 3840 01b0 2D2D2D2D 		.ascii	"-------- forward -----------\015\012\000"
 3840      2D2D2D2D 
 3840      20666F72 
 3840      77617264 
 3840      202D2D2D 
 3841 01cf 00       		.align	2
 3842              	.LC29:
 3843 01d0 2D2D2D2D 		.ascii	"-------- turn 45 ----------\015\012\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 86


 3843      2D2D2D2D 
 3843      20747572 
 3843      6E203435 
 3843      202D2D2D 
 3844 01ee 0000     		.align	2
 3845              	.LC30:
 3846 01f0 2D2D2D2D 		.ascii	"-------- finish turn ------\015\012\000"
 3846      2D2D2D2D 
 3846      2066696E 
 3846      69736820 
 3846      7475726E 
 3847              		.section	.text.sharpTurnRight,"ax",%progbits
 3848              		.align	2
 3849              		.global	sharpTurnRight
 3850              		.thumb
 3851              		.thumb_func
 3852              		.type	sharpTurnRight, %function
 3853              	sharpTurnRight:
 3854              	.LFB91:
 496:.\main.c      **** 
 497:.\main.c      **** void sharpTurnRight() {
 3855              		.loc 4 497 0
 3856              		.cfi_startproc
 3857              		@ args = 0, pretend = 0, frame = 8
 3858              		@ frame_needed = 1, uses_anonymous_args = 0
 3859 0000 80B5     		push	{r7, lr}
 3860              		.cfi_def_cfa_offset 8
 3861              		.cfi_offset 7, -8
 3862              		.cfi_offset 14, -4
 3863 0002 82B0     		sub	sp, sp, #8
 3864              		.cfi_def_cfa_offset 16
 3865 0004 00AF     		add	r7, sp, #0
 3866              		.cfi_def_cfa_register 7
 498:.\main.c      ****     isr_TS_Disable();
 3867              		.loc 4 498 0
 3868 0006 FFF7FEFF 		bl	isr_TS_Disable
 499:.\main.c      ****     int prevCountM1 = QuadDec_M1_GetCounter();
 3869              		.loc 4 499 0
 3870 000a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3871 000e 0346     		mov	r3, r0
 3872 0010 7B60     		str	r3, [r7, #4]
 500:.\main.c      ****     int prevCountM2 = QuadDec_M2_GetCounter();
 3873              		.loc 4 500 0
 3874 0012 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 3875 0016 0346     		mov	r3, r0
 3876 0018 3B60     		str	r3, [r7]
 501:.\main.c      ****     usbPutString("---------------------------\r\n");
 3877              		.loc 4 501 0
 3878 001a 2D48     		ldr	r0, .L210
 3879 001c FFF7FEFF 		bl	usbPutString
 502:.\main.c      ****     usbPutString("-------- forward -----------\r\n");
 3880              		.loc 4 502 0
 3881 0020 2C48     		ldr	r0, .L210+4
 3882 0022 FFF7FEFF 		bl	usbPutString
 503:.\main.c      ****     usbPutString("---------------------------\r\n");
 3883              		.loc 4 503 0
 3884 0026 2A48     		ldr	r0, .L210
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 87


 3885 0028 FFF7FEFF 		bl	usbPutString
 504:.\main.c      ****     
 505:.\main.c      ****     // go until we reach the junction
 506:.\main.c      ****     while (!sensor_readings[BOTTOM_RIGHT_SENSOR]) {
 3886              		.loc 4 506 0
 3887 002c 08E0     		b	.L206
 3888              	.L207:
 507:.\main.c      ****         if (adc_flag) {
 3889              		.loc 4 507 0
 3890 002e 2A4B     		ldr	r3, .L210+8
 3891 0030 1B68     		ldr	r3, [r3]
 3892 0032 002B     		cmp	r3, #0
 3893 0034 04D0     		beq	.L206
 508:.\main.c      ****             updateSensorValues();
 3894              		.loc 4 508 0
 3895 0036 FFF7FEFF 		bl	updateSensorValues
 509:.\main.c      ****             adc_flag = FALSE;
 3896              		.loc 4 509 0
 3897 003a 274B     		ldr	r3, .L210+8
 3898 003c 0022     		movs	r2, #0
 3899 003e 1A60     		str	r2, [r3]
 3900              	.L206:
 506:.\main.c      ****         if (adc_flag) {
 3901              		.loc 4 506 0
 3902 0040 264B     		ldr	r3, .L210+12
 3903 0042 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 3904 0044 002B     		cmp	r3, #0
 3905 0046 F2D0     		beq	.L207
 510:.\main.c      ****         }
 511:.\main.c      ****     }
 512:.\main.c      ****     
 513:.\main.c      ****     usbPutString("---------------------------\r\n");
 3906              		.loc 4 513 0
 3907 0048 2148     		ldr	r0, .L210
 3908 004a FFF7FEFF 		bl	usbPutString
 514:.\main.c      ****     usbPutString("-------- turn 45 ----------\r\n");
 3909              		.loc 4 514 0
 3910 004e 2448     		ldr	r0, .L210+16
 3911 0050 FFF7FEFF 		bl	usbPutString
 515:.\main.c      ****     usbPutString("---------------------------\r\n");
 3912              		.loc 4 515 0
 3913 0054 1E48     		ldr	r0, .L210
 3914 0056 FFF7FEFF 		bl	usbPutString
 516:.\main.c      ****     
 517:.\main.c      ****     // make the turn
 518:.\main.c      ****     setWheelDirection(TRUE, FALSE);
 3915              		.loc 4 518 0
 3916 005a 0120     		movs	r0, #1
 3917 005c 0021     		movs	r1, #0
 3918 005e FFF7FEFF 		bl	setWheelDirection
 519:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 3919              		.loc 4 519 0
 3920 0062 4FF4E170 		mov	r0, #450
 3921 0066 FFF7FEFF 		bl	PWM_1_WriteCompare
 520:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 3922              		.loc 4 520 0
 3923 006a 4FF4E170 		mov	r0, #450
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 88


 3924 006e FFF7FEFF 		bl	PWM_2_WriteCompare
 521:.\main.c      ****     
 522:.\main.c      ****     QuadDec_M1_SetCounter(prevCountM1);
 3925              		.loc 4 522 0
 3926 0072 7B68     		ldr	r3, [r7, #4]
 3927 0074 9BB2     		uxth	r3, r3
 3928 0076 1BB2     		sxth	r3, r3
 3929 0078 1846     		mov	r0, r3
 3930 007a FFF7FEFF 		bl	QuadDec_M1_SetCounter
 523:.\main.c      ****     QuadDec_M2_SetCounter(prevCountM2);
 3931              		.loc 4 523 0
 3932 007e 3B68     		ldr	r3, [r7]
 3933 0080 9BB2     		uxth	r3, r3
 3934 0082 1BB2     		sxth	r3, r3
 3935 0084 1846     		mov	r0, r3
 3936 0086 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 524:.\main.c      ****     isr_TS_Enable();
 3937              		.loc 4 524 0
 3938 008a FFF7FEFF 		bl	isr_TS_Enable
 525:.\main.c      ****     
 526:.\main.c      ****     turnForDegrees(45); // so that it doesn't stop if it's already on a line
 3939              		.loc 4 526 0
 3940 008e 2D20     		movs	r0, #45
 3941 0090 FFF7FEFF 		bl	turnForDegrees
 527:.\main.c      ****     
 528:.\main.c      ****     usbPutString("---------------------------\r\n");
 3942              		.loc 4 528 0
 3943 0094 0E48     		ldr	r0, .L210
 3944 0096 FFF7FEFF 		bl	usbPutString
 529:.\main.c      ****     usbPutString("-------- finish turn ------\r\n");
 3945              		.loc 4 529 0
 3946 009a 1248     		ldr	r0, .L210+20
 3947 009c FFF7FEFF 		bl	usbPutString
 530:.\main.c      ****     usbPutString("---------------------------\r\n");
 3948              		.loc 4 530 0
 3949 00a0 0B48     		ldr	r0, .L210
 3950 00a2 FFF7FEFF 		bl	usbPutString
 531:.\main.c      ****     
 532:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 3951              		.loc 4 532 0
 3952 00a6 08E0     		b	.L208
 3953              	.L209:
 533:.\main.c      ****         if (adc_flag) {
 3954              		.loc 4 533 0
 3955 00a8 0B4B     		ldr	r3, .L210+8
 3956 00aa 1B68     		ldr	r3, [r3]
 3957 00ac 002B     		cmp	r3, #0
 3958 00ae 04D0     		beq	.L208
 534:.\main.c      ****             updateSensorValues();
 3959              		.loc 4 534 0
 3960 00b0 FFF7FEFF 		bl	updateSensorValues
 535:.\main.c      ****             adc_flag = FALSE;
 3961              		.loc 4 535 0
 3962 00b4 084B     		ldr	r3, .L210+8
 3963 00b6 0022     		movs	r2, #0
 3964 00b8 1A60     		str	r2, [r3]
 3965              	.L208:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 89


 532:.\main.c      ****         if (adc_flag) {
 3966              		.loc 4 532 0
 3967 00ba 084B     		ldr	r3, .L210+12
 3968 00bc 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3969 00be 002B     		cmp	r3, #0
 3970 00c0 F2D0     		beq	.L209
 536:.\main.c      ****         }
 537:.\main.c      ****     }
 538:.\main.c      ****     setWheelDirection(TRUE, TRUE);
 3971              		.loc 4 538 0
 3972 00c2 0120     		movs	r0, #1
 3973 00c4 0121     		movs	r1, #1
 3974 00c6 FFF7FEFF 		bl	setWheelDirection
 539:.\main.c      **** }
 3975              		.loc 4 539 0
 3976 00ca 0837     		adds	r7, r7, #8
 3977              		.cfi_def_cfa_offset 8
 3978 00cc BD46     		mov	sp, r7
 3979              		.cfi_def_cfa_register 13
 3980              		@ sp needed
 3981 00ce 80BD     		pop	{r7, pc}
 3982              	.L211:
 3983              		.align	2
 3984              	.L210:
 3985 00d0 90010000 		.word	.LC27
 3986 00d4 B0010000 		.word	.LC28
 3987 00d8 00000000 		.word	adc_flag
 3988 00dc 00000000 		.word	sensor_readings
 3989 00e0 D0010000 		.word	.LC29
 3990 00e4 F0010000 		.word	.LC30
 3991              		.cfi_endproc
 3992              	.LFE91:
 3993              		.size	sharpTurnRight, .-sharpTurnRight
 3994              		.section	.rodata
 3995 020e 0000     		.align	2
 3996              	.LC31:
 3997 0210 202D2066 		.ascii	" - forward slightly\015\012\000"
 3997      6F727761 
 3997      72642073 
 3997      6C696768 
 3997      746C790D 
 3998 0226 0000     		.align	2
 3999              	.LC32:
 4000 0228 202D2066 		.ascii	" - forward till junction\015\012\000"
 4000      6F727761 
 4000      72642074 
 4000      696C6C20 
 4000      6A756E63 
 4001 0243 00       		.align	2
 4002              	.LC33:
 4003 0244 202D2074 		.ascii	" - turn 135\015\012\000"
 4003      75726E20 
 4003      3133350D 
 4003      0A00
 4004              		.section	.text.uTurn,"ax",%progbits
 4005              		.align	2
 4006              		.global	uTurn
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 90


 4007              		.thumb
 4008              		.thumb_func
 4009              		.type	uTurn, %function
 4010              	uTurn:
 4011              	.LFB92:
 540:.\main.c      ****     
 541:.\main.c      **** void uTurn(int *left_wheel_count, int *right_wheel_count) {
 4012              		.loc 4 541 0
 4013              		.cfi_startproc
 4014              		@ args = 0, pretend = 0, frame = 24
 4015              		@ frame_needed = 1, uses_anonymous_args = 0
 4016 0000 80B5     		push	{r7, lr}
 4017              		.cfi_def_cfa_offset 8
 4018              		.cfi_offset 7, -8
 4019              		.cfi_offset 14, -4
 4020 0002 86B0     		sub	sp, sp, #24
 4021              		.cfi_def_cfa_offset 32
 4022 0004 00AF     		add	r7, sp, #0
 4023              		.cfi_def_cfa_register 7
 4024 0006 7860     		str	r0, [r7, #4]
 4025 0008 3960     		str	r1, [r7]
 542:.\main.c      ****     usbPutString("U turn\r\n");
 4026              		.loc 4 542 0
 4027 000a 5848     		ldr	r0, .L221
 4028 000c FFF7FEFF 		bl	usbPutString
 543:.\main.c      ****     
 544:.\main.c      ****     usbPutString(" - forward slightly\r\n");
 4029              		.loc 4 544 0
 4030 0010 5748     		ldr	r0, .L221+4
 4031 0012 FFF7FEFF 		bl	usbPutString
 545:.\main.c      ****     // go forward slightly
 546:.\main.c      ****     float distance = 0;
 4032              		.loc 4 546 0
 4033 0016 4FF00003 		mov	r3, #0
 4034 001a 7B61     		str	r3, [r7, #20]	@ float
 547:.\main.c      ****     while (distance < SMALL_FORWARD_DISTANCE) {
 4035              		.loc 4 547 0
 4036 001c 42E0     		b	.L213
 4037              	.L215:
 548:.\main.c      ****         
 549:.\main.c      ****         if (adc_flag) {
 4038              		.loc 4 549 0
 4039 001e 554B     		ldr	r3, .L221+8
 4040 0020 1B68     		ldr	r3, [r3]
 4041 0022 002B     		cmp	r3, #0
 4042 0024 04D0     		beq	.L214
 550:.\main.c      ****             updateSensorValues();
 4043              		.loc 4 550 0
 4044 0026 FFF7FEFF 		bl	updateSensorValues
 551:.\main.c      ****             adc_flag = FALSE;
 4045              		.loc 4 551 0
 4046 002a 524B     		ldr	r3, .L221+8
 4047 002c 0022     		movs	r2, #0
 4048 002e 1A60     		str	r2, [r3]
 4049              	.L214:
 552:.\main.c      ****         }
 553:.\main.c      ****         
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 91


 554:.\main.c      ****          // New count values from encoder are ready
 555:.\main.c      ****         if (timer_flag){
 4050              		.loc 4 555 0
 4051 0030 514B     		ldr	r3, .L221+12
 4052 0032 1B68     		ldr	r3, [r3]
 4053 0034 002B     		cmp	r3, #0
 4054 0036 35D0     		beq	.L213
 556:.\main.c      ****             isr_TS_Disable();
 4055              		.loc 4 556 0
 4056 0038 FFF7FEFF 		bl	isr_TS_Disable
 557:.\main.c      ****             
 558:.\main.c      ****             // update distance
 559:.\main.c      ****             distance += getDistance(prevCountM1, prevCountM2);
 4057              		.loc 4 559 0
 4058 003c 4F4B     		ldr	r3, .L221+16
 4059 003e 1A68     		ldr	r2, [r3]
 4060 0040 4F4B     		ldr	r3, .L221+20
 4061 0042 1B68     		ldr	r3, [r3]
 4062 0044 1046     		mov	r0, r2
 4063 0046 1946     		mov	r1, r3
 4064 0048 FFF7FEFF 		bl	getDistance
 4065 004c 0346     		mov	r3, r0
 4066 004e 7869     		ldr	r0, [r7, #20]	@ float
 4067 0050 1946     		mov	r1, r3
 4068 0052 FFF7FEFF 		bl	__aeabi_fadd
 4069 0056 0346     		mov	r3, r0
 4070 0058 7B61     		str	r3, [r7, #20]	@ float
 560:.\main.c      ****             
 561:.\main.c      ****             // Correct speed
 562:.\main.c      ****             correctSpeed(prevCountM1,countM1,*left_wheel_count,TRUE);
 4071              		.loc 4 562 0
 4072 005a 484B     		ldr	r3, .L221+16
 4073 005c 1968     		ldr	r1, [r3]
 4074 005e 494B     		ldr	r3, .L221+24
 4075 0060 1A68     		ldr	r2, [r3]
 4076 0062 7B68     		ldr	r3, [r7, #4]
 4077 0064 1B68     		ldr	r3, [r3]
 4078 0066 0846     		mov	r0, r1
 4079 0068 1146     		mov	r1, r2
 4080 006a 1A46     		mov	r2, r3
 4081 006c 0123     		movs	r3, #1
 4082 006e FFF7FEFF 		bl	correctSpeed
 563:.\main.c      ****             correctSpeed(prevCountM2,countM2,*right_wheel_count,FALSE);
 4083              		.loc 4 563 0
 4084 0072 434B     		ldr	r3, .L221+20
 4085 0074 1968     		ldr	r1, [r3]
 4086 0076 444B     		ldr	r3, .L221+28
 4087 0078 1A68     		ldr	r2, [r3]
 4088 007a 3B68     		ldr	r3, [r7]
 4089 007c 1B68     		ldr	r3, [r3]
 4090 007e 0846     		mov	r0, r1
 4091 0080 1146     		mov	r1, r2
 4092 0082 1A46     		mov	r2, r3
 4093 0084 0023     		movs	r3, #0
 4094 0086 FFF7FEFF 		bl	correctSpeed
 564:.\main.c      ****             
 565:.\main.c      ****             // Update previous values
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 92


 566:.\main.c      ****             prevCountM1 = countM1;
 4095              		.loc 4 566 0
 4096 008a 3E4B     		ldr	r3, .L221+24
 4097 008c 1B68     		ldr	r3, [r3]
 4098 008e 3B4A     		ldr	r2, .L221+16
 4099 0090 1360     		str	r3, [r2]
 567:.\main.c      ****             prevCountM2 = countM2;
 4100              		.loc 4 567 0
 4101 0092 3D4B     		ldr	r3, .L221+28
 4102 0094 1B68     		ldr	r3, [r3]
 4103 0096 3A4A     		ldr	r2, .L221+20
 4104 0098 1360     		str	r3, [r2]
 568:.\main.c      ****             
 569:.\main.c      ****             // Reset flag
 570:.\main.c      ****             timer_flag = FALSE;
 4105              		.loc 4 570 0
 4106 009a 374B     		ldr	r3, .L221+12
 4107 009c 0022     		movs	r2, #0
 4108 009e 1A60     		str	r2, [r3]
 571:.\main.c      ****             
 572:.\main.c      ****             isr_TS_Enable();
 4109              		.loc 4 572 0
 4110 00a0 FFF7FEFF 		bl	isr_TS_Enable
 4111              	.L213:
 547:.\main.c      ****         
 4112              		.loc 4 547 0
 4113 00a4 7869     		ldr	r0, [r7, #20]	@ float
 4114 00a6 4FF08241 		mov	r1, #1090519040
 4115 00aa FFF7FEFF 		bl	__aeabi_fcmplt
 4116 00ae 0346     		mov	r3, r0
 4117 00b0 002B     		cmp	r3, #0
 4118 00b2 B4D1     		bne	.L215
 573:.\main.c      ****         }
 574:.\main.c      ****     }
 575:.\main.c      ****     
 576:.\main.c      ****     isr_TS_Disable();
 4119              		.loc 4 576 0
 4120 00b4 FFF7FEFF 		bl	isr_TS_Disable
 577:.\main.c      ****     int prevCountM1 = QuadDec_M1_GetCounter();
 4121              		.loc 4 577 0
 4122 00b8 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 4123 00bc 0346     		mov	r3, r0
 4124 00be 3B61     		str	r3, [r7, #16]
 578:.\main.c      ****     int prevCountM2 = QuadDec_M2_GetCounter();
 4125              		.loc 4 578 0
 4126 00c0 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 4127 00c4 0346     		mov	r3, r0
 4128 00c6 FB60     		str	r3, [r7, #12]
 579:.\main.c      ****     
 580:.\main.c      ****     usbPutString(" - forward till junction\r\n");
 4129              		.loc 4 580 0
 4130 00c8 3048     		ldr	r0, .L221+32
 4131 00ca FFF7FEFF 		bl	usbPutString
 581:.\main.c      ****     // go until we reach the junction
 582:.\main.c      ****     while (!sensor_readings[BOTTOM_RIGHT_SENSOR] && !sensor_readings[BOTTOM_LEFT_SENSOR] && sensor_
 4132              		.loc 4 582 0
 4133 00ce 08E0     		b	.L216
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 93


 4134              	.L218:
 583:.\main.c      ****         if (adc_flag) {
 4135              		.loc 4 583 0
 4136 00d0 284B     		ldr	r3, .L221+8
 4137 00d2 1B68     		ldr	r3, [r3]
 4138 00d4 002B     		cmp	r3, #0
 4139 00d6 04D0     		beq	.L216
 584:.\main.c      ****             updateSensorValues();
 4140              		.loc 4 584 0
 4141 00d8 FFF7FEFF 		bl	updateSensorValues
 585:.\main.c      ****             adc_flag = FALSE;
 4142              		.loc 4 585 0
 4143 00dc 254B     		ldr	r3, .L221+8
 4144 00de 0022     		movs	r2, #0
 4145 00e0 1A60     		str	r2, [r3]
 4146              	.L216:
 582:.\main.c      ****         if (adc_flag) {
 4147              		.loc 4 582 0
 4148 00e2 2B4B     		ldr	r3, .L221+36
 4149 00e4 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 4150 00e6 002B     		cmp	r3, #0
 4151 00e8 07D1     		bne	.L217
 582:.\main.c      ****         if (adc_flag) {
 4152              		.loc 4 582 0 is_stmt 0 discriminator 1
 4153 00ea 294B     		ldr	r3, .L221+36
 4154 00ec DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 4155 00ee 002B     		cmp	r3, #0
 4156 00f0 03D1     		bne	.L217
 582:.\main.c      ****         if (adc_flag) {
 4157              		.loc 4 582 0 discriminator 2
 4158 00f2 274B     		ldr	r3, .L221+36
 4159 00f4 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4160 00f6 002B     		cmp	r3, #0
 4161 00f8 EAD1     		bne	.L218
 4162              	.L217:
 586:.\main.c      ****         }
 587:.\main.c      ****     }
 588:.\main.c      ****     
 589:.\main.c      ****     usbPutString(" - turn 135\r\n");
 4163              		.loc 4 589 0 is_stmt 1
 4164 00fa 2648     		ldr	r0, .L221+40
 4165 00fc FFF7FEFF 		bl	usbPutString
 590:.\main.c      ****     
 591:.\main.c      ****     // make the turn
 592:.\main.c      ****     setWheelDirection(TRUE, FALSE);
 4166              		.loc 4 592 0
 4167 0100 0120     		movs	r0, #1
 4168 0102 0021     		movs	r1, #0
 4169 0104 FFF7FEFF 		bl	setWheelDirection
 593:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 4170              		.loc 4 593 0
 4171 0108 4FF4E170 		mov	r0, #450
 4172 010c FFF7FEFF 		bl	PWM_1_WriteCompare
 594:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 4173              		.loc 4 594 0
 4174 0110 4FF4E170 		mov	r0, #450
 4175 0114 FFF7FEFF 		bl	PWM_2_WriteCompare
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 94


 595:.\main.c      ****     
 596:.\main.c      ****     QuadDec_M1_SetCounter(prevCountM1);
 4176              		.loc 4 596 0
 4177 0118 3B69     		ldr	r3, [r7, #16]
 4178 011a 9BB2     		uxth	r3, r3
 4179 011c 1BB2     		sxth	r3, r3
 4180 011e 1846     		mov	r0, r3
 4181 0120 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 597:.\main.c      ****     QuadDec_M2_SetCounter(prevCountM2);
 4182              		.loc 4 597 0
 4183 0124 FB68     		ldr	r3, [r7, #12]
 4184 0126 9BB2     		uxth	r3, r3
 4185 0128 1BB2     		sxth	r3, r3
 4186 012a 1846     		mov	r0, r3
 4187 012c FFF7FEFF 		bl	QuadDec_M2_SetCounter
 598:.\main.c      ****     isr_TS_Enable();
 4188              		.loc 4 598 0
 4189 0130 FFF7FEFF 		bl	isr_TS_Enable
 599:.\main.c      ****     
 600:.\main.c      ****     
 601:.\main.c      ****     // the number 180 is roughly a 135 degree turn
 602:.\main.c      ****     turnForDegrees(180); // so that it doesn't stop if it's already on a line
 4190              		.loc 4 602 0
 4191 0134 B420     		movs	r0, #180
 4192 0136 FFF7FEFF 		bl	turnForDegrees
 603:.\main.c      ****     
 604:.\main.c      ****     usbPutString(" - finish turn\r\n");
 4193              		.loc 4 604 0
 4194 013a 1748     		ldr	r0, .L221+44
 4195 013c FFF7FEFF 		bl	usbPutString
 605:.\main.c      ****     
 606:.\main.c      ****     // finish turn
 607:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 4196              		.loc 4 607 0
 4197 0140 08E0     		b	.L219
 4198              	.L220:
 608:.\main.c      ****         if (adc_flag) {
 4199              		.loc 4 608 0
 4200 0142 0C4B     		ldr	r3, .L221+8
 4201 0144 1B68     		ldr	r3, [r3]
 4202 0146 002B     		cmp	r3, #0
 4203 0148 04D0     		beq	.L219
 609:.\main.c      ****             updateSensorValues();
 4204              		.loc 4 609 0
 4205 014a FFF7FEFF 		bl	updateSensorValues
 610:.\main.c      ****             adc_flag = FALSE;
 4206              		.loc 4 610 0
 4207 014e 094B     		ldr	r3, .L221+8
 4208 0150 0022     		movs	r2, #0
 4209 0152 1A60     		str	r2, [r3]
 4210              	.L219:
 607:.\main.c      ****         if (adc_flag) {
 4211              		.loc 4 607 0
 4212 0154 0E4B     		ldr	r3, .L221+36
 4213 0156 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 4214 0158 002B     		cmp	r3, #0
 4215 015a F2D0     		beq	.L220
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 95


 611:.\main.c      ****         }
 612:.\main.c      ****     }
 613:.\main.c      ****     setWheelDirection(TRUE, TRUE);
 4216              		.loc 4 613 0
 4217 015c 0120     		movs	r0, #1
 4218 015e 0121     		movs	r1, #1
 4219 0160 FFF7FEFF 		bl	setWheelDirection
 614:.\main.c      **** }
 4220              		.loc 4 614 0
 4221 0164 1837     		adds	r7, r7, #24
 4222              		.cfi_def_cfa_offset 8
 4223 0166 BD46     		mov	sp, r7
 4224              		.cfi_def_cfa_register 13
 4225              		@ sp needed
 4226 0168 80BD     		pop	{r7, pc}
 4227              	.L222:
 4228 016a 00BF     		.align	2
 4229              	.L221:
 4230 016c 04010000 		.word	.LC18
 4231 0170 10020000 		.word	.LC31
 4232 0174 00000000 		.word	adc_flag
 4233 0178 00000000 		.word	timer_flag
 4234 017c 00000000 		.word	prevCountM1
 4235 0180 00000000 		.word	prevCountM2
 4236 0184 00000000 		.word	countM1
 4237 0188 00000000 		.word	countM2
 4238 018c 28020000 		.word	.LC32
 4239 0190 00000000 		.word	sensor_readings
 4240 0194 44020000 		.word	.LC33
 4241 0198 7C010000 		.word	.LC26
 4242              		.cfi_endproc
 4243              	.LFE92:
 4244              		.size	uTurn, .-uTurn
 4245              		.section	.text.changeLeftWheelSpeed,"ax",%progbits
 4246              		.align	2
 4247              		.global	changeLeftWheelSpeed
 4248              		.thumb
 4249              		.thumb_func
 4250              		.type	changeLeftWheelSpeed, %function
 4251              	changeLeftWheelSpeed:
 4252              	.LFB93:
 615:.\main.c      **** 
 616:.\main.c      **** // --------------------------------------------- HELPERS ------------------------------------------
 617:.\main.c      **** void changeLeftWheelSpeed(int amount) {
 4253              		.loc 4 617 0
 4254              		.cfi_startproc
 4255              		@ args = 0, pretend = 0, frame = 16
 4256              		@ frame_needed = 1, uses_anonymous_args = 0
 4257 0000 80B5     		push	{r7, lr}
 4258              		.cfi_def_cfa_offset 8
 4259              		.cfi_offset 7, -8
 4260              		.cfi_offset 14, -4
 4261 0002 84B0     		sub	sp, sp, #16
 4262              		.cfi_def_cfa_offset 24
 4263 0004 00AF     		add	r7, sp, #0
 4264              		.cfi_def_cfa_register 7
 4265 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 96


 618:.\main.c      ****     int new_value = PWM_1_ReadCompare() + amount;
 4266              		.loc 4 618 0
 4267 0008 FFF7FEFF 		bl	PWM_1_ReadCompare
 4268 000c 0346     		mov	r3, r0
 4269 000e 1A46     		mov	r2, r3
 4270 0010 7B68     		ldr	r3, [r7, #4]
 4271 0012 1344     		add	r3, r3, r2
 4272 0014 FB60     		str	r3, [r7, #12]
 619:.\main.c      ****     PWM_1_WriteCompare((new_value > 0) ? new_value:0); // account for underflow
 4273              		.loc 4 619 0
 4274 0016 FB68     		ldr	r3, [r7, #12]
 4275 0018 23EAE373 		bic	r3, r3, r3, asr #31
 4276 001c 9BB2     		uxth	r3, r3
 4277 001e 1846     		mov	r0, r3
 4278 0020 FFF7FEFF 		bl	PWM_1_WriteCompare
 620:.\main.c      **** }
 4279              		.loc 4 620 0
 4280 0024 1037     		adds	r7, r7, #16
 4281              		.cfi_def_cfa_offset 8
 4282 0026 BD46     		mov	sp, r7
 4283              		.cfi_def_cfa_register 13
 4284              		@ sp needed
 4285 0028 80BD     		pop	{r7, pc}
 4286              		.cfi_endproc
 4287              	.LFE93:
 4288              		.size	changeLeftWheelSpeed, .-changeLeftWheelSpeed
 4289 002a 00BF     		.section	.text.changeRightWheelSpeed,"ax",%progbits
 4290              		.align	2
 4291              		.global	changeRightWheelSpeed
 4292              		.thumb
 4293              		.thumb_func
 4294              		.type	changeRightWheelSpeed, %function
 4295              	changeRightWheelSpeed:
 4296              	.LFB94:
 621:.\main.c      **** 
 622:.\main.c      **** void changeRightWheelSpeed(int amount){
 4297              		.loc 4 622 0
 4298              		.cfi_startproc
 4299              		@ args = 0, pretend = 0, frame = 16
 4300              		@ frame_needed = 1, uses_anonymous_args = 0
 4301 0000 80B5     		push	{r7, lr}
 4302              		.cfi_def_cfa_offset 8
 4303              		.cfi_offset 7, -8
 4304              		.cfi_offset 14, -4
 4305 0002 84B0     		sub	sp, sp, #16
 4306              		.cfi_def_cfa_offset 24
 4307 0004 00AF     		add	r7, sp, #0
 4308              		.cfi_def_cfa_register 7
 4309 0006 7860     		str	r0, [r7, #4]
 623:.\main.c      ****     int new_value = PWM_2_ReadCompare() + amount;
 4310              		.loc 4 623 0
 4311 0008 FFF7FEFF 		bl	PWM_2_ReadCompare
 4312 000c 0346     		mov	r3, r0
 4313 000e 1A46     		mov	r2, r3
 4314 0010 7B68     		ldr	r3, [r7, #4]
 4315 0012 1344     		add	r3, r3, r2
 4316 0014 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 97


 624:.\main.c      ****     PWM_2_WriteCompare((new_value > 0) ? new_value:0); // account for underflow
 4317              		.loc 4 624 0
 4318 0016 FB68     		ldr	r3, [r7, #12]
 4319 0018 23EAE373 		bic	r3, r3, r3, asr #31
 4320 001c 9BB2     		uxth	r3, r3
 4321 001e 1846     		mov	r0, r3
 4322 0020 FFF7FEFF 		bl	PWM_2_WriteCompare
 625:.\main.c      **** }
 4323              		.loc 4 625 0
 4324 0024 1037     		adds	r7, r7, #16
 4325              		.cfi_def_cfa_offset 8
 4326 0026 BD46     		mov	sp, r7
 4327              		.cfi_def_cfa_register 13
 4328              		@ sp needed
 4329 0028 80BD     		pop	{r7, pc}
 4330              		.cfi_endproc
 4331              	.LFE94:
 4332              		.size	changeRightWheelSpeed, .-changeRightWheelSpeed
 4333 002a 00BF     		.section	.text.startWheels,"ax",%progbits
 4334              		.align	2
 4335              		.global	startWheels
 4336              		.thumb
 4337              		.thumb_func
 4338              		.type	startWheels, %function
 4339              	startWheels:
 4340              	.LFB95:
 626:.\main.c      **** 
 627:.\main.c      **** void startWheels() {
 4341              		.loc 4 627 0
 4342              		.cfi_startproc
 4343              		@ args = 0, pretend = 0, frame = 0
 4344              		@ frame_needed = 1, uses_anonymous_args = 0
 4345 0000 80B5     		push	{r7, lr}
 4346              		.cfi_def_cfa_offset 8
 4347              		.cfi_offset 7, -8
 4348              		.cfi_offset 14, -4
 4349 0002 00AF     		add	r7, sp, #0
 4350              		.cfi_def_cfa_register 7
 628:.\main.c      ****     PWM_1_WriteCompare(400);
 4351              		.loc 4 628 0
 4352 0004 4FF4C870 		mov	r0, #400
 4353 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
 629:.\main.c      ****     PWM_2_WriteCompare(400);
 4354              		.loc 4 629 0
 4355 000c 4FF4C870 		mov	r0, #400
 4356 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
 630:.\main.c      **** }
 4357              		.loc 4 630 0
 4358 0014 80BD     		pop	{r7, pc}
 4359              		.cfi_endproc
 4360              	.LFE95:
 4361              		.size	startWheels, .-startWheels
 4362 0016 00BF     		.section	.text.stopWheels,"ax",%progbits
 4363              		.align	2
 4364              		.global	stopWheels
 4365              		.thumb
 4366              		.thumb_func
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 98


 4367              		.type	stopWheels, %function
 4368              	stopWheels:
 4369              	.LFB96:
 631:.\main.c      **** 
 632:.\main.c      **** void stopWheels() {
 4370              		.loc 4 632 0
 4371              		.cfi_startproc
 4372              		@ args = 0, pretend = 0, frame = 0
 4373              		@ frame_needed = 1, uses_anonymous_args = 0
 4374 0000 80B5     		push	{r7, lr}
 4375              		.cfi_def_cfa_offset 8
 4376              		.cfi_offset 7, -8
 4377              		.cfi_offset 14, -4
 4378 0002 00AF     		add	r7, sp, #0
 4379              		.cfi_def_cfa_register 7
 633:.\main.c      ****     PWM_1_WriteCompare(0);
 4380              		.loc 4 633 0
 4381 0004 0020     		movs	r0, #0
 4382 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 634:.\main.c      ****     PWM_2_WriteCompare(0);
 4383              		.loc 4 634 0
 4384 000a 0020     		movs	r0, #0
 4385 000c FFF7FEFF 		bl	PWM_2_WriteCompare
 635:.\main.c      **** }
 4386              		.loc 4 635 0
 4387 0010 80BD     		pop	{r7, pc}
 4388              		.cfi_endproc
 4389              	.LFE96:
 4390              		.size	stopWheels, .-stopWheels
 4391              		.global	__aeabi_fdiv
 4392              		.global	__aeabi_f2d
 4393              		.global	__aeabi_dmul
 4394              		.global	__aeabi_d2f
 4395 0012 00BF     		.section	.text.getDistance,"ax",%progbits
 4396              		.align	2
 4397              		.global	getDistance
 4398              		.thumb
 4399              		.thumb_func
 4400              		.type	getDistance, %function
 4401              	getDistance:
 4402              	.LFB97:
 636:.\main.c      **** 
 637:.\main.c      **** float getDistance(int prevCountM1, int prevCountM2) {
 4403              		.loc 4 637 0
 4404              		.cfi_startproc
 4405              		@ args = 0, pretend = 0, frame = 16
 4406              		@ frame_needed = 1, uses_anonymous_args = 0
 4407 0000 80B5     		push	{r7, lr}
 4408              		.cfi_def_cfa_offset 8
 4409              		.cfi_offset 7, -8
 4410              		.cfi_offset 14, -4
 4411 0002 84B0     		sub	sp, sp, #16
 4412              		.cfi_def_cfa_offset 24
 4413 0004 00AF     		add	r7, sp, #0
 4414              		.cfi_def_cfa_register 7
 4415 0006 7860     		str	r0, [r7, #4]
 4416 0008 3960     		str	r1, [r7]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 99


 638:.\main.c      ****     float m1_dist = ((float)abs(countM1 - prevCountM1) / TICKS_PER_REV) * LINEAR_DISTANCE_PER_REV;
 4417              		.loc 4 638 0
 4418 000a 2D4B     		ldr	r3, .L229+8
 4419 000c 1A68     		ldr	r2, [r3]
 4420 000e 7B68     		ldr	r3, [r7, #4]
 4421 0010 D31A     		subs	r3, r2, r3
 4422 0012 002B     		cmp	r3, #0
 4423 0014 B8BF     		it	lt
 4424 0016 5B42     		rsblt	r3, r3, #0
 4425 0018 1846     		mov	r0, r3
 4426 001a FFF7FEFF 		bl	__aeabi_i2f
 4427 001e 0346     		mov	r3, r0
 4428 0020 1846     		mov	r0, r3
 4429 0022 2849     		ldr	r1, .L229+12
 4430 0024 FFF7FEFF 		bl	__aeabi_fdiv
 4431 0028 0346     		mov	r3, r0
 4432 002a 1846     		mov	r0, r3
 4433 002c FFF7FEFF 		bl	__aeabi_f2d
 4434 0030 0246     		mov	r2, r0
 4435 0032 0B46     		mov	r3, r1
 4436 0034 1046     		mov	r0, r2
 4437 0036 1946     		mov	r1, r3
 4438 0038 1FA3     		adr	r3, .L229
 4439 003a D3E90023 		ldrd	r2, [r3]
 4440 003e FFF7FEFF 		bl	__aeabi_dmul
 4441 0042 0246     		mov	r2, r0
 4442 0044 0B46     		mov	r3, r1
 4443 0046 1046     		mov	r0, r2
 4444 0048 1946     		mov	r1, r3
 4445 004a FFF7FEFF 		bl	__aeabi_d2f
 4446 004e 0346     		mov	r3, r0
 4447 0050 FB60     		str	r3, [r7, #12]	@ float
 639:.\main.c      ****     float m2_dist = ((float)abs(countM2 - prevCountM2) / TICKS_PER_REV) * LINEAR_DISTANCE_PER_REV;
 4448              		.loc 4 639 0
 4449 0052 1D4B     		ldr	r3, .L229+16
 4450 0054 1A68     		ldr	r2, [r3]
 4451 0056 3B68     		ldr	r3, [r7]
 4452 0058 D31A     		subs	r3, r2, r3
 4453 005a 002B     		cmp	r3, #0
 4454 005c B8BF     		it	lt
 4455 005e 5B42     		rsblt	r3, r3, #0
 4456 0060 1846     		mov	r0, r3
 4457 0062 FFF7FEFF 		bl	__aeabi_i2f
 4458 0066 0346     		mov	r3, r0
 4459 0068 1846     		mov	r0, r3
 4460 006a 1649     		ldr	r1, .L229+12
 4461 006c FFF7FEFF 		bl	__aeabi_fdiv
 4462 0070 0346     		mov	r3, r0
 4463 0072 1846     		mov	r0, r3
 4464 0074 FFF7FEFF 		bl	__aeabi_f2d
 4465 0078 0246     		mov	r2, r0
 4466 007a 0B46     		mov	r3, r1
 4467 007c 1046     		mov	r0, r2
 4468 007e 1946     		mov	r1, r3
 4469 0080 0DA3     		adr	r3, .L229
 4470 0082 D3E90023 		ldrd	r2, [r3]
 4471 0086 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 100


 4472 008a 0246     		mov	r2, r0
 4473 008c 0B46     		mov	r3, r1
 4474 008e 1046     		mov	r0, r2
 4475 0090 1946     		mov	r1, r3
 4476 0092 FFF7FEFF 		bl	__aeabi_d2f
 4477 0096 0346     		mov	r3, r0
 4478 0098 BB60     		str	r3, [r7, #8]	@ float
 640:.\main.c      ****     return (m1_dist + m2_dist) / 2;
 4479              		.loc 4 640 0
 4480 009a F868     		ldr	r0, [r7, #12]	@ float
 4481 009c B968     		ldr	r1, [r7, #8]	@ float
 4482 009e FFF7FEFF 		bl	__aeabi_fadd
 4483 00a2 0346     		mov	r3, r0
 4484 00a4 1846     		mov	r0, r3
 4485 00a6 4FF08041 		mov	r1, #1073741824
 4486 00aa FFF7FEFF 		bl	__aeabi_fdiv
 4487 00ae 0346     		mov	r3, r0
 641:.\main.c      **** };
 4488              		.loc 4 641 0
 4489 00b0 1846     		mov	r0, r3
 4490 00b2 1037     		adds	r7, r7, #16
 4491              		.cfi_def_cfa_offset 8
 4492 00b4 BD46     		mov	sp, r7
 4493              		.cfi_def_cfa_register 13
 4494              		@ sp needed
 4495 00b6 80BD     		pop	{r7, pc}
 4496              	.L230:
 4497              		.align	3
 4498              	.L229:
 4499 00b8 CE8C7E34 		.word	880708814
 4500 00bc 9C6B3440 		.word	1077177244
 4501 00c0 00000000 		.word	countM1
 4502 00c4 00006443 		.word	1130627072
 4503 00c8 00000000 		.word	countM2
 4504              		.cfi_endproc
 4505              	.LFE97:
 4506              		.size	getDistance, .-getDistance
 4507 00cc AFF30080 		.section	.text.correctSpeed,"ax",%progbits
 4508              		.align	2
 4509              		.global	correctSpeed
 4510              		.thumb
 4511              		.thumb_func
 4512              		.type	correctSpeed, %function
 4513              	correctSpeed:
 4514              	.LFB98:
 642:.\main.c      **** 
 643:.\main.c      **** /* ## SPEED CONTROL ## 
 644:.\main.c      **** * Gets difference between counts, compares to difference we expect. Add correction to PWM.*/
 645:.\main.c      **** void correctSpeed(int prevCount, int count, int desired_count, int isLeftWheel){    
 4515              		.loc 4 645 0
 4516              		.cfi_startproc
 4517              		@ args = 0, pretend = 0, frame = 24
 4518              		@ frame_needed = 1, uses_anonymous_args = 0
 4519 0000 80B5     		push	{r7, lr}
 4520              		.cfi_def_cfa_offset 8
 4521              		.cfi_offset 7, -8
 4522              		.cfi_offset 14, -4
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 101


 4523 0002 86B0     		sub	sp, sp, #24
 4524              		.cfi_def_cfa_offset 32
 4525 0004 00AF     		add	r7, sp, #0
 4526              		.cfi_def_cfa_register 7
 4527 0006 F860     		str	r0, [r7, #12]
 4528 0008 B960     		str	r1, [r7, #8]
 4529 000a 7A60     		str	r2, [r7, #4]
 4530 000c 3B60     		str	r3, [r7]
 646:.\main.c      ****     // Account for overflow edge or other unknown error
 647:.\main.c      ****     if (prevCount > count) return;
 4531              		.loc 4 647 0
 4532 000e FA68     		ldr	r2, [r7, #12]
 4533 0010 BB68     		ldr	r3, [r7, #8]
 4534 0012 9A42     		cmp	r2, r3
 4535 0014 00DD     		ble	.L232
 4536 0016 19E0     		b	.L231
 4537              	.L232:
 648:.\main.c      ****     
 649:.\main.c      ****     // Account for when PSoc is powered but wheels aren't moving
 650:.\main.c      ****     int diff_count = abs(count - prevCount);
 4538              		.loc 4 650 0
 4539 0018 BA68     		ldr	r2, [r7, #8]
 4540 001a FB68     		ldr	r3, [r7, #12]
 4541 001c D31A     		subs	r3, r2, r3
 4542 001e 002B     		cmp	r3, #0
 4543 0020 B8BF     		it	lt
 4544 0022 5B42     		rsblt	r3, r3, #0
 4545 0024 7B61     		str	r3, [r7, #20]
 651:.\main.c      ****     if (diff_count == 0) return;
 4546              		.loc 4 651 0
 4547 0026 7B69     		ldr	r3, [r7, #20]
 4548 0028 002B     		cmp	r3, #0
 4549 002a 00D1     		bne	.L234
 4550              		.loc 4 651 0 is_stmt 0 discriminator 2
 4551 002c 0EE0     		b	.L231
 4552              	.L234:
 652:.\main.c      ****         
 653:.\main.c      ****     /* Determine correction that must be applied to the wheel
 654:.\main.c      ****     * desired_count > diff_count :-> wheel is slow; increase PWM
 655:.\main.c      ****     * desired_count < diff_count :-> wheel is fast; decrease PWM
 656:.\main.c      ****     * desired_count == diff_count :-> wheel is stable; do nothing
 657:.\main.c      ****     */
 658:.\main.c      ****     int correction = desired_count-diff_count;
 4553              		.loc 4 658 0 is_stmt 1
 4554 002e 7A68     		ldr	r2, [r7, #4]
 4555 0030 7B69     		ldr	r3, [r7, #20]
 4556 0032 D31A     		subs	r3, r2, r3
 4557 0034 3B61     		str	r3, [r7, #16]
 659:.\main.c      ****     
 660:.\main.c      ****     // Apply the speed correction to the appropriate wheel          
 661:.\main.c      ****     if (isLeftWheel) changeLeftWheelSpeed(correction);
 4558              		.loc 4 661 0
 4559 0036 3B68     		ldr	r3, [r7]
 4560 0038 002B     		cmp	r3, #0
 4561 003a 03D0     		beq	.L235
 4562              		.loc 4 661 0 is_stmt 0 discriminator 1
 4563 003c 3869     		ldr	r0, [r7, #16]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 102


 4564 003e FFF7FEFF 		bl	changeLeftWheelSpeed
 4565 0042 02E0     		b	.L236
 4566              	.L235:
 662:.\main.c      ****     else changeRightWheelSpeed(correction);
 4567              		.loc 4 662 0 is_stmt 1
 4568 0044 3869     		ldr	r0, [r7, #16]
 4569 0046 FFF7FEFF 		bl	changeRightWheelSpeed
 4570              	.L236:
 663:.\main.c      ****     
 664:.\main.c      ****     return;
 4571              		.loc 4 664 0 discriminator 3
 4572 004a 00BF     		nop
 4573              	.L231:
 665:.\main.c      **** }
 4574              		.loc 4 665 0
 4575 004c 1837     		adds	r7, r7, #24
 4576              		.cfi_def_cfa_offset 8
 4577 004e BD46     		mov	sp, r7
 4578              		.cfi_def_cfa_register 13
 4579              		@ sp needed
 4580 0050 80BD     		pop	{r7, pc}
 4581              		.cfi_endproc
 4582              	.LFE98:
 4583              		.size	correctSpeed, .-correctSpeed
 4584 0052 00BF     		.section	.text.setWheelDirection,"ax",%progbits
 4585              		.align	2
 4586              		.global	setWheelDirection
 4587              		.thumb
 4588              		.thumb_func
 4589              		.type	setWheelDirection, %function
 4590              	setWheelDirection:
 4591              	.LFB99:
 666:.\main.c      **** 
 667:.\main.c      **** void setWheelDirection(int leftIsForward, int rightIsForward){
 4592              		.loc 4 667 0
 4593              		.cfi_startproc
 4594              		@ args = 0, pretend = 0, frame = 8
 4595              		@ frame_needed = 1, uses_anonymous_args = 0
 4596 0000 80B5     		push	{r7, lr}
 4597              		.cfi_def_cfa_offset 8
 4598              		.cfi_offset 7, -8
 4599              		.cfi_offset 14, -4
 4600 0002 82B0     		sub	sp, sp, #8
 4601              		.cfi_def_cfa_offset 16
 4602 0004 00AF     		add	r7, sp, #0
 4603              		.cfi_def_cfa_register 7
 4604 0006 7860     		str	r0, [r7, #4]
 4605 0008 3960     		str	r1, [r7]
 668:.\main.c      ****     INV1_Write(!leftIsForward);
 4606              		.loc 4 668 0
 4607 000a 7B68     		ldr	r3, [r7, #4]
 4608 000c 002B     		cmp	r3, #0
 4609 000e 0CBF     		ite	eq
 4610 0010 0123     		moveq	r3, #1
 4611 0012 0023     		movne	r3, #0
 4612 0014 DBB2     		uxtb	r3, r3
 4613 0016 1846     		mov	r0, r3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 103


 4614 0018 FFF7FEFF 		bl	INV1_Write
 669:.\main.c      ****     INV2_Write(rightIsForward);
 4615              		.loc 4 669 0
 4616 001c 3B68     		ldr	r3, [r7]
 4617 001e DBB2     		uxtb	r3, r3
 4618 0020 1846     		mov	r0, r3
 4619 0022 FFF7FEFF 		bl	INV2_Write
 670:.\main.c      **** }
 4620              		.loc 4 670 0
 4621 0026 0837     		adds	r7, r7, #8
 4622              		.cfi_def_cfa_offset 8
 4623 0028 BD46     		mov	sp, r7
 4624              		.cfi_def_cfa_register 13
 4625              		@ sp needed
 4626 002a 80BD     		pop	{r7, pc}
 4627              		.cfi_endproc
 4628              	.LFE99:
 4629              		.size	setWheelDirection, .-setWheelDirection
 4630              		.section	.text.usbPutString,"ax",%progbits
 4631              		.align	2
 4632              		.global	usbPutString
 4633              		.thumb
 4634              		.thumb_func
 4635              		.type	usbPutString, %function
 4636              	usbPutString:
 4637              	.LFB100:
 671:.\main.c      **** 
 672:.\main.c      **** //* ========================================
 673:.\main.c      **** void usbPutString(char *s) {
 4638              		.loc 4 673 0
 4639              		.cfi_startproc
 4640              		@ args = 0, pretend = 0, frame = 8
 4641              		@ frame_needed = 1, uses_anonymous_args = 0
 4642              		@ link register save eliminated.
 4643 0000 80B4     		push	{r7}
 4644              		.cfi_def_cfa_offset 4
 4645              		.cfi_offset 7, -4
 4646 0002 83B0     		sub	sp, sp, #12
 4647              		.cfi_def_cfa_offset 16
 4648 0004 00AF     		add	r7, sp, #0
 4649              		.cfi_def_cfa_register 7
 4650 0006 7860     		str	r0, [r7, #4]
 674:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
 675:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 676:.\main.c      **** //  length to 62 char (63rd char is a '!')
 677:.\main.c      ****     
 678:.\main.c      **** #ifdef PUTTY
 679:.\main.c      ****     while (USBUART_CDCIsReady() == 0){ };
 680:.\main.c      ****     USBUART_PutData((uint8 *)s, strlen(s));
 681:.\main.c      **** #endif
 682:.\main.c      ****     (void)s;
 683:.\main.c      ****     return;
 4651              		.loc 4 683 0
 4652 0008 00BF     		nop
 684:.\main.c      **** }
 4653              		.loc 4 684 0
 4654 000a 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 104


 4655              		.cfi_def_cfa_offset 4
 4656 000c BD46     		mov	sp, r7
 4657              		.cfi_def_cfa_register 13
 4658              		@ sp needed
 4659 000e 5DF8047B 		ldr	r7, [sp], #4
 4660              		.cfi_restore 7
 4661              		.cfi_def_cfa_offset 0
 4662 0012 7047     		bx	lr
 4663              		.cfi_endproc
 4664              	.LFE100:
 4665              		.size	usbPutString, .-usbPutString
 4666              		.section	.rodata
 4667 0252 0000     		.align	2
 4668              	.LC34:
 4669 0254 4C00     		.ascii	"L\000"
 4670 0256 0000     		.align	2
 4671              	.LC35:
 4672 0258 5200     		.ascii	"R\000"
 4673 025a 0000     		.align	2
 4674              	.LC36:
 4675 025c 5500     		.ascii	"U\000"
 4676 025e 0000     		.align	2
 4677              	.LC37:
 4678 0260 2C00     		.ascii	",\000"
 4679 0262 0000     		.align	2
 4680              	.LC38:
 4681 0264 290D0A00 		.ascii	")\015\012\000"
 4682              		.section	.text.printCommandsUSB,"ax",%progbits
 4683              		.align	2
 4684              		.global	printCommandsUSB
 4685              		.thumb
 4686              		.thumb_func
 4687              		.type	printCommandsUSB, %function
 4688              	printCommandsUSB:
 4689              	.LFB101:
 685:.\main.c      **** 
 686:.\main.c      **** /* Prints the commands */
 687:.\main.c      **** void printCommandsUSB(int *commands){
 4690              		.loc 4 687 0
 4691              		.cfi_startproc
 4692              		@ args = 0, pretend = 0, frame = 48
 4693              		@ frame_needed = 1, uses_anonymous_args = 0
 4694 0000 80B5     		push	{r7, lr}
 4695              		.cfi_def_cfa_offset 8
 4696              		.cfi_offset 7, -8
 4697              		.cfi_offset 14, -4
 4698 0002 8CB0     		sub	sp, sp, #48
 4699              		.cfi_def_cfa_offset 56
 4700 0004 00AF     		add	r7, sp, #0
 4701              		.cfi_def_cfa_register 7
 4702 0006 7860     		str	r0, [r7, #4]
 688:.\main.c      ****     //fputs("Commands: (",stdout);
 689:.\main.c      ****     usbPutString("Commands: (");
 4703              		.loc 4 689 0
 4704 0008 2A48     		ldr	r0, .L254
 4705 000a FFF7FEFF 		bl	usbPutString
 690:.\main.c      ****     int i;
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 105


 691:.\main.c      ****     char buff[32];
 692:.\main.c      ****     for (i = 0; i < MAX_COMMAND_LENGTH; i++){
 4706              		.loc 4 692 0
 4707 000e 0023     		movs	r3, #0
 4708 0010 FB62     		str	r3, [r7, #44]
 4709 0012 45E0     		b	.L241
 4710              	.L252:
 693:.\main.c      ****         if (commands[i] == EMPTY_COMMAND){
 4711              		.loc 4 693 0
 4712 0014 FB6A     		ldr	r3, [r7, #44]
 4713 0016 9B00     		lsls	r3, r3, #2
 4714 0018 7A68     		ldr	r2, [r7, #4]
 4715 001a 1344     		add	r3, r3, r2
 4716 001c 1B68     		ldr	r3, [r3]
 4717 001e 002B     		cmp	r3, #0
 4718 0020 03D1     		bne	.L242
 694:.\main.c      ****             if (i > 0) break;
 4719              		.loc 4 694 0
 4720 0022 FB6A     		ldr	r3, [r7, #44]
 4721 0024 002B     		cmp	r3, #0
 4722 0026 41DD     		ble	.L240
 4723 0028 3DE0     		b	.L244
 4724              	.L242:
 695:.\main.c      ****             return;
 696:.\main.c      ****         }
 697:.\main.c      ****         switch(commands[i]){
 4725              		.loc 4 697 0
 4726 002a FB6A     		ldr	r3, [r7, #44]
 4727 002c 9B00     		lsls	r3, r3, #2
 4728 002e 7A68     		ldr	r2, [r7, #4]
 4729 0030 1344     		add	r3, r3, r2
 4730 0032 1B68     		ldr	r3, [r3]
 4731 0034 13F1020F 		cmn	r3, #2
 4732 0038 0AD0     		beq	.L247
 4733 003a B3F1FF3F 		cmp	r3, #-1
 4734 003e 03D0     		beq	.L248
 4735 0040 13F1030F 		cmn	r3, #3
 4736 0044 08D0     		beq	.L249
 4737 0046 0BE0     		b	.L253
 4738              	.L248:
 698:.\main.c      ****             case LEFT_TURN:
 699:.\main.c      ****                 usbPutString("L");
 4739              		.loc 4 699 0
 4740 0048 1B48     		ldr	r0, .L254+4
 4741 004a FFF7FEFF 		bl	usbPutString
 700:.\main.c      ****                 break;
 4742              		.loc 4 700 0
 4743 004e 19E0     		b	.L250
 4744              	.L247:
 701:.\main.c      ****             case RIGHT_TURN:
 702:.\main.c      ****                 usbPutString("R");
 4745              		.loc 4 702 0
 4746 0050 1A48     		ldr	r0, .L254+8
 4747 0052 FFF7FEFF 		bl	usbPutString
 703:.\main.c      ****                 break;
 4748              		.loc 4 703 0
 4749 0056 15E0     		b	.L250
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 106


 4750              	.L249:
 704:.\main.c      ****             case U_TURN:
 705:.\main.c      ****                 usbPutString("U");
 4751              		.loc 4 705 0
 4752 0058 1948     		ldr	r0, .L254+12
 4753 005a FFF7FEFF 		bl	usbPutString
 706:.\main.c      ****                 break;
 4754              		.loc 4 706 0
 4755 005e 11E0     		b	.L250
 4756              	.L253:
 707:.\main.c      ****             default:
 708:.\main.c      ****                 itoa(commands[i], buff, 10);
 4757              		.loc 4 708 0
 4758 0060 FB6A     		ldr	r3, [r7, #44]
 4759 0062 9B00     		lsls	r3, r3, #2
 4760 0064 7A68     		ldr	r2, [r7, #4]
 4761 0066 1344     		add	r3, r3, r2
 4762 0068 1A68     		ldr	r2, [r3]
 4763 006a 07F10C03 		add	r3, r7, #12
 4764 006e 1046     		mov	r0, r2
 4765 0070 1946     		mov	r1, r3
 4766 0072 0A22     		movs	r2, #10
 4767 0074 FFF7FEFF 		bl	itoa
 709:.\main.c      ****                 usbPutString(buff);
 4768              		.loc 4 709 0
 4769 0078 07F10C03 		add	r3, r7, #12
 4770 007c 1846     		mov	r0, r3
 4771 007e FFF7FEFF 		bl	usbPutString
 710:.\main.c      ****                 break;
 4772              		.loc 4 710 0
 4773 0082 00BF     		nop
 4774              	.L250:
 711:.\main.c      ****         };
 712:.\main.c      ****         if (commands[i+1] != EMPTY_COMMAND) usbPutString(",");
 4775              		.loc 4 712 0
 4776 0084 FB6A     		ldr	r3, [r7, #44]
 4777 0086 0133     		adds	r3, r3, #1
 4778 0088 9B00     		lsls	r3, r3, #2
 4779 008a 7A68     		ldr	r2, [r7, #4]
 4780 008c 1344     		add	r3, r3, r2
 4781 008e 1B68     		ldr	r3, [r3]
 4782 0090 002B     		cmp	r3, #0
 4783 0092 02D0     		beq	.L251
 4784              		.loc 4 712 0 is_stmt 0 discriminator 1
 4785 0094 0B48     		ldr	r0, .L254+16
 4786 0096 FFF7FEFF 		bl	usbPutString
 4787              	.L251:
 692:.\main.c      ****         if (commands[i] == EMPTY_COMMAND){
 4788              		.loc 4 692 0 is_stmt 1 discriminator 2
 4789 009a FB6A     		ldr	r3, [r7, #44]
 4790 009c 0133     		adds	r3, r3, #1
 4791 009e FB62     		str	r3, [r7, #44]
 4792              	.L241:
 692:.\main.c      ****         if (commands[i] == EMPTY_COMMAND){
 4793              		.loc 4 692 0 is_stmt 0 discriminator 1
 4794 00a0 FB6A     		ldr	r3, [r7, #44]
 4795 00a2 312B     		cmp	r3, #49
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 107


 4796 00a4 B6DD     		ble	.L252
 4797              	.L244:
 713:.\main.c      ****     }
 714:.\main.c      ****     usbPutString(")\r\n");
 4798              		.loc 4 714 0 is_stmt 1 discriminator 1
 4799 00a6 0848     		ldr	r0, .L254+20
 4800 00a8 FFF7FEFF 		bl	usbPutString
 4801              	.L240:
 715:.\main.c      **** }
 4802              		.loc 4 715 0
 4803 00ac 3037     		adds	r7, r7, #48
 4804              		.cfi_def_cfa_offset 8
 4805 00ae BD46     		mov	sp, r7
 4806              		.cfi_def_cfa_register 13
 4807              		@ sp needed
 4808 00b0 80BD     		pop	{r7, pc}
 4809              	.L255:
 4810 00b2 00BF     		.align	2
 4811              	.L254:
 4812 00b4 10000000 		.word	.LC5
 4813 00b8 54020000 		.word	.LC34
 4814 00bc 58020000 		.word	.LC35
 4815 00c0 5C020000 		.word	.LC36
 4816 00c4 60020000 		.word	.LC37
 4817 00c8 64020000 		.word	.LC38
 4818              		.cfi_endproc
 4819              	.LFE101:
 4820              		.size	printCommandsUSB, .-printCommandsUSB
 4821              		.section	.text.printSingleCommandUSB,"ax",%progbits
 4822              		.align	2
 4823              		.global	printSingleCommandUSB
 4824              		.thumb
 4825              		.thumb_func
 4826              		.type	printSingleCommandUSB, %function
 4827              	printSingleCommandUSB:
 4828              	.LFB102:
 716:.\main.c      **** 
 717:.\main.c      **** void printSingleCommandUSB(int command){
 4829              		.loc 4 717 0
 4830              		.cfi_startproc
 4831              		@ args = 0, pretend = 0, frame = 40
 4832              		@ frame_needed = 1, uses_anonymous_args = 0
 4833 0000 80B5     		push	{r7, lr}
 4834              		.cfi_def_cfa_offset 8
 4835              		.cfi_offset 7, -8
 4836              		.cfi_offset 14, -4
 4837 0002 8AB0     		sub	sp, sp, #40
 4838              		.cfi_def_cfa_offset 48
 4839 0004 00AF     		add	r7, sp, #0
 4840              		.cfi_def_cfa_register 7
 4841 0006 7860     		str	r0, [r7, #4]
 718:.\main.c      ****     char buff[32];
 719:.\main.c      ****     switch(command){
 4842              		.loc 4 719 0
 4843 0008 7B68     		ldr	r3, [r7, #4]
 4844 000a 13F1020F 		cmn	r3, #2
 4845 000e 0AD0     		beq	.L258
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 108


 4846 0010 B3F1FF3F 		cmp	r3, #-1
 4847 0014 03D0     		beq	.L259
 4848 0016 13F1030F 		cmn	r3, #3
 4849 001a 08D0     		beq	.L260
 4850 001c 0BE0     		b	.L262
 4851              	.L259:
 720:.\main.c      ****         case LEFT_TURN:
 721:.\main.c      ****             usbPutString("L");
 4852              		.loc 4 721 0
 4853 001e 0F48     		ldr	r0, .L263
 4854 0020 FFF7FEFF 		bl	usbPutString
 722:.\main.c      ****             break;
 4855              		.loc 4 722 0
 4856 0024 14E0     		b	.L261
 4857              	.L258:
 723:.\main.c      ****         case RIGHT_TURN:
 724:.\main.c      ****             usbPutString("R");
 4858              		.loc 4 724 0
 4859 0026 0E48     		ldr	r0, .L263+4
 4860 0028 FFF7FEFF 		bl	usbPutString
 725:.\main.c      ****             break;
 4861              		.loc 4 725 0
 4862 002c 10E0     		b	.L261
 4863              	.L260:
 726:.\main.c      ****         case U_TURN:
 727:.\main.c      ****             usbPutString("U");
 4864              		.loc 4 727 0
 4865 002e 0D48     		ldr	r0, .L263+8
 4866 0030 FFF7FEFF 		bl	usbPutString
 728:.\main.c      ****             break;
 4867              		.loc 4 728 0
 4868 0034 0CE0     		b	.L261
 4869              	.L262:
 729:.\main.c      ****         default:
 730:.\main.c      ****             itoa(command, buff, 10);
 4870              		.loc 4 730 0
 4871 0036 07F10803 		add	r3, r7, #8
 4872 003a 7868     		ldr	r0, [r7, #4]
 4873 003c 1946     		mov	r1, r3
 4874 003e 0A22     		movs	r2, #10
 4875 0040 FFF7FEFF 		bl	itoa
 731:.\main.c      ****             usbPutString(buff);
 4876              		.loc 4 731 0
 4877 0044 07F10803 		add	r3, r7, #8
 4878 0048 1846     		mov	r0, r3
 4879 004a FFF7FEFF 		bl	usbPutString
 732:.\main.c      ****             break;
 4880              		.loc 4 732 0
 4881 004e 00BF     		nop
 4882              	.L261:
 733:.\main.c      ****     };
 734:.\main.c      ****     usbPutString("\r\n");
 4883              		.loc 4 734 0
 4884 0050 0548     		ldr	r0, .L263+12
 4885 0052 FFF7FEFF 		bl	usbPutString
 735:.\main.c      **** }
 4886              		.loc 4 735 0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 109


 4887 0056 2837     		adds	r7, r7, #40
 4888              		.cfi_def_cfa_offset 8
 4889 0058 BD46     		mov	sp, r7
 4890              		.cfi_def_cfa_register 13
 4891              		@ sp needed
 4892 005a 80BD     		pop	{r7, pc}
 4893              	.L264:
 4894              		.align	2
 4895              	.L263:
 4896 005c 54020000 		.word	.LC34
 4897 0060 58020000 		.word	.LC35
 4898 0064 5C020000 		.word	.LC36
 4899 0068 38010000 		.word	.LC21
 4900              		.cfi_endproc
 4901              	.LFE102:
 4902              		.size	printSingleCommandUSB, .-printSingleCommandUSB
 4903              		.text
 4904              	.Letext0:
 4905              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4906              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4907              		.file 7 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4908              		.file 8 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4909              		.file 9 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4910              		.file 10 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9
 4911              		.file 11 "Generated_Source\\PSoC5/cytypes.h"
 4912              		.file 12 ".\\vars.h"
 4913              		.file 13 ".\\BFS/point.h"
 4914              		.file 14 "Generated_Source\\PSoC5/core_cm3.h"
 4915              		.file 15 ".\\BFS/map5.h"
 4916              		.section	.debug_info,"",%progbits
 4917              	.Ldebug_info0:
 4918 0000 72170000 		.4byte	0x1772
 4919 0004 0400     		.2byte	0x4
 4920 0006 00000000 		.4byte	.Ldebug_abbrev0
 4921 000a 04       		.byte	0x4
 4922 000b 01       		.uleb128 0x1
 4923 000c D9050000 		.4byte	.LASF262
 4924 0010 01       		.byte	0x1
 4925 0011 C80B0000 		.4byte	.LASF263
 4926 0015 92080000 		.4byte	.LASF264
 4927 0019 00000000 		.4byte	.Ldebug_ranges0+0
 4928 001d 00000000 		.4byte	0
 4929 0021 00000000 		.4byte	.Ldebug_line0
 4930 0025 02       		.uleb128 0x2
 4931 0026 01       		.byte	0x1
 4932 0027 06       		.byte	0x6
 4933 0028 E00A0000 		.4byte	.LASF0
 4934 002c 02       		.uleb128 0x2
 4935 002d 01       		.byte	0x1
 4936 002e 08       		.byte	0x8
 4937 002f 050A0000 		.4byte	.LASF1
 4938 0033 02       		.uleb128 0x2
 4939 0034 02       		.byte	0x2
 4940 0035 05       		.byte	0x5
 4941 0036 C0070000 		.4byte	.LASF2
 4942 003a 02       		.uleb128 0x2
 4943 003b 02       		.byte	0x2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 110


 4944 003c 07       		.byte	0x7
 4945 003d F30A0000 		.4byte	.LASF3
 4946 0041 03       		.uleb128 0x3
 4947 0042 E1000000 		.4byte	.LASF9
 4948 0046 05       		.byte	0x5
 4949 0047 3F       		.byte	0x3f
 4950 0048 4C000000 		.4byte	0x4c
 4951 004c 02       		.uleb128 0x2
 4952 004d 04       		.byte	0x4
 4953 004e 05       		.byte	0x5
 4954 004f E9070000 		.4byte	.LASF4
 4955 0053 02       		.uleb128 0x2
 4956 0054 04       		.byte	0x4
 4957 0055 07       		.byte	0x7
 4958 0056 A0090000 		.4byte	.LASF5
 4959 005a 02       		.uleb128 0x2
 4960 005b 08       		.byte	0x8
 4961 005c 05       		.byte	0x5
 4962 005d 3F050000 		.4byte	.LASF6
 4963 0061 02       		.uleb128 0x2
 4964 0062 08       		.byte	0x8
 4965 0063 07       		.byte	0x7
 4966 0064 98020000 		.4byte	.LASF7
 4967 0068 04       		.uleb128 0x4
 4968 0069 04       		.byte	0x4
 4969 006a 05       		.byte	0x5
 4970 006b 696E7400 		.ascii	"int\000"
 4971 006f 02       		.uleb128 0x2
 4972 0070 04       		.byte	0x4
 4973 0071 07       		.byte	0x7
 4974 0072 97000000 		.4byte	.LASF8
 4975 0076 05       		.uleb128 0x5
 4976 0077 04       		.byte	0x4
 4977 0078 03       		.uleb128 0x3
 4978 0079 0E010000 		.4byte	.LASF10
 4979 007d 06       		.byte	0x6
 4980 007e 07       		.byte	0x7
 4981 007f 68000000 		.4byte	0x68
 4982 0083 03       		.uleb128 0x3
 4983 0084 480B0000 		.4byte	.LASF11
 4984 0088 07       		.byte	0x7
 4985 0089 10       		.byte	0x10
 4986 008a 4C000000 		.4byte	0x4c
 4987 008e 03       		.uleb128 0x3
 4988 008f 81010000 		.4byte	.LASF12
 4989 0093 07       		.byte	0x7
 4990 0094 27       		.byte	0x27
 4991 0095 4C000000 		.4byte	0x4c
 4992 0099 06       		.uleb128 0x6
 4993 009a C3090000 		.4byte	.LASF13
 4994 009e 08       		.byte	0x8
 4995 009f 6101     		.2byte	0x161
 4996 00a1 6F000000 		.4byte	0x6f
 4997 00a5 07       		.uleb128 0x7
 4998 00a6 04       		.byte	0x4
 4999 00a7 07       		.byte	0x7
 5000 00a8 4A       		.byte	0x4a
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 111


 5001 00a9 C4000000 		.4byte	0xc4
 5002 00ad 08       		.uleb128 0x8
 5003 00ae BC040000 		.4byte	.LASF14
 5004 00b2 07       		.byte	0x7
 5005 00b3 4C       		.byte	0x4c
 5006 00b4 99000000 		.4byte	0x99
 5007 00b8 08       		.uleb128 0x8
 5008 00b9 51080000 		.4byte	.LASF15
 5009 00bd 07       		.byte	0x7
 5010 00be 4D       		.byte	0x4d
 5011 00bf C4000000 		.4byte	0xc4
 5012 00c3 00       		.byte	0
 5013 00c4 09       		.uleb128 0x9
 5014 00c5 2C000000 		.4byte	0x2c
 5015 00c9 D4000000 		.4byte	0xd4
 5016 00cd 0A       		.uleb128 0xa
 5017 00ce D4000000 		.4byte	0xd4
 5018 00d2 03       		.byte	0x3
 5019 00d3 00       		.byte	0
 5020 00d4 02       		.uleb128 0x2
 5021 00d5 04       		.byte	0x4
 5022 00d6 07       		.byte	0x7
 5023 00d7 7D090000 		.4byte	.LASF16
 5024 00db 0B       		.uleb128 0xb
 5025 00dc 08       		.byte	0x8
 5026 00dd 07       		.byte	0x7
 5027 00de 47       		.byte	0x47
 5028 00df FC000000 		.4byte	0xfc
 5029 00e3 0C       		.uleb128 0xc
 5030 00e4 16020000 		.4byte	.LASF17
 5031 00e8 07       		.byte	0x7
 5032 00e9 49       		.byte	0x49
 5033 00ea 68000000 		.4byte	0x68
 5034 00ee 00       		.byte	0
 5035 00ef 0C       		.uleb128 0xc
 5036 00f0 FB030000 		.4byte	.LASF18
 5037 00f4 07       		.byte	0x7
 5038 00f5 4E       		.byte	0x4e
 5039 00f6 A5000000 		.4byte	0xa5
 5040 00fa 04       		.byte	0x4
 5041 00fb 00       		.byte	0
 5042 00fc 03       		.uleb128 0x3
 5043 00fd 8D060000 		.4byte	.LASF19
 5044 0101 07       		.byte	0x7
 5045 0102 4F       		.byte	0x4f
 5046 0103 DB000000 		.4byte	0xdb
 5047 0107 03       		.uleb128 0x3
 5048 0108 A1040000 		.4byte	.LASF20
 5049 010c 07       		.byte	0x7
 5050 010d 53       		.byte	0x53
 5051 010e 78000000 		.4byte	0x78
 5052 0112 03       		.uleb128 0x3
 5053 0113 6B050000 		.4byte	.LASF21
 5054 0117 09       		.byte	0x9
 5055 0118 16       		.byte	0x16
 5056 0119 53000000 		.4byte	0x53
 5057 011d 0D       		.uleb128 0xd
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 112


 5058 011e C0010000 		.4byte	.LASF26
 5059 0122 18       		.byte	0x18
 5060 0123 09       		.byte	0x9
 5061 0124 2D       		.byte	0x2d
 5062 0125 70010000 		.4byte	0x170
 5063 0129 0C       		.uleb128 0xc
 5064 012a BD030000 		.4byte	.LASF22
 5065 012e 09       		.byte	0x9
 5066 012f 2F       		.byte	0x2f
 5067 0130 70010000 		.4byte	0x170
 5068 0134 00       		.byte	0
 5069 0135 0E       		.uleb128 0xe
 5070 0136 5F6B00   		.ascii	"_k\000"
 5071 0139 09       		.byte	0x9
 5072 013a 30       		.byte	0x30
 5073 013b 68000000 		.4byte	0x68
 5074 013f 04       		.byte	0x4
 5075 0140 0C       		.uleb128 0xc
 5076 0141 24090000 		.4byte	.LASF23
 5077 0145 09       		.byte	0x9
 5078 0146 30       		.byte	0x30
 5079 0147 68000000 		.4byte	0x68
 5080 014b 08       		.byte	0x8
 5081 014c 0C       		.uleb128 0xc
 5082 014d 25080000 		.4byte	.LASF24
 5083 0151 09       		.byte	0x9
 5084 0152 30       		.byte	0x30
 5085 0153 68000000 		.4byte	0x68
 5086 0157 0C       		.byte	0xc
 5087 0158 0C       		.uleb128 0xc
 5088 0159 D0020000 		.4byte	.LASF25
 5089 015d 09       		.byte	0x9
 5090 015e 30       		.byte	0x30
 5091 015f 68000000 		.4byte	0x68
 5092 0163 10       		.byte	0x10
 5093 0164 0E       		.uleb128 0xe
 5094 0165 5F7800   		.ascii	"_x\000"
 5095 0168 09       		.byte	0x9
 5096 0169 31       		.byte	0x31
 5097 016a 76010000 		.4byte	0x176
 5098 016e 14       		.byte	0x14
 5099 016f 00       		.byte	0
 5100 0170 0F       		.uleb128 0xf
 5101 0171 04       		.byte	0x4
 5102 0172 1D010000 		.4byte	0x11d
 5103 0176 09       		.uleb128 0x9
 5104 0177 12010000 		.4byte	0x112
 5105 017b 86010000 		.4byte	0x186
 5106 017f 0A       		.uleb128 0xa
 5107 0180 D4000000 		.4byte	0xd4
 5108 0184 00       		.byte	0
 5109 0185 00       		.byte	0
 5110 0186 0D       		.uleb128 0xd
 5111 0187 72090000 		.4byte	.LASF27
 5112 018b 24       		.byte	0x24
 5113 018c 09       		.byte	0x9
 5114 018d 35       		.byte	0x35
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 113


 5115 018e FF010000 		.4byte	0x1ff
 5116 0192 0C       		.uleb128 0xc
 5117 0193 7B030000 		.4byte	.LASF28
 5118 0197 09       		.byte	0x9
 5119 0198 37       		.byte	0x37
 5120 0199 68000000 		.4byte	0x68
 5121 019d 00       		.byte	0
 5122 019e 0C       		.uleb128 0xc
 5123 019f 36020000 		.4byte	.LASF29
 5124 01a3 09       		.byte	0x9
 5125 01a4 38       		.byte	0x38
 5126 01a5 68000000 		.4byte	0x68
 5127 01a9 04       		.byte	0x4
 5128 01aa 0C       		.uleb128 0xc
 5129 01ab FF010000 		.4byte	.LASF30
 5130 01af 09       		.byte	0x9
 5131 01b0 39       		.byte	0x39
 5132 01b1 68000000 		.4byte	0x68
 5133 01b5 08       		.byte	0x8
 5134 01b6 0C       		.uleb128 0xc
 5135 01b7 64040000 		.4byte	.LASF31
 5136 01bb 09       		.byte	0x9
 5137 01bc 3A       		.byte	0x3a
 5138 01bd 68000000 		.4byte	0x68
 5139 01c1 0C       		.byte	0xc
 5140 01c2 0C       		.uleb128 0xc
 5141 01c3 4B070000 		.4byte	.LASF32
 5142 01c7 09       		.byte	0x9
 5143 01c8 3B       		.byte	0x3b
 5144 01c9 68000000 		.4byte	0x68
 5145 01cd 10       		.byte	0x10
 5146 01ce 0C       		.uleb128 0xc
 5147 01cf 6A080000 		.4byte	.LASF33
 5148 01d3 09       		.byte	0x9
 5149 01d4 3C       		.byte	0x3c
 5150 01d5 68000000 		.4byte	0x68
 5151 01d9 14       		.byte	0x14
 5152 01da 0C       		.uleb128 0xc
 5153 01db E0010000 		.4byte	.LASF34
 5154 01df 09       		.byte	0x9
 5155 01e0 3D       		.byte	0x3d
 5156 01e1 68000000 		.4byte	0x68
 5157 01e5 18       		.byte	0x18
 5158 01e6 0C       		.uleb128 0xc
 5159 01e7 92030000 		.4byte	.LASF35
 5160 01eb 09       		.byte	0x9
 5161 01ec 3E       		.byte	0x3e
 5162 01ed 68000000 		.4byte	0x68
 5163 01f1 1C       		.byte	0x1c
 5164 01f2 0C       		.uleb128 0xc
 5165 01f3 BE060000 		.4byte	.LASF36
 5166 01f7 09       		.byte	0x9
 5167 01f8 3F       		.byte	0x3f
 5168 01f9 68000000 		.4byte	0x68
 5169 01fd 20       		.byte	0x20
 5170 01fe 00       		.byte	0
 5171 01ff 10       		.uleb128 0x10
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 114


 5172 0200 48000000 		.4byte	.LASF37
 5173 0204 0801     		.2byte	0x108
 5174 0206 09       		.byte	0x9
 5175 0207 48       		.byte	0x48
 5176 0208 3F020000 		.4byte	0x23f
 5177 020c 0C       		.uleb128 0xc
 5178 020d D80A0000 		.4byte	.LASF38
 5179 0211 09       		.byte	0x9
 5180 0212 49       		.byte	0x49
 5181 0213 3F020000 		.4byte	0x23f
 5182 0217 00       		.byte	0
 5183 0218 0C       		.uleb128 0xc
 5184 0219 D2090000 		.4byte	.LASF39
 5185 021d 09       		.byte	0x9
 5186 021e 4A       		.byte	0x4a
 5187 021f 3F020000 		.4byte	0x23f
 5188 0223 80       		.byte	0x80
 5189 0224 11       		.uleb128 0x11
 5190 0225 2A0B0000 		.4byte	.LASF40
 5191 0229 09       		.byte	0x9
 5192 022a 4C       		.byte	0x4c
 5193 022b 12010000 		.4byte	0x112
 5194 022f 0001     		.2byte	0x100
 5195 0231 11       		.uleb128 0x11
 5196 0232 7B0B0000 		.4byte	.LASF41
 5197 0236 09       		.byte	0x9
 5198 0237 4F       		.byte	0x4f
 5199 0238 12010000 		.4byte	0x112
 5200 023c 0401     		.2byte	0x104
 5201 023e 00       		.byte	0
 5202 023f 09       		.uleb128 0x9
 5203 0240 76000000 		.4byte	0x76
 5204 0244 4F020000 		.4byte	0x24f
 5205 0248 0A       		.uleb128 0xa
 5206 0249 D4000000 		.4byte	0xd4
 5207 024d 1F       		.byte	0x1f
 5208 024e 00       		.byte	0
 5209 024f 10       		.uleb128 0x10
 5210 0250 9E070000 		.4byte	.LASF42
 5211 0254 9001     		.2byte	0x190
 5212 0256 09       		.byte	0x9
 5213 0257 5B       		.byte	0x5b
 5214 0258 8D020000 		.4byte	0x28d
 5215 025c 0C       		.uleb128 0xc
 5216 025d BD030000 		.4byte	.LASF22
 5217 0261 09       		.byte	0x9
 5218 0262 5C       		.byte	0x5c
 5219 0263 8D020000 		.4byte	0x28d
 5220 0267 00       		.byte	0
 5221 0268 0C       		.uleb128 0xc
 5222 0269 A1030000 		.4byte	.LASF43
 5223 026d 09       		.byte	0x9
 5224 026e 5D       		.byte	0x5d
 5225 026f 68000000 		.4byte	0x68
 5226 0273 04       		.byte	0x4
 5227 0274 0C       		.uleb128 0xc
 5228 0275 89010000 		.4byte	.LASF44
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 115


 5229 0279 09       		.byte	0x9
 5230 027a 5F       		.byte	0x5f
 5231 027b 93020000 		.4byte	0x293
 5232 027f 08       		.byte	0x8
 5233 0280 0C       		.uleb128 0xc
 5234 0281 48000000 		.4byte	.LASF37
 5235 0285 09       		.byte	0x9
 5236 0286 60       		.byte	0x60
 5237 0287 FF010000 		.4byte	0x1ff
 5238 028b 88       		.byte	0x88
 5239 028c 00       		.byte	0
 5240 028d 0F       		.uleb128 0xf
 5241 028e 04       		.byte	0x4
 5242 028f 4F020000 		.4byte	0x24f
 5243 0293 09       		.uleb128 0x9
 5244 0294 A3020000 		.4byte	0x2a3
 5245 0298 A3020000 		.4byte	0x2a3
 5246 029c 0A       		.uleb128 0xa
 5247 029d D4000000 		.4byte	0xd4
 5248 02a1 1F       		.byte	0x1f
 5249 02a2 00       		.byte	0
 5250 02a3 0F       		.uleb128 0xf
 5251 02a4 04       		.byte	0x4
 5252 02a5 A9020000 		.4byte	0x2a9
 5253 02a9 12       		.uleb128 0x12
 5254 02aa 0D       		.uleb128 0xd
 5255 02ab 970A0000 		.4byte	.LASF45
 5256 02af 08       		.byte	0x8
 5257 02b0 09       		.byte	0x9
 5258 02b1 73       		.byte	0x73
 5259 02b2 CF020000 		.4byte	0x2cf
 5260 02b6 0C       		.uleb128 0xc
 5261 02b7 55050000 		.4byte	.LASF46
 5262 02bb 09       		.byte	0x9
 5263 02bc 74       		.byte	0x74
 5264 02bd CF020000 		.4byte	0x2cf
 5265 02c1 00       		.byte	0
 5266 02c2 0C       		.uleb128 0xc
 5267 02c3 330B0000 		.4byte	.LASF47
 5268 02c7 09       		.byte	0x9
 5269 02c8 75       		.byte	0x75
 5270 02c9 68000000 		.4byte	0x68
 5271 02cd 04       		.byte	0x4
 5272 02ce 00       		.byte	0
 5273 02cf 0F       		.uleb128 0xf
 5274 02d0 04       		.byte	0x4
 5275 02d1 2C000000 		.4byte	0x2c
 5276 02d5 0D       		.uleb128 0xd
 5277 02d6 C8020000 		.4byte	.LASF48
 5278 02da 68       		.byte	0x68
 5279 02db 09       		.byte	0x9
 5280 02dc B3       		.byte	0xb3
 5281 02dd FF030000 		.4byte	0x3ff
 5282 02e1 0E       		.uleb128 0xe
 5283 02e2 5F7000   		.ascii	"_p\000"
 5284 02e5 09       		.byte	0x9
 5285 02e6 B4       		.byte	0xb4
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 116


 5286 02e7 CF020000 		.4byte	0x2cf
 5287 02eb 00       		.byte	0
 5288 02ec 0E       		.uleb128 0xe
 5289 02ed 5F7200   		.ascii	"_r\000"
 5290 02f0 09       		.byte	0x9
 5291 02f1 B5       		.byte	0xb5
 5292 02f2 68000000 		.4byte	0x68
 5293 02f6 04       		.byte	0x4
 5294 02f7 0E       		.uleb128 0xe
 5295 02f8 5F7700   		.ascii	"_w\000"
 5296 02fb 09       		.byte	0x9
 5297 02fc B6       		.byte	0xb6
 5298 02fd 68000000 		.4byte	0x68
 5299 0301 08       		.byte	0x8
 5300 0302 0C       		.uleb128 0xc
 5301 0303 D4000000 		.4byte	.LASF49
 5302 0307 09       		.byte	0x9
 5303 0308 B7       		.byte	0xb7
 5304 0309 33000000 		.4byte	0x33
 5305 030d 0C       		.byte	0xc
 5306 030e 0C       		.uleb128 0xc
 5307 030f 9F050000 		.4byte	.LASF50
 5308 0313 09       		.byte	0x9
 5309 0314 B8       		.byte	0xb8
 5310 0315 33000000 		.4byte	0x33
 5311 0319 0E       		.byte	0xe
 5312 031a 0E       		.uleb128 0xe
 5313 031b 5F626600 		.ascii	"_bf\000"
 5314 031f 09       		.byte	0x9
 5315 0320 B9       		.byte	0xb9
 5316 0321 AA020000 		.4byte	0x2aa
 5317 0325 10       		.byte	0x10
 5318 0326 0C       		.uleb128 0xc
 5319 0327 CB000000 		.4byte	.LASF51
 5320 032b 09       		.byte	0x9
 5321 032c BA       		.byte	0xba
 5322 032d 68000000 		.4byte	0x68
 5323 0331 18       		.byte	0x18
 5324 0332 0C       		.uleb128 0xc
 5325 0333 8E010000 		.4byte	.LASF52
 5326 0337 09       		.byte	0x9
 5327 0338 C1       		.byte	0xc1
 5328 0339 76000000 		.4byte	0x76
 5329 033d 1C       		.byte	0x1c
 5330 033e 0C       		.uleb128 0xc
 5331 033f 2C010000 		.4byte	.LASF53
 5332 0343 09       		.byte	0x9
 5333 0344 C3       		.byte	0xc3
 5334 0345 62050000 		.4byte	0x562
 5335 0349 20       		.byte	0x20
 5336 034a 0C       		.uleb128 0xc
 5337 034b 7A070000 		.4byte	.LASF54
 5338 034f 09       		.byte	0x9
 5339 0350 C5       		.byte	0xc5
 5340 0351 91050000 		.4byte	0x591
 5341 0355 24       		.byte	0x24
 5342 0356 0C       		.uleb128 0xc
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 117


 5343 0357 A10B0000 		.4byte	.LASF55
 5344 035b 09       		.byte	0x9
 5345 035c C8       		.byte	0xc8
 5346 035d B5050000 		.4byte	0x5b5
 5347 0361 28       		.byte	0x28
 5348 0362 0C       		.uleb128 0xc
 5349 0363 E2040000 		.4byte	.LASF56
 5350 0367 09       		.byte	0x9
 5351 0368 C9       		.byte	0xc9
 5352 0369 CF050000 		.4byte	0x5cf
 5353 036d 2C       		.byte	0x2c
 5354 036e 0E       		.uleb128 0xe
 5355 036f 5F756200 		.ascii	"_ub\000"
 5356 0373 09       		.byte	0x9
 5357 0374 CC       		.byte	0xcc
 5358 0375 AA020000 		.4byte	0x2aa
 5359 0379 30       		.byte	0x30
 5360 037a 0E       		.uleb128 0xe
 5361 037b 5F757000 		.ascii	"_up\000"
 5362 037f 09       		.byte	0x9
 5363 0380 CD       		.byte	0xcd
 5364 0381 CF020000 		.4byte	0x2cf
 5365 0385 38       		.byte	0x38
 5366 0386 0E       		.uleb128 0xe
 5367 0387 5F757200 		.ascii	"_ur\000"
 5368 038b 09       		.byte	0x9
 5369 038c CE       		.byte	0xce
 5370 038d 68000000 		.4byte	0x68
 5371 0391 3C       		.byte	0x3c
 5372 0392 0C       		.uleb128 0xc
 5373 0393 C20B0000 		.4byte	.LASF57
 5374 0397 09       		.byte	0x9
 5375 0398 D1       		.byte	0xd1
 5376 0399 D5050000 		.4byte	0x5d5
 5377 039d 40       		.byte	0x40
 5378 039e 0C       		.uleb128 0xc
 5379 039f 4F0B0000 		.4byte	.LASF58
 5380 03a3 09       		.byte	0x9
 5381 03a4 D2       		.byte	0xd2
 5382 03a5 E5050000 		.4byte	0x5e5
 5383 03a9 43       		.byte	0x43
 5384 03aa 0E       		.uleb128 0xe
 5385 03ab 5F6C6200 		.ascii	"_lb\000"
 5386 03af 09       		.byte	0x9
 5387 03b0 D5       		.byte	0xd5
 5388 03b1 AA020000 		.4byte	0x2aa
 5389 03b5 44       		.byte	0x44
 5390 03b6 0C       		.uleb128 0xc
 5391 03b7 69090000 		.4byte	.LASF59
 5392 03bb 09       		.byte	0x9
 5393 03bc D8       		.byte	0xd8
 5394 03bd 68000000 		.4byte	0x68
 5395 03c1 4C       		.byte	0x4c
 5396 03c2 0C       		.uleb128 0xc
 5397 03c3 F8020000 		.4byte	.LASF60
 5398 03c7 09       		.byte	0x9
 5399 03c8 D9       		.byte	0xd9
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 118


 5400 03c9 83000000 		.4byte	0x83
 5401 03cd 50       		.byte	0x50
 5402 03ce 0C       		.uleb128 0xc
 5403 03cf 4B080000 		.4byte	.LASF61
 5404 03d3 09       		.byte	0x9
 5405 03d4 DC       		.byte	0xdc
 5406 03d5 1D040000 		.4byte	0x41d
 5407 03d9 54       		.byte	0x54
 5408 03da 0C       		.uleb128 0xc
 5409 03db 77090000 		.4byte	.LASF62
 5410 03df 09       		.byte	0x9
 5411 03e0 E0       		.byte	0xe0
 5412 03e1 07010000 		.4byte	0x107
 5413 03e5 58       		.byte	0x58
 5414 03e6 0C       		.uleb128 0xc
 5415 03e7 A6070000 		.4byte	.LASF63
 5416 03eb 09       		.byte	0x9
 5417 03ec E2       		.byte	0xe2
 5418 03ed FC000000 		.4byte	0xfc
 5419 03f1 5C       		.byte	0x5c
 5420 03f2 0C       		.uleb128 0xc
 5421 03f3 730B0000 		.4byte	.LASF64
 5422 03f7 09       		.byte	0x9
 5423 03f8 E3       		.byte	0xe3
 5424 03f9 68000000 		.4byte	0x68
 5425 03fd 64       		.byte	0x64
 5426 03fe 00       		.byte	0
 5427 03ff 13       		.uleb128 0x13
 5428 0400 68000000 		.4byte	0x68
 5429 0404 1D040000 		.4byte	0x41d
 5430 0408 14       		.uleb128 0x14
 5431 0409 1D040000 		.4byte	0x41d
 5432 040d 14       		.uleb128 0x14
 5433 040e 76000000 		.4byte	0x76
 5434 0412 14       		.uleb128 0x14
 5435 0413 55050000 		.4byte	0x555
 5436 0417 14       		.uleb128 0x14
 5437 0418 68000000 		.4byte	0x68
 5438 041c 00       		.byte	0
 5439 041d 0F       		.uleb128 0xf
 5440 041e 04       		.byte	0x4
 5441 041f 23040000 		.4byte	0x423
 5442 0423 15       		.uleb128 0x15
 5443 0424 EC0A0000 		.4byte	.LASF65
 5444 0428 2804     		.2byte	0x428
 5445 042a 09       		.byte	0x9
 5446 042b 3902     		.2byte	0x239
 5447 042d 55050000 		.4byte	0x555
 5448 0431 16       		.uleb128 0x16
 5449 0432 F1000000 		.4byte	.LASF66
 5450 0436 09       		.byte	0x9
 5451 0437 3B02     		.2byte	0x23b
 5452 0439 68000000 		.4byte	0x68
 5453 043d 00       		.byte	0
 5454 043e 16       		.uleb128 0x16
 5455 043f 16050000 		.4byte	.LASF67
 5456 0443 09       		.byte	0x9
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 119


 5457 0444 4002     		.2byte	0x240
 5458 0446 3C060000 		.4byte	0x63c
 5459 044a 04       		.byte	0x4
 5460 044b 16       		.uleb128 0x16
 5461 044c 79010000 		.4byte	.LASF68
 5462 0450 09       		.byte	0x9
 5463 0451 4002     		.2byte	0x240
 5464 0453 3C060000 		.4byte	0x63c
 5465 0457 08       		.byte	0x8
 5466 0458 16       		.uleb128 0x16
 5467 0459 B10B0000 		.4byte	.LASF69
 5468 045d 09       		.byte	0x9
 5469 045e 4002     		.2byte	0x240
 5470 0460 3C060000 		.4byte	0x63c
 5471 0464 0C       		.byte	0xc
 5472 0465 16       		.uleb128 0x16
 5473 0466 9C030000 		.4byte	.LASF70
 5474 046a 09       		.byte	0x9
 5475 046b 4202     		.2byte	0x242
 5476 046d 68000000 		.4byte	0x68
 5477 0471 10       		.byte	0x10
 5478 0472 16       		.uleb128 0x16
 5479 0473 3A030000 		.4byte	.LASF71
 5480 0477 09       		.byte	0x9
 5481 0478 4302     		.2byte	0x243
 5482 047a 1E080000 		.4byte	0x81e
 5483 047e 14       		.byte	0x14
 5484 047f 16       		.uleb128 0x16
 5485 0480 36090000 		.4byte	.LASF72
 5486 0484 09       		.byte	0x9
 5487 0485 4502     		.2byte	0x245
 5488 0487 68000000 		.4byte	0x68
 5489 048b 30       		.byte	0x30
 5490 048c 16       		.uleb128 0x16
 5491 048d 2B080000 		.4byte	.LASF73
 5492 0491 09       		.byte	0x9
 5493 0492 4602     		.2byte	0x246
 5494 0494 86050000 		.4byte	0x586
 5495 0498 34       		.byte	0x34
 5496 0499 16       		.uleb128 0x16
 5497 049a E9040000 		.4byte	.LASF74
 5498 049e 09       		.byte	0x9
 5499 049f 4802     		.2byte	0x248
 5500 04a1 68000000 		.4byte	0x68
 5501 04a5 38       		.byte	0x38
 5502 04a6 16       		.uleb128 0x16
 5503 04a7 83060000 		.4byte	.LASF75
 5504 04ab 09       		.byte	0x9
 5505 04ac 4A02     		.2byte	0x24a
 5506 04ae 39080000 		.4byte	0x839
 5507 04b2 3C       		.byte	0x3c
 5508 04b3 16       		.uleb128 0x16
 5509 04b4 F7010000 		.4byte	.LASF76
 5510 04b8 09       		.byte	0x9
 5511 04b9 4D02     		.2byte	0x24d
 5512 04bb 70010000 		.4byte	0x170
 5513 04bf 40       		.byte	0x40
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 120


 5514 04c0 16       		.uleb128 0x16
 5515 04c1 85020000 		.4byte	.LASF77
 5516 04c5 09       		.byte	0x9
 5517 04c6 4E02     		.2byte	0x24e
 5518 04c8 68000000 		.4byte	0x68
 5519 04cc 44       		.byte	0x44
 5520 04cd 16       		.uleb128 0x16
 5521 04ce 0F040000 		.4byte	.LASF78
 5522 04d2 09       		.byte	0x9
 5523 04d3 4F02     		.2byte	0x24f
 5524 04d5 70010000 		.4byte	0x170
 5525 04d9 48       		.byte	0x48
 5526 04da 16       		.uleb128 0x16
 5527 04db 5B050000 		.4byte	.LASF79
 5528 04df 09       		.byte	0x9
 5529 04e0 5002     		.2byte	0x250
 5530 04e2 3F080000 		.4byte	0x83f
 5531 04e6 4C       		.byte	0x4c
 5532 04e7 16       		.uleb128 0x16
 5533 04e8 1C090000 		.4byte	.LASF80
 5534 04ec 09       		.byte	0x9
 5535 04ed 5302     		.2byte	0x253
 5536 04ef 68000000 		.4byte	0x68
 5537 04f3 50       		.byte	0x50
 5538 04f4 16       		.uleb128 0x16
 5539 04f5 FD090000 		.4byte	.LASF81
 5540 04f9 09       		.byte	0x9
 5541 04fa 5402     		.2byte	0x254
 5542 04fc 55050000 		.4byte	0x555
 5543 0500 54       		.byte	0x54
 5544 0501 16       		.uleb128 0x16
 5545 0502 63010000 		.4byte	.LASF82
 5546 0506 09       		.byte	0x9
 5547 0507 7702     		.2byte	0x277
 5548 0509 FC070000 		.4byte	0x7fc
 5549 050d 58       		.byte	0x58
 5550 050e 17       		.uleb128 0x17
 5551 050f 9E070000 		.4byte	.LASF42
 5552 0513 09       		.byte	0x9
 5553 0514 7B02     		.2byte	0x27b
 5554 0516 8D020000 		.4byte	0x28d
 5555 051a 4801     		.2byte	0x148
 5556 051c 17       		.uleb128 0x17
 5557 051d 87040000 		.4byte	.LASF83
 5558 0521 09       		.byte	0x9
 5559 0522 7C02     		.2byte	0x27c
 5560 0524 4F020000 		.4byte	0x24f
 5561 0528 4C01     		.2byte	0x14c
 5562 052a 17       		.uleb128 0x17
 5563 052b 6E040000 		.4byte	.LASF84
 5564 052f 09       		.byte	0x9
 5565 0530 8002     		.2byte	0x280
 5566 0532 50080000 		.4byte	0x850
 5567 0536 DC02     		.2byte	0x2dc
 5568 0538 17       		.uleb128 0x17
 5569 0539 AC0A0000 		.4byte	.LASF85
 5570 053d 09       		.byte	0x9
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 121


 5571 053e 8502     		.2byte	0x285
 5572 0540 01060000 		.4byte	0x601
 5573 0544 E002     		.2byte	0x2e0
 5574 0546 17       		.uleb128 0x17
 5575 0547 20080000 		.4byte	.LASF86
 5576 054b 09       		.byte	0x9
 5577 054c 8602     		.2byte	0x286
 5578 054e 5C080000 		.4byte	0x85c
 5579 0552 EC02     		.2byte	0x2ec
 5580 0554 00       		.byte	0
 5581 0555 0F       		.uleb128 0xf
 5582 0556 04       		.byte	0x4
 5583 0557 5B050000 		.4byte	0x55b
 5584 055b 02       		.uleb128 0x2
 5585 055c 01       		.byte	0x1
 5586 055d 08       		.byte	0x8
 5587 055e 55040000 		.4byte	.LASF87
 5588 0562 0F       		.uleb128 0xf
 5589 0563 04       		.byte	0x4
 5590 0564 FF030000 		.4byte	0x3ff
 5591 0568 13       		.uleb128 0x13
 5592 0569 68000000 		.4byte	0x68
 5593 056d 86050000 		.4byte	0x586
 5594 0571 14       		.uleb128 0x14
 5595 0572 1D040000 		.4byte	0x41d
 5596 0576 14       		.uleb128 0x14
 5597 0577 76000000 		.4byte	0x76
 5598 057b 14       		.uleb128 0x14
 5599 057c 86050000 		.4byte	0x586
 5600 0580 14       		.uleb128 0x14
 5601 0581 68000000 		.4byte	0x68
 5602 0585 00       		.byte	0
 5603 0586 0F       		.uleb128 0xf
 5604 0587 04       		.byte	0x4
 5605 0588 8C050000 		.4byte	0x58c
 5606 058c 18       		.uleb128 0x18
 5607 058d 5B050000 		.4byte	0x55b
 5608 0591 0F       		.uleb128 0xf
 5609 0592 04       		.byte	0x4
 5610 0593 68050000 		.4byte	0x568
 5611 0597 13       		.uleb128 0x13
 5612 0598 8E000000 		.4byte	0x8e
 5613 059c B5050000 		.4byte	0x5b5
 5614 05a0 14       		.uleb128 0x14
 5615 05a1 1D040000 		.4byte	0x41d
 5616 05a5 14       		.uleb128 0x14
 5617 05a6 76000000 		.4byte	0x76
 5618 05aa 14       		.uleb128 0x14
 5619 05ab 8E000000 		.4byte	0x8e
 5620 05af 14       		.uleb128 0x14
 5621 05b0 68000000 		.4byte	0x68
 5622 05b4 00       		.byte	0
 5623 05b5 0F       		.uleb128 0xf
 5624 05b6 04       		.byte	0x4
 5625 05b7 97050000 		.4byte	0x597
 5626 05bb 13       		.uleb128 0x13
 5627 05bc 68000000 		.4byte	0x68
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 122


 5628 05c0 CF050000 		.4byte	0x5cf
 5629 05c4 14       		.uleb128 0x14
 5630 05c5 1D040000 		.4byte	0x41d
 5631 05c9 14       		.uleb128 0x14
 5632 05ca 76000000 		.4byte	0x76
 5633 05ce 00       		.byte	0
 5634 05cf 0F       		.uleb128 0xf
 5635 05d0 04       		.byte	0x4
 5636 05d1 BB050000 		.4byte	0x5bb
 5637 05d5 09       		.uleb128 0x9
 5638 05d6 2C000000 		.4byte	0x2c
 5639 05da E5050000 		.4byte	0x5e5
 5640 05de 0A       		.uleb128 0xa
 5641 05df D4000000 		.4byte	0xd4
 5642 05e3 02       		.byte	0x2
 5643 05e4 00       		.byte	0
 5644 05e5 09       		.uleb128 0x9
 5645 05e6 2C000000 		.4byte	0x2c
 5646 05ea F5050000 		.4byte	0x5f5
 5647 05ee 0A       		.uleb128 0xa
 5648 05ef D4000000 		.4byte	0xd4
 5649 05f3 00       		.byte	0
 5650 05f4 00       		.byte	0
 5651 05f5 06       		.uleb128 0x6
 5652 05f6 E7020000 		.4byte	.LASF88
 5653 05fa 09       		.byte	0x9
 5654 05fb 1D01     		.2byte	0x11d
 5655 05fd D5020000 		.4byte	0x2d5
 5656 0601 19       		.uleb128 0x19
 5657 0602 A60A0000 		.4byte	.LASF89
 5658 0606 0C       		.byte	0xc
 5659 0607 09       		.byte	0x9
 5660 0608 2101     		.2byte	0x121
 5661 060a 36060000 		.4byte	0x636
 5662 060e 16       		.uleb128 0x16
 5663 060f BD030000 		.4byte	.LASF22
 5664 0613 09       		.byte	0x9
 5665 0614 2301     		.2byte	0x123
 5666 0616 36060000 		.4byte	0x636
 5667 061a 00       		.byte	0
 5668 061b 16       		.uleb128 0x16
 5669 061c BC090000 		.4byte	.LASF90
 5670 0620 09       		.byte	0x9
 5671 0621 2401     		.2byte	0x124
 5672 0623 68000000 		.4byte	0x68
 5673 0627 04       		.byte	0x4
 5674 0628 16       		.uleb128 0x16
 5675 0629 C2040000 		.4byte	.LASF91
 5676 062d 09       		.byte	0x9
 5677 062e 2501     		.2byte	0x125
 5678 0630 3C060000 		.4byte	0x63c
 5679 0634 08       		.byte	0x8
 5680 0635 00       		.byte	0
 5681 0636 0F       		.uleb128 0xf
 5682 0637 04       		.byte	0x4
 5683 0638 01060000 		.4byte	0x601
 5684 063c 0F       		.uleb128 0xf
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 123


 5685 063d 04       		.byte	0x4
 5686 063e F5050000 		.4byte	0x5f5
 5687 0642 19       		.uleb128 0x19
 5688 0643 7D020000 		.4byte	.LASF92
 5689 0647 0E       		.byte	0xe
 5690 0648 09       		.byte	0x9
 5691 0649 3D01     		.2byte	0x13d
 5692 064b 77060000 		.4byte	0x677
 5693 064f 16       		.uleb128 0x16
 5694 0650 830B0000 		.4byte	.LASF93
 5695 0654 09       		.byte	0x9
 5696 0655 3E01     		.2byte	0x13e
 5697 0657 77060000 		.4byte	0x677
 5698 065b 00       		.byte	0
 5699 065c 16       		.uleb128 0x16
 5700 065d 65050000 		.4byte	.LASF94
 5701 0661 09       		.byte	0x9
 5702 0662 3F01     		.2byte	0x13f
 5703 0664 77060000 		.4byte	0x677
 5704 0668 06       		.byte	0x6
 5705 0669 16       		.uleb128 0x16
 5706 066a 570A0000 		.4byte	.LASF95
 5707 066e 09       		.byte	0x9
 5708 066f 4001     		.2byte	0x140
 5709 0671 3A000000 		.4byte	0x3a
 5710 0675 0C       		.byte	0xc
 5711 0676 00       		.byte	0
 5712 0677 09       		.uleb128 0x9
 5713 0678 3A000000 		.4byte	0x3a
 5714 067c 87060000 		.4byte	0x687
 5715 0680 0A       		.uleb128 0xa
 5716 0681 D4000000 		.4byte	0xd4
 5717 0685 02       		.byte	0x2
 5718 0686 00       		.byte	0
 5719 0687 1A       		.uleb128 0x1a
 5720 0688 D0       		.byte	0xd0
 5721 0689 09       		.byte	0x9
 5722 068a 5802     		.2byte	0x258
 5723 068c 88070000 		.4byte	0x788
 5724 0690 16       		.uleb128 0x16
 5725 0691 550B0000 		.4byte	.LASF96
 5726 0695 09       		.byte	0x9
 5727 0696 5A02     		.2byte	0x25a
 5728 0698 6F000000 		.4byte	0x6f
 5729 069c 00       		.byte	0
 5730 069d 16       		.uleb128 0x16
 5731 069e B40A0000 		.4byte	.LASF97
 5732 06a2 09       		.byte	0x9
 5733 06a3 5B02     		.2byte	0x25b
 5734 06a5 55050000 		.4byte	0x555
 5735 06a9 04       		.byte	0x4
 5736 06aa 16       		.uleb128 0x16
 5737 06ab AF020000 		.4byte	.LASF98
 5738 06af 09       		.byte	0x9
 5739 06b0 5C02     		.2byte	0x25c
 5740 06b2 88070000 		.4byte	0x788
 5741 06b6 08       		.byte	0x8
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 124


 5742 06b7 16       		.uleb128 0x16
 5743 06b8 74080000 		.4byte	.LASF99
 5744 06bc 09       		.byte	0x9
 5745 06bd 5D02     		.2byte	0x25d
 5746 06bf 86010000 		.4byte	0x186
 5747 06c3 24       		.byte	0x24
 5748 06c4 16       		.uleb128 0x16
 5749 06c5 1D050000 		.4byte	.LASF100
 5750 06c9 09       		.byte	0x9
 5751 06ca 5E02     		.2byte	0x25e
 5752 06cc 68000000 		.4byte	0x68
 5753 06d0 48       		.byte	0x48
 5754 06d1 16       		.uleb128 0x16
 5755 06d2 960B0000 		.4byte	.LASF101
 5756 06d6 09       		.byte	0x9
 5757 06d7 5F02     		.2byte	0x25f
 5758 06d9 61000000 		.4byte	0x61
 5759 06dd 50       		.byte	0x50
 5760 06de 16       		.uleb128 0x16
 5761 06df 73000000 		.4byte	.LASF102
 5762 06e3 09       		.byte	0x9
 5763 06e4 6002     		.2byte	0x260
 5764 06e6 42060000 		.4byte	0x642
 5765 06ea 58       		.byte	0x58
 5766 06eb 16       		.uleb128 0x16
 5767 06ec 41040000 		.4byte	.LASF103
 5768 06f0 09       		.byte	0x9
 5769 06f1 6102     		.2byte	0x261
 5770 06f3 FC000000 		.4byte	0xfc
 5771 06f7 68       		.byte	0x68
 5772 06f8 16       		.uleb128 0x16
 5773 06f9 C10A0000 		.4byte	.LASF104
 5774 06fd 09       		.byte	0x9
 5775 06fe 6202     		.2byte	0x262
 5776 0700 FC000000 		.4byte	0xfc
 5777 0704 70       		.byte	0x70
 5778 0705 16       		.uleb128 0x16
 5779 0706 56000000 		.4byte	.LASF105
 5780 070a 09       		.byte	0x9
 5781 070b 6302     		.2byte	0x263
 5782 070d FC000000 		.4byte	0xfc
 5783 0711 78       		.byte	0x78
 5784 0712 16       		.uleb128 0x16
 5785 0713 2C090000 		.4byte	.LASF106
 5786 0717 09       		.byte	0x9
 5787 0718 6402     		.2byte	0x264
 5788 071a 98070000 		.4byte	0x798
 5789 071e 80       		.byte	0x80
 5790 071f 16       		.uleb128 0x16
 5791 0720 78000000 		.4byte	.LASF107
 5792 0724 09       		.byte	0x9
 5793 0725 6502     		.2byte	0x265
 5794 0727 A8070000 		.4byte	0x7a8
 5795 072b 88       		.byte	0x88
 5796 072c 16       		.uleb128 0x16
 5797 072d 3F0A0000 		.4byte	.LASF108
 5798 0731 09       		.byte	0x9
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 125


 5799 0732 6602     		.2byte	0x266
 5800 0734 68000000 		.4byte	0x68
 5801 0738 A0       		.byte	0xa0
 5802 0739 16       		.uleb128 0x16
 5803 073a 3A010000 		.4byte	.LASF109
 5804 073e 09       		.byte	0x9
 5805 073f 6702     		.2byte	0x267
 5806 0741 FC000000 		.4byte	0xfc
 5807 0745 A4       		.byte	0xa4
 5808 0746 16       		.uleb128 0x16
 5809 0747 78040000 		.4byte	.LASF110
 5810 074b 09       		.byte	0x9
 5811 074c 6802     		.2byte	0x268
 5812 074e FC000000 		.4byte	0xfc
 5813 0752 AC       		.byte	0xac
 5814 0753 16       		.uleb128 0x16
 5815 0754 C3030000 		.4byte	.LASF111
 5816 0758 09       		.byte	0x9
 5817 0759 6902     		.2byte	0x269
 5818 075b FC000000 		.4byte	0xfc
 5819 075f B4       		.byte	0xb4
 5820 0760 16       		.uleb128 0x16
 5821 0761 73050000 		.4byte	.LASF112
 5822 0765 09       		.byte	0x9
 5823 0766 6A02     		.2byte	0x26a
 5824 0768 FC000000 		.4byte	0xfc
 5825 076c BC       		.byte	0xbc
 5826 076d 16       		.uleb128 0x16
 5827 076e 30040000 		.4byte	.LASF113
 5828 0772 09       		.byte	0x9
 5829 0773 6B02     		.2byte	0x26b
 5830 0775 FC000000 		.4byte	0xfc
 5831 0779 C4       		.byte	0xc4
 5832 077a 16       		.uleb128 0x16
 5833 077b 04070000 		.4byte	.LASF114
 5834 077f 09       		.byte	0x9
 5835 0780 6C02     		.2byte	0x26c
 5836 0782 68000000 		.4byte	0x68
 5837 0786 CC       		.byte	0xcc
 5838 0787 00       		.byte	0
 5839 0788 09       		.uleb128 0x9
 5840 0789 5B050000 		.4byte	0x55b
 5841 078d 98070000 		.4byte	0x798
 5842 0791 0A       		.uleb128 0xa
 5843 0792 D4000000 		.4byte	0xd4
 5844 0796 19       		.byte	0x19
 5845 0797 00       		.byte	0
 5846 0798 09       		.uleb128 0x9
 5847 0799 5B050000 		.4byte	0x55b
 5848 079d A8070000 		.4byte	0x7a8
 5849 07a1 0A       		.uleb128 0xa
 5850 07a2 D4000000 		.4byte	0xd4
 5851 07a6 07       		.byte	0x7
 5852 07a7 00       		.byte	0
 5853 07a8 09       		.uleb128 0x9
 5854 07a9 5B050000 		.4byte	0x55b
 5855 07ad B8070000 		.4byte	0x7b8
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 126


 5856 07b1 0A       		.uleb128 0xa
 5857 07b2 D4000000 		.4byte	0xd4
 5858 07b6 17       		.byte	0x17
 5859 07b7 00       		.byte	0
 5860 07b8 1A       		.uleb128 0x1a
 5861 07b9 F0       		.byte	0xf0
 5862 07ba 09       		.byte	0x9
 5863 07bb 7102     		.2byte	0x271
 5864 07bd DC070000 		.4byte	0x7dc
 5865 07c1 16       		.uleb128 0x16
 5866 07c2 51020000 		.4byte	.LASF115
 5867 07c6 09       		.byte	0x9
 5868 07c7 7402     		.2byte	0x274
 5869 07c9 DC070000 		.4byte	0x7dc
 5870 07cd 00       		.byte	0
 5871 07ce 16       		.uleb128 0x16
 5872 07cf B90B0000 		.4byte	.LASF116
 5873 07d3 09       		.byte	0x9
 5874 07d4 7502     		.2byte	0x275
 5875 07d6 EC070000 		.4byte	0x7ec
 5876 07da 78       		.byte	0x78
 5877 07db 00       		.byte	0
 5878 07dc 09       		.uleb128 0x9
 5879 07dd CF020000 		.4byte	0x2cf
 5880 07e1 EC070000 		.4byte	0x7ec
 5881 07e5 0A       		.uleb128 0xa
 5882 07e6 D4000000 		.4byte	0xd4
 5883 07ea 1D       		.byte	0x1d
 5884 07eb 00       		.byte	0
 5885 07ec 09       		.uleb128 0x9
 5886 07ed 6F000000 		.4byte	0x6f
 5887 07f1 FC070000 		.4byte	0x7fc
 5888 07f5 0A       		.uleb128 0xa
 5889 07f6 D4000000 		.4byte	0xd4
 5890 07fa 1D       		.byte	0x1d
 5891 07fb 00       		.byte	0
 5892 07fc 1B       		.uleb128 0x1b
 5893 07fd F0       		.byte	0xf0
 5894 07fe 09       		.byte	0x9
 5895 07ff 5602     		.2byte	0x256
 5896 0801 1E080000 		.4byte	0x81e
 5897 0805 1C       		.uleb128 0x1c
 5898 0806 EC0A0000 		.4byte	.LASF65
 5899 080a 09       		.byte	0x9
 5900 080b 6D02     		.2byte	0x26d
 5901 080d 87060000 		.4byte	0x687
 5902 0811 1C       		.uleb128 0x1c
 5903 0812 83080000 		.4byte	.LASF117
 5904 0816 09       		.byte	0x9
 5905 0817 7602     		.2byte	0x276
 5906 0819 B8070000 		.4byte	0x7b8
 5907 081d 00       		.byte	0
 5908 081e 09       		.uleb128 0x9
 5909 081f 5B050000 		.4byte	0x55b
 5910 0823 2E080000 		.4byte	0x82e
 5911 0827 0A       		.uleb128 0xa
 5912 0828 D4000000 		.4byte	0xd4
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 127


 5913 082c 18       		.byte	0x18
 5914 082d 00       		.byte	0
 5915 082e 1D       		.uleb128 0x1d
 5916 082f 39080000 		.4byte	0x839
 5917 0833 14       		.uleb128 0x14
 5918 0834 1D040000 		.4byte	0x41d
 5919 0838 00       		.byte	0
 5920 0839 0F       		.uleb128 0xf
 5921 083a 04       		.byte	0x4
 5922 083b 2E080000 		.4byte	0x82e
 5923 083f 0F       		.uleb128 0xf
 5924 0840 04       		.byte	0x4
 5925 0841 70010000 		.4byte	0x170
 5926 0845 1D       		.uleb128 0x1d
 5927 0846 50080000 		.4byte	0x850
 5928 084a 14       		.uleb128 0x14
 5929 084b 68000000 		.4byte	0x68
 5930 084f 00       		.byte	0
 5931 0850 0F       		.uleb128 0xf
 5932 0851 04       		.byte	0x4
 5933 0852 56080000 		.4byte	0x856
 5934 0856 0F       		.uleb128 0xf
 5935 0857 04       		.byte	0x4
 5936 0858 45080000 		.4byte	0x845
 5937 085c 09       		.uleb128 0x9
 5938 085d F5050000 		.4byte	0x5f5
 5939 0861 6C080000 		.4byte	0x86c
 5940 0865 0A       		.uleb128 0xa
 5941 0866 D4000000 		.4byte	0xd4
 5942 086a 02       		.byte	0x2
 5943 086b 00       		.byte	0
 5944 086c 03       		.uleb128 0x3
 5945 086d CA090000 		.4byte	.LASF118
 5946 0871 0A       		.byte	0xa
 5947 0872 2C       		.byte	0x2c
 5948 0873 41000000 		.4byte	0x41
 5949 0877 06       		.uleb128 0x6
 5950 0878 DA010000 		.4byte	.LASF119
 5951 087c 0B       		.byte	0xb
 5952 087d 9201     		.2byte	0x192
 5953 087f 2C000000 		.4byte	0x2c
 5954 0883 06       		.uleb128 0x6
 5955 0884 9A040000 		.4byte	.LASF120
 5956 0888 0B       		.byte	0xb
 5957 0889 9301     		.2byte	0x193
 5958 088b 3A000000 		.4byte	0x3a
 5959 088f 06       		.uleb128 0x6
 5960 0890 AA040000 		.4byte	.LASF121
 5961 0894 0B       		.byte	0xb
 5962 0895 9501     		.2byte	0x195
 5963 0897 25000000 		.4byte	0x25
 5964 089b 06       		.uleb128 0x6
 5965 089c EB000000 		.4byte	.LASF122
 5966 08a0 0B       		.byte	0xb
 5967 08a1 9601     		.2byte	0x196
 5968 08a3 33000000 		.4byte	0x33
 5969 08a7 06       		.uleb128 0x6
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 128


 5970 08a8 4B020000 		.4byte	.LASF123
 5971 08ac 0B       		.byte	0xb
 5972 08ad 9701     		.2byte	0x197
 5973 08af 4C000000 		.4byte	0x4c
 5974 08b3 02       		.uleb128 0x2
 5975 08b4 04       		.byte	0x4
 5976 08b5 04       		.byte	0x4
 5977 08b6 1E020000 		.4byte	.LASF124
 5978 08ba 02       		.uleb128 0x2
 5979 08bb 08       		.byte	0x8
 5980 08bc 04       		.byte	0x4
 5981 08bd 390B0000 		.4byte	.LASF125
 5982 08c1 0D       		.uleb128 0xd
 5983 08c2 C9060000 		.4byte	.LASF126
 5984 08c6 20       		.byte	0x20
 5985 08c7 0C       		.byte	0xc
 5986 08c8 29       		.byte	0x29
 5987 08c9 9A090000 		.4byte	0x99a
 5988 08cd 0C       		.uleb128 0xc
 5989 08ce F3060000 		.4byte	.LASF127
 5990 08d2 0C       		.byte	0xc
 5991 08d3 2A       		.byte	0x2a
 5992 08d4 8F080000 		.4byte	0x88f
 5993 08d8 00       		.byte	0
 5994 08d9 0C       		.uleb128 0xc
 5995 08da DB000000 		.4byte	.LASF128
 5996 08de 0C       		.byte	0xc
 5997 08df 2B       		.byte	0x2b
 5998 08e0 77080000 		.4byte	0x877
 5999 08e4 01       		.byte	0x1
 6000 08e5 0C       		.uleb128 0xc
 6001 08e6 DE090000 		.4byte	.LASF129
 6002 08ea 0C       		.byte	0xc
 6003 08eb 2C       		.byte	0x2c
 6004 08ec 9B080000 		.4byte	0x89b
 6005 08f0 02       		.byte	0x2
 6006 08f1 0C       		.uleb128 0xc
 6007 08f2 14040000 		.4byte	.LASF130
 6008 08f6 0C       		.byte	0xc
 6009 08f7 2D       		.byte	0x2d
 6010 08f8 9B080000 		.4byte	0x89b
 6011 08fc 04       		.byte	0x4
 6012 08fd 0C       		.uleb128 0xc
 6013 08fe 120B0000 		.4byte	.LASF131
 6014 0902 0C       		.byte	0xc
 6015 0903 2E       		.byte	0x2e
 6016 0904 9B080000 		.4byte	0x89b
 6017 0908 06       		.byte	0x6
 6018 0909 0C       		.uleb128 0xc
 6019 090a 400B0000 		.4byte	.LASF132
 6020 090e 0C       		.byte	0xc
 6021 090f 2F       		.byte	0x2f
 6022 0910 9B080000 		.4byte	0x89b
 6023 0914 08       		.byte	0x8
 6024 0915 0C       		.uleb128 0xc
 6025 0916 70060000 		.4byte	.LASF133
 6026 091a 0C       		.byte	0xc
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 129


 6027 091b 30       		.byte	0x30
 6028 091c 9B080000 		.4byte	0x89b
 6029 0920 0A       		.byte	0xa
 6030 0921 0C       		.uleb128 0xc
 6031 0922 CF0A0000 		.4byte	.LASF134
 6032 0926 0C       		.byte	0xc
 6033 0927 31       		.byte	0x31
 6034 0928 9B080000 		.4byte	0x89b
 6035 092c 0C       		.byte	0xc
 6036 092d 0C       		.uleb128 0xc
 6037 092e 0D070000 		.4byte	.LASF135
 6038 0932 0C       		.byte	0xc
 6039 0933 32       		.byte	0x32
 6040 0934 9B080000 		.4byte	0x89b
 6041 0938 0E       		.byte	0xe
 6042 0939 0C       		.uleb128 0xc
 6043 093a 4D050000 		.4byte	.LASF136
 6044 093e 0C       		.byte	0xc
 6045 093f 33       		.byte	0x33
 6046 0940 9B080000 		.4byte	0x89b
 6047 0944 10       		.byte	0x10
 6048 0945 0C       		.uleb128 0xc
 6049 0946 48090000 		.4byte	.LASF137
 6050 094a 0C       		.byte	0xc
 6051 094b 34       		.byte	0x34
 6052 094c 9B080000 		.4byte	0x89b
 6053 0950 12       		.byte	0x12
 6054 0951 0C       		.uleb128 0xc
 6055 0952 B7070000 		.4byte	.LASF138
 6056 0956 0C       		.byte	0xc
 6057 0957 35       		.byte	0x35
 6058 0958 9B080000 		.4byte	0x89b
 6059 095c 14       		.byte	0x14
 6060 095d 0C       		.uleb128 0xc
 6061 095e AF040000 		.4byte	.LASF139
 6062 0962 0C       		.byte	0xc
 6063 0963 36       		.byte	0x36
 6064 0964 9B080000 		.4byte	0x89b
 6065 0968 16       		.byte	0x16
 6066 0969 0C       		.uleb128 0xc
 6067 096a 32010000 		.4byte	.LASF140
 6068 096e 0C       		.byte	0xc
 6069 096f 37       		.byte	0x37
 6070 0970 9B080000 		.4byte	0x89b
 6071 0974 18       		.byte	0x18
 6072 0975 0C       		.uleb128 0xc
 6073 0976 43080000 		.4byte	.LASF141
 6074 097a 0C       		.byte	0xc
 6075 097b 38       		.byte	0x38
 6076 097c 9B080000 		.4byte	0x89b
 6077 0980 1A       		.byte	0x1a
 6078 0981 0C       		.uleb128 0xc
 6079 0982 67060000 		.4byte	.LASF142
 6080 0986 0C       		.byte	0xc
 6081 0987 39       		.byte	0x39
 6082 0988 9B080000 		.4byte	0x89b
 6083 098c 1C       		.byte	0x1c
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 130


 6084 098d 0C       		.uleb128 0xc
 6085 098e 09020000 		.4byte	.LASF143
 6086 0992 0C       		.byte	0xc
 6087 0993 3A       		.byte	0x3a
 6088 0994 9B080000 		.4byte	0x89b
 6089 0998 1E       		.byte	0x1e
 6090 0999 00       		.byte	0
 6091 099a 0D       		.uleb128 0xd
 6092 099b 240B0000 		.4byte	.LASF144
 6093 099f 08       		.byte	0x8
 6094 09a0 0D       		.byte	0xd
 6095 09a1 04       		.byte	0x4
 6096 09a2 BB090000 		.4byte	0x9bb
 6097 09a6 0E       		.uleb128 0xe
 6098 09a7 7800     		.ascii	"x\000"
 6099 09a9 0D       		.byte	0xd
 6100 09aa 05       		.byte	0x5
 6101 09ab 68000000 		.4byte	0x68
 6102 09af 00       		.byte	0
 6103 09b0 0E       		.uleb128 0xe
 6104 09b1 7900     		.ascii	"y\000"
 6105 09b3 0D       		.byte	0xd
 6106 09b4 06       		.byte	0x6
 6107 09b5 68000000 		.4byte	0x68
 6108 09b9 04       		.byte	0x4
 6109 09ba 00       		.byte	0
 6110 09bb 03       		.uleb128 0x3
 6111 09bc 240B0000 		.4byte	.LASF144
 6112 09c0 0D       		.byte	0xd
 6113 09c1 07       		.byte	0x7
 6114 09c2 9A090000 		.4byte	0x99a
 6115 09c6 1E       		.uleb128 0x1e
 6116 09c7 25000000 		.4byte	.LASF192
 6117 09cb 01       		.byte	0x1
 6118 09cc 08       		.byte	0x8
 6119 09cd 00000000 		.4byte	.LFB63
 6120 09d1 4C000000 		.4byte	.LFE63-.LFB63
 6121 09d5 01       		.uleb128 0x1
 6122 09d6 9C       		.byte	0x9c
 6123 09d7 E8090000 		.4byte	0x9e8
 6124 09db 1F       		.uleb128 0x1f
 6125 09dc 6300     		.ascii	"c\000"
 6126 09de 01       		.byte	0x1
 6127 09df 09       		.byte	0x9
 6128 09e0 5B050000 		.4byte	0x55b
 6129 09e4 02       		.uleb128 0x2
 6130 09e5 91       		.byte	0x91
 6131 09e6 77       		.sleb128 -9
 6132 09e7 00       		.byte	0
 6133 09e8 20       		.uleb128 0x20
 6134 09e9 6D617800 		.ascii	"max\000"
 6135 09ed 01       		.byte	0x1
 6136 09ee 0C       		.byte	0xc
 6137 09ef 68000000 		.4byte	0x68
 6138 09f3 00000000 		.4byte	.LFB64
 6139 09f7 4C000000 		.4byte	.LFE64-.LFB64
 6140 09fb 01       		.uleb128 0x1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 131


 6141 09fc 9C       		.byte	0x9c
 6142 09fd 380A0000 		.4byte	0xa38
 6143 0a01 21       		.uleb128 0x21
 6144 0a02 61727200 		.ascii	"arr\000"
 6145 0a06 01       		.byte	0x1
 6146 0a07 0C       		.byte	0xc
 6147 0a08 380A0000 		.4byte	0xa38
 6148 0a0c 02       		.uleb128 0x2
 6149 0a0d 91       		.byte	0x91
 6150 0a0e 6C       		.sleb128 -20
 6151 0a0f 22       		.uleb128 0x22
 6152 0a10 A7060000 		.4byte	.LASF145
 6153 0a14 01       		.byte	0x1
 6154 0a15 0C       		.byte	0xc
 6155 0a16 68000000 		.4byte	0x68
 6156 0a1a 02       		.uleb128 0x2
 6157 0a1b 91       		.byte	0x91
 6158 0a1c 68       		.sleb128 -24
 6159 0a1d 1F       		.uleb128 0x1f
 6160 0a1e 6D617800 		.ascii	"max\000"
 6161 0a22 01       		.byte	0x1
 6162 0a23 0D       		.byte	0xd
 6163 0a24 68000000 		.4byte	0x68
 6164 0a28 02       		.uleb128 0x2
 6165 0a29 91       		.byte	0x91
 6166 0a2a 74       		.sleb128 -12
 6167 0a2b 1F       		.uleb128 0x1f
 6168 0a2c 6900     		.ascii	"i\000"
 6169 0a2e 01       		.byte	0x1
 6170 0a2f 0E       		.byte	0xe
 6171 0a30 68000000 		.4byte	0x68
 6172 0a34 02       		.uleb128 0x2
 6173 0a35 91       		.byte	0x91
 6174 0a36 70       		.sleb128 -16
 6175 0a37 00       		.byte	0
 6176 0a38 0F       		.uleb128 0xf
 6177 0a39 04       		.byte	0x4
 6178 0a3a 68000000 		.4byte	0x68
 6179 0a3e 23       		.uleb128 0x23
 6180 0a3f 13030000 		.4byte	.LASF149
 6181 0a43 01       		.byte	0x1
 6182 0a44 15       		.byte	0x15
 6183 0a45 00000000 		.4byte	.LFB65
 6184 0a49 4E000000 		.4byte	.LFE65-.LFB65
 6185 0a4d 01       		.uleb128 0x1
 6186 0a4e 9C       		.byte	0x9c
 6187 0a4f 7C0A0000 		.4byte	0xa7c
 6188 0a53 21       		.uleb128 0x21
 6189 0a54 61727200 		.ascii	"arr\000"
 6190 0a58 01       		.byte	0x1
 6191 0a59 15       		.byte	0x15
 6192 0a5a 7C0A0000 		.4byte	0xa7c
 6193 0a5e 02       		.uleb128 0x2
 6194 0a5f 91       		.byte	0x91
 6195 0a60 6C       		.sleb128 -20
 6196 0a61 22       		.uleb128 0x22
 6197 0a62 A7060000 		.4byte	.LASF145
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 132


 6198 0a66 01       		.byte	0x1
 6199 0a67 15       		.byte	0x15
 6200 0a68 68000000 		.4byte	0x68
 6201 0a6c 02       		.uleb128 0x2
 6202 0a6d 91       		.byte	0x91
 6203 0a6e 68       		.sleb128 -24
 6204 0a6f 1F       		.uleb128 0x1f
 6205 0a70 6900     		.ascii	"i\000"
 6206 0a72 01       		.byte	0x1
 6207 0a73 16       		.byte	0x16
 6208 0a74 68000000 		.4byte	0x68
 6209 0a78 02       		.uleb128 0x2
 6210 0a79 91       		.byte	0x91
 6211 0a7a 74       		.sleb128 -12
 6212 0a7b 00       		.byte	0
 6213 0a7c 0F       		.uleb128 0xf
 6214 0a7d 04       		.byte	0x4
 6215 0a7e BB090000 		.4byte	0x9bb
 6216 0a82 24       		.uleb128 0x24
 6217 0a83 50090000 		.4byte	.LASF146
 6218 0a87 01       		.byte	0x1
 6219 0a88 1C       		.byte	0x1c
 6220 0a89 68000000 		.4byte	0x68
 6221 0a8d 00000000 		.4byte	.LFB66
 6222 0a91 62000000 		.4byte	.LFE66-.LFB66
 6223 0a95 01       		.uleb128 0x1
 6224 0a96 9C       		.byte	0x9c
 6225 0a97 D20A0000 		.4byte	0xad2
 6226 0a9b 22       		.uleb128 0x22
 6227 0a9c EE020000 		.4byte	.LASF147
 6228 0aa0 01       		.byte	0x1
 6229 0aa1 1C       		.byte	0x1c
 6230 0aa2 7C0A0000 		.4byte	0xa7c
 6231 0aa6 02       		.uleb128 0x2
 6232 0aa7 91       		.byte	0x91
 6233 0aa8 6C       		.sleb128 -20
 6234 0aa9 22       		.uleb128 0x22
 6235 0aaa F3020000 		.4byte	.LASF148
 6236 0aae 01       		.byte	0x1
 6237 0aaf 1C       		.byte	0x1c
 6238 0ab0 7C0A0000 		.4byte	0xa7c
 6239 0ab4 02       		.uleb128 0x2
 6240 0ab5 91       		.byte	0x91
 6241 0ab6 68       		.sleb128 -24
 6242 0ab7 22       		.uleb128 0x22
 6243 0ab8 A7060000 		.4byte	.LASF145
 6244 0abc 01       		.byte	0x1
 6245 0abd 1C       		.byte	0x1c
 6246 0abe 68000000 		.4byte	0x68
 6247 0ac2 02       		.uleb128 0x2
 6248 0ac3 91       		.byte	0x91
 6249 0ac4 64       		.sleb128 -28
 6250 0ac5 1F       		.uleb128 0x1f
 6251 0ac6 6900     		.ascii	"i\000"
 6252 0ac8 01       		.byte	0x1
 6253 0ac9 1D       		.byte	0x1d
 6254 0aca 68000000 		.4byte	0x68
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 133


 6255 0ace 02       		.uleb128 0x2
 6256 0acf 91       		.byte	0x91
 6257 0ad0 74       		.sleb128 -12
 6258 0ad1 00       		.byte	0
 6259 0ad2 23       		.uleb128 0x23
 6260 0ad3 A9000000 		.4byte	.LASF150
 6261 0ad7 01       		.byte	0x1
 6262 0ad8 24       		.byte	0x24
 6263 0ad9 00000000 		.4byte	.LFB67
 6264 0add 14000000 		.4byte	.LFE67-.LFB67
 6265 0ae1 01       		.uleb128 0x1
 6266 0ae2 9C       		.byte	0x9c
 6267 0ae3 040B0000 		.4byte	0xb04
 6268 0ae7 22       		.uleb128 0x22
 6269 0ae8 8B080000 		.4byte	.LASF151
 6270 0aec 01       		.byte	0x1
 6271 0aed 24       		.byte	0x24
 6272 0aee 76000000 		.4byte	0x76
 6273 0af2 02       		.uleb128 0x2
 6274 0af3 91       		.byte	0x91
 6275 0af4 74       		.sleb128 -12
 6276 0af5 22       		.uleb128 0x22
 6277 0af6 65030000 		.4byte	.LASF152
 6278 0afa 01       		.byte	0x1
 6279 0afb 24       		.byte	0x24
 6280 0afc 76000000 		.4byte	0x76
 6281 0b00 02       		.uleb128 0x2
 6282 0b01 91       		.byte	0x91
 6283 0b02 70       		.sleb128 -16
 6284 0b03 00       		.byte	0
 6285 0b04 20       		.uleb128 0x20
 6286 0b05 6C656E00 		.ascii	"len\000"
 6287 0b09 02       		.byte	0x2
 6288 0b0a 3A       		.byte	0x3a
 6289 0b0b 68000000 		.4byte	0x68
 6290 0b0f 00000000 		.4byte	.LFB68
 6291 0b13 54000000 		.4byte	.LFE68-.LFB68
 6292 0b17 01       		.uleb128 0x1
 6293 0b18 9C       		.byte	0x9c
 6294 0b19 460B0000 		.4byte	0xb46
 6295 0b1d 22       		.uleb128 0x22
 6296 0b1e D4030000 		.4byte	.LASF153
 6297 0b22 02       		.byte	0x2
 6298 0b23 3A       		.byte	0x3a
 6299 0b24 7C0A0000 		.4byte	0xa7c
 6300 0b28 02       		.uleb128 0x2
 6301 0b29 91       		.byte	0x91
 6302 0b2a 6C       		.sleb128 -20
 6303 0b2b 1F       		.uleb128 0x1f
 6304 0b2c 6C656E00 		.ascii	"len\000"
 6305 0b30 02       		.byte	0x2
 6306 0b31 3B       		.byte	0x3b
 6307 0b32 68000000 		.4byte	0x68
 6308 0b36 02       		.uleb128 0x2
 6309 0b37 91       		.byte	0x91
 6310 0b38 74       		.sleb128 -12
 6311 0b39 1F       		.uleb128 0x1f
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 134


 6312 0b3a 6900     		.ascii	"i\000"
 6313 0b3c 02       		.byte	0x2
 6314 0b3d 3C       		.byte	0x3c
 6315 0b3e 68000000 		.4byte	0x68
 6316 0b42 02       		.uleb128 0x2
 6317 0b43 91       		.byte	0x91
 6318 0b44 70       		.sleb128 -16
 6319 0b45 00       		.byte	0
 6320 0b46 24       		.uleb128 0x24
 6321 0b47 3B080000 		.4byte	.LASF154
 6322 0b4b 02       		.byte	0x2
 6323 0b4c 45       		.byte	0x45
 6324 0b4d 68000000 		.4byte	0x68
 6325 0b51 00000000 		.4byte	.LFB69
 6326 0b55 50000000 		.4byte	.LFE69-.LFB69
 6327 0b59 01       		.uleb128 0x1
 6328 0b5a 9C       		.byte	0x9c
 6329 0b5b 880B0000 		.4byte	0xb88
 6330 0b5f 22       		.uleb128 0x22
 6331 0b60 D4030000 		.4byte	.LASF153
 6332 0b64 02       		.byte	0x2
 6333 0b65 45       		.byte	0x45
 6334 0b66 7C0A0000 		.4byte	0xa7c
 6335 0b6a 02       		.uleb128 0x2
 6336 0b6b 91       		.byte	0x91
 6337 0b6c 6C       		.sleb128 -20
 6338 0b6d 22       		.uleb128 0x22
 6339 0b6e A7060000 		.4byte	.LASF145
 6340 0b72 02       		.byte	0x2
 6341 0b73 45       		.byte	0x45
 6342 0b74 68000000 		.4byte	0x68
 6343 0b78 02       		.uleb128 0x2
 6344 0b79 91       		.byte	0x91
 6345 0b7a 68       		.sleb128 -24
 6346 0b7b 1F       		.uleb128 0x1f
 6347 0b7c 6900     		.ascii	"i\000"
 6348 0b7e 02       		.byte	0x2
 6349 0b7f 46       		.byte	0x46
 6350 0b80 68000000 		.4byte	0x68
 6351 0b84 02       		.uleb128 0x2
 6352 0b85 91       		.byte	0x91
 6353 0b86 74       		.sleb128 -12
 6354 0b87 00       		.byte	0
 6355 0b88 24       		.uleb128 0x24
 6356 0b89 1B0A0000 		.4byte	.LASF155
 6357 0b8d 02       		.byte	0x2
 6358 0b8e 4D       		.byte	0x4d
 6359 0b8f 68000000 		.4byte	0x68
 6360 0b93 00000000 		.4byte	.LFB70
 6361 0b97 56000000 		.4byte	.LFE70-.LFB70
 6362 0b9b 01       		.uleb128 0x1
 6363 0b9c 9C       		.byte	0x9c
 6364 0b9d D60B0000 		.4byte	0xbd6
 6365 0ba1 21       		.uleb128 0x21
 6366 0ba2 7000     		.ascii	"p\000"
 6367 0ba4 02       		.byte	0x2
 6368 0ba5 4D       		.byte	0x4d
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 135


 6369 0ba6 BB090000 		.4byte	0x9bb
 6370 0baa 02       		.uleb128 0x2
 6371 0bab 91       		.byte	0x91
 6372 0bac 68       		.sleb128 -24
 6373 0bad 22       		.uleb128 0x22
 6374 0bae D4030000 		.4byte	.LASF153
 6375 0bb2 02       		.byte	0x2
 6376 0bb3 4D       		.byte	0x4d
 6377 0bb4 7C0A0000 		.4byte	0xa7c
 6378 0bb8 02       		.uleb128 0x2
 6379 0bb9 91       		.byte	0x91
 6380 0bba 64       		.sleb128 -28
 6381 0bbb 22       		.uleb128 0x22
 6382 0bbc A7060000 		.4byte	.LASF145
 6383 0bc0 02       		.byte	0x2
 6384 0bc1 4D       		.byte	0x4d
 6385 0bc2 68000000 		.4byte	0x68
 6386 0bc6 02       		.uleb128 0x2
 6387 0bc7 91       		.byte	0x91
 6388 0bc8 60       		.sleb128 -32
 6389 0bc9 1F       		.uleb128 0x1f
 6390 0bca 6900     		.ascii	"i\000"
 6391 0bcc 02       		.byte	0x2
 6392 0bcd 4E       		.byte	0x4e
 6393 0bce 68000000 		.4byte	0x68
 6394 0bd2 02       		.uleb128 0x2
 6395 0bd3 91       		.byte	0x91
 6396 0bd4 74       		.sleb128 -12
 6397 0bd5 00       		.byte	0
 6398 0bd6 25       		.uleb128 0x25
 6399 0bd7 5F070000 		.4byte	.LASF156
 6400 0bdb 02       		.byte	0x2
 6401 0bdc 56       		.byte	0x56
 6402 0bdd 00000000 		.4byte	.LFB71
 6403 0be1 74000000 		.4byte	.LFE71-.LFB71
 6404 0be5 01       		.uleb128 0x1
 6405 0be6 9C       		.byte	0x9c
 6406 0be7 060C0000 		.4byte	0xc06
 6407 0beb 22       		.uleb128 0x22
 6408 0bec D4030000 		.4byte	.LASF153
 6409 0bf0 02       		.byte	0x2
 6410 0bf1 56       		.byte	0x56
 6411 0bf2 7C0A0000 		.4byte	0xa7c
 6412 0bf6 02       		.uleb128 0x2
 6413 0bf7 91       		.byte	0x91
 6414 0bf8 6C       		.sleb128 -20
 6415 0bf9 1F       		.uleb128 0x1f
 6416 0bfa 6900     		.ascii	"i\000"
 6417 0bfc 02       		.byte	0x2
 6418 0bfd 57       		.byte	0x57
 6419 0bfe 68000000 		.4byte	0x68
 6420 0c02 02       		.uleb128 0x2
 6421 0c03 91       		.byte	0x91
 6422 0c04 74       		.sleb128 -12
 6423 0c05 00       		.byte	0
 6424 0c06 25       		.uleb128 0x25
 6425 0c07 AF030000 		.4byte	.LASF157
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 136


 6426 0c0b 02       		.byte	0x2
 6427 0c0c 63       		.byte	0x63
 6428 0c0d 00000000 		.4byte	.LFB72
 6429 0c11 B0000000 		.4byte	.LFE72-.LFB72
 6430 0c15 01       		.uleb128 0x1
 6431 0c16 9C       		.byte	0x9c
 6432 0c17 360C0000 		.4byte	0xc36
 6433 0c1b 22       		.uleb128 0x22
 6434 0c1c 42070000 		.4byte	.LASF158
 6435 0c20 02       		.byte	0x2
 6436 0c21 63       		.byte	0x63
 6437 0c22 380A0000 		.4byte	0xa38
 6438 0c26 02       		.uleb128 0x2
 6439 0c27 91       		.byte	0x91
 6440 0c28 6C       		.sleb128 -20
 6441 0c29 1F       		.uleb128 0x1f
 6442 0c2a 6900     		.ascii	"i\000"
 6443 0c2c 02       		.byte	0x2
 6444 0c2d 65       		.byte	0x65
 6445 0c2e 68000000 		.4byte	0x68
 6446 0c32 02       		.uleb128 0x2
 6447 0c33 91       		.byte	0x91
 6448 0c34 74       		.sleb128 -12
 6449 0c35 00       		.byte	0
 6450 0c36 25       		.uleb128 0x25
 6451 0c37 2E0A0000 		.4byte	.LASF159
 6452 0c3b 02       		.byte	0x2
 6453 0c3c 7C       		.byte	0x7c
 6454 0c3d 00000000 		.4byte	.LFB73
 6455 0c41 20010000 		.4byte	.LFE73-.LFB73
 6456 0c45 01       		.uleb128 0x1
 6457 0c46 9C       		.byte	0x9c
 6458 0c47 720C0000 		.4byte	0xc72
 6459 0c4b 21       		.uleb128 0x21
 6460 0c4c 6D617000 		.ascii	"map\000"
 6461 0c50 02       		.byte	0x2
 6462 0c51 7C       		.byte	0x7c
 6463 0c52 820C0000 		.4byte	0xc82
 6464 0c56 02       		.uleb128 0x2
 6465 0c57 91       		.byte	0x91
 6466 0c58 6C       		.sleb128 -20
 6467 0c59 1F       		.uleb128 0x1f
 6468 0c5a 6D00     		.ascii	"m\000"
 6469 0c5c 02       		.byte	0x2
 6470 0c5d 80       		.byte	0x80
 6471 0c5e 68000000 		.4byte	0x68
 6472 0c62 02       		.uleb128 0x2
 6473 0c63 91       		.byte	0x91
 6474 0c64 74       		.sleb128 -12
 6475 0c65 1F       		.uleb128 0x1f
 6476 0c66 6E00     		.ascii	"n\000"
 6477 0c68 02       		.byte	0x2
 6478 0c69 81       		.byte	0x81
 6479 0c6a 68000000 		.4byte	0x68
 6480 0c6e 02       		.uleb128 0x2
 6481 0c6f 91       		.byte	0x91
 6482 0c70 70       		.sleb128 -16
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 137


 6483 0c71 00       		.byte	0
 6484 0c72 09       		.uleb128 0x9
 6485 0c73 68000000 		.4byte	0x68
 6486 0c77 820C0000 		.4byte	0xc82
 6487 0c7b 0A       		.uleb128 0xa
 6488 0c7c D4000000 		.4byte	0xd4
 6489 0c80 12       		.byte	0x12
 6490 0c81 00       		.byte	0
 6491 0c82 0F       		.uleb128 0xf
 6492 0c83 04       		.byte	0x4
 6493 0c84 720C0000 		.4byte	0xc72
 6494 0c88 23       		.uleb128 0x23
 6495 0c89 C8010000 		.4byte	.LASF160
 6496 0c8d 02       		.byte	0x2
 6497 0c8e A4       		.byte	0xa4
 6498 0c8f 00000000 		.4byte	.LFB74
 6499 0c93 9E000000 		.4byte	.LFE74-.LFB74
 6500 0c97 01       		.uleb128 0x1
 6501 0c98 9C       		.byte	0x9c
 6502 0c99 D40C0000 		.4byte	0xcd4
 6503 0c9d 21       		.uleb128 0x21
 6504 0c9e 6D617000 		.ascii	"map\000"
 6505 0ca2 02       		.byte	0x2
 6506 0ca3 A4       		.byte	0xa4
 6507 0ca4 820C0000 		.4byte	0xc82
 6508 0ca8 02       		.uleb128 0x2
 6509 0ca9 91       		.byte	0x91
 6510 0caa 6C       		.sleb128 -20
 6511 0cab 22       		.uleb128 0x22
 6512 0cac D4030000 		.4byte	.LASF153
 6513 0cb0 02       		.byte	0x2
 6514 0cb1 A4       		.byte	0xa4
 6515 0cb2 7C0A0000 		.4byte	0xa7c
 6516 0cb6 02       		.uleb128 0x2
 6517 0cb7 91       		.byte	0x91
 6518 0cb8 68       		.sleb128 -24
 6519 0cb9 22       		.uleb128 0x22
 6520 0cba 69070000 		.4byte	.LASF161
 6521 0cbe 02       		.byte	0x2
 6522 0cbf A4       		.byte	0xa4
 6523 0cc0 68000000 		.4byte	0x68
 6524 0cc4 02       		.uleb128 0x2
 6525 0cc5 91       		.byte	0x91
 6526 0cc6 64       		.sleb128 -28
 6527 0cc7 1F       		.uleb128 0x1f
 6528 0cc8 6900     		.ascii	"i\000"
 6529 0cca 02       		.byte	0x2
 6530 0ccb AA       		.byte	0xaa
 6531 0ccc 68000000 		.4byte	0x68
 6532 0cd0 02       		.uleb128 0x2
 6533 0cd1 91       		.byte	0x91
 6534 0cd2 74       		.sleb128 -12
 6535 0cd3 00       		.byte	0
 6536 0cd4 24       		.uleb128 0x24
 6537 0cd5 D9030000 		.4byte	.LASF162
 6538 0cd9 02       		.byte	0x2
 6539 0cda B4       		.byte	0xb4
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 138


 6540 0cdb 68000000 		.4byte	0x68
 6541 0cdf 00000000 		.4byte	.LFB75
 6542 0ce3 58000000 		.4byte	.LFE75-.LFB75
 6543 0ce7 01       		.uleb128 0x1
 6544 0ce8 9C       		.byte	0x9c
 6545 0ce9 FA0C0000 		.4byte	0xcfa
 6546 0ced 21       		.uleb128 0x21
 6547 0cee 7000     		.ascii	"p\000"
 6548 0cf0 02       		.byte	0x2
 6549 0cf1 B4       		.byte	0xb4
 6550 0cf2 BB090000 		.4byte	0x9bb
 6551 0cf6 02       		.uleb128 0x2
 6552 0cf7 91       		.byte	0x91
 6553 0cf8 70       		.sleb128 -16
 6554 0cf9 00       		.byte	0
 6555 0cfa 23       		.uleb128 0x23
 6556 0cfb 2C050000 		.4byte	.LASF163
 6557 0cff 02       		.byte	0x2
 6558 0d00 BB       		.byte	0xbb
 6559 0d01 00000000 		.4byte	.LFB76
 6560 0d05 34000000 		.4byte	.LFE76-.LFB76
 6561 0d09 01       		.uleb128 0x1
 6562 0d0a 9C       		.byte	0x9c
 6563 0d0b 1C0D0000 		.4byte	0xd1c
 6564 0d0f 21       		.uleb128 0x21
 6565 0d10 7000     		.ascii	"p\000"
 6566 0d12 02       		.byte	0x2
 6567 0d13 BB       		.byte	0xbb
 6568 0d14 BB090000 		.4byte	0x9bb
 6569 0d18 02       		.uleb128 0x2
 6570 0d19 91       		.byte	0x91
 6571 0d1a 70       		.sleb128 -16
 6572 0d1b 00       		.byte	0
 6573 0d1c 25       		.uleb128 0x25
 6574 0d1d 1A070000 		.4byte	.LASF164
 6575 0d21 02       		.byte	0x2
 6576 0d22 BE       		.byte	0xbe
 6577 0d23 00000000 		.4byte	.LFB77
 6578 0d27 4C010000 		.4byte	.LFE77-.LFB77
 6579 0d2b 01       		.uleb128 0x1
 6580 0d2c 9C       		.byte	0x9c
 6581 0d2d D40D0000 		.4byte	0xdd4
 6582 0d31 22       		.uleb128 0x22
 6583 0d32 FF070000 		.4byte	.LASF165
 6584 0d36 02       		.byte	0x2
 6585 0d37 BE       		.byte	0xbe
 6586 0d38 7C0A0000 		.4byte	0xa7c
 6587 0d3c 02       		.uleb128 0x2
 6588 0d3d 91       		.byte	0x91
 6589 0d3e 44       		.sleb128 -60
 6590 0d3f 22       		.uleb128 0x22
 6591 0d40 42070000 		.4byte	.LASF158
 6592 0d44 02       		.byte	0x2
 6593 0d45 BE       		.byte	0xbe
 6594 0d46 380A0000 		.4byte	0xa38
 6595 0d4a 02       		.uleb128 0x2
 6596 0d4b 91       		.byte	0x91
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 139


 6597 0d4c 40       		.sleb128 -64
 6598 0d4d 26       		.uleb128 0x26
 6599 0d4e 90050000 		.4byte	.LASF166
 6600 0d52 02       		.byte	0x2
 6601 0d53 C0       		.byte	0xc0
 6602 0d54 68000000 		.4byte	0x68
 6603 0d58 02       		.uleb128 0x2
 6604 0d59 91       		.byte	0x91
 6605 0d5a 74       		.sleb128 -12
 6606 0d5b 26       		.uleb128 0x26
 6607 0d5c 370A0000 		.4byte	.LASF167
 6608 0d60 02       		.byte	0x2
 6609 0d61 C1       		.byte	0xc1
 6610 0d62 BB090000 		.4byte	0x9bb
 6611 0d66 02       		.uleb128 0x2
 6612 0d67 91       		.byte	0x91
 6613 0d68 54       		.sleb128 -44
 6614 0d69 26       		.uleb128 0x26
 6615 0d6a A4000000 		.4byte	.LASF168
 6616 0d6e 02       		.byte	0x2
 6617 0d6f C1       		.byte	0xc1
 6618 0d70 BB090000 		.4byte	0x9bb
 6619 0d74 02       		.uleb128 0x2
 6620 0d75 91       		.byte	0x91
 6621 0d76 4C       		.sleb128 -52
 6622 0d77 26       		.uleb128 0x26
 6623 0d78 6C0A0000 		.4byte	.LASF169
 6624 0d7c 02       		.byte	0x2
 6625 0d7d C2       		.byte	0xc2
 6626 0d7e 68000000 		.4byte	0x68
 6627 0d82 02       		.uleb128 0x2
 6628 0d83 91       		.byte	0x91
 6629 0d84 70       		.sleb128 -16
 6630 0d85 26       		.uleb128 0x26
 6631 0d86 68010000 		.4byte	.LASF170
 6632 0d8a 02       		.byte	0x2
 6633 0d8b C3       		.byte	0xc3
 6634 0d8c 68000000 		.4byte	0x68
 6635 0d90 02       		.uleb128 0x2
 6636 0d91 91       		.byte	0x91
 6637 0d92 6C       		.sleb128 -20
 6638 0d93 26       		.uleb128 0x26
 6639 0d94 78060000 		.4byte	.LASF171
 6640 0d98 02       		.byte	0x2
 6641 0d99 C5       		.byte	0xc5
 6642 0d9a 68000000 		.4byte	0x68
 6643 0d9e 02       		.uleb128 0x2
 6644 0d9f 91       		.byte	0x91
 6645 0da0 68       		.sleb128 -24
 6646 0da1 26       		.uleb128 0x26
 6647 0da2 69070000 		.4byte	.LASF161
 6648 0da6 02       		.byte	0x2
 6649 0da7 C6       		.byte	0xc6
 6650 0da8 68000000 		.4byte	0x68
 6651 0dac 02       		.uleb128 0x2
 6652 0dad 91       		.byte	0x91
 6653 0dae 60       		.sleb128 -32
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 140


 6654 0daf 1F       		.uleb128 0x1f
 6655 0db0 6900     		.ascii	"i\000"
 6656 0db2 02       		.byte	0x2
 6657 0db3 C8       		.byte	0xc8
 6658 0db4 68000000 		.4byte	0x68
 6659 0db8 02       		.uleb128 0x2
 6660 0db9 91       		.byte	0x91
 6661 0dba 64       		.sleb128 -28
 6662 0dbb 27       		.uleb128 0x27
 6663 0dbc 2C000000 		.4byte	.LBB2
 6664 0dc0 F6000000 		.4byte	.LBE2-.LBB2
 6665 0dc4 26       		.uleb128 0x26
 6666 0dc5 EA060000 		.4byte	.LASF172
 6667 0dc9 02       		.byte	0x2
 6668 0dca D7       		.byte	0xd7
 6669 0dcb 68000000 		.4byte	0x68
 6670 0dcf 02       		.uleb128 0x2
 6671 0dd0 91       		.byte	0x91
 6672 0dd1 5C       		.sleb128 -36
 6673 0dd2 00       		.byte	0
 6674 0dd3 00       		.byte	0
 6675 0dd4 28       		.uleb128 0x28
 6676 0dd5 20030000 		.4byte	.LASF173
 6677 0dd9 02       		.byte	0x2
 6678 0dda F6       		.byte	0xf6
 6679 0ddb 68000000 		.4byte	0x68
 6680 0ddf 00000000 		.4byte	.LFB78
 6681 0de3 80000000 		.4byte	.LFE78-.LFB78
 6682 0de7 01       		.uleb128 0x1
 6683 0de8 9C       		.byte	0x9c
 6684 0de9 2E0E0000 		.4byte	0xe2e
 6685 0ded 21       		.uleb128 0x21
 6686 0dee 7000     		.ascii	"p\000"
 6687 0df0 02       		.byte	0x2
 6688 0df1 F6       		.byte	0xf6
 6689 0df2 BB090000 		.4byte	0x9bb
 6690 0df6 02       		.uleb128 0x2
 6691 0df7 91       		.byte	0x91
 6692 0df8 58       		.sleb128 -40
 6693 0df9 1F       		.uleb128 0x1f
 6694 0dfa 6E756D00 		.ascii	"num\000"
 6695 0dfe 02       		.byte	0x2
 6696 0dff F7       		.byte	0xf7
 6697 0e00 68000000 		.4byte	0x68
 6698 0e04 02       		.uleb128 0x2
 6699 0e05 91       		.byte	0x91
 6700 0e06 74       		.sleb128 -12
 6701 0e07 26       		.uleb128 0x26
 6702 0e08 09000000 		.4byte	.LASF174
 6703 0e0c 02       		.byte	0x2
 6704 0e0d F7       		.byte	0xf7
 6705 0e0e 68000000 		.4byte	0x68
 6706 0e12 02       		.uleb128 0x2
 6707 0e13 91       		.byte	0x91
 6708 0e14 68       		.sleb128 -24
 6709 0e15 1F       		.uleb128 0x1f
 6710 0e16 6900     		.ascii	"i\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 141


 6711 0e18 02       		.byte	0x2
 6712 0e19 F8       		.byte	0xf8
 6713 0e1a 68000000 		.4byte	0x68
 6714 0e1e 02       		.uleb128 0x2
 6715 0e1f 91       		.byte	0x91
 6716 0e20 70       		.sleb128 -16
 6717 0e21 1F       		.uleb128 0x1f
 6718 0e22 6A00     		.ascii	"j\000"
 6719 0e24 02       		.byte	0x2
 6720 0e25 F9       		.byte	0xf9
 6721 0e26 68000000 		.4byte	0x68
 6722 0e2a 02       		.uleb128 0x2
 6723 0e2b 91       		.byte	0x91
 6724 0e2c 6C       		.sleb128 -20
 6725 0e2d 00       		.byte	0
 6726 0e2e 25       		.uleb128 0x25
 6727 0e2f AB050000 		.4byte	.LASF175
 6728 0e33 03       		.byte	0x3
 6729 0e34 0C       		.byte	0xc
 6730 0e35 00000000 		.4byte	.LFB79
 6731 0e39 6C000000 		.4byte	.LFE79-.LFB79
 6732 0e3d 01       		.uleb128 0x1
 6733 0e3e 9C       		.byte	0x9c
 6734 0e3f 960E0000 		.4byte	0xe96
 6735 0e43 22       		.uleb128 0x22
 6736 0e44 A70B0000 		.4byte	.LASF176
 6737 0e48 03       		.byte	0x3
 6738 0e49 0C       		.byte	0xc
 6739 0e4a A60E0000 		.4byte	0xea6
 6740 0e4e 02       		.uleb128 0x2
 6741 0e4f 91       		.byte	0x91
 6742 0e50 6C       		.sleb128 -20
 6743 0e51 21       		.uleb128 0x21
 6744 0e52 636E7400 		.ascii	"cnt\000"
 6745 0e56 03       		.byte	0x3
 6746 0e57 0C       		.byte	0xc
 6747 0e58 380A0000 		.4byte	0xa38
 6748 0e5c 02       		.uleb128 0x2
 6749 0e5d 91       		.byte	0x91
 6750 0e5e 68       		.sleb128 -24
 6751 0e5f 22       		.uleb128 0x22
 6752 0e60 FF070000 		.4byte	.LASF165
 6753 0e64 03       		.byte	0x3
 6754 0e65 0D       		.byte	0xd
 6755 0e66 7C0A0000 		.4byte	0xa7c
 6756 0e6a 02       		.uleb128 0x2
 6757 0e6b 91       		.byte	0x91
 6758 0e6c 64       		.sleb128 -28
 6759 0e6d 22       		.uleb128 0x22
 6760 0e6e 0F080000 		.4byte	.LASF177
 6761 0e72 03       		.byte	0x3
 6762 0e73 0D       		.byte	0xd
 6763 0e74 68000000 		.4byte	0x68
 6764 0e78 02       		.uleb128 0x2
 6765 0e79 91       		.byte	0x91
 6766 0e7a 60       		.sleb128 -32
 6767 0e7b 21       		.uleb128 0x21
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 142


 6768 0e7c 7000     		.ascii	"p\000"
 6769 0e7e 03       		.byte	0x3
 6770 0e7f 0D       		.byte	0xd
 6771 0e80 BB090000 		.4byte	0x9bb
 6772 0e84 02       		.uleb128 0x2
 6773 0e85 91       		.byte	0x91
 6774 0e86 00       		.sleb128 0
 6775 0e87 26       		.uleb128 0x26
 6776 0e88 09000000 		.4byte	.LASF174
 6777 0e8c 03       		.byte	0x3
 6778 0e8d 0F       		.byte	0xf
 6779 0e8e 68000000 		.4byte	0x68
 6780 0e92 02       		.uleb128 0x2
 6781 0e93 91       		.byte	0x91
 6782 0e94 74       		.sleb128 -12
 6783 0e95 00       		.byte	0
 6784 0e96 09       		.uleb128 0x9
 6785 0e97 BB090000 		.4byte	0x9bb
 6786 0e9b A60E0000 		.4byte	0xea6
 6787 0e9f 0A       		.uleb128 0xa
 6788 0ea0 D4000000 		.4byte	0xd4
 6789 0ea4 8B       		.byte	0x8b
 6790 0ea5 00       		.byte	0
 6791 0ea6 0F       		.uleb128 0xf
 6792 0ea7 04       		.byte	0x4
 6793 0ea8 960E0000 		.4byte	0xe96
 6794 0eac 29       		.uleb128 0x29
 6795 0ead 42465300 		.ascii	"BFS\000"
 6796 0eb1 03       		.byte	0x3
 6797 0eb2 19       		.byte	0x19
 6798 0eb3 00000000 		.4byte	.LFB80
 6799 0eb7 54040000 		.4byte	.LFE80-.LFB80
 6800 0ebb 01       		.uleb128 0x1
 6801 0ebc 9C       		.byte	0x9c
 6802 0ebd 680F0000 		.4byte	0xf68
 6803 0ec1 22       		.uleb128 0x22
 6804 0ec2 E4060000 		.4byte	.LASF178
 6805 0ec6 03       		.byte	0x3
 6806 0ec7 19       		.byte	0x19
 6807 0ec8 BB090000 		.4byte	0x9bb
 6808 0ecc 04       		.uleb128 0x4
 6809 0ecd 91       		.byte	0x91
 6810 0ece B0D07E   		.sleb128 -22480
 6811 0ed1 22       		.uleb128 0x22
 6812 0ed2 4E040000 		.4byte	.LASF179
 6813 0ed6 03       		.byte	0x3
 6814 0ed7 19       		.byte	0x19
 6815 0ed8 BB090000 		.4byte	0x9bb
 6816 0edc 04       		.uleb128 0x4
 6817 0edd 91       		.byte	0x91
 6818 0ede A8D07E   		.sleb128 -22488
 6819 0ee1 22       		.uleb128 0x22
 6820 0ee2 FF070000 		.4byte	.LASF165
 6821 0ee6 03       		.byte	0x3
 6822 0ee7 19       		.byte	0x19
 6823 0ee8 7C0A0000 		.4byte	0xa7c
 6824 0eec 02       		.uleb128 0x2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 143


 6825 0eed 91       		.byte	0x91
 6826 0eee 00       		.sleb128 0
 6827 0eef 26       		.uleb128 0x26
 6828 0ef0 84000000 		.4byte	.LASF180
 6829 0ef4 03       		.byte	0x3
 6830 0ef5 1B       		.byte	0x1b
 6831 0ef6 680F0000 		.4byte	0xf68
 6832 0efa 04       		.uleb128 0x4
 6833 0efb 91       		.byte	0x91
 6834 0efc 84A87F   		.sleb128 -11260
 6835 0eff 26       		.uleb128 0x26
 6836 0f00 A70B0000 		.4byte	.LASF176
 6837 0f04 03       		.byte	0x3
 6838 0f05 1C       		.byte	0x1c
 6839 0f06 680F0000 		.4byte	0xf68
 6840 0f0a 04       		.uleb128 0x4
 6841 0f0b 91       		.byte	0x91
 6842 0f0c C4D07E   		.sleb128 -22460
 6843 0f0f 1F       		.uleb128 0x1f
 6844 0f10 6900     		.ascii	"i\000"
 6845 0f12 03       		.byte	0x3
 6846 0f13 20       		.byte	0x20
 6847 0f14 68000000 		.4byte	0x68
 6848 0f18 02       		.uleb128 0x2
 6849 0f19 91       		.byte	0x91
 6850 0f1a 6C       		.sleb128 -20
 6851 0f1b 26       		.uleb128 0x26
 6852 0f1c 0F080000 		.4byte	.LASF177
 6853 0f20 03       		.byte	0x3
 6854 0f21 29       		.byte	0x29
 6855 0f22 68000000 		.4byte	0x68
 6856 0f26 02       		.uleb128 0x2
 6857 0f27 91       		.byte	0x91
 6858 0f28 68       		.sleb128 -24
 6859 0f29 1F       		.uleb128 0x1f
 6860 0f2a 636E7400 		.ascii	"cnt\000"
 6861 0f2e 03       		.byte	0x3
 6862 0f2f 2A       		.byte	0x2a
 6863 0f30 68000000 		.4byte	0x68
 6864 0f34 04       		.uleb128 0x4
 6865 0f35 91       		.byte	0x91
 6866 0f36 C0D07E   		.sleb128 -22464
 6867 0f39 27       		.uleb128 0x27
 6868 0f3a F6000000 		.4byte	.LBB3
 6869 0f3e 52030000 		.4byte	.LBE3-.LBB3
 6870 0f42 1F       		.uleb128 0x1f
 6871 0f43 6900     		.ascii	"i\000"
 6872 0f45 03       		.byte	0x3
 6873 0f46 2E       		.byte	0x2e
 6874 0f47 68000000 		.4byte	0x68
 6875 0f4b 02       		.uleb128 0x2
 6876 0f4c 91       		.byte	0x91
 6877 0f4d 64       		.sleb128 -28
 6878 0f4e 27       		.uleb128 0x27
 6879 0f4f 0E010000 		.4byte	.LBB4
 6880 0f53 5A020000 		.4byte	.LBE4-.LBB4
 6881 0f57 1F       		.uleb128 0x1f
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 144


 6882 0f58 7000     		.ascii	"p\000"
 6883 0f5a 03       		.byte	0x3
 6884 0f5b 3B       		.byte	0x3b
 6885 0f5c BB090000 		.4byte	0x9bb
 6886 0f60 04       		.uleb128 0x4
 6887 0f61 91       		.byte	0x91
 6888 0f62 B8D07E   		.sleb128 -22472
 6889 0f65 00       		.byte	0
 6890 0f66 00       		.byte	0
 6891 0f67 00       		.byte	0
 6892 0f68 09       		.uleb128 0x9
 6893 0f69 BB090000 		.4byte	0x9bb
 6894 0f6d 7E0F0000 		.4byte	0xf7e
 6895 0f71 0A       		.uleb128 0xa
 6896 0f72 D4000000 		.4byte	0xd4
 6897 0f76 09       		.byte	0x9
 6898 0f77 0A       		.uleb128 0xa
 6899 0f78 D4000000 		.4byte	0xd4
 6900 0f7c 8B       		.byte	0x8b
 6901 0f7d 00       		.byte	0
 6902 0f7e 2A       		.uleb128 0x2a
 6903 0f7f B5000000 		.4byte	.LASF181
 6904 0f83 04       		.byte	0x4
 6905 0f84 66       		.byte	0x66
 6906 0f85 00000000 		.4byte	.LFB81
 6907 0f89 30000000 		.4byte	.LFE81-.LFB81
 6908 0f8d 01       		.uleb128 0x1
 6909 0f8e 9C       		.byte	0x9c
 6910 0f8f 2B       		.uleb128 0x2b
 6911 0f90 9E0A0000 		.4byte	.LASF182
 6912 0f94 04       		.byte	0x4
 6913 0f95 6D       		.byte	0x6d
 6914 0f96 00000000 		.4byte	.LFB82
 6915 0f9a 18000000 		.4byte	.LFE82-.LFB82
 6916 0f9e 01       		.uleb128 0x1
 6917 0f9f 9C       		.byte	0x9c
 6918 0fa0 2C       		.uleb128 0x2c
 6919 0fa1 75070000 		.4byte	.LASF183
 6920 0fa5 04       		.byte	0x4
 6921 0fa6 82       		.byte	0x82
 6922 0fa7 68000000 		.4byte	0x68
 6923 0fab 00000000 		.4byte	.LFB83
 6924 0faf 30020000 		.4byte	.LFE83-.LFB83
 6925 0fb3 01       		.uleb128 0x1
 6926 0fb4 9C       		.byte	0x9c
 6927 0fb5 44100000 		.4byte	0x1044
 6928 0fb9 26       		.uleb128 0x26
 6929 0fba E4060000 		.4byte	.LASF178
 6930 0fbe 04       		.byte	0x4
 6931 0fbf 85       		.byte	0x85
 6932 0fc0 BB090000 		.4byte	0x9bb
 6933 0fc4 02       		.uleb128 0x2
 6934 0fc5 91       		.byte	0x91
 6935 0fc6 64       		.sleb128 -28
 6936 0fc7 26       		.uleb128 0x26
 6937 0fc8 F8060000 		.4byte	.LASF184
 6938 0fcc 04       		.byte	0x4
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 145


 6939 0fcd 86       		.byte	0x86
 6940 0fce BB090000 		.4byte	0x9bb
 6941 0fd2 02       		.uleb128 0x2
 6942 0fd3 91       		.byte	0x91
 6943 0fd4 5C       		.sleb128 -36
 6944 0fd5 26       		.uleb128 0x26
 6945 0fd6 E1020000 		.4byte	.LASF185
 6946 0fda 04       		.byte	0x4
 6947 0fdb 87       		.byte	0x87
 6948 0fdc 44100000 		.4byte	0x1044
 6949 0fe0 03       		.uleb128 0x3
 6950 0fe1 91       		.byte	0x91
 6951 0fe2 BC7B     		.sleb128 -580
 6952 0fe4 1F       		.uleb128 0x1f
 6953 0fe5 6900     		.ascii	"i\000"
 6954 0fe7 04       		.byte	0x4
 6955 0fe8 89       		.byte	0x89
 6956 0fe9 68000000 		.4byte	0x68
 6957 0fed 02       		.uleb128 0x2
 6958 0fee 91       		.byte	0x91
 6959 0fef 74       		.sleb128 -12
 6960 0ff0 26       		.uleb128 0x26
 6961 0ff1 54070000 		.4byte	.LASF186
 6962 0ff5 04       		.byte	0x4
 6963 0ff6 90       		.byte	0x90
 6964 0ff7 54100000 		.4byte	0x1054
 6965 0ffb 03       		.uleb128 0x3
 6966 0ffc 91       		.byte	0x91
 6967 0ffd F479     		.sleb128 -780
 6968 0fff 26       		.uleb128 0x26
 6969 1000 58080000 		.4byte	.LASF187
 6970 1004 04       		.byte	0x4
 6971 1005 B6       		.byte	0xb6
 6972 1006 68000000 		.4byte	0x68
 6973 100a 03       		.uleb128 0x3
 6974 100b 91       		.byte	0x91
 6975 100c F079     		.sleb128 -784
 6976 100e 26       		.uleb128 0x26
 6977 100f EA030000 		.4byte	.LASF188
 6978 1013 04       		.byte	0x4
 6979 1014 B7       		.byte	0xb7
 6980 1015 68000000 		.4byte	0x68
 6981 1019 03       		.uleb128 0x3
 6982 101a 91       		.byte	0x91
 6983 101b EC79     		.sleb128 -788
 6984 101d 26       		.uleb128 0x26
 6985 101e 5C0A0000 		.4byte	.LASF189
 6986 1022 04       		.byte	0x4
 6987 1023 B9       		.byte	0xb9
 6988 1024 68000000 		.4byte	0x68
 6989 1028 02       		.uleb128 0x2
 6990 1029 91       		.byte	0x91
 6991 102a 70       		.sleb128 -16
 6992 102b 27       		.uleb128 0x27
 6993 102c 8A010000 		.4byte	.LBB5
 6994 1030 28000000 		.4byte	.LBE5-.LBB5
 6995 1034 26       		.uleb128 0x26
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 146


 6996 1035 37070000 		.4byte	.LASF190
 6997 1039 04       		.byte	0x4
 6998 103a E6       		.byte	0xe6
 6999 103b 68000000 		.4byte	0x68
 7000 103f 02       		.uleb128 0x2
 7001 1040 91       		.byte	0x91
 7002 1041 6C       		.sleb128 -20
 7003 1042 00       		.byte	0
 7004 1043 00       		.byte	0
 7005 1044 09       		.uleb128 0x9
 7006 1045 BB090000 		.4byte	0x9bb
 7007 1049 54100000 		.4byte	0x1054
 7008 104d 0A       		.uleb128 0xa
 7009 104e D4000000 		.4byte	0xd4
 7010 1052 43       		.byte	0x43
 7011 1053 00       		.byte	0
 7012 1054 09       		.uleb128 0x9
 7013 1055 68000000 		.4byte	0x68
 7014 1059 64100000 		.4byte	0x1064
 7015 105d 0A       		.uleb128 0xa
 7016 105e D4000000 		.4byte	0xd4
 7017 1062 31       		.byte	0x31
 7018 1063 00       		.byte	0
 7019 1064 2D       		.uleb128 0x2d
 7020 1065 D3060000 		.4byte	.LASF191
 7021 1069 04       		.byte	0x4
 7022 106a 0F01     		.2byte	0x10f
 7023 106c A7080000 		.4byte	0x8a7
 7024 1070 00000000 		.4byte	.LFB84
 7025 1074 24000000 		.4byte	.LFE84-.LFB84
 7026 1078 01       		.uleb128 0x1
 7027 1079 9C       		.byte	0x9c
 7028 107a 8C100000 		.4byte	0x108c
 7029 107e 2E       		.uleb128 0x2e
 7030 107f 6E00     		.ascii	"n\000"
 7031 1081 04       		.byte	0x4
 7032 1082 0F01     		.2byte	0x10f
 7033 1084 9B080000 		.4byte	0x89b
 7034 1088 02       		.uleb128 0x2
 7035 1089 91       		.byte	0x91
 7036 108a 76       		.sleb128 -10
 7037 108b 00       		.byte	0
 7038 108c 2F       		.uleb128 0x2f
 7039 108d 00030000 		.4byte	.LASF193
 7040 1091 04       		.byte	0x4
 7041 1092 1301     		.2byte	0x113
 7042 1094 00000000 		.4byte	.LFB85
 7043 1098 E4000000 		.4byte	.LFE85-.LFB85
 7044 109c 01       		.uleb128 0x1
 7045 109d 9C       		.byte	0x9c
 7046 109e D8100000 		.4byte	0x10d8
 7047 10a2 30       		.uleb128 0x30
 7048 10a3 6900     		.ascii	"i\000"
 7049 10a5 04       		.byte	0x4
 7050 10a6 1501     		.2byte	0x115
 7051 10a8 68000000 		.4byte	0x68
 7052 10ac 02       		.uleb128 0x2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 147


 7053 10ad 91       		.byte	0x91
 7054 10ae 74       		.sleb128 -12
 7055 10af 31       		.uleb128 0x31
 7056 10b0 54030000 		.4byte	.LASF194
 7057 10b4 04       		.byte	0x4
 7058 10b5 1D01     		.2byte	0x11d
 7059 10b7 D8100000 		.4byte	0x10d8
 7060 10bb 02       		.uleb128 0x2
 7061 10bc 91       		.byte	0x91
 7062 10bd 50       		.sleb128 -48
 7063 10be 27       		.uleb128 0x27
 7064 10bf 0C000000 		.4byte	.LBB6
 7065 10c3 26000000 		.4byte	.LBE6-.LBB6
 7066 10c7 31       		.uleb128 0x31
 7067 10c8 10000000 		.4byte	.LASF195
 7068 10cc 04       		.byte	0x4
 7069 10cd 1701     		.2byte	0x117
 7070 10cf 68000000 		.4byte	0x68
 7071 10d3 02       		.uleb128 0x2
 7072 10d4 91       		.byte	0x91
 7073 10d5 70       		.sleb128 -16
 7074 10d6 00       		.byte	0
 7075 10d7 00       		.byte	0
 7076 10d8 09       		.uleb128 0x9
 7077 10d9 5B050000 		.4byte	0x55b
 7078 10dd E8100000 		.4byte	0x10e8
 7079 10e1 0A       		.uleb128 0xa
 7080 10e2 D4000000 		.4byte	0xd4
 7081 10e6 1F       		.byte	0x1f
 7082 10e7 00       		.byte	0
 7083 10e8 32       		.uleb128 0x32
 7084 10e9 C6050000 		.4byte	.LASF196
 7085 10ed 04       		.byte	0x4
 7086 10ee 3401     		.2byte	0x134
 7087 10f0 00000000 		.4byte	.LFB86
 7088 10f4 B8010000 		.4byte	.LFE86-.LFB86
 7089 10f8 01       		.uleb128 0x1
 7090 10f9 9C       		.byte	0x9c
 7091 10fa 4A110000 		.4byte	0x114a
 7092 10fe 33       		.uleb128 0x33
 7093 10ff D10B0000 		.4byte	.LASF197
 7094 1103 04       		.byte	0x4
 7095 1104 3401     		.2byte	0x134
 7096 1106 68000000 		.4byte	0x68
 7097 110a 02       		.uleb128 0x2
 7098 110b 91       		.byte	0x91
 7099 110c 6C       		.sleb128 -20
 7100 110d 33       		.uleb128 0x33
 7101 110e 58080000 		.4byte	.LASF187
 7102 1112 04       		.byte	0x4
 7103 1113 3401     		.2byte	0x134
 7104 1115 380A0000 		.4byte	0xa38
 7105 1119 02       		.uleb128 0x2
 7106 111a 91       		.byte	0x91
 7107 111b 68       		.sleb128 -24
 7108 111c 33       		.uleb128 0x33
 7109 111d EA030000 		.4byte	.LASF188
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 148


 7110 1121 04       		.byte	0x4
 7111 1122 3401     		.2byte	0x134
 7112 1124 380A0000 		.4byte	0xa38
 7113 1128 02       		.uleb128 0x2
 7114 1129 91       		.byte	0x91
 7115 112a 64       		.sleb128 -28
 7116 112b 31       		.uleb128 0x31
 7117 112c 00000000 		.4byte	.LASF198
 7118 1130 04       		.byte	0x4
 7119 1131 3B01     		.2byte	0x13b
 7120 1133 B3080000 		.4byte	0x8b3
 7121 1137 02       		.uleb128 0x2
 7122 1138 91       		.byte	0x91
 7123 1139 74       		.sleb128 -12
 7124 113a 31       		.uleb128 0x31
 7125 113b D1040000 		.4byte	.LASF199
 7126 113f 04       		.byte	0x4
 7127 1140 3C01     		.2byte	0x13c
 7128 1142 68000000 		.4byte	0x68
 7129 1146 02       		.uleb128 0x2
 7130 1147 91       		.byte	0x91
 7131 1148 70       		.sleb128 -16
 7132 1149 00       		.byte	0
 7133 114a 2F       		.uleb128 0x2f
 7134 114b 8F020000 		.4byte	.LASF200
 7135 114f 04       		.byte	0x4
 7136 1150 8B01     		.2byte	0x18b
 7137 1152 00000000 		.4byte	.LFB87
 7138 1156 78000000 		.4byte	.LFE87-.LFB87
 7139 115a 01       		.uleb128 0x1
 7140 115b 9C       		.byte	0x9c
 7141 115c 7F110000 		.4byte	0x117f
 7142 1160 31       		.uleb128 0x31
 7143 1161 20010000 		.4byte	.LASF201
 7144 1165 04       		.byte	0x4
 7145 1166 8D01     		.2byte	0x18d
 7146 1168 68000000 		.4byte	0x68
 7147 116c 02       		.uleb128 0x2
 7148 116d 91       		.byte	0x91
 7149 116e 74       		.sleb128 -12
 7150 116f 31       		.uleb128 0x31
 7151 1170 03040000 		.4byte	.LASF202
 7152 1174 04       		.byte	0x4
 7153 1175 8E01     		.2byte	0x18e
 7154 1177 68000000 		.4byte	0x68
 7155 117b 02       		.uleb128 0x2
 7156 117c 91       		.byte	0x91
 7157 117d 70       		.sleb128 -16
 7158 117e 00       		.byte	0
 7159 117f 2F       		.uleb128 0x2f
 7160 1180 90040000 		.4byte	.LASF203
 7161 1184 04       		.byte	0x4
 7162 1185 9D01     		.2byte	0x19d
 7163 1187 00000000 		.4byte	.LFB88
 7164 118b 78000000 		.4byte	.LFE88-.LFB88
 7165 118f 01       		.uleb128 0x1
 7166 1190 9C       		.byte	0x9c
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 149


 7167 1191 B4110000 		.4byte	0x11b4
 7168 1195 31       		.uleb128 0x31
 7169 1196 20010000 		.4byte	.LASF201
 7170 119a 04       		.byte	0x4
 7171 119b 9F01     		.2byte	0x19f
 7172 119d 68000000 		.4byte	0x68
 7173 11a1 02       		.uleb128 0x2
 7174 11a2 91       		.byte	0x91
 7175 11a3 74       		.sleb128 -12
 7176 11a4 31       		.uleb128 0x31
 7177 11a5 03040000 		.4byte	.LASF202
 7178 11a9 04       		.byte	0x4
 7179 11aa A001     		.2byte	0x1a0
 7180 11ac 68000000 		.4byte	0x68
 7181 11b0 02       		.uleb128 0x2
 7182 11b1 91       		.byte	0x91
 7183 11b2 70       		.sleb128 -16
 7184 11b3 00       		.byte	0
 7185 11b4 32       		.uleb128 0x32
 7186 11b5 DA070000 		.4byte	.LASF204
 7187 11b9 04       		.byte	0x4
 7188 11ba B001     		.2byte	0x1b0
 7189 11bc 00000000 		.4byte	.LFB89
 7190 11c0 B0000000 		.4byte	.LFE89-.LFB89
 7191 11c4 01       		.uleb128 0x1
 7192 11c5 9C       		.byte	0x9c
 7193 11c6 F8110000 		.4byte	0x11f8
 7194 11ca 33       		.uleb128 0x33
 7195 11cb 64000000 		.4byte	.LASF205
 7196 11cf 04       		.byte	0x4
 7197 11d0 B001     		.2byte	0x1b0
 7198 11d2 68000000 		.4byte	0x68
 7199 11d6 02       		.uleb128 0x2
 7200 11d7 91       		.byte	0x91
 7201 11d8 6C       		.sleb128 -20
 7202 11d9 31       		.uleb128 0x31
 7203 11da B5050000 		.4byte	.LASF206
 7204 11de 04       		.byte	0x4
 7205 11df B101     		.2byte	0x1b1
 7206 11e1 B3080000 		.4byte	0x8b3
 7207 11e5 02       		.uleb128 0x2
 7208 11e6 91       		.byte	0x91
 7209 11e7 70       		.sleb128 -16
 7210 11e8 31       		.uleb128 0x31
 7211 11e9 53010000 		.4byte	.LASF207
 7212 11ed 04       		.byte	0x4
 7213 11ee B201     		.2byte	0x1b2
 7214 11f0 B3080000 		.4byte	0x8b3
 7215 11f4 02       		.uleb128 0x2
 7216 11f5 91       		.byte	0x91
 7217 11f6 74       		.sleb128 -12
 7218 11f7 00       		.byte	0
 7219 11f8 2F       		.uleb128 0x2f
 7220 11f9 96010000 		.4byte	.LASF208
 7221 11fd 04       		.byte	0x4
 7222 11fe CD01     		.2byte	0x1cd
 7223 1200 00000000 		.4byte	.LFB90
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 150


 7224 1204 C0000000 		.4byte	.LFE90-.LFB90
 7225 1208 01       		.uleb128 0x1
 7226 1209 9C       		.byte	0x9c
 7227 120a 2D120000 		.4byte	0x122d
 7228 120e 31       		.uleb128 0x31
 7229 120f 20010000 		.4byte	.LASF201
 7230 1213 04       		.byte	0x4
 7231 1214 CF01     		.2byte	0x1cf
 7232 1216 68000000 		.4byte	0x68
 7233 121a 02       		.uleb128 0x2
 7234 121b 91       		.byte	0x91
 7235 121c 74       		.sleb128 -12
 7236 121d 31       		.uleb128 0x31
 7237 121e 03040000 		.4byte	.LASF202
 7238 1222 04       		.byte	0x4
 7239 1223 D001     		.2byte	0x1d0
 7240 1225 68000000 		.4byte	0x68
 7241 1229 02       		.uleb128 0x2
 7242 122a 91       		.byte	0x91
 7243 122b 70       		.sleb128 -16
 7244 122c 00       		.byte	0
 7245 122d 2F       		.uleb128 0x2f
 7246 122e 98060000 		.4byte	.LASF209
 7247 1232 04       		.byte	0x4
 7248 1233 F101     		.2byte	0x1f1
 7249 1235 00000000 		.4byte	.LFB91
 7250 1239 E8000000 		.4byte	.LFE91-.LFB91
 7251 123d 01       		.uleb128 0x1
 7252 123e 9C       		.byte	0x9c
 7253 123f 62120000 		.4byte	0x1262
 7254 1243 31       		.uleb128 0x31
 7255 1244 20010000 		.4byte	.LASF201
 7256 1248 04       		.byte	0x4
 7257 1249 F301     		.2byte	0x1f3
 7258 124b 68000000 		.4byte	0x68
 7259 124f 02       		.uleb128 0x2
 7260 1250 91       		.byte	0x91
 7261 1251 74       		.sleb128 -12
 7262 1252 31       		.uleb128 0x31
 7263 1253 03040000 		.4byte	.LASF202
 7264 1257 04       		.byte	0x4
 7265 1258 F401     		.2byte	0x1f4
 7266 125a 68000000 		.4byte	0x68
 7267 125e 02       		.uleb128 0x2
 7268 125f 91       		.byte	0x91
 7269 1260 70       		.sleb128 -16
 7270 1261 00       		.byte	0
 7271 1262 32       		.uleb128 0x32
 7272 1263 A5050000 		.4byte	.LASF210
 7273 1267 04       		.byte	0x4
 7274 1268 1D02     		.2byte	0x21d
 7275 126a 00000000 		.4byte	.LFB92
 7276 126e 9C010000 		.4byte	.LFE92-.LFB92
 7277 1272 01       		.uleb128 0x1
 7278 1273 9C       		.byte	0x9c
 7279 1274 C4120000 		.4byte	0x12c4
 7280 1278 33       		.uleb128 0x33
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 151


 7281 1279 EA030000 		.4byte	.LASF188
 7282 127d 04       		.byte	0x4
 7283 127e 1D02     		.2byte	0x21d
 7284 1280 380A0000 		.4byte	0xa38
 7285 1284 02       		.uleb128 0x2
 7286 1285 91       		.byte	0x91
 7287 1286 64       		.sleb128 -28
 7288 1287 33       		.uleb128 0x33
 7289 1288 58080000 		.4byte	.LASF187
 7290 128c 04       		.byte	0x4
 7291 128d 1D02     		.2byte	0x21d
 7292 128f 380A0000 		.4byte	0xa38
 7293 1293 02       		.uleb128 0x2
 7294 1294 91       		.byte	0x91
 7295 1295 60       		.sleb128 -32
 7296 1296 31       		.uleb128 0x31
 7297 1297 00000000 		.4byte	.LASF198
 7298 129b 04       		.byte	0x4
 7299 129c 2202     		.2byte	0x222
 7300 129e B3080000 		.4byte	0x8b3
 7301 12a2 02       		.uleb128 0x2
 7302 12a3 91       		.byte	0x91
 7303 12a4 74       		.sleb128 -12
 7304 12a5 31       		.uleb128 0x31
 7305 12a6 20010000 		.4byte	.LASF201
 7306 12aa 04       		.byte	0x4
 7307 12ab 4102     		.2byte	0x241
 7308 12ad 68000000 		.4byte	0x68
 7309 12b1 02       		.uleb128 0x2
 7310 12b2 91       		.byte	0x91
 7311 12b3 70       		.sleb128 -16
 7312 12b4 31       		.uleb128 0x31
 7313 12b5 03040000 		.4byte	.LASF202
 7314 12b9 04       		.byte	0x4
 7315 12ba 4202     		.2byte	0x242
 7316 12bc 68000000 		.4byte	0x68
 7317 12c0 02       		.uleb128 0x2
 7318 12c1 91       		.byte	0x91
 7319 12c2 6C       		.sleb128 -20
 7320 12c3 00       		.byte	0
 7321 12c4 32       		.uleb128 0x32
 7322 12c5 58020000 		.4byte	.LASF211
 7323 12c9 04       		.byte	0x4
 7324 12ca 6902     		.2byte	0x269
 7325 12cc 00000000 		.4byte	.LFB93
 7326 12d0 2A000000 		.4byte	.LFE93-.LFB93
 7327 12d4 01       		.uleb128 0x1
 7328 12d5 9C       		.byte	0x9c
 7329 12d6 F9120000 		.4byte	0x12f9
 7330 12da 33       		.uleb128 0x33
 7331 12db 6C000000 		.4byte	.LASF212
 7332 12df 04       		.byte	0x4
 7333 12e0 6902     		.2byte	0x269
 7334 12e2 68000000 		.4byte	0x68
 7335 12e6 02       		.uleb128 0x2
 7336 12e7 91       		.byte	0x91
 7337 12e8 6C       		.sleb128 -20
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 152


 7338 12e9 31       		.uleb128 0x31
 7339 12ea AC060000 		.4byte	.LASF213
 7340 12ee 04       		.byte	0x4
 7341 12ef 6A02     		.2byte	0x26a
 7342 12f1 68000000 		.4byte	0x68
 7343 12f5 02       		.uleb128 0x2
 7344 12f6 91       		.byte	0x91
 7345 12f7 74       		.sleb128 -12
 7346 12f8 00       		.byte	0
 7347 12f9 32       		.uleb128 0x32
 7348 12fa F8000000 		.4byte	.LASF214
 7349 12fe 04       		.byte	0x4
 7350 12ff 6E02     		.2byte	0x26e
 7351 1301 00000000 		.4byte	.LFB94
 7352 1305 2A000000 		.4byte	.LFE94-.LFB94
 7353 1309 01       		.uleb128 0x1
 7354 130a 9C       		.byte	0x9c
 7355 130b 2E130000 		.4byte	0x132e
 7356 130f 33       		.uleb128 0x33
 7357 1310 6C000000 		.4byte	.LASF212
 7358 1314 04       		.byte	0x4
 7359 1315 6E02     		.2byte	0x26e
 7360 1317 68000000 		.4byte	0x68
 7361 131b 02       		.uleb128 0x2
 7362 131c 91       		.byte	0x91
 7363 131d 6C       		.sleb128 -20
 7364 131e 31       		.uleb128 0x31
 7365 131f AC060000 		.4byte	.LASF213
 7366 1323 04       		.byte	0x4
 7367 1324 6F02     		.2byte	0x26f
 7368 1326 68000000 		.4byte	0x68
 7369 132a 02       		.uleb128 0x2
 7370 132b 91       		.byte	0x91
 7371 132c 74       		.sleb128 -12
 7372 132d 00       		.byte	0
 7373 132e 34       		.uleb128 0x34
 7374 132f BC020000 		.4byte	.LASF215
 7375 1333 04       		.byte	0x4
 7376 1334 7302     		.2byte	0x273
 7377 1336 00000000 		.4byte	.LFB95
 7378 133a 16000000 		.4byte	.LFE95-.LFB95
 7379 133e 01       		.uleb128 0x1
 7380 133f 9C       		.byte	0x9c
 7381 1340 34       		.uleb128 0x34
 7382 1341 0B050000 		.4byte	.LASF216
 7383 1345 04       		.byte	0x4
 7384 1346 7802     		.2byte	0x278
 7385 1348 00000000 		.4byte	.LFB96
 7386 134c 12000000 		.4byte	.LFE96-.LFB96
 7387 1350 01       		.uleb128 0x1
 7388 1351 9C       		.byte	0x9c
 7389 1352 2D       		.uleb128 0x2d
 7390 1353 5D090000 		.4byte	.LASF217
 7391 1357 04       		.byte	0x4
 7392 1358 7D02     		.2byte	0x27d
 7393 135a B3080000 		.4byte	0x8b3
 7394 135e 00000000 		.4byte	.LFB97
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 153


 7395 1362 CC000000 		.4byte	.LFE97-.LFB97
 7396 1366 01       		.uleb128 0x1
 7397 1367 9C       		.byte	0x9c
 7398 1368 A9130000 		.4byte	0x13a9
 7399 136c 33       		.uleb128 0x33
 7400 136d 20010000 		.4byte	.LASF201
 7401 1371 04       		.byte	0x4
 7402 1372 7D02     		.2byte	0x27d
 7403 1374 68000000 		.4byte	0x68
 7404 1378 02       		.uleb128 0x2
 7405 1379 91       		.byte	0x91
 7406 137a 6C       		.sleb128 -20
 7407 137b 33       		.uleb128 0x33
 7408 137c 03040000 		.4byte	.LASF202
 7409 1380 04       		.byte	0x4
 7410 1381 7D02     		.2byte	0x27d
 7411 1383 68000000 		.4byte	0x68
 7412 1387 02       		.uleb128 0x2
 7413 1388 91       		.byte	0x91
 7414 1389 68       		.sleb128 -24
 7415 138a 31       		.uleb128 0x31
 7416 138b 130A0000 		.4byte	.LASF218
 7417 138f 04       		.byte	0x4
 7418 1390 7E02     		.2byte	0x27e
 7419 1392 B3080000 		.4byte	0x8b3
 7420 1396 02       		.uleb128 0x2
 7421 1397 91       		.byte	0x91
 7422 1398 74       		.sleb128 -12
 7423 1399 31       		.uleb128 0x31
 7424 139a F4040000 		.4byte	.LASF219
 7425 139e 04       		.byte	0x4
 7426 139f 7F02     		.2byte	0x27f
 7427 13a1 B3080000 		.4byte	0x8b3
 7428 13a5 02       		.uleb128 0x2
 7429 13a6 91       		.byte	0x91
 7430 13a7 70       		.sleb128 -16
 7431 13a8 00       		.byte	0
 7432 13a9 32       		.uleb128 0x32
 7433 13aa 18000000 		.4byte	.LASF220
 7434 13ae 04       		.byte	0x4
 7435 13af 8502     		.2byte	0x285
 7436 13b1 00000000 		.4byte	.LFB98
 7437 13b5 52000000 		.4byte	.LFE98-.LFB98
 7438 13b9 01       		.uleb128 0x1
 7439 13ba 9C       		.byte	0x9c
 7440 13bb 1A140000 		.4byte	0x141a
 7441 13bf 33       		.uleb128 0x33
 7442 13c0 B2090000 		.4byte	.LASF221
 7443 13c4 04       		.byte	0x4
 7444 13c5 8502     		.2byte	0x285
 7445 13c7 68000000 		.4byte	0x68
 7446 13cb 02       		.uleb128 0x2
 7447 13cc 91       		.byte	0x91
 7448 13cd 6C       		.sleb128 -20
 7449 13ce 33       		.uleb128 0x33
 7450 13cf 1F040000 		.4byte	.LASF222
 7451 13d3 04       		.byte	0x4
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 154


 7452 13d4 8502     		.2byte	0x285
 7453 13d6 68000000 		.4byte	0x68
 7454 13da 02       		.uleb128 0x2
 7455 13db 91       		.byte	0x91
 7456 13dc 68       		.sleb128 -24
 7457 13dd 33       		.uleb128 0x33
 7458 13de 84030000 		.4byte	.LASF223
 7459 13e2 04       		.byte	0x4
 7460 13e3 8502     		.2byte	0x285
 7461 13e5 68000000 		.4byte	0x68
 7462 13e9 02       		.uleb128 0x2
 7463 13ea 91       		.byte	0x91
 7464 13eb 64       		.sleb128 -28
 7465 13ec 33       		.uleb128 0x33
 7466 13ed 060B0000 		.4byte	.LASF224
 7467 13f1 04       		.byte	0x4
 7468 13f2 8502     		.2byte	0x285
 7469 13f4 68000000 		.4byte	0x68
 7470 13f8 02       		.uleb128 0x2
 7471 13f9 91       		.byte	0x91
 7472 13fa 60       		.sleb128 -32
 7473 13fb 31       		.uleb128 0x31
 7474 13fc 86090000 		.4byte	.LASF225
 7475 1400 04       		.byte	0x4
 7476 1401 8A02     		.2byte	0x28a
 7477 1403 68000000 		.4byte	0x68
 7478 1407 02       		.uleb128 0x2
 7479 1408 91       		.byte	0x91
 7480 1409 74       		.sleb128 -12
 7481 140a 31       		.uleb128 0x31
 7482 140b 48010000 		.4byte	.LASF226
 7483 140f 04       		.byte	0x4
 7484 1410 9202     		.2byte	0x292
 7485 1412 68000000 		.4byte	0x68
 7486 1416 02       		.uleb128 0x2
 7487 1417 91       		.byte	0x91
 7488 1418 70       		.sleb128 -16
 7489 1419 00       		.byte	0
 7490 141a 32       		.uleb128 0x32
 7491 141b 24020000 		.4byte	.LASF227
 7492 141f 04       		.byte	0x4
 7493 1420 9B02     		.2byte	0x29b
 7494 1422 00000000 		.4byte	.LFB99
 7495 1426 2C000000 		.4byte	.LFE99-.LFB99
 7496 142a 01       		.uleb128 0x1
 7497 142b 9C       		.byte	0x9c
 7498 142c 4F140000 		.4byte	0x144f
 7499 1430 33       		.uleb128 0x33
 7500 1431 EF090000 		.4byte	.LASF228
 7501 1435 04       		.byte	0x4
 7502 1436 9B02     		.2byte	0x29b
 7503 1438 68000000 		.4byte	0x68
 7504 143c 02       		.uleb128 0x2
 7505 143d 91       		.byte	0x91
 7506 143e 74       		.sleb128 -12
 7507 143f 33       		.uleb128 0x33
 7508 1440 FC040000 		.4byte	.LASF229
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 155


 7509 1444 04       		.byte	0x4
 7510 1445 9B02     		.2byte	0x29b
 7511 1447 68000000 		.4byte	0x68
 7512 144b 02       		.uleb128 0x2
 7513 144c 91       		.byte	0x91
 7514 144d 70       		.sleb128 -16
 7515 144e 00       		.byte	0
 7516 144f 35       		.uleb128 0x35
 7517 1450 EA010000 		.4byte	.LASF230
 7518 1454 04       		.byte	0x4
 7519 1455 A102     		.2byte	0x2a1
 7520 1457 00000000 		.4byte	.LFB100
 7521 145b 14000000 		.4byte	.LFE100-.LFB100
 7522 145f 01       		.uleb128 0x1
 7523 1460 9C       		.byte	0x9c
 7524 1461 73140000 		.4byte	0x1473
 7525 1465 2E       		.uleb128 0x2e
 7526 1466 7300     		.ascii	"s\000"
 7527 1468 04       		.byte	0x4
 7528 1469 A102     		.2byte	0x2a1
 7529 146b 55050000 		.4byte	0x555
 7530 146f 02       		.uleb128 0x2
 7531 1470 91       		.byte	0x91
 7532 1471 74       		.sleb128 -12
 7533 1472 00       		.byte	0
 7534 1473 32       		.uleb128 0x32
 7535 1474 620B0000 		.4byte	.LASF231
 7536 1478 04       		.byte	0x4
 7537 1479 AF02     		.2byte	0x2af
 7538 147b 00000000 		.4byte	.LFB101
 7539 147f CC000000 		.4byte	.LFE101-.LFB101
 7540 1483 01       		.uleb128 0x1
 7541 1484 9C       		.byte	0x9c
 7542 1485 B5140000 		.4byte	0x14b5
 7543 1489 33       		.uleb128 0x33
 7544 148a 42070000 		.4byte	.LASF158
 7545 148e 04       		.byte	0x4
 7546 148f AF02     		.2byte	0x2af
 7547 1491 380A0000 		.4byte	0xa38
 7548 1495 02       		.uleb128 0x2
 7549 1496 91       		.byte	0x91
 7550 1497 4C       		.sleb128 -52
 7551 1498 30       		.uleb128 0x30
 7552 1499 6900     		.ascii	"i\000"
 7553 149b 04       		.byte	0x4
 7554 149c B202     		.2byte	0x2b2
 7555 149e 68000000 		.4byte	0x68
 7556 14a2 02       		.uleb128 0x2
 7557 14a3 91       		.byte	0x91
 7558 14a4 74       		.sleb128 -12
 7559 14a5 31       		.uleb128 0x31
 7560 14a6 54030000 		.4byte	.LASF194
 7561 14aa 04       		.byte	0x4
 7562 14ab B302     		.2byte	0x2b3
 7563 14ad D8100000 		.4byte	0x10d8
 7564 14b1 02       		.uleb128 0x2
 7565 14b2 91       		.byte	0x91
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 156


 7566 14b3 54       		.sleb128 -44
 7567 14b4 00       		.byte	0
 7568 14b5 32       		.uleb128 0x32
 7569 14b6 32000000 		.4byte	.LASF232
 7570 14ba 04       		.byte	0x4
 7571 14bb CD02     		.2byte	0x2cd
 7572 14bd 00000000 		.4byte	.LFB102
 7573 14c1 6C000000 		.4byte	.LFE102-.LFB102
 7574 14c5 01       		.uleb128 0x1
 7575 14c6 9C       		.byte	0x9c
 7576 14c7 EA140000 		.4byte	0x14ea
 7577 14cb 33       		.uleb128 0x33
 7578 14cc B6060000 		.4byte	.LASF233
 7579 14d0 04       		.byte	0x4
 7580 14d1 CD02     		.2byte	0x2cd
 7581 14d3 68000000 		.4byte	0x68
 7582 14d7 02       		.uleb128 0x2
 7583 14d8 91       		.byte	0x91
 7584 14d9 54       		.sleb128 -44
 7585 14da 31       		.uleb128 0x31
 7586 14db 54030000 		.4byte	.LASF194
 7587 14df 04       		.byte	0x4
 7588 14e0 CE02     		.2byte	0x2ce
 7589 14e2 D8100000 		.4byte	0x10d8
 7590 14e6 02       		.uleb128 0x2
 7591 14e7 91       		.byte	0x91
 7592 14e8 58       		.sleb128 -40
 7593 14e9 00       		.byte	0
 7594 14ea 36       		.uleb128 0x36
 7595 14eb 3F020000 		.4byte	.LASF234
 7596 14ef 09       		.byte	0x9
 7597 14f0 FA02     		.2byte	0x2fa
 7598 14f2 1D040000 		.4byte	0x41d
 7599 14f6 36       		.uleb128 0x36
 7600 14f7 F2070000 		.4byte	.LASF235
 7601 14fb 0E       		.byte	0xe
 7602 14fc 9606     		.2byte	0x696
 7603 14fe 02150000 		.4byte	0x1502
 7604 1502 37       		.uleb128 0x37
 7605 1503 6C080000 		.4byte	0x86c
 7606 1507 38       		.uleb128 0x38
 7607 1508 747300   		.ascii	"ts\000"
 7608 150b 0C       		.byte	0xc
 7609 150c 10       		.byte	0x10
 7610 150d 77080000 		.4byte	0x877
 7611 1511 05       		.uleb128 0x5
 7612 1512 03       		.byte	0x3
 7613 1513 00000000 		.4byte	ts
 7614 1517 39       		.uleb128 0x39
 7615 1518 800A0000 		.4byte	.LASF236
 7616 151c 0C       		.byte	0xc
 7617 151d 11       		.byte	0x11
 7618 151e 83080000 		.4byte	0x883
 7619 1522 05       		.uleb128 0x5
 7620 1523 03       		.byte	0x3
 7621 1524 00000000 		.4byte	ts_enc
 7622 1528 39       		.uleb128 0x39
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 157


 7623 1529 16080000 		.4byte	.LASF237
 7624 152d 0C       		.byte	0xc
 7625 152e 12       		.byte	0x12
 7626 152f 83080000 		.4byte	0x883
 7627 1533 05       		.uleb128 0x5
 7628 1534 03       		.byte	0x3
 7629 1535 00000000 		.4byte	ts_update
 7630 1539 39       		.uleb128 0x39
 7631 153a A6030000 		.4byte	.LASF238
 7632 153e 0C       		.byte	0xc
 7633 153f 13       		.byte	0x13
 7634 1540 83080000 		.4byte	0x883
 7635 1544 05       		.uleb128 0x5
 7636 1545 03       		.byte	0x3
 7637 1546 00000000 		.4byte	ts_speed
 7638 154a 39       		.uleb128 0x39
 7639 154b 25040000 		.4byte	.LASF239
 7640 154f 0C       		.byte	0xc
 7641 1550 14       		.byte	0x14
 7642 1551 83080000 		.4byte	0x883
 7643 1555 05       		.uleb128 0x5
 7644 1556 03       		.byte	0x3
 7645 1557 00000000 		.4byte	ts_display
 7646 155b 39       		.uleb128 0x39
 7647 155c 59030000 		.4byte	.LASF240
 7648 1560 0C       		.byte	0xc
 7649 1561 16       		.byte	0x16
 7650 1562 77080000 		.4byte	0x877
 7651 1566 05       		.uleb128 0x5
 7652 1567 03       		.byte	0x3
 7653 1568 00000000 		.4byte	flag_ts_enc
 7654 156c 39       		.uleb128 0x39
 7655 156d 45030000 		.4byte	.LASF241
 7656 1571 0C       		.byte	0xc
 7657 1572 17       		.byte	0x17
 7658 1573 77080000 		.4byte	0x877
 7659 1577 05       		.uleb128 0x5
 7660 1578 03       		.byte	0x3
 7661 1579 00000000 		.4byte	flag_ts_update
 7662 157d 39       		.uleb128 0x39
 7663 157e 81070000 		.4byte	.LASF242
 7664 1582 0C       		.byte	0xc
 7665 1583 18       		.byte	0x18
 7666 1584 77080000 		.4byte	0x877
 7667 1588 05       		.uleb128 0x5
 7668 1589 03       		.byte	0x3
 7669 158a 00000000 		.4byte	flag_ts_speed
 7670 158e 39       		.uleb128 0x39
 7671 158f 870A0000 		.4byte	.LASF243
 7672 1593 0C       		.byte	0xc
 7673 1594 19       		.byte	0x19
 7674 1595 77080000 		.4byte	0x877
 7675 1599 05       		.uleb128 0x5
 7676 159a 03       		.byte	0x3
 7677 159b 00000000 		.4byte	flag_ts_display
 7678 159f 39       		.uleb128 0x39
 7679 15a0 AF070000 		.4byte	.LASF244
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 158


 7680 15a4 0C       		.byte	0xc
 7681 15a5 1C       		.byte	0x1c
 7682 15a6 77080000 		.4byte	0x877
 7683 15aa 05       		.uleb128 0x5
 7684 15ab 03       		.byte	0x3
 7685 15ac 00000000 		.4byte	flag_rx
 7686 15b0 39       		.uleb128 0x39
 7687 15b1 D5020000 		.4byte	.LASF245
 7688 15b5 0C       		.byte	0xc
 7689 15b6 1D       		.byte	0x1d
 7690 15b7 77080000 		.4byte	0x877
 7691 15bb 05       		.uleb128 0x5
 7692 15bc 03       		.byte	0x3
 7693 15bd 00000000 		.4byte	flag_packet
 7694 15c1 39       		.uleb128 0x39
 7695 15c2 91090000 		.4byte	.LASF246
 7696 15c6 0C       		.byte	0xc
 7697 15c7 1E       		.byte	0x1e
 7698 15c8 77080000 		.4byte	0x877
 7699 15cc 05       		.uleb128 0x5
 7700 15cd 03       		.byte	0x3
 7701 15ce 00000000 		.4byte	flag_KB_string
 7702 15d2 39       		.uleb128 0x39
 7703 15d3 8F070000 		.4byte	.LASF247
 7704 15d7 0C       		.byte	0xc
 7705 15d8 20       		.byte	0x20
 7706 15d9 77080000 		.4byte	0x877
 7707 15dd 05       		.uleb128 0x5
 7708 15de 03       		.byte	0x3
 7709 15df 00000000 		.4byte	dataready_flag
 7710 15e3 39       		.uleb128 0x39
 7711 15e4 A4010000 		.4byte	.LASF248
 7712 15e8 0C       		.byte	0xc
 7713 15e9 22       		.byte	0x22
 7714 15ea 77080000 		.4byte	0x877
 7715 15ee 05       		.uleb128 0x5
 7716 15ef 03       		.byte	0x3
 7717 15f0 00000000 		.4byte	flag_rf_transmission_active
 7718 15f4 09       		.uleb128 0x9
 7719 15f5 5B050000 		.4byte	0x55b
 7720 15f9 04160000 		.4byte	0x1604
 7721 15fd 0A       		.uleb128 0xa
 7722 15fe D4000000 		.4byte	0xd4
 7723 1602 3F       		.byte	0x3f
 7724 1603 00       		.byte	0
 7725 1604 39       		.uleb128 0x39
 7726 1605 82050000 		.4byte	.LASF249
 7727 1609 0C       		.byte	0xc
 7728 160a 25       		.byte	0x25
 7729 160b F4150000 		.4byte	0x15f4
 7730 160f 05       		.uleb128 0x5
 7731 1610 03       		.byte	0x3
 7732 1611 00000000 		.4byte	displaystring
 7733 1615 39       		.uleb128 0x39
 7734 1616 290A0000 		.4byte	.LASF250
 7735 161a 0C       		.byte	0xc
 7736 161b 26       		.byte	0x26
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 159


 7737 161c F4150000 		.4byte	0x15f4
 7738 1620 05       		.uleb128 0x5
 7739 1621 03       		.byte	0x3
 7740 1622 00000000 		.4byte	line
 7741 1626 39       		.uleb128 0x39
 7742 1627 E9090000 		.4byte	.LASF251
 7743 162b 0C       		.byte	0xc
 7744 162c 26       		.byte	0x26
 7745 162d F4150000 		.4byte	0x15f4
 7746 1631 05       		.uleb128 0x5
 7747 1632 03       		.byte	0x3
 7748 1633 00000000 		.4byte	entry
 7749 1637 09       		.uleb128 0x9
 7750 1638 77080000 		.4byte	0x877
 7751 163c 47160000 		.4byte	0x1647
 7752 1640 0A       		.uleb128 0xa
 7753 1641 D4000000 		.4byte	0xd4
 7754 1645 3F       		.byte	0x3f
 7755 1646 00       		.byte	0
 7756 1647 39       		.uleb128 0x39
 7757 1648 5A040000 		.4byte	.LASF252
 7758 164c 0C       		.byte	0xc
 7759 164d 27       		.byte	0x27
 7760 164e 37160000 		.4byte	0x1637
 7761 1652 05       		.uleb128 0x5
 7762 1653 03       		.byte	0x3
 7763 1654 00000000 		.4byte	usbBuffer
 7764 1658 39       		.uleb128 0x39
 7765 1659 890B0000 		.4byte	.LASF253
 7766 165d 0C       		.byte	0xc
 7767 165e 3C       		.byte	0x3c
 7768 165f C1080000 		.4byte	0x8c1
 7769 1663 05       		.uleb128 0x5
 7770 1664 03       		.byte	0x3
 7771 1665 00000000 		.4byte	system_state
 7772 1669 09       		.uleb128 0x9
 7773 166a 68000000 		.4byte	0x68
 7774 166e 7F160000 		.4byte	0x167f
 7775 1672 0A       		.uleb128 0xa
 7776 1673 D4000000 		.4byte	0xd4
 7777 1677 0E       		.byte	0xe
 7778 1678 0A       		.uleb128 0xa
 7779 1679 D4000000 		.4byte	0xd4
 7780 167d 12       		.byte	0x12
 7781 167e 00       		.byte	0
 7782 167f 38       		.uleb128 0x38
 7783 1680 6D617000 		.ascii	"map\000"
 7784 1684 0F       		.byte	0xf
 7785 1685 01       		.byte	0x1
 7786 1686 69160000 		.4byte	0x1669
 7787 168a 05       		.uleb128 0x5
 7788 168b 03       		.byte	0x3
 7789 168c 00000000 		.4byte	map
 7790 1690 09       		.uleb128 0x9
 7791 1691 68000000 		.4byte	0x68
 7792 1695 A6160000 		.4byte	0x16a6
 7793 1699 0A       		.uleb128 0xa
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 160


 7794 169a D4000000 		.4byte	0xd4
 7795 169e 05       		.byte	0x5
 7796 169f 0A       		.uleb128 0xa
 7797 16a0 D4000000 		.4byte	0xd4
 7798 16a4 01       		.byte	0x1
 7799 16a5 00       		.byte	0
 7800 16a6 39       		.uleb128 0x39
 7801 16a7 C1000000 		.4byte	.LASF254
 7802 16ab 0F       		.byte	0xf
 7803 16ac 13       		.byte	0x13
 7804 16ad 90160000 		.4byte	0x1690
 7805 16b1 05       		.uleb128 0x5
 7806 16b2 03       		.byte	0x3
 7807 16b3 00000000 		.4byte	food_list
 7808 16b7 39       		.uleb128 0x39
 7809 16b8 C8040000 		.4byte	.LASF255
 7810 16bc 04       		.byte	0x4
 7811 16bd 5B       		.byte	0x5b
 7812 16be C8160000 		.4byte	0x16c8
 7813 16c2 05       		.uleb128 0x5
 7814 16c3 03       		.byte	0x3
 7815 16c4 00000000 		.4byte	adc_flag
 7816 16c8 37       		.uleb128 0x37
 7817 16c9 68000000 		.4byte	0x68
 7818 16cd 09       		.uleb128 0x9
 7819 16ce 8F080000 		.4byte	0x88f
 7820 16d2 DD160000 		.4byte	0x16dd
 7821 16d6 0A       		.uleb128 0xa
 7822 16d7 D4000000 		.4byte	0xd4
 7823 16db 05       		.byte	0x5
 7824 16dc 00       		.byte	0
 7825 16dd 39       		.uleb128 0x39
 7826 16de 6D020000 		.4byte	.LASF256
 7827 16e2 04       		.byte	0x4
 7828 16e3 5C       		.byte	0x5c
 7829 16e4 CD160000 		.4byte	0x16cd
 7830 16e8 05       		.uleb128 0x5
 7831 16e9 03       		.byte	0x3
 7832 16ea 00000000 		.4byte	sensor_readings
 7833 16ee 09       		.uleb128 0x9
 7834 16ef 68000000 		.4byte	0x68
 7835 16f3 FE160000 		.4byte	0x16fe
 7836 16f7 0A       		.uleb128 0xa
 7837 16f8 D4000000 		.4byte	0xd4
 7838 16fc 05       		.byte	0x5
 7839 16fd 00       		.byte	0
 7840 16fe 39       		.uleb128 0x39
 7841 16ff 6E030000 		.4byte	.LASF257
 7842 1703 04       		.byte	0x4
 7843 1704 5D       		.byte	0x5d
 7844 1705 EE160000 		.4byte	0x16ee
 7845 1709 05       		.uleb128 0x5
 7846 170a 03       		.byte	0x3
 7847 170b 00000000 		.4byte	adc_readings
 7848 170f 39       		.uleb128 0x39
 7849 1710 8A000000 		.4byte	.LASF258
 7850 1714 04       		.byte	0x4
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 161


 7851 1715 5E       		.byte	0x5e
 7852 1716 68000000 		.4byte	0x68
 7853 171a 05       		.uleb128 0x5
 7854 171b 03       		.byte	0x3
 7855 171c 00000000 		.4byte	sample_count
 7856 1720 39       		.uleb128 0x39
 7857 1721 4C0A0000 		.4byte	.LASF259
 7858 1725 04       		.byte	0x4
 7859 1726 60       		.byte	0x60
 7860 1727 C8160000 		.4byte	0x16c8
 7861 172b 05       		.uleb128 0x5
 7862 172c 03       		.byte	0x3
 7863 172d 00000000 		.4byte	timer_flag
 7864 1731 39       		.uleb128 0x39
 7865 1732 CA070000 		.4byte	.LASF260
 7866 1736 04       		.byte	0x4
 7867 1737 61       		.byte	0x61
 7868 1738 C8160000 		.4byte	0x16c8
 7869 173c 05       		.uleb128 0x5
 7870 173d 03       		.byte	0x3
 7871 173e 00000000 		.4byte	countM1
 7872 1742 39       		.uleb128 0x39
 7873 1743 D2070000 		.4byte	.LASF261
 7874 1747 04       		.byte	0x4
 7875 1748 62       		.byte	0x62
 7876 1749 C8160000 		.4byte	0x16c8
 7877 174d 05       		.uleb128 0x5
 7878 174e 03       		.byte	0x3
 7879 174f 00000000 		.4byte	countM2
 7880 1753 39       		.uleb128 0x39
 7881 1754 20010000 		.4byte	.LASF201
 7882 1758 04       		.byte	0x4
 7883 1759 63       		.byte	0x63
 7884 175a 68000000 		.4byte	0x68
 7885 175e 05       		.uleb128 0x5
 7886 175f 03       		.byte	0x3
 7887 1760 00000000 		.4byte	prevCountM1
 7888 1764 39       		.uleb128 0x39
 7889 1765 03040000 		.4byte	.LASF202
 7890 1769 04       		.byte	0x4
 7891 176a 64       		.byte	0x64
 7892 176b 68000000 		.4byte	0x68
 7893 176f 05       		.uleb128 0x5
 7894 1770 03       		.byte	0x3
 7895 1771 00000000 		.4byte	prevCountM2
 7896 1775 00       		.byte	0
 7897              		.section	.debug_abbrev,"",%progbits
 7898              	.Ldebug_abbrev0:
 7899 0000 01       		.uleb128 0x1
 7900 0001 11       		.uleb128 0x11
 7901 0002 01       		.byte	0x1
 7902 0003 25       		.uleb128 0x25
 7903 0004 0E       		.uleb128 0xe
 7904 0005 13       		.uleb128 0x13
 7905 0006 0B       		.uleb128 0xb
 7906 0007 03       		.uleb128 0x3
 7907 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 162


 7908 0009 1B       		.uleb128 0x1b
 7909 000a 0E       		.uleb128 0xe
 7910 000b 55       		.uleb128 0x55
 7911 000c 17       		.uleb128 0x17
 7912 000d 11       		.uleb128 0x11
 7913 000e 01       		.uleb128 0x1
 7914 000f 10       		.uleb128 0x10
 7915 0010 17       		.uleb128 0x17
 7916 0011 00       		.byte	0
 7917 0012 00       		.byte	0
 7918 0013 02       		.uleb128 0x2
 7919 0014 24       		.uleb128 0x24
 7920 0015 00       		.byte	0
 7921 0016 0B       		.uleb128 0xb
 7922 0017 0B       		.uleb128 0xb
 7923 0018 3E       		.uleb128 0x3e
 7924 0019 0B       		.uleb128 0xb
 7925 001a 03       		.uleb128 0x3
 7926 001b 0E       		.uleb128 0xe
 7927 001c 00       		.byte	0
 7928 001d 00       		.byte	0
 7929 001e 03       		.uleb128 0x3
 7930 001f 16       		.uleb128 0x16
 7931 0020 00       		.byte	0
 7932 0021 03       		.uleb128 0x3
 7933 0022 0E       		.uleb128 0xe
 7934 0023 3A       		.uleb128 0x3a
 7935 0024 0B       		.uleb128 0xb
 7936 0025 3B       		.uleb128 0x3b
 7937 0026 0B       		.uleb128 0xb
 7938 0027 49       		.uleb128 0x49
 7939 0028 13       		.uleb128 0x13
 7940 0029 00       		.byte	0
 7941 002a 00       		.byte	0
 7942 002b 04       		.uleb128 0x4
 7943 002c 24       		.uleb128 0x24
 7944 002d 00       		.byte	0
 7945 002e 0B       		.uleb128 0xb
 7946 002f 0B       		.uleb128 0xb
 7947 0030 3E       		.uleb128 0x3e
 7948 0031 0B       		.uleb128 0xb
 7949 0032 03       		.uleb128 0x3
 7950 0033 08       		.uleb128 0x8
 7951 0034 00       		.byte	0
 7952 0035 00       		.byte	0
 7953 0036 05       		.uleb128 0x5
 7954 0037 0F       		.uleb128 0xf
 7955 0038 00       		.byte	0
 7956 0039 0B       		.uleb128 0xb
 7957 003a 0B       		.uleb128 0xb
 7958 003b 00       		.byte	0
 7959 003c 00       		.byte	0
 7960 003d 06       		.uleb128 0x6
 7961 003e 16       		.uleb128 0x16
 7962 003f 00       		.byte	0
 7963 0040 03       		.uleb128 0x3
 7964 0041 0E       		.uleb128 0xe
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 163


 7965 0042 3A       		.uleb128 0x3a
 7966 0043 0B       		.uleb128 0xb
 7967 0044 3B       		.uleb128 0x3b
 7968 0045 05       		.uleb128 0x5
 7969 0046 49       		.uleb128 0x49
 7970 0047 13       		.uleb128 0x13
 7971 0048 00       		.byte	0
 7972 0049 00       		.byte	0
 7973 004a 07       		.uleb128 0x7
 7974 004b 17       		.uleb128 0x17
 7975 004c 01       		.byte	0x1
 7976 004d 0B       		.uleb128 0xb
 7977 004e 0B       		.uleb128 0xb
 7978 004f 3A       		.uleb128 0x3a
 7979 0050 0B       		.uleb128 0xb
 7980 0051 3B       		.uleb128 0x3b
 7981 0052 0B       		.uleb128 0xb
 7982 0053 01       		.uleb128 0x1
 7983 0054 13       		.uleb128 0x13
 7984 0055 00       		.byte	0
 7985 0056 00       		.byte	0
 7986 0057 08       		.uleb128 0x8
 7987 0058 0D       		.uleb128 0xd
 7988 0059 00       		.byte	0
 7989 005a 03       		.uleb128 0x3
 7990 005b 0E       		.uleb128 0xe
 7991 005c 3A       		.uleb128 0x3a
 7992 005d 0B       		.uleb128 0xb
 7993 005e 3B       		.uleb128 0x3b
 7994 005f 0B       		.uleb128 0xb
 7995 0060 49       		.uleb128 0x49
 7996 0061 13       		.uleb128 0x13
 7997 0062 00       		.byte	0
 7998 0063 00       		.byte	0
 7999 0064 09       		.uleb128 0x9
 8000 0065 01       		.uleb128 0x1
 8001 0066 01       		.byte	0x1
 8002 0067 49       		.uleb128 0x49
 8003 0068 13       		.uleb128 0x13
 8004 0069 01       		.uleb128 0x1
 8005 006a 13       		.uleb128 0x13
 8006 006b 00       		.byte	0
 8007 006c 00       		.byte	0
 8008 006d 0A       		.uleb128 0xa
 8009 006e 21       		.uleb128 0x21
 8010 006f 00       		.byte	0
 8011 0070 49       		.uleb128 0x49
 8012 0071 13       		.uleb128 0x13
 8013 0072 2F       		.uleb128 0x2f
 8014 0073 0B       		.uleb128 0xb
 8015 0074 00       		.byte	0
 8016 0075 00       		.byte	0
 8017 0076 0B       		.uleb128 0xb
 8018 0077 13       		.uleb128 0x13
 8019 0078 01       		.byte	0x1
 8020 0079 0B       		.uleb128 0xb
 8021 007a 0B       		.uleb128 0xb
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 164


 8022 007b 3A       		.uleb128 0x3a
 8023 007c 0B       		.uleb128 0xb
 8024 007d 3B       		.uleb128 0x3b
 8025 007e 0B       		.uleb128 0xb
 8026 007f 01       		.uleb128 0x1
 8027 0080 13       		.uleb128 0x13
 8028 0081 00       		.byte	0
 8029 0082 00       		.byte	0
 8030 0083 0C       		.uleb128 0xc
 8031 0084 0D       		.uleb128 0xd
 8032 0085 00       		.byte	0
 8033 0086 03       		.uleb128 0x3
 8034 0087 0E       		.uleb128 0xe
 8035 0088 3A       		.uleb128 0x3a
 8036 0089 0B       		.uleb128 0xb
 8037 008a 3B       		.uleb128 0x3b
 8038 008b 0B       		.uleb128 0xb
 8039 008c 49       		.uleb128 0x49
 8040 008d 13       		.uleb128 0x13
 8041 008e 38       		.uleb128 0x38
 8042 008f 0B       		.uleb128 0xb
 8043 0090 00       		.byte	0
 8044 0091 00       		.byte	0
 8045 0092 0D       		.uleb128 0xd
 8046 0093 13       		.uleb128 0x13
 8047 0094 01       		.byte	0x1
 8048 0095 03       		.uleb128 0x3
 8049 0096 0E       		.uleb128 0xe
 8050 0097 0B       		.uleb128 0xb
 8051 0098 0B       		.uleb128 0xb
 8052 0099 3A       		.uleb128 0x3a
 8053 009a 0B       		.uleb128 0xb
 8054 009b 3B       		.uleb128 0x3b
 8055 009c 0B       		.uleb128 0xb
 8056 009d 01       		.uleb128 0x1
 8057 009e 13       		.uleb128 0x13
 8058 009f 00       		.byte	0
 8059 00a0 00       		.byte	0
 8060 00a1 0E       		.uleb128 0xe
 8061 00a2 0D       		.uleb128 0xd
 8062 00a3 00       		.byte	0
 8063 00a4 03       		.uleb128 0x3
 8064 00a5 08       		.uleb128 0x8
 8065 00a6 3A       		.uleb128 0x3a
 8066 00a7 0B       		.uleb128 0xb
 8067 00a8 3B       		.uleb128 0x3b
 8068 00a9 0B       		.uleb128 0xb
 8069 00aa 49       		.uleb128 0x49
 8070 00ab 13       		.uleb128 0x13
 8071 00ac 38       		.uleb128 0x38
 8072 00ad 0B       		.uleb128 0xb
 8073 00ae 00       		.byte	0
 8074 00af 00       		.byte	0
 8075 00b0 0F       		.uleb128 0xf
 8076 00b1 0F       		.uleb128 0xf
 8077 00b2 00       		.byte	0
 8078 00b3 0B       		.uleb128 0xb
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 165


 8079 00b4 0B       		.uleb128 0xb
 8080 00b5 49       		.uleb128 0x49
 8081 00b6 13       		.uleb128 0x13
 8082 00b7 00       		.byte	0
 8083 00b8 00       		.byte	0
 8084 00b9 10       		.uleb128 0x10
 8085 00ba 13       		.uleb128 0x13
 8086 00bb 01       		.byte	0x1
 8087 00bc 03       		.uleb128 0x3
 8088 00bd 0E       		.uleb128 0xe
 8089 00be 0B       		.uleb128 0xb
 8090 00bf 05       		.uleb128 0x5
 8091 00c0 3A       		.uleb128 0x3a
 8092 00c1 0B       		.uleb128 0xb
 8093 00c2 3B       		.uleb128 0x3b
 8094 00c3 0B       		.uleb128 0xb
 8095 00c4 01       		.uleb128 0x1
 8096 00c5 13       		.uleb128 0x13
 8097 00c6 00       		.byte	0
 8098 00c7 00       		.byte	0
 8099 00c8 11       		.uleb128 0x11
 8100 00c9 0D       		.uleb128 0xd
 8101 00ca 00       		.byte	0
 8102 00cb 03       		.uleb128 0x3
 8103 00cc 0E       		.uleb128 0xe
 8104 00cd 3A       		.uleb128 0x3a
 8105 00ce 0B       		.uleb128 0xb
 8106 00cf 3B       		.uleb128 0x3b
 8107 00d0 0B       		.uleb128 0xb
 8108 00d1 49       		.uleb128 0x49
 8109 00d2 13       		.uleb128 0x13
 8110 00d3 38       		.uleb128 0x38
 8111 00d4 05       		.uleb128 0x5
 8112 00d5 00       		.byte	0
 8113 00d6 00       		.byte	0
 8114 00d7 12       		.uleb128 0x12
 8115 00d8 15       		.uleb128 0x15
 8116 00d9 00       		.byte	0
 8117 00da 27       		.uleb128 0x27
 8118 00db 19       		.uleb128 0x19
 8119 00dc 00       		.byte	0
 8120 00dd 00       		.byte	0
 8121 00de 13       		.uleb128 0x13
 8122 00df 15       		.uleb128 0x15
 8123 00e0 01       		.byte	0x1
 8124 00e1 27       		.uleb128 0x27
 8125 00e2 19       		.uleb128 0x19
 8126 00e3 49       		.uleb128 0x49
 8127 00e4 13       		.uleb128 0x13
 8128 00e5 01       		.uleb128 0x1
 8129 00e6 13       		.uleb128 0x13
 8130 00e7 00       		.byte	0
 8131 00e8 00       		.byte	0
 8132 00e9 14       		.uleb128 0x14
 8133 00ea 05       		.uleb128 0x5
 8134 00eb 00       		.byte	0
 8135 00ec 49       		.uleb128 0x49
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 166


 8136 00ed 13       		.uleb128 0x13
 8137 00ee 00       		.byte	0
 8138 00ef 00       		.byte	0
 8139 00f0 15       		.uleb128 0x15
 8140 00f1 13       		.uleb128 0x13
 8141 00f2 01       		.byte	0x1
 8142 00f3 03       		.uleb128 0x3
 8143 00f4 0E       		.uleb128 0xe
 8144 00f5 0B       		.uleb128 0xb
 8145 00f6 05       		.uleb128 0x5
 8146 00f7 3A       		.uleb128 0x3a
 8147 00f8 0B       		.uleb128 0xb
 8148 00f9 3B       		.uleb128 0x3b
 8149 00fa 05       		.uleb128 0x5
 8150 00fb 01       		.uleb128 0x1
 8151 00fc 13       		.uleb128 0x13
 8152 00fd 00       		.byte	0
 8153 00fe 00       		.byte	0
 8154 00ff 16       		.uleb128 0x16
 8155 0100 0D       		.uleb128 0xd
 8156 0101 00       		.byte	0
 8157 0102 03       		.uleb128 0x3
 8158 0103 0E       		.uleb128 0xe
 8159 0104 3A       		.uleb128 0x3a
 8160 0105 0B       		.uleb128 0xb
 8161 0106 3B       		.uleb128 0x3b
 8162 0107 05       		.uleb128 0x5
 8163 0108 49       		.uleb128 0x49
 8164 0109 13       		.uleb128 0x13
 8165 010a 38       		.uleb128 0x38
 8166 010b 0B       		.uleb128 0xb
 8167 010c 00       		.byte	0
 8168 010d 00       		.byte	0
 8169 010e 17       		.uleb128 0x17
 8170 010f 0D       		.uleb128 0xd
 8171 0110 00       		.byte	0
 8172 0111 03       		.uleb128 0x3
 8173 0112 0E       		.uleb128 0xe
 8174 0113 3A       		.uleb128 0x3a
 8175 0114 0B       		.uleb128 0xb
 8176 0115 3B       		.uleb128 0x3b
 8177 0116 05       		.uleb128 0x5
 8178 0117 49       		.uleb128 0x49
 8179 0118 13       		.uleb128 0x13
 8180 0119 38       		.uleb128 0x38
 8181 011a 05       		.uleb128 0x5
 8182 011b 00       		.byte	0
 8183 011c 00       		.byte	0
 8184 011d 18       		.uleb128 0x18
 8185 011e 26       		.uleb128 0x26
 8186 011f 00       		.byte	0
 8187 0120 49       		.uleb128 0x49
 8188 0121 13       		.uleb128 0x13
 8189 0122 00       		.byte	0
 8190 0123 00       		.byte	0
 8191 0124 19       		.uleb128 0x19
 8192 0125 13       		.uleb128 0x13
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 167


 8193 0126 01       		.byte	0x1
 8194 0127 03       		.uleb128 0x3
 8195 0128 0E       		.uleb128 0xe
 8196 0129 0B       		.uleb128 0xb
 8197 012a 0B       		.uleb128 0xb
 8198 012b 3A       		.uleb128 0x3a
 8199 012c 0B       		.uleb128 0xb
 8200 012d 3B       		.uleb128 0x3b
 8201 012e 05       		.uleb128 0x5
 8202 012f 01       		.uleb128 0x1
 8203 0130 13       		.uleb128 0x13
 8204 0131 00       		.byte	0
 8205 0132 00       		.byte	0
 8206 0133 1A       		.uleb128 0x1a
 8207 0134 13       		.uleb128 0x13
 8208 0135 01       		.byte	0x1
 8209 0136 0B       		.uleb128 0xb
 8210 0137 0B       		.uleb128 0xb
 8211 0138 3A       		.uleb128 0x3a
 8212 0139 0B       		.uleb128 0xb
 8213 013a 3B       		.uleb128 0x3b
 8214 013b 05       		.uleb128 0x5
 8215 013c 01       		.uleb128 0x1
 8216 013d 13       		.uleb128 0x13
 8217 013e 00       		.byte	0
 8218 013f 00       		.byte	0
 8219 0140 1B       		.uleb128 0x1b
 8220 0141 17       		.uleb128 0x17
 8221 0142 01       		.byte	0x1
 8222 0143 0B       		.uleb128 0xb
 8223 0144 0B       		.uleb128 0xb
 8224 0145 3A       		.uleb128 0x3a
 8225 0146 0B       		.uleb128 0xb
 8226 0147 3B       		.uleb128 0x3b
 8227 0148 05       		.uleb128 0x5
 8228 0149 01       		.uleb128 0x1
 8229 014a 13       		.uleb128 0x13
 8230 014b 00       		.byte	0
 8231 014c 00       		.byte	0
 8232 014d 1C       		.uleb128 0x1c
 8233 014e 0D       		.uleb128 0xd
 8234 014f 00       		.byte	0
 8235 0150 03       		.uleb128 0x3
 8236 0151 0E       		.uleb128 0xe
 8237 0152 3A       		.uleb128 0x3a
 8238 0153 0B       		.uleb128 0xb
 8239 0154 3B       		.uleb128 0x3b
 8240 0155 05       		.uleb128 0x5
 8241 0156 49       		.uleb128 0x49
 8242 0157 13       		.uleb128 0x13
 8243 0158 00       		.byte	0
 8244 0159 00       		.byte	0
 8245 015a 1D       		.uleb128 0x1d
 8246 015b 15       		.uleb128 0x15
 8247 015c 01       		.byte	0x1
 8248 015d 27       		.uleb128 0x27
 8249 015e 19       		.uleb128 0x19
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 168


 8250 015f 01       		.uleb128 0x1
 8251 0160 13       		.uleb128 0x13
 8252 0161 00       		.byte	0
 8253 0162 00       		.byte	0
 8254 0163 1E       		.uleb128 0x1e
 8255 0164 2E       		.uleb128 0x2e
 8256 0165 01       		.byte	0x1
 8257 0166 3F       		.uleb128 0x3f
 8258 0167 19       		.uleb128 0x19
 8259 0168 03       		.uleb128 0x3
 8260 0169 0E       		.uleb128 0xe
 8261 016a 3A       		.uleb128 0x3a
 8262 016b 0B       		.uleb128 0xb
 8263 016c 3B       		.uleb128 0x3b
 8264 016d 0B       		.uleb128 0xb
 8265 016e 11       		.uleb128 0x11
 8266 016f 01       		.uleb128 0x1
 8267 0170 12       		.uleb128 0x12
 8268 0171 06       		.uleb128 0x6
 8269 0172 40       		.uleb128 0x40
 8270 0173 18       		.uleb128 0x18
 8271 0174 9642     		.uleb128 0x2116
 8272 0176 19       		.uleb128 0x19
 8273 0177 01       		.uleb128 0x1
 8274 0178 13       		.uleb128 0x13
 8275 0179 00       		.byte	0
 8276 017a 00       		.byte	0
 8277 017b 1F       		.uleb128 0x1f
 8278 017c 34       		.uleb128 0x34
 8279 017d 00       		.byte	0
 8280 017e 03       		.uleb128 0x3
 8281 017f 08       		.uleb128 0x8
 8282 0180 3A       		.uleb128 0x3a
 8283 0181 0B       		.uleb128 0xb
 8284 0182 3B       		.uleb128 0x3b
 8285 0183 0B       		.uleb128 0xb
 8286 0184 49       		.uleb128 0x49
 8287 0185 13       		.uleb128 0x13
 8288 0186 02       		.uleb128 0x2
 8289 0187 18       		.uleb128 0x18
 8290 0188 00       		.byte	0
 8291 0189 00       		.byte	0
 8292 018a 20       		.uleb128 0x20
 8293 018b 2E       		.uleb128 0x2e
 8294 018c 01       		.byte	0x1
 8295 018d 3F       		.uleb128 0x3f
 8296 018e 19       		.uleb128 0x19
 8297 018f 03       		.uleb128 0x3
 8298 0190 08       		.uleb128 0x8
 8299 0191 3A       		.uleb128 0x3a
 8300 0192 0B       		.uleb128 0xb
 8301 0193 3B       		.uleb128 0x3b
 8302 0194 0B       		.uleb128 0xb
 8303 0195 27       		.uleb128 0x27
 8304 0196 19       		.uleb128 0x19
 8305 0197 49       		.uleb128 0x49
 8306 0198 13       		.uleb128 0x13
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 169


 8307 0199 11       		.uleb128 0x11
 8308 019a 01       		.uleb128 0x1
 8309 019b 12       		.uleb128 0x12
 8310 019c 06       		.uleb128 0x6
 8311 019d 40       		.uleb128 0x40
 8312 019e 18       		.uleb128 0x18
 8313 019f 9742     		.uleb128 0x2117
 8314 01a1 19       		.uleb128 0x19
 8315 01a2 01       		.uleb128 0x1
 8316 01a3 13       		.uleb128 0x13
 8317 01a4 00       		.byte	0
 8318 01a5 00       		.byte	0
 8319 01a6 21       		.uleb128 0x21
 8320 01a7 05       		.uleb128 0x5
 8321 01a8 00       		.byte	0
 8322 01a9 03       		.uleb128 0x3
 8323 01aa 08       		.uleb128 0x8
 8324 01ab 3A       		.uleb128 0x3a
 8325 01ac 0B       		.uleb128 0xb
 8326 01ad 3B       		.uleb128 0x3b
 8327 01ae 0B       		.uleb128 0xb
 8328 01af 49       		.uleb128 0x49
 8329 01b0 13       		.uleb128 0x13
 8330 01b1 02       		.uleb128 0x2
 8331 01b2 18       		.uleb128 0x18
 8332 01b3 00       		.byte	0
 8333 01b4 00       		.byte	0
 8334 01b5 22       		.uleb128 0x22
 8335 01b6 05       		.uleb128 0x5
 8336 01b7 00       		.byte	0
 8337 01b8 03       		.uleb128 0x3
 8338 01b9 0E       		.uleb128 0xe
 8339 01ba 3A       		.uleb128 0x3a
 8340 01bb 0B       		.uleb128 0xb
 8341 01bc 3B       		.uleb128 0x3b
 8342 01bd 0B       		.uleb128 0xb
 8343 01be 49       		.uleb128 0x49
 8344 01bf 13       		.uleb128 0x13
 8345 01c0 02       		.uleb128 0x2
 8346 01c1 18       		.uleb128 0x18
 8347 01c2 00       		.byte	0
 8348 01c3 00       		.byte	0
 8349 01c4 23       		.uleb128 0x23
 8350 01c5 2E       		.uleb128 0x2e
 8351 01c6 01       		.byte	0x1
 8352 01c7 3F       		.uleb128 0x3f
 8353 01c8 19       		.uleb128 0x19
 8354 01c9 03       		.uleb128 0x3
 8355 01ca 0E       		.uleb128 0xe
 8356 01cb 3A       		.uleb128 0x3a
 8357 01cc 0B       		.uleb128 0xb
 8358 01cd 3B       		.uleb128 0x3b
 8359 01ce 0B       		.uleb128 0xb
 8360 01cf 27       		.uleb128 0x27
 8361 01d0 19       		.uleb128 0x19
 8362 01d1 11       		.uleb128 0x11
 8363 01d2 01       		.uleb128 0x1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 170


 8364 01d3 12       		.uleb128 0x12
 8365 01d4 06       		.uleb128 0x6
 8366 01d5 40       		.uleb128 0x40
 8367 01d6 18       		.uleb128 0x18
 8368 01d7 9742     		.uleb128 0x2117
 8369 01d9 19       		.uleb128 0x19
 8370 01da 01       		.uleb128 0x1
 8371 01db 13       		.uleb128 0x13
 8372 01dc 00       		.byte	0
 8373 01dd 00       		.byte	0
 8374 01de 24       		.uleb128 0x24
 8375 01df 2E       		.uleb128 0x2e
 8376 01e0 01       		.byte	0x1
 8377 01e1 3F       		.uleb128 0x3f
 8378 01e2 19       		.uleb128 0x19
 8379 01e3 03       		.uleb128 0x3
 8380 01e4 0E       		.uleb128 0xe
 8381 01e5 3A       		.uleb128 0x3a
 8382 01e6 0B       		.uleb128 0xb
 8383 01e7 3B       		.uleb128 0x3b
 8384 01e8 0B       		.uleb128 0xb
 8385 01e9 27       		.uleb128 0x27
 8386 01ea 19       		.uleb128 0x19
 8387 01eb 49       		.uleb128 0x49
 8388 01ec 13       		.uleb128 0x13
 8389 01ed 11       		.uleb128 0x11
 8390 01ee 01       		.uleb128 0x1
 8391 01ef 12       		.uleb128 0x12
 8392 01f0 06       		.uleb128 0x6
 8393 01f1 40       		.uleb128 0x40
 8394 01f2 18       		.uleb128 0x18
 8395 01f3 9742     		.uleb128 0x2117
 8396 01f5 19       		.uleb128 0x19
 8397 01f6 01       		.uleb128 0x1
 8398 01f7 13       		.uleb128 0x13
 8399 01f8 00       		.byte	0
 8400 01f9 00       		.byte	0
 8401 01fa 25       		.uleb128 0x25
 8402 01fb 2E       		.uleb128 0x2e
 8403 01fc 01       		.byte	0x1
 8404 01fd 3F       		.uleb128 0x3f
 8405 01fe 19       		.uleb128 0x19
 8406 01ff 03       		.uleb128 0x3
 8407 0200 0E       		.uleb128 0xe
 8408 0201 3A       		.uleb128 0x3a
 8409 0202 0B       		.uleb128 0xb
 8410 0203 3B       		.uleb128 0x3b
 8411 0204 0B       		.uleb128 0xb
 8412 0205 27       		.uleb128 0x27
 8413 0206 19       		.uleb128 0x19
 8414 0207 11       		.uleb128 0x11
 8415 0208 01       		.uleb128 0x1
 8416 0209 12       		.uleb128 0x12
 8417 020a 06       		.uleb128 0x6
 8418 020b 40       		.uleb128 0x40
 8419 020c 18       		.uleb128 0x18
 8420 020d 9642     		.uleb128 0x2116
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 171


 8421 020f 19       		.uleb128 0x19
 8422 0210 01       		.uleb128 0x1
 8423 0211 13       		.uleb128 0x13
 8424 0212 00       		.byte	0
 8425 0213 00       		.byte	0
 8426 0214 26       		.uleb128 0x26
 8427 0215 34       		.uleb128 0x34
 8428 0216 00       		.byte	0
 8429 0217 03       		.uleb128 0x3
 8430 0218 0E       		.uleb128 0xe
 8431 0219 3A       		.uleb128 0x3a
 8432 021a 0B       		.uleb128 0xb
 8433 021b 3B       		.uleb128 0x3b
 8434 021c 0B       		.uleb128 0xb
 8435 021d 49       		.uleb128 0x49
 8436 021e 13       		.uleb128 0x13
 8437 021f 02       		.uleb128 0x2
 8438 0220 18       		.uleb128 0x18
 8439 0221 00       		.byte	0
 8440 0222 00       		.byte	0
 8441 0223 27       		.uleb128 0x27
 8442 0224 0B       		.uleb128 0xb
 8443 0225 01       		.byte	0x1
 8444 0226 11       		.uleb128 0x11
 8445 0227 01       		.uleb128 0x1
 8446 0228 12       		.uleb128 0x12
 8447 0229 06       		.uleb128 0x6
 8448 022a 00       		.byte	0
 8449 022b 00       		.byte	0
 8450 022c 28       		.uleb128 0x28
 8451 022d 2E       		.uleb128 0x2e
 8452 022e 01       		.byte	0x1
 8453 022f 3F       		.uleb128 0x3f
 8454 0230 19       		.uleb128 0x19
 8455 0231 03       		.uleb128 0x3
 8456 0232 0E       		.uleb128 0xe
 8457 0233 3A       		.uleb128 0x3a
 8458 0234 0B       		.uleb128 0xb
 8459 0235 3B       		.uleb128 0x3b
 8460 0236 0B       		.uleb128 0xb
 8461 0237 27       		.uleb128 0x27
 8462 0238 19       		.uleb128 0x19
 8463 0239 49       		.uleb128 0x49
 8464 023a 13       		.uleb128 0x13
 8465 023b 11       		.uleb128 0x11
 8466 023c 01       		.uleb128 0x1
 8467 023d 12       		.uleb128 0x12
 8468 023e 06       		.uleb128 0x6
 8469 023f 40       		.uleb128 0x40
 8470 0240 18       		.uleb128 0x18
 8471 0241 9642     		.uleb128 0x2116
 8472 0243 19       		.uleb128 0x19
 8473 0244 01       		.uleb128 0x1
 8474 0245 13       		.uleb128 0x13
 8475 0246 00       		.byte	0
 8476 0247 00       		.byte	0
 8477 0248 29       		.uleb128 0x29
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 172


 8478 0249 2E       		.uleb128 0x2e
 8479 024a 01       		.byte	0x1
 8480 024b 3F       		.uleb128 0x3f
 8481 024c 19       		.uleb128 0x19
 8482 024d 03       		.uleb128 0x3
 8483 024e 08       		.uleb128 0x8
 8484 024f 3A       		.uleb128 0x3a
 8485 0250 0B       		.uleb128 0xb
 8486 0251 3B       		.uleb128 0x3b
 8487 0252 0B       		.uleb128 0xb
 8488 0253 27       		.uleb128 0x27
 8489 0254 19       		.uleb128 0x19
 8490 0255 11       		.uleb128 0x11
 8491 0256 01       		.uleb128 0x1
 8492 0257 12       		.uleb128 0x12
 8493 0258 06       		.uleb128 0x6
 8494 0259 40       		.uleb128 0x40
 8495 025a 18       		.uleb128 0x18
 8496 025b 9642     		.uleb128 0x2116
 8497 025d 19       		.uleb128 0x19
 8498 025e 01       		.uleb128 0x1
 8499 025f 13       		.uleb128 0x13
 8500 0260 00       		.byte	0
 8501 0261 00       		.byte	0
 8502 0262 2A       		.uleb128 0x2a
 8503 0263 2E       		.uleb128 0x2e
 8504 0264 00       		.byte	0
 8505 0265 3F       		.uleb128 0x3f
 8506 0266 19       		.uleb128 0x19
 8507 0267 03       		.uleb128 0x3
 8508 0268 0E       		.uleb128 0xe
 8509 0269 3A       		.uleb128 0x3a
 8510 026a 0B       		.uleb128 0xb
 8511 026b 3B       		.uleb128 0x3b
 8512 026c 0B       		.uleb128 0xb
 8513 026d 27       		.uleb128 0x27
 8514 026e 19       		.uleb128 0x19
 8515 026f 11       		.uleb128 0x11
 8516 0270 01       		.uleb128 0x1
 8517 0271 12       		.uleb128 0x12
 8518 0272 06       		.uleb128 0x6
 8519 0273 40       		.uleb128 0x40
 8520 0274 18       		.uleb128 0x18
 8521 0275 9642     		.uleb128 0x2116
 8522 0277 19       		.uleb128 0x19
 8523 0278 00       		.byte	0
 8524 0279 00       		.byte	0
 8525 027a 2B       		.uleb128 0x2b
 8526 027b 2E       		.uleb128 0x2e
 8527 027c 00       		.byte	0
 8528 027d 3F       		.uleb128 0x3f
 8529 027e 19       		.uleb128 0x19
 8530 027f 03       		.uleb128 0x3
 8531 0280 0E       		.uleb128 0xe
 8532 0281 3A       		.uleb128 0x3a
 8533 0282 0B       		.uleb128 0xb
 8534 0283 3B       		.uleb128 0x3b
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 173


 8535 0284 0B       		.uleb128 0xb
 8536 0285 27       		.uleb128 0x27
 8537 0286 19       		.uleb128 0x19
 8538 0287 11       		.uleb128 0x11
 8539 0288 01       		.uleb128 0x1
 8540 0289 12       		.uleb128 0x12
 8541 028a 06       		.uleb128 0x6
 8542 028b 40       		.uleb128 0x40
 8543 028c 18       		.uleb128 0x18
 8544 028d 9742     		.uleb128 0x2117
 8545 028f 19       		.uleb128 0x19
 8546 0290 00       		.byte	0
 8547 0291 00       		.byte	0
 8548 0292 2C       		.uleb128 0x2c
 8549 0293 2E       		.uleb128 0x2e
 8550 0294 01       		.byte	0x1
 8551 0295 3F       		.uleb128 0x3f
 8552 0296 19       		.uleb128 0x19
 8553 0297 03       		.uleb128 0x3
 8554 0298 0E       		.uleb128 0xe
 8555 0299 3A       		.uleb128 0x3a
 8556 029a 0B       		.uleb128 0xb
 8557 029b 3B       		.uleb128 0x3b
 8558 029c 0B       		.uleb128 0xb
 8559 029d 49       		.uleb128 0x49
 8560 029e 13       		.uleb128 0x13
 8561 029f 11       		.uleb128 0x11
 8562 02a0 01       		.uleb128 0x1
 8563 02a1 12       		.uleb128 0x12
 8564 02a2 06       		.uleb128 0x6
 8565 02a3 40       		.uleb128 0x40
 8566 02a4 18       		.uleb128 0x18
 8567 02a5 9642     		.uleb128 0x2116
 8568 02a7 19       		.uleb128 0x19
 8569 02a8 01       		.uleb128 0x1
 8570 02a9 13       		.uleb128 0x13
 8571 02aa 00       		.byte	0
 8572 02ab 00       		.byte	0
 8573 02ac 2D       		.uleb128 0x2d
 8574 02ad 2E       		.uleb128 0x2e
 8575 02ae 01       		.byte	0x1
 8576 02af 3F       		.uleb128 0x3f
 8577 02b0 19       		.uleb128 0x19
 8578 02b1 03       		.uleb128 0x3
 8579 02b2 0E       		.uleb128 0xe
 8580 02b3 3A       		.uleb128 0x3a
 8581 02b4 0B       		.uleb128 0xb
 8582 02b5 3B       		.uleb128 0x3b
 8583 02b6 05       		.uleb128 0x5
 8584 02b7 27       		.uleb128 0x27
 8585 02b8 19       		.uleb128 0x19
 8586 02b9 49       		.uleb128 0x49
 8587 02ba 13       		.uleb128 0x13
 8588 02bb 11       		.uleb128 0x11
 8589 02bc 01       		.uleb128 0x1
 8590 02bd 12       		.uleb128 0x12
 8591 02be 06       		.uleb128 0x6
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 174


 8592 02bf 40       		.uleb128 0x40
 8593 02c0 18       		.uleb128 0x18
 8594 02c1 9642     		.uleb128 0x2116
 8595 02c3 19       		.uleb128 0x19
 8596 02c4 01       		.uleb128 0x1
 8597 02c5 13       		.uleb128 0x13
 8598 02c6 00       		.byte	0
 8599 02c7 00       		.byte	0
 8600 02c8 2E       		.uleb128 0x2e
 8601 02c9 05       		.uleb128 0x5
 8602 02ca 00       		.byte	0
 8603 02cb 03       		.uleb128 0x3
 8604 02cc 08       		.uleb128 0x8
 8605 02cd 3A       		.uleb128 0x3a
 8606 02ce 0B       		.uleb128 0xb
 8607 02cf 3B       		.uleb128 0x3b
 8608 02d0 05       		.uleb128 0x5
 8609 02d1 49       		.uleb128 0x49
 8610 02d2 13       		.uleb128 0x13
 8611 02d3 02       		.uleb128 0x2
 8612 02d4 18       		.uleb128 0x18
 8613 02d5 00       		.byte	0
 8614 02d6 00       		.byte	0
 8615 02d7 2F       		.uleb128 0x2f
 8616 02d8 2E       		.uleb128 0x2e
 8617 02d9 01       		.byte	0x1
 8618 02da 3F       		.uleb128 0x3f
 8619 02db 19       		.uleb128 0x19
 8620 02dc 03       		.uleb128 0x3
 8621 02dd 0E       		.uleb128 0xe
 8622 02de 3A       		.uleb128 0x3a
 8623 02df 0B       		.uleb128 0xb
 8624 02e0 3B       		.uleb128 0x3b
 8625 02e1 05       		.uleb128 0x5
 8626 02e2 11       		.uleb128 0x11
 8627 02e3 01       		.uleb128 0x1
 8628 02e4 12       		.uleb128 0x12
 8629 02e5 06       		.uleb128 0x6
 8630 02e6 40       		.uleb128 0x40
 8631 02e7 18       		.uleb128 0x18
 8632 02e8 9642     		.uleb128 0x2116
 8633 02ea 19       		.uleb128 0x19
 8634 02eb 01       		.uleb128 0x1
 8635 02ec 13       		.uleb128 0x13
 8636 02ed 00       		.byte	0
 8637 02ee 00       		.byte	0
 8638 02ef 30       		.uleb128 0x30
 8639 02f0 34       		.uleb128 0x34
 8640 02f1 00       		.byte	0
 8641 02f2 03       		.uleb128 0x3
 8642 02f3 08       		.uleb128 0x8
 8643 02f4 3A       		.uleb128 0x3a
 8644 02f5 0B       		.uleb128 0xb
 8645 02f6 3B       		.uleb128 0x3b
 8646 02f7 05       		.uleb128 0x5
 8647 02f8 49       		.uleb128 0x49
 8648 02f9 13       		.uleb128 0x13
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 175


 8649 02fa 02       		.uleb128 0x2
 8650 02fb 18       		.uleb128 0x18
 8651 02fc 00       		.byte	0
 8652 02fd 00       		.byte	0
 8653 02fe 31       		.uleb128 0x31
 8654 02ff 34       		.uleb128 0x34
 8655 0300 00       		.byte	0
 8656 0301 03       		.uleb128 0x3
 8657 0302 0E       		.uleb128 0xe
 8658 0303 3A       		.uleb128 0x3a
 8659 0304 0B       		.uleb128 0xb
 8660 0305 3B       		.uleb128 0x3b
 8661 0306 05       		.uleb128 0x5
 8662 0307 49       		.uleb128 0x49
 8663 0308 13       		.uleb128 0x13
 8664 0309 02       		.uleb128 0x2
 8665 030a 18       		.uleb128 0x18
 8666 030b 00       		.byte	0
 8667 030c 00       		.byte	0
 8668 030d 32       		.uleb128 0x32
 8669 030e 2E       		.uleb128 0x2e
 8670 030f 01       		.byte	0x1
 8671 0310 3F       		.uleb128 0x3f
 8672 0311 19       		.uleb128 0x19
 8673 0312 03       		.uleb128 0x3
 8674 0313 0E       		.uleb128 0xe
 8675 0314 3A       		.uleb128 0x3a
 8676 0315 0B       		.uleb128 0xb
 8677 0316 3B       		.uleb128 0x3b
 8678 0317 05       		.uleb128 0x5
 8679 0318 27       		.uleb128 0x27
 8680 0319 19       		.uleb128 0x19
 8681 031a 11       		.uleb128 0x11
 8682 031b 01       		.uleb128 0x1
 8683 031c 12       		.uleb128 0x12
 8684 031d 06       		.uleb128 0x6
 8685 031e 40       		.uleb128 0x40
 8686 031f 18       		.uleb128 0x18
 8687 0320 9642     		.uleb128 0x2116
 8688 0322 19       		.uleb128 0x19
 8689 0323 01       		.uleb128 0x1
 8690 0324 13       		.uleb128 0x13
 8691 0325 00       		.byte	0
 8692 0326 00       		.byte	0
 8693 0327 33       		.uleb128 0x33
 8694 0328 05       		.uleb128 0x5
 8695 0329 00       		.byte	0
 8696 032a 03       		.uleb128 0x3
 8697 032b 0E       		.uleb128 0xe
 8698 032c 3A       		.uleb128 0x3a
 8699 032d 0B       		.uleb128 0xb
 8700 032e 3B       		.uleb128 0x3b
 8701 032f 05       		.uleb128 0x5
 8702 0330 49       		.uleb128 0x49
 8703 0331 13       		.uleb128 0x13
 8704 0332 02       		.uleb128 0x2
 8705 0333 18       		.uleb128 0x18
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 176


 8706 0334 00       		.byte	0
 8707 0335 00       		.byte	0
 8708 0336 34       		.uleb128 0x34
 8709 0337 2E       		.uleb128 0x2e
 8710 0338 00       		.byte	0
 8711 0339 3F       		.uleb128 0x3f
 8712 033a 19       		.uleb128 0x19
 8713 033b 03       		.uleb128 0x3
 8714 033c 0E       		.uleb128 0xe
 8715 033d 3A       		.uleb128 0x3a
 8716 033e 0B       		.uleb128 0xb
 8717 033f 3B       		.uleb128 0x3b
 8718 0340 05       		.uleb128 0x5
 8719 0341 11       		.uleb128 0x11
 8720 0342 01       		.uleb128 0x1
 8721 0343 12       		.uleb128 0x12
 8722 0344 06       		.uleb128 0x6
 8723 0345 40       		.uleb128 0x40
 8724 0346 18       		.uleb128 0x18
 8725 0347 9642     		.uleb128 0x2116
 8726 0349 19       		.uleb128 0x19
 8727 034a 00       		.byte	0
 8728 034b 00       		.byte	0
 8729 034c 35       		.uleb128 0x35
 8730 034d 2E       		.uleb128 0x2e
 8731 034e 01       		.byte	0x1
 8732 034f 3F       		.uleb128 0x3f
 8733 0350 19       		.uleb128 0x19
 8734 0351 03       		.uleb128 0x3
 8735 0352 0E       		.uleb128 0xe
 8736 0353 3A       		.uleb128 0x3a
 8737 0354 0B       		.uleb128 0xb
 8738 0355 3B       		.uleb128 0x3b
 8739 0356 05       		.uleb128 0x5
 8740 0357 27       		.uleb128 0x27
 8741 0358 19       		.uleb128 0x19
 8742 0359 11       		.uleb128 0x11
 8743 035a 01       		.uleb128 0x1
 8744 035b 12       		.uleb128 0x12
 8745 035c 06       		.uleb128 0x6
 8746 035d 40       		.uleb128 0x40
 8747 035e 18       		.uleb128 0x18
 8748 035f 9742     		.uleb128 0x2117
 8749 0361 19       		.uleb128 0x19
 8750 0362 01       		.uleb128 0x1
 8751 0363 13       		.uleb128 0x13
 8752 0364 00       		.byte	0
 8753 0365 00       		.byte	0
 8754 0366 36       		.uleb128 0x36
 8755 0367 34       		.uleb128 0x34
 8756 0368 00       		.byte	0
 8757 0369 03       		.uleb128 0x3
 8758 036a 0E       		.uleb128 0xe
 8759 036b 3A       		.uleb128 0x3a
 8760 036c 0B       		.uleb128 0xb
 8761 036d 3B       		.uleb128 0x3b
 8762 036e 05       		.uleb128 0x5
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 177


 8763 036f 49       		.uleb128 0x49
 8764 0370 13       		.uleb128 0x13
 8765 0371 3F       		.uleb128 0x3f
 8766 0372 19       		.uleb128 0x19
 8767 0373 3C       		.uleb128 0x3c
 8768 0374 19       		.uleb128 0x19
 8769 0375 00       		.byte	0
 8770 0376 00       		.byte	0
 8771 0377 37       		.uleb128 0x37
 8772 0378 35       		.uleb128 0x35
 8773 0379 00       		.byte	0
 8774 037a 49       		.uleb128 0x49
 8775 037b 13       		.uleb128 0x13
 8776 037c 00       		.byte	0
 8777 037d 00       		.byte	0
 8778 037e 38       		.uleb128 0x38
 8779 037f 34       		.uleb128 0x34
 8780 0380 00       		.byte	0
 8781 0381 03       		.uleb128 0x3
 8782 0382 08       		.uleb128 0x8
 8783 0383 3A       		.uleb128 0x3a
 8784 0384 0B       		.uleb128 0xb
 8785 0385 3B       		.uleb128 0x3b
 8786 0386 0B       		.uleb128 0xb
 8787 0387 49       		.uleb128 0x49
 8788 0388 13       		.uleb128 0x13
 8789 0389 3F       		.uleb128 0x3f
 8790 038a 19       		.uleb128 0x19
 8791 038b 02       		.uleb128 0x2
 8792 038c 18       		.uleb128 0x18
 8793 038d 00       		.byte	0
 8794 038e 00       		.byte	0
 8795 038f 39       		.uleb128 0x39
 8796 0390 34       		.uleb128 0x34
 8797 0391 00       		.byte	0
 8798 0392 03       		.uleb128 0x3
 8799 0393 0E       		.uleb128 0xe
 8800 0394 3A       		.uleb128 0x3a
 8801 0395 0B       		.uleb128 0xb
 8802 0396 3B       		.uleb128 0x3b
 8803 0397 0B       		.uleb128 0xb
 8804 0398 49       		.uleb128 0x49
 8805 0399 13       		.uleb128 0x13
 8806 039a 3F       		.uleb128 0x3f
 8807 039b 19       		.uleb128 0x19
 8808 039c 02       		.uleb128 0x2
 8809 039d 18       		.uleb128 0x18
 8810 039e 00       		.byte	0
 8811 039f 00       		.byte	0
 8812 03a0 00       		.byte	0
 8813              		.section	.debug_aranges,"",%progbits
 8814 0000 54010000 		.4byte	0x154
 8815 0004 0200     		.2byte	0x2
 8816 0006 00000000 		.4byte	.Ldebug_info0
 8817 000a 04       		.byte	0x4
 8818 000b 00       		.byte	0
 8819 000c 0000     		.2byte	0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 178


 8820 000e 0000     		.2byte	0
 8821 0010 00000000 		.4byte	.LFB63
 8822 0014 4C000000 		.4byte	.LFE63-.LFB63
 8823 0018 00000000 		.4byte	.LFB64
 8824 001c 4C000000 		.4byte	.LFE64-.LFB64
 8825 0020 00000000 		.4byte	.LFB65
 8826 0024 4E000000 		.4byte	.LFE65-.LFB65
 8827 0028 00000000 		.4byte	.LFB66
 8828 002c 62000000 		.4byte	.LFE66-.LFB66
 8829 0030 00000000 		.4byte	.LFB67
 8830 0034 14000000 		.4byte	.LFE67-.LFB67
 8831 0038 00000000 		.4byte	.LFB68
 8832 003c 54000000 		.4byte	.LFE68-.LFB68
 8833 0040 00000000 		.4byte	.LFB69
 8834 0044 50000000 		.4byte	.LFE69-.LFB69
 8835 0048 00000000 		.4byte	.LFB70
 8836 004c 56000000 		.4byte	.LFE70-.LFB70
 8837 0050 00000000 		.4byte	.LFB71
 8838 0054 74000000 		.4byte	.LFE71-.LFB71
 8839 0058 00000000 		.4byte	.LFB72
 8840 005c B0000000 		.4byte	.LFE72-.LFB72
 8841 0060 00000000 		.4byte	.LFB73
 8842 0064 20010000 		.4byte	.LFE73-.LFB73
 8843 0068 00000000 		.4byte	.LFB74
 8844 006c 9E000000 		.4byte	.LFE74-.LFB74
 8845 0070 00000000 		.4byte	.LFB75
 8846 0074 58000000 		.4byte	.LFE75-.LFB75
 8847 0078 00000000 		.4byte	.LFB76
 8848 007c 34000000 		.4byte	.LFE76-.LFB76
 8849 0080 00000000 		.4byte	.LFB77
 8850 0084 4C010000 		.4byte	.LFE77-.LFB77
 8851 0088 00000000 		.4byte	.LFB78
 8852 008c 80000000 		.4byte	.LFE78-.LFB78
 8853 0090 00000000 		.4byte	.LFB79
 8854 0094 6C000000 		.4byte	.LFE79-.LFB79
 8855 0098 00000000 		.4byte	.LFB80
 8856 009c 54040000 		.4byte	.LFE80-.LFB80
 8857 00a0 00000000 		.4byte	.LFB81
 8858 00a4 30000000 		.4byte	.LFE81-.LFB81
 8859 00a8 00000000 		.4byte	.LFB82
 8860 00ac 18000000 		.4byte	.LFE82-.LFB82
 8861 00b0 00000000 		.4byte	.LFB83
 8862 00b4 30020000 		.4byte	.LFE83-.LFB83
 8863 00b8 00000000 		.4byte	.LFB84
 8864 00bc 24000000 		.4byte	.LFE84-.LFB84
 8865 00c0 00000000 		.4byte	.LFB85
 8866 00c4 E4000000 		.4byte	.LFE85-.LFB85
 8867 00c8 00000000 		.4byte	.LFB86
 8868 00cc B8010000 		.4byte	.LFE86-.LFB86
 8869 00d0 00000000 		.4byte	.LFB87
 8870 00d4 78000000 		.4byte	.LFE87-.LFB87
 8871 00d8 00000000 		.4byte	.LFB88
 8872 00dc 78000000 		.4byte	.LFE88-.LFB88
 8873 00e0 00000000 		.4byte	.LFB89
 8874 00e4 B0000000 		.4byte	.LFE89-.LFB89
 8875 00e8 00000000 		.4byte	.LFB90
 8876 00ec C0000000 		.4byte	.LFE90-.LFB90
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 179


 8877 00f0 00000000 		.4byte	.LFB91
 8878 00f4 E8000000 		.4byte	.LFE91-.LFB91
 8879 00f8 00000000 		.4byte	.LFB92
 8880 00fc 9C010000 		.4byte	.LFE92-.LFB92
 8881 0100 00000000 		.4byte	.LFB93
 8882 0104 2A000000 		.4byte	.LFE93-.LFB93
 8883 0108 00000000 		.4byte	.LFB94
 8884 010c 2A000000 		.4byte	.LFE94-.LFB94
 8885 0110 00000000 		.4byte	.LFB95
 8886 0114 16000000 		.4byte	.LFE95-.LFB95
 8887 0118 00000000 		.4byte	.LFB96
 8888 011c 12000000 		.4byte	.LFE96-.LFB96
 8889 0120 00000000 		.4byte	.LFB97
 8890 0124 CC000000 		.4byte	.LFE97-.LFB97
 8891 0128 00000000 		.4byte	.LFB98
 8892 012c 52000000 		.4byte	.LFE98-.LFB98
 8893 0130 00000000 		.4byte	.LFB99
 8894 0134 2C000000 		.4byte	.LFE99-.LFB99
 8895 0138 00000000 		.4byte	.LFB100
 8896 013c 14000000 		.4byte	.LFE100-.LFB100
 8897 0140 00000000 		.4byte	.LFB101
 8898 0144 CC000000 		.4byte	.LFE101-.LFB101
 8899 0148 00000000 		.4byte	.LFB102
 8900 014c 6C000000 		.4byte	.LFE102-.LFB102
 8901 0150 00000000 		.4byte	0
 8902 0154 00000000 		.4byte	0
 8903              		.section	.debug_ranges,"",%progbits
 8904              	.Ldebug_ranges0:
 8905 0000 00000000 		.4byte	.LFB63
 8906 0004 4C000000 		.4byte	.LFE63
 8907 0008 00000000 		.4byte	.LFB64
 8908 000c 4C000000 		.4byte	.LFE64
 8909 0010 00000000 		.4byte	.LFB65
 8910 0014 4E000000 		.4byte	.LFE65
 8911 0018 00000000 		.4byte	.LFB66
 8912 001c 62000000 		.4byte	.LFE66
 8913 0020 00000000 		.4byte	.LFB67
 8914 0024 14000000 		.4byte	.LFE67
 8915 0028 00000000 		.4byte	.LFB68
 8916 002c 54000000 		.4byte	.LFE68
 8917 0030 00000000 		.4byte	.LFB69
 8918 0034 50000000 		.4byte	.LFE69
 8919 0038 00000000 		.4byte	.LFB70
 8920 003c 56000000 		.4byte	.LFE70
 8921 0040 00000000 		.4byte	.LFB71
 8922 0044 74000000 		.4byte	.LFE71
 8923 0048 00000000 		.4byte	.LFB72
 8924 004c B0000000 		.4byte	.LFE72
 8925 0050 00000000 		.4byte	.LFB73
 8926 0054 20010000 		.4byte	.LFE73
 8927 0058 00000000 		.4byte	.LFB74
 8928 005c 9E000000 		.4byte	.LFE74
 8929 0060 00000000 		.4byte	.LFB75
 8930 0064 58000000 		.4byte	.LFE75
 8931 0068 00000000 		.4byte	.LFB76
 8932 006c 34000000 		.4byte	.LFE76
 8933 0070 00000000 		.4byte	.LFB77
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 180


 8934 0074 4C010000 		.4byte	.LFE77
 8935 0078 00000000 		.4byte	.LFB78
 8936 007c 80000000 		.4byte	.LFE78
 8937 0080 00000000 		.4byte	.LFB79
 8938 0084 6C000000 		.4byte	.LFE79
 8939 0088 00000000 		.4byte	.LFB80
 8940 008c 54040000 		.4byte	.LFE80
 8941 0090 00000000 		.4byte	.LFB81
 8942 0094 30000000 		.4byte	.LFE81
 8943 0098 00000000 		.4byte	.LFB82
 8944 009c 18000000 		.4byte	.LFE82
 8945 00a0 00000000 		.4byte	.LFB83
 8946 00a4 30020000 		.4byte	.LFE83
 8947 00a8 00000000 		.4byte	.LFB84
 8948 00ac 24000000 		.4byte	.LFE84
 8949 00b0 00000000 		.4byte	.LFB85
 8950 00b4 E4000000 		.4byte	.LFE85
 8951 00b8 00000000 		.4byte	.LFB86
 8952 00bc B8010000 		.4byte	.LFE86
 8953 00c0 00000000 		.4byte	.LFB87
 8954 00c4 78000000 		.4byte	.LFE87
 8955 00c8 00000000 		.4byte	.LFB88
 8956 00cc 78000000 		.4byte	.LFE88
 8957 00d0 00000000 		.4byte	.LFB89
 8958 00d4 B0000000 		.4byte	.LFE89
 8959 00d8 00000000 		.4byte	.LFB90
 8960 00dc C0000000 		.4byte	.LFE90
 8961 00e0 00000000 		.4byte	.LFB91
 8962 00e4 E8000000 		.4byte	.LFE91
 8963 00e8 00000000 		.4byte	.LFB92
 8964 00ec 9C010000 		.4byte	.LFE92
 8965 00f0 00000000 		.4byte	.LFB93
 8966 00f4 2A000000 		.4byte	.LFE93
 8967 00f8 00000000 		.4byte	.LFB94
 8968 00fc 2A000000 		.4byte	.LFE94
 8969 0100 00000000 		.4byte	.LFB95
 8970 0104 16000000 		.4byte	.LFE95
 8971 0108 00000000 		.4byte	.LFB96
 8972 010c 12000000 		.4byte	.LFE96
 8973 0110 00000000 		.4byte	.LFB97
 8974 0114 CC000000 		.4byte	.LFE97
 8975 0118 00000000 		.4byte	.LFB98
 8976 011c 52000000 		.4byte	.LFE98
 8977 0120 00000000 		.4byte	.LFB99
 8978 0124 2C000000 		.4byte	.LFE99
 8979 0128 00000000 		.4byte	.LFB100
 8980 012c 14000000 		.4byte	.LFE100
 8981 0130 00000000 		.4byte	.LFB101
 8982 0134 CC000000 		.4byte	.LFE101
 8983 0138 00000000 		.4byte	.LFB102
 8984 013c 6C000000 		.4byte	.LFE102
 8985 0140 00000000 		.4byte	0
 8986 0144 00000000 		.4byte	0
 8987              		.section	.debug_line,"",%progbits
 8988              	.Ldebug_line0:
 8989 0000 C8090000 		.section	.debug_str,"MS",%progbits,1
 8989      0200A402 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 181


 8989      00000201 
 8989      FB0E0D00 
 8989      01010101 
 8990              	.LASF198:
 8991 0000 64697374 		.ascii	"distance\000"
 8991      616E6365 
 8991      00
 8992              	.LASF174:
 8993 0009 6D617076 		.ascii	"mapval\000"
 8993      616C00
 8994              	.LASF195:
 8995 0010 72656164 		.ascii	"reading\000"
 8995      696E6700 
 8996              	.LASF220:
 8997 0018 636F7272 		.ascii	"correctSpeed\000"
 8997      65637453 
 8997      70656564 
 8997      00
 8998              	.LASF192:
 8999 0025 626C6F63 		.ascii	"blockAndWait\000"
 8999      6B416E64 
 8999      57616974 
 8999      00
 9000              	.LASF232:
 9001 0032 7072696E 		.ascii	"printSingleCommandUSB\000"
 9001      7453696E 
 9001      676C6543 
 9001      6F6D6D61 
 9001      6E645553 
 9002              	.LASF37:
 9003 0048 5F6F6E5F 		.ascii	"_on_exit_args\000"
 9003      65786974 
 9003      5F617267 
 9003      7300
 9004              	.LASF105:
 9005 0056 5F776374 		.ascii	"_wctomb_state\000"
 9005      6F6D625F 
 9005      73746174 
 9005      6500
 9006              	.LASF205:
 9007 0064 64656772 		.ascii	"degrees\000"
 9007      65657300 
 9008              	.LASF212:
 9009 006c 616D6F75 		.ascii	"amount\000"
 9009      6E7400
 9010              	.LASF102:
 9011 0073 5F723438 		.ascii	"_r48\000"
 9011      00
 9012              	.LASF107:
 9013 0078 5F736967 		.ascii	"_signal_buf\000"
 9013      6E616C5F 
 9013      62756600 
 9014              	.LASF180:
 9015 0084 70617468 		.ascii	"paths\000"
 9015      7300
 9016              	.LASF258:
 9017 008a 73616D70 		.ascii	"sample_count\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 182


 9017      6C655F63 
 9017      6F756E74 
 9017      00
 9018              	.LASF8:
 9019 0097 756E7369 		.ascii	"unsigned int\000"
 9019      676E6564 
 9019      20696E74 
 9019      00
 9020              	.LASF168:
 9021 00a4 6E657874 		.ascii	"next\000"
 9021      00
 9022              	.LASF150:
 9023 00a9 61707065 		.ascii	"appendArray\000"
 9023      6E644172 
 9023      72617900 
 9024              	.LASF181:
 9025 00b5 454E434F 		.ascii	"ENCODER_ISR\000"
 9025      4445525F 
 9025      49535200 
 9026              	.LASF254:
 9027 00c1 666F6F64 		.ascii	"food_list\000"
 9027      5F6C6973 
 9027      7400
 9028              	.LASF51:
 9029 00cb 5F6C6266 		.ascii	"_lbfsize\000"
 9029      73697A65 
 9029      00
 9030              	.LASF49:
 9031 00d4 5F666C61 		.ascii	"_flags\000"
 9031      677300
 9032              	.LASF128:
 9033 00db 696E6465 		.ascii	"index\000"
 9033      7800
 9034              	.LASF9:
 9035 00e1 5F5F696E 		.ascii	"__int32_t\000"
 9035      7433325F 
 9035      7400
 9036              	.LASF122:
 9037 00eb 696E7431 		.ascii	"int16\000"
 9037      3600
 9038              	.LASF66:
 9039 00f1 5F657272 		.ascii	"_errno\000"
 9039      6E6F00
 9040              	.LASF214:
 9041 00f8 6368616E 		.ascii	"changeRightWheelSpeed\000"
 9041      67655269 
 9041      67687457 
 9041      6865656C 
 9041      53706565 
 9042              	.LASF10:
 9043 010e 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T\000"
 9043      4B5F5245 
 9043      43555253 
 9043      4956455F 
 9043      5400
 9044              	.LASF201:
 9045 0120 70726576 		.ascii	"prevCountM1\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 183


 9045      436F756E 
 9045      744D3100 
 9046              	.LASF53:
 9047 012c 5F726561 		.ascii	"_read\000"
 9047      6400
 9048              	.LASF140:
 9049 0132 67325F78 		.ascii	"g2_xpos\000"
 9049      706F7300 
 9050              	.LASF109:
 9051 013a 5F6D6272 		.ascii	"_mbrlen_state\000"
 9051      6C656E5F 
 9051      73746174 
 9051      6500
 9052              	.LASF226:
 9053 0148 636F7272 		.ascii	"correction\000"
 9053      65637469 
 9053      6F6E00
 9054              	.LASF207:
 9055 0153 64697374 		.ascii	"distance_turned\000"
 9055      616E6365 
 9055      5F747572 
 9055      6E656400 
 9056              	.LASF82:
 9057 0163 5F6E6577 		.ascii	"_new\000"
 9057      00
 9058              	.LASF170:
 9059 0168 6E657874 		.ascii	"next_orientation\000"
 9059      5F6F7269 
 9059      656E7461 
 9059      74696F6E 
 9059      00
 9060              	.LASF68:
 9061 0179 5F737464 		.ascii	"_stdout\000"
 9061      6F757400 
 9062              	.LASF12:
 9063 0181 5F66706F 		.ascii	"_fpos_t\000"
 9063      735F7400 
 9064              	.LASF44:
 9065 0189 5F666E73 		.ascii	"_fns\000"
 9065      00
 9066              	.LASF52:
 9067 018e 5F636F6F 		.ascii	"_cookie\000"
 9067      6B696500 
 9068              	.LASF208:
 9069 0196 73686172 		.ascii	"sharpTurnLeft\000"
 9069      70547572 
 9069      6E4C6566 
 9069      7400
 9070              	.LASF248:
 9071 01a4 666C6167 		.ascii	"flag_rf_transmission_active\000"
 9071      5F72665F 
 9071      7472616E 
 9071      736D6973 
 9071      73696F6E 
 9072              	.LASF26:
 9073 01c0 5F426967 		.ascii	"_Bigint\000"
 9073      696E7400 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 184


 9074              	.LASF160:
 9075 01c8 75706461 		.ascii	"updateMapWithPath\000"
 9075      74654D61 
 9075      70576974 
 9075      68506174 
 9075      6800
 9076              	.LASF119:
 9077 01da 75696E74 		.ascii	"uint8\000"
 9077      3800
 9078              	.LASF34:
 9079 01e0 5F5F746D 		.ascii	"__tm_wday\000"
 9079      5F776461 
 9079      7900
 9080              	.LASF230:
 9081 01ea 75736250 		.ascii	"usbPutString\000"
 9081      75745374 
 9081      72696E67 
 9081      00
 9082              	.LASF76:
 9083 01f7 5F726573 		.ascii	"_result\000"
 9083      756C7400 
 9084              	.LASF30:
 9085 01ff 5F5F746D 		.ascii	"__tm_hour\000"
 9085      5F686F75 
 9085      7200
 9086              	.LASF143:
 9087 0209 67325F64 		.ascii	"g2_direction\000"
 9087      69726563 
 9087      74696F6E 
 9087      00
 9088              	.LASF17:
 9089 0216 5F5F636F 		.ascii	"__count\000"
 9089      756E7400 
 9090              	.LASF124:
 9091 021e 666C6F61 		.ascii	"float\000"
 9091      7400
 9092              	.LASF227:
 9093 0224 73657457 		.ascii	"setWheelDirection\000"
 9093      6865656C 
 9093      44697265 
 9093      6374696F 
 9093      6E00
 9094              	.LASF29:
 9095 0236 5F5F746D 		.ascii	"__tm_min\000"
 9095      5F6D696E 
 9095      00
 9096              	.LASF234:
 9097 023f 5F696D70 		.ascii	"_impure_ptr\000"
 9097      7572655F 
 9097      70747200 
 9098              	.LASF123:
 9099 024b 696E7433 		.ascii	"int32\000"
 9099      3200
 9100              	.LASF115:
 9101 0251 5F6E6578 		.ascii	"_nextf\000"
 9101      746600
 9102              	.LASF211:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 185


 9103 0258 6368616E 		.ascii	"changeLeftWheelSpeed\000"
 9103      67654C65 
 9103      66745768 
 9103      65656C53 
 9103      70656564 
 9104              	.LASF256:
 9105 026d 73656E73 		.ascii	"sensor_readings\000"
 9105      6F725F72 
 9105      65616469 
 9105      6E677300 
 9106              	.LASF92:
 9107 027d 5F72616E 		.ascii	"_rand48\000"
 9107      64343800 
 9108              	.LASF77:
 9109 0285 5F726573 		.ascii	"_result_k\000"
 9109      756C745F 
 9109      6B00
 9110              	.LASF200:
 9111 028f 7475726E 		.ascii	"turnLeft\000"
 9111      4C656674 
 9111      00
 9112              	.LASF7:
 9113 0298 6C6F6E67 		.ascii	"long long unsigned int\000"
 9113      206C6F6E 
 9113      6720756E 
 9113      7369676E 
 9113      65642069 
 9114              	.LASF98:
 9115 02af 5F617363 		.ascii	"_asctime_buf\000"
 9115      74696D65 
 9115      5F627566 
 9115      00
 9116              	.LASF215:
 9117 02bc 73746172 		.ascii	"startWheels\000"
 9117      74576865 
 9117      656C7300 
 9118              	.LASF48:
 9119 02c8 5F5F7346 		.ascii	"__sFILE\000"
 9119      494C4500 
 9120              	.LASF25:
 9121 02d0 5F776473 		.ascii	"_wds\000"
 9121      00
 9122              	.LASF245:
 9123 02d5 666C6167 		.ascii	"flag_packet\000"
 9123      5F706163 
 9123      6B657400 
 9124              	.LASF185:
 9125 02e1 726F7574 		.ascii	"route\000"
 9125      6500
 9126              	.LASF88:
 9127 02e7 5F5F4649 		.ascii	"__FILE\000"
 9127      4C4500
 9128              	.LASF147:
 9129 02ee 61727231 		.ascii	"arr1\000"
 9129      00
 9130              	.LASF148:
 9131 02f3 61727232 		.ascii	"arr2\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 186


 9131      00
 9132              	.LASF60:
 9133 02f8 5F6F6666 		.ascii	"_offset\000"
 9133      73657400 
 9134              	.LASF193:
 9135 0300 75706461 		.ascii	"updateSensorValues\000"
 9135      74655365 
 9135      6E736F72 
 9135      56616C75 
 9135      657300
 9136              	.LASF149:
 9137 0313 72657665 		.ascii	"reverseRoute\000"
 9137      72736552 
 9137      6F757465 
 9137      00
 9138              	.LASF173:
 9139 0320 6765744E 		.ascii	"getNumOfSurroundingPoints\000"
 9139      756D4F66 
 9139      53757272 
 9139      6F756E64 
 9139      696E6750 
 9140              	.LASF71:
 9141 033a 5F656D65 		.ascii	"_emergency\000"
 9141      7267656E 
 9141      637900
 9142              	.LASF241:
 9143 0345 666C6167 		.ascii	"flag_ts_update\000"
 9143      5F74735F 
 9143      75706461 
 9143      746500
 9144              	.LASF194:
 9145 0354 62756666 		.ascii	"buff\000"
 9145      00
 9146              	.LASF240:
 9147 0359 666C6167 		.ascii	"flag_ts_enc\000"
 9147      5F74735F 
 9147      656E6300 
 9148              	.LASF152:
 9149 0365 61646469 		.ascii	"addition\000"
 9149      74696F6E 
 9149      00
 9150              	.LASF257:
 9151 036e 6164635F 		.ascii	"adc_readings\000"
 9151      72656164 
 9151      696E6773 
 9151      00
 9152              	.LASF28:
 9153 037b 5F5F746D 		.ascii	"__tm_sec\000"
 9153      5F736563 
 9153      00
 9154              	.LASF223:
 9155 0384 64657369 		.ascii	"desired_count\000"
 9155      7265645F 
 9155      636F756E 
 9155      7400
 9156              	.LASF35:
 9157 0392 5F5F746D 		.ascii	"__tm_yday\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 187


 9157      5F796461 
 9157      7900
 9158              	.LASF70:
 9159 039c 5F696E63 		.ascii	"_inc\000"
 9159      00
 9160              	.LASF43:
 9161 03a1 5F696E64 		.ascii	"_ind\000"
 9161      00
 9162              	.LASF238:
 9163 03a6 74735F73 		.ascii	"ts_speed\000"
 9163      70656564 
 9163      00
 9164              	.LASF157:
 9165 03af 7072696E 		.ascii	"printCommands\000"
 9165      74436F6D 
 9165      6D616E64 
 9165      7300
 9166              	.LASF22:
 9167 03bd 5F6E6578 		.ascii	"_next\000"
 9167      7400
 9168              	.LASF111:
 9169 03c3 5F6D6273 		.ascii	"_mbsrtowcs_state\000"
 9169      72746F77 
 9169      63735F73 
 9169      74617465 
 9169      00
 9170              	.LASF153:
 9171 03d4 70617468 		.ascii	"path\000"
 9171      00
 9172              	.LASF162:
 9173 03d9 6765744D 		.ascii	"getMapValAtPoint\000"
 9173      61705661 
 9173      6C417450 
 9173      6F696E74 
 9173      00
 9174              	.LASF188:
 9175 03ea 6C656674 		.ascii	"left_wheel_count\000"
 9175      5F776865 
 9175      656C5F63 
 9175      6F756E74 
 9175      00
 9176              	.LASF18:
 9177 03fb 5F5F7661 		.ascii	"__value\000"
 9177      6C756500 
 9178              	.LASF202:
 9179 0403 70726576 		.ascii	"prevCountM2\000"
 9179      436F756E 
 9179      744D3200 
 9180              	.LASF78:
 9181 040f 5F703573 		.ascii	"_p5s\000"
 9181      00
 9182              	.LASF130:
 9183 0414 726F626F 		.ascii	"robot_ypos\000"
 9183      745F7970 
 9183      6F7300
 9184              	.LASF222:
 9185 041f 636F756E 		.ascii	"count\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 188


 9185      7400
 9186              	.LASF239:
 9187 0425 74735F64 		.ascii	"ts_display\000"
 9187      6973706C 
 9187      617900
 9188              	.LASF113:
 9189 0430 5F776373 		.ascii	"_wcsrtombs_state\000"
 9189      72746F6D 
 9189      62735F73 
 9189      74617465 
 9189      00
 9190              	.LASF103:
 9191 0441 5F6D626C 		.ascii	"_mblen_state\000"
 9191      656E5F73 
 9191      74617465 
 9191      00
 9192              	.LASF179:
 9193 044e 66696E69 		.ascii	"finish\000"
 9193      736800
 9194              	.LASF87:
 9195 0455 63686172 		.ascii	"char\000"
 9195      00
 9196              	.LASF252:
 9197 045a 75736242 		.ascii	"usbBuffer\000"
 9197      75666665 
 9197      7200
 9198              	.LASF31:
 9199 0464 5F5F746D 		.ascii	"__tm_mday\000"
 9199      5F6D6461 
 9199      7900
 9200              	.LASF84:
 9201 046e 5F736967 		.ascii	"_sig_func\000"
 9201      5F66756E 
 9201      6300
 9202              	.LASF110:
 9203 0478 5F6D6272 		.ascii	"_mbrtowc_state\000"
 9203      746F7763 
 9203      5F737461 
 9203      746500
 9204              	.LASF83:
 9205 0487 5F617465 		.ascii	"_atexit0\000"
 9205      78697430 
 9205      00
 9206              	.LASF203:
 9207 0490 7475726E 		.ascii	"turnRight\000"
 9207      52696768 
 9207      7400
 9208              	.LASF120:
 9209 049a 75696E74 		.ascii	"uint16\000"
 9209      313600
 9210              	.LASF20:
 9211 04a1 5F666C6F 		.ascii	"_flock_t\000"
 9211      636B5F74 
 9211      00
 9212              	.LASF121:
 9213 04aa 696E7438 		.ascii	"int8\000"
 9213      00
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 189


 9214              	.LASF139:
 9215 04af 67315F64 		.ascii	"g1_direction\000"
 9215      69726563 
 9215      74696F6E 
 9215      00
 9216              	.LASF14:
 9217 04bc 5F5F7763 		.ascii	"__wch\000"
 9217      6800
 9218              	.LASF91:
 9219 04c2 5F696F62 		.ascii	"_iobs\000"
 9219      7300
 9220              	.LASF255:
 9221 04c8 6164635F 		.ascii	"adc_flag\000"
 9221      666C6167 
 9221      00
 9222              	.LASF199:
 9223 04d1 64657369 		.ascii	"desired_distance\000"
 9223      7265645F 
 9223      64697374 
 9223      616E6365 
 9223      00
 9224              	.LASF56:
 9225 04e2 5F636C6F 		.ascii	"_close\000"
 9225      736500
 9226              	.LASF74:
 9227 04e9 5F5F7364 		.ascii	"__sdidinit\000"
 9227      6964696E 
 9227      697400
 9228              	.LASF219:
 9229 04f4 6D325F64 		.ascii	"m2_dist\000"
 9229      69737400 
 9230              	.LASF229:
 9231 04fc 72696768 		.ascii	"rightIsForward\000"
 9231      74497346 
 9231      6F727761 
 9231      726400
 9232              	.LASF216:
 9233 050b 73746F70 		.ascii	"stopWheels\000"
 9233      57686565 
 9233      6C7300
 9234              	.LASF67:
 9235 0516 5F737464 		.ascii	"_stdin\000"
 9235      696E00
 9236              	.LASF100:
 9237 051d 5F67616D 		.ascii	"_gamma_signgam\000"
 9237      6D615F73 
 9237      69676E67 
 9237      616D00
 9238              	.LASF163:
 9239 052c 6D61726B 		.ascii	"markPointAsVisited\000"
 9239      506F696E 
 9239      74417356 
 9239      69736974 
 9239      656400
 9240              	.LASF6:
 9241 053f 6C6F6E67 		.ascii	"long long int\000"
 9241      206C6F6E 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 190


 9241      6720696E 
 9241      7400
 9242              	.LASF136:
 9243 054d 67315F78 		.ascii	"g1_xpos\000"
 9243      706F7300 
 9244              	.LASF46:
 9245 0555 5F626173 		.ascii	"_base\000"
 9245      6500
 9246              	.LASF79:
 9247 055b 5F667265 		.ascii	"_freelist\000"
 9247      656C6973 
 9247      7400
 9248              	.LASF94:
 9249 0565 5F6D756C 		.ascii	"_mult\000"
 9249      7400
 9250              	.LASF21:
 9251 056b 5F5F554C 		.ascii	"__ULong\000"
 9251      6F6E6700 
 9252              	.LASF112:
 9253 0573 5F776372 		.ascii	"_wcrtomb_state\000"
 9253      746F6D62 
 9253      5F737461 
 9253      746500
 9254              	.LASF249:
 9255 0582 64697370 		.ascii	"displaystring\000"
 9255      6C617973 
 9255      7472696E 
 9255      6700
 9256              	.LASF166:
 9257 0590 73747261 		.ascii	"straight_count\000"
 9257      69676874 
 9257      5F636F75 
 9257      6E7400
 9258              	.LASF50:
 9259 059f 5F66696C 		.ascii	"_file\000"
 9259      6500
 9260              	.LASF210:
 9261 05a5 75547572 		.ascii	"uTurn\000"
 9261      6E00
 9262              	.LASF175:
 9263 05ab 63686563 		.ascii	"checkPath\000"
 9263      6B506174 
 9263      6800
 9264              	.LASF206:
 9265 05b5 64697374 		.ascii	"distance_to_turn\000"
 9265      616E6365 
 9265      5F746F5F 
 9265      7475726E 
 9265      00
 9266              	.LASF196:
 9267 05c6 676F5374 		.ascii	"goStraightForBlock\000"
 9267      72616967 
 9267      6874466F 
 9267      72426C6F 
 9267      636B00
 9268              	.LASF262:
 9269 05d9 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 191


 9269      4320342E 
 9269      392E3320 
 9269      32303135 
 9269      30333033 
 9270 060c 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 9270      20726576 
 9270      6973696F 
 9270      6E203232 
 9270      31323230 
 9271 063f 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 9271      66756E63 
 9271      74696F6E 
 9271      2D736563 
 9271      74696F6E 
 9272              	.LASF142:
 9273 0667 67325F73 		.ascii	"g2_speed\000"
 9273      70656564 
 9273      00
 9274              	.LASF133:
 9275 0670 67305F79 		.ascii	"g0_ypos\000"
 9275      706F7300 
 9276              	.LASF171:
 9277 0678 636D645F 		.ascii	"cmd_length\000"
 9277      6C656E67 
 9277      746800
 9278              	.LASF75:
 9279 0683 5F5F636C 		.ascii	"__cleanup\000"
 9279      65616E75 
 9279      7000
 9280              	.LASF19:
 9281 068d 5F6D6273 		.ascii	"_mbstate_t\000"
 9281      74617465 
 9281      5F7400
 9282              	.LASF209:
 9283 0698 73686172 		.ascii	"sharpTurnRight\000"
 9283      70547572 
 9283      6E526967 
 9283      687400
 9284              	.LASF145:
 9285 06a7 73697A65 		.ascii	"size\000"
 9285      00
 9286              	.LASF213:
 9287 06ac 6E65775F 		.ascii	"new_value\000"
 9287      76616C75 
 9287      6500
 9288              	.LASF233:
 9289 06b6 636F6D6D 		.ascii	"command\000"
 9289      616E6400 
 9290              	.LASF36:
 9291 06be 5F5F746D 		.ascii	"__tm_isdst\000"
 9291      5F697364 
 9291      737400
 9292              	.LASF126:
 9293 06c9 64617461 		.ascii	"data_main\000"
 9293      5F6D6169 
 9293      6E00
 9294              	.LASF191:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 192


 9295 06d3 67657456 		.ascii	"getValForChannel\000"
 9295      616C466F 
 9295      72436861 
 9295      6E6E656C 
 9295      00
 9296              	.LASF178:
 9297 06e4 73746172 		.ascii	"start\000"
 9297      7400
 9298              	.LASF172:
 9299 06ea 64696666 		.ascii	"diffMod4\000"
 9299      4D6F6434 
 9299      00
 9300              	.LASF127:
 9301 06f3 72737369 		.ascii	"rssi\000"
 9301      00
 9302              	.LASF184:
 9303 06f8 64657374 		.ascii	"destination\000"
 9303      696E6174 
 9303      696F6E00 
 9304              	.LASF114:
 9305 0704 5F685F65 		.ascii	"_h_errno\000"
 9305      72726E6F 
 9305      00
 9306              	.LASF135:
 9307 070d 67305F64 		.ascii	"g0_direction\000"
 9307      69726563 
 9307      74696F6E 
 9307      00
 9308              	.LASF164:
 9309 071a 636F6E76 		.ascii	"convertCoordinatesToCommands\000"
 9309      65727443 
 9309      6F6F7264 
 9309      696E6174 
 9309      6573546F 
 9310              	.LASF190:
 9311 0737 6E756D5F 		.ascii	"num_coords\000"
 9311      636F6F72 
 9311      647300
 9312              	.LASF158:
 9313 0742 636F6D6D 		.ascii	"commands\000"
 9313      616E6473 
 9313      00
 9314              	.LASF32:
 9315 074b 5F5F746D 		.ascii	"__tm_mon\000"
 9315      5F6D6F6E 
 9315      00
 9316              	.LASF186:
 9317 0754 64697265 		.ascii	"directions\000"
 9317      6374696F 
 9317      6E7300
 9318              	.LASF156:
 9319 075f 7072696E 		.ascii	"printPath\000"
 9319      74506174 
 9319      6800
 9320              	.LASF161:
 9321 0769 70617468 		.ascii	"path_length\000"
 9321      5F6C656E 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 193


 9321      67746800 
 9322              	.LASF183:
 9323 0775 6D61696E 		.ascii	"main\000"
 9323      00
 9324              	.LASF54:
 9325 077a 5F777269 		.ascii	"_write\000"
 9325      746500
 9326              	.LASF242:
 9327 0781 666C6167 		.ascii	"flag_ts_speed\000"
 9327      5F74735F 
 9327      73706565 
 9327      6400
 9328              	.LASF247:
 9329 078f 64617461 		.ascii	"dataready_flag\000"
 9329      72656164 
 9329      795F666C 
 9329      616700
 9330              	.LASF42:
 9331 079e 5F617465 		.ascii	"_atexit\000"
 9331      78697400 
 9332              	.LASF63:
 9333 07a6 5F6D6273 		.ascii	"_mbstate\000"
 9333      74617465 
 9333      00
 9334              	.LASF244:
 9335 07af 666C6167 		.ascii	"flag_rx\000"
 9335      5F727800 
 9336              	.LASF138:
 9337 07b7 67315F73 		.ascii	"g1_speed\000"
 9337      70656564 
 9337      00
 9338              	.LASF2:
 9339 07c0 73686F72 		.ascii	"short int\000"
 9339      7420696E 
 9339      7400
 9340              	.LASF260:
 9341 07ca 636F756E 		.ascii	"countM1\000"
 9341      744D3100 
 9342              	.LASF261:
 9343 07d2 636F756E 		.ascii	"countM2\000"
 9343      744D3200 
 9344              	.LASF204:
 9345 07da 7475726E 		.ascii	"turnForDegrees\000"
 9345      466F7244 
 9345      65677265 
 9345      657300
 9346              	.LASF4:
 9347 07e9 6C6F6E67 		.ascii	"long int\000"
 9347      20696E74 
 9347      00
 9348              	.LASF235:
 9349 07f2 49544D5F 		.ascii	"ITM_RxBuffer\000"
 9349      52784275 
 9349      66666572 
 9349      00
 9350              	.LASF165:
 9351 07ff 636F6E63 		.ascii	"concurrent_path\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 194


 9351      75727265 
 9351      6E745F70 
 9351      61746800 
 9352              	.LASF177:
 9353 080f 6C656E67 		.ascii	"length\000"
 9353      746800
 9354              	.LASF237:
 9355 0816 74735F75 		.ascii	"ts_update\000"
 9355      70646174 
 9355      6500
 9356              	.LASF86:
 9357 0820 5F5F7366 		.ascii	"__sf\000"
 9357      00
 9358              	.LASF24:
 9359 0825 5F736967 		.ascii	"_sign\000"
 9359      6E00
 9360              	.LASF73:
 9361 082b 5F637572 		.ascii	"_current_locale\000"
 9361      72656E74 
 9361      5F6C6F63 
 9361      616C6500 
 9362              	.LASF154:
 9363 083b 6973456D 		.ascii	"isEmpty\000"
 9363      70747900 
 9364              	.LASF141:
 9365 0843 67325F79 		.ascii	"g2_ypos\000"
 9365      706F7300 
 9366              	.LASF61:
 9367 084b 5F646174 		.ascii	"_data\000"
 9367      6100
 9368              	.LASF15:
 9369 0851 5F5F7763 		.ascii	"__wchb\000"
 9369      686200
 9370              	.LASF187:
 9371 0858 72696768 		.ascii	"right_wheel_count\000"
 9371      745F7768 
 9371      65656C5F 
 9371      636F756E 
 9371      7400
 9372              	.LASF33:
 9373 086a 5F5F746D 		.ascii	"__tm_year\000"
 9373      5F796561 
 9373      7200
 9374              	.LASF99:
 9375 0874 5F6C6F63 		.ascii	"_localtime_buf\000"
 9375      616C7469 
 9375      6D655F62 
 9375      756600
 9376              	.LASF117:
 9377 0883 5F756E75 		.ascii	"_unused\000"
 9377      73656400 
 9378              	.LASF151:
 9379 088b 736F7572 		.ascii	"source\000"
 9379      636500
 9380              	.LASF264:
 9381 0892 5C5C6669 		.ascii	"\\\\files.auckland.ac.nz\\myhome\\Desktop\\Flik\\CS"
 9381      6C65732E 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 195


 9381      6175636B 
 9381      6C616E64 
 9381      2E61632E 
 9382 08bf 3330315F 		.ascii	"301_Class.cyprj.Archive01-20190825T234813Z-001\\CS3"
 9382      436C6173 
 9382      732E6379 
 9382      70726A2E 
 9382      41726368 
 9383 08f1 30315F43 		.ascii	"01_Class.cyprj.Archive01\\CS301_Class.cydsn\000"
 9383      6C617373 
 9383      2E637970 
 9383      726A2E41 
 9383      72636869 
 9384              	.LASF80:
 9385 091c 5F637674 		.ascii	"_cvtlen\000"
 9385      6C656E00 
 9386              	.LASF23:
 9387 0924 5F6D6178 		.ascii	"_maxwds\000"
 9387      77647300 
 9388              	.LASF106:
 9389 092c 5F6C3634 		.ascii	"_l64a_buf\000"
 9389      615F6275 
 9389      6600
 9390              	.LASF72:
 9391 0936 5F637572 		.ascii	"_current_category\000"
 9391      72656E74 
 9391      5F636174 
 9391      65676F72 
 9391      7900
 9392              	.LASF137:
 9393 0948 67315F79 		.ascii	"g1_ypos\000"
 9393      706F7300 
 9394              	.LASF146:
 9395 0950 6973526F 		.ascii	"isRouteEqual\000"
 9395      75746545 
 9395      7175616C 
 9395      00
 9396              	.LASF217:
 9397 095d 67657444 		.ascii	"getDistance\000"
 9397      69737461 
 9397      6E636500 
 9398              	.LASF59:
 9399 0969 5F626C6B 		.ascii	"_blksize\000"
 9399      73697A65 
 9399      00
 9400              	.LASF27:
 9401 0972 5F5F746D 		.ascii	"__tm\000"
 9401      00
 9402              	.LASF62:
 9403 0977 5F6C6F63 		.ascii	"_lock\000"
 9403      6B00
 9404              	.LASF16:
 9405 097d 73697A65 		.ascii	"sizetype\000"
 9405      74797065 
 9405      00
 9406              	.LASF225:
 9407 0986 64696666 		.ascii	"diff_count\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 196


 9407      5F636F75 
 9407      6E7400
 9408              	.LASF246:
 9409 0991 666C6167 		.ascii	"flag_KB_string\000"
 9409      5F4B425F 
 9409      73747269 
 9409      6E6700
 9410              	.LASF5:
 9411 09a0 6C6F6E67 		.ascii	"long unsigned int\000"
 9411      20756E73 
 9411      69676E65 
 9411      6420696E 
 9411      7400
 9412              	.LASF221:
 9413 09b2 70726576 		.ascii	"prevCount\000"
 9413      436F756E 
 9413      7400
 9414              	.LASF90:
 9415 09bc 5F6E696F 		.ascii	"_niobs\000"
 9415      627300
 9416              	.LASF13:
 9417 09c3 77696E74 		.ascii	"wint_t\000"
 9417      5F7400
 9418              	.LASF118:
 9419 09ca 696E7433 		.ascii	"int32_t\000"
 9419      325F7400 
 9420              	.LASF39:
 9421 09d2 5F64736F 		.ascii	"_dso_handle\000"
 9421      5F68616E 
 9421      646C6500 
 9422              	.LASF129:
 9423 09de 726F626F 		.ascii	"robot_xpos\000"
 9423      745F7870 
 9423      6F7300
 9424              	.LASF251:
 9425 09e9 656E7472 		.ascii	"entry\000"
 9425      7900
 9426              	.LASF228:
 9427 09ef 6C656674 		.ascii	"leftIsForward\000"
 9427      4973466F 
 9427      72776172 
 9427      6400
 9428              	.LASF81:
 9429 09fd 5F637674 		.ascii	"_cvtbuf\000"
 9429      62756600 
 9430              	.LASF1:
 9431 0a05 756E7369 		.ascii	"unsigned char\000"
 9431      676E6564 
 9431      20636861 
 9431      7200
 9432              	.LASF218:
 9433 0a13 6D315F64 		.ascii	"m1_dist\000"
 9433      69737400 
 9434              	.LASF155:
 9435 0a1b 6973506F 		.ascii	"isPointOnPath\000"
 9435      696E744F 
 9435      6E506174 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 197


 9435      6800
 9436              	.LASF250:
 9437 0a29 6C696E65 		.ascii	"line\000"
 9437      00
 9438              	.LASF159:
 9439 0a2e 7072696E 		.ascii	"printMap\000"
 9439      744D6170 
 9439      00
 9440              	.LASF167:
 9441 0a37 63757272 		.ascii	"current\000"
 9441      656E7400 
 9442              	.LASF108:
 9443 0a3f 5F676574 		.ascii	"_getdate_err\000"
 9443      64617465 
 9443      5F657272 
 9443      00
 9444              	.LASF259:
 9445 0a4c 74696D65 		.ascii	"timer_flag\000"
 9445      725F666C 
 9445      616700
 9446              	.LASF95:
 9447 0a57 5F616464 		.ascii	"_add\000"
 9447      00
 9448              	.LASF189:
 9449 0a5c 64697265 		.ascii	"direction_index\000"
 9449      6374696F 
 9449      6E5F696E 
 9449      64657800 
 9450              	.LASF169:
 9451 0a6c 63757272 		.ascii	"current_orientation\000"
 9451      656E745F 
 9451      6F726965 
 9451      6E746174 
 9451      696F6E00 
 9452              	.LASF236:
 9453 0a80 74735F65 		.ascii	"ts_enc\000"
 9453      6E6300
 9454              	.LASF243:
 9455 0a87 666C6167 		.ascii	"flag_ts_display\000"
 9455      5F74735F 
 9455      64697370 
 9455      6C617900 
 9456              	.LASF45:
 9457 0a97 5F5F7362 		.ascii	"__sbuf\000"
 9457      756600
 9458              	.LASF182:
 9459 0a9e 4144435F 		.ascii	"ADC_ISR\000"
 9459      49535200 
 9460              	.LASF89:
 9461 0aa6 5F676C75 		.ascii	"_glue\000"
 9461      6500
 9462              	.LASF85:
 9463 0aac 5F5F7367 		.ascii	"__sglue\000"
 9463      6C756500 
 9464              	.LASF97:
 9465 0ab4 5F737472 		.ascii	"_strtok_last\000"
 9465      746F6B5F 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 198


 9465      6C617374 
 9465      00
 9466              	.LASF104:
 9467 0ac1 5F6D6274 		.ascii	"_mbtowc_state\000"
 9467      6F77635F 
 9467      73746174 
 9467      6500
 9468              	.LASF134:
 9469 0acf 67305F73 		.ascii	"g0_speed\000"
 9469      70656564 
 9469      00
 9470              	.LASF38:
 9471 0ad8 5F666E61 		.ascii	"_fnargs\000"
 9471      72677300 
 9472              	.LASF0:
 9473 0ae0 7369676E 		.ascii	"signed char\000"
 9473      65642063 
 9473      68617200 
 9474              	.LASF65:
 9475 0aec 5F726565 		.ascii	"_reent\000"
 9475      6E7400
 9476              	.LASF3:
 9477 0af3 73686F72 		.ascii	"short unsigned int\000"
 9477      7420756E 
 9477      7369676E 
 9477      65642069 
 9477      6E7400
 9478              	.LASF224:
 9479 0b06 69734C65 		.ascii	"isLeftWheel\000"
 9479      66745768 
 9479      65656C00 
 9480              	.LASF131:
 9481 0b12 726F626F 		.ascii	"robot_orientation\000"
 9481      745F6F72 
 9481      69656E74 
 9481      6174696F 
 9481      6E00
 9482              	.LASF144:
 9483 0b24 706F696E 		.ascii	"point\000"
 9483      7400
 9484              	.LASF40:
 9485 0b2a 5F666E74 		.ascii	"_fntypes\000"
 9485      79706573 
 9485      00
 9486              	.LASF47:
 9487 0b33 5F73697A 		.ascii	"_size\000"
 9487      6500
 9488              	.LASF125:
 9489 0b39 646F7562 		.ascii	"double\000"
 9489      6C6500
 9490              	.LASF132:
 9491 0b40 67305F78 		.ascii	"g0_xpos\000"
 9491      706F7300 
 9492              	.LASF11:
 9493 0b48 5F6F6666 		.ascii	"_off_t\000"
 9493      5F7400
 9494              	.LASF58:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 199


 9495 0b4f 5F6E6275 		.ascii	"_nbuf\000"
 9495      6600
 9496              	.LASF96:
 9497 0b55 5F756E75 		.ascii	"_unused_rand\000"
 9497      7365645F 
 9497      72616E64 
 9497      00
 9498              	.LASF231:
 9499 0b62 7072696E 		.ascii	"printCommandsUSB\000"
 9499      74436F6D 
 9499      6D616E64 
 9499      73555342 
 9499      00
 9500              	.LASF64:
 9501 0b73 5F666C61 		.ascii	"_flags2\000"
 9501      67733200 
 9502              	.LASF41:
 9503 0b7b 5F69735F 		.ascii	"_is_cxa\000"
 9503      63786100 
 9504              	.LASF93:
 9505 0b83 5F736565 		.ascii	"_seed\000"
 9505      6400
 9506              	.LASF253:
 9507 0b89 73797374 		.ascii	"system_state\000"
 9507      656D5F73 
 9507      74617465 
 9507      00
 9508              	.LASF101:
 9509 0b96 5F72616E 		.ascii	"_rand_next\000"
 9509      645F6E65 
 9509      787400
 9510              	.LASF55:
 9511 0ba1 5F736565 		.ascii	"_seek\000"
 9511      6B00
 9512              	.LASF176:
 9513 0ba7 6E65775F 		.ascii	"new_paths\000"
 9513      70617468 
 9513      7300
 9514              	.LASF69:
 9515 0bb1 5F737464 		.ascii	"_stderr\000"
 9515      65727200 
 9516              	.LASF116:
 9517 0bb9 5F6E6D61 		.ascii	"_nmalloc\000"
 9517      6C6C6F63 
 9517      00
 9518              	.LASF57:
 9519 0bc2 5F756275 		.ascii	"_ubuf\000"
 9519      6600
 9520              	.LASF263:
 9521 0bc8 2E5C6D61 		.ascii	".\\main.c\000"
 9521      696E2E63 
 9521      00
 9522              	.LASF197:
 9523 0bd1 64657369 		.ascii	"desired_blocks\000"
 9523      7265645F 
 9523      626C6F63 
 9523      6B7300
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccrnAhuL.s 			page 200


 9524              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
