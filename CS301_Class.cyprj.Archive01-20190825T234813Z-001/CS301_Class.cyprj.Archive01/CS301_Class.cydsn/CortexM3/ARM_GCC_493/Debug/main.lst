ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	displaystring
  95 0001 000000   		.align	2
  96              		.type	displaystring, %object
  97              		.size	displaystring, 64
  98              	displaystring:
  99 0004 43533330 		.ascii	"CS301 2020\012\000"
  99      31203230 
  99      32300A00 
 100 0010 00000000 		.space	52
 100      00000000 
 100      00000000 
 100      00000000 
 100      00000000 
 101              		.comm	line,64,4
 102              		.comm	entry,64,4
 103              		.comm	usbBuffer,64,4
 104              		.comm	system_state,32,4
 105              		.global	adc_flag
 106              		.bss
 107 0012 0000     		.align	2
 108              		.type	adc_flag, %object
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 3


 109              		.size	adc_flag, 4
 110              	adc_flag:
 111 0014 00000000 		.space	4
 112              		.global	sensor_readings
 113              		.align	2
 114              		.type	sensor_readings, %object
 115              		.size	sensor_readings, 6
 116              	sensor_readings:
 117 0018 00000000 		.space	6
 117      0000
 118              		.global	adc_readings
 119 001e 0000     		.align	2
 120              		.type	adc_readings, %object
 121              		.size	adc_readings, 24
 122              	adc_readings:
 123 0020 00000000 		.space	24
 123      00000000 
 123      00000000 
 123      00000000 
 123      00000000 
 124              		.global	sample_count
 125              		.align	2
 126              		.type	sample_count, %object
 127              		.size	sample_count, 4
 128              	sample_count:
 129 0038 00000000 		.space	4
 130              		.global	timer_flag
 131              		.align	2
 132              		.type	timer_flag, %object
 133              		.size	timer_flag, 4
 134              	timer_flag:
 135 003c 00000000 		.space	4
 136              		.global	countM1
 137              		.align	2
 138              		.type	countM1, %object
 139              		.size	countM1, 4
 140              	countM1:
 141 0040 00000000 		.space	4
 142              		.global	countM2
 143              		.align	2
 144              		.type	countM2, %object
 145              		.size	countM2, 4
 146              	countM2:
 147 0044 00000000 		.space	4
 148              		.global	prevCountM1
 149              		.align	2
 150              		.type	prevCountM1, %object
 151              		.size	prevCountM1, 4
 152              	prevCountM1:
 153 0048 00000000 		.space	4
 154              		.global	prevCountM2
 155              		.align	2
 156              		.type	prevCountM2, %object
 157              		.size	prevCountM2, 4
 158              	prevCountM2:
 159 004c 00000000 		.space	4
 160              		.section	.text.ENCODER_ISR,"ax",%progbits
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 4


 161              		.align	2
 162              		.global	ENCODER_ISR
 163              		.thumb
 164              		.thumb_func
 165              		.type	ENCODER_ISR, %function
 166              	ENCODER_ISR:
 167              	.LFB63:
 168              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  * 2019 COMPSYS 
   3:.\main.c      ****  * 302 GROUP 2
   4:.\main.c      ****  * FLIK
   5:.\main.c      **** */
   6:.\main.c      **** // ================== INCLUDE ======================
   7:.\main.c      **** #include <stdio.h>
   8:.\main.c      **** #include <string.h>
   9:.\main.c      **** #include <stdlib.h>
  10:.\main.c      **** #include <project.h>
  11:.\main.c      **** 
  12:.\main.c      **** #include "defines.h"
  13:.\main.c      **** #include "vars.h"
  14:.\main.c      **** // =================== MACROS =====================
  15:.\main.c      **** // SENSOR MAPPINGS
  16:.\main.c      **** #define TOP_LEFT_SENSOR 0
  17:.\main.c      **** #define TOP_MID_SENSOR 1
  18:.\main.c      **** #define TOP_RIGHT_SENSOR 2
  19:.\main.c      **** #define BOTTOM_LEFT_SENSOR 3
  20:.\main.c      **** #define BOTTOM_MID_SENSOR 4
  21:.\main.c      **** #define BOTTOM_RIGHT_SENSOR 5
  22:.\main.c      **** 
  23:.\main.c      **** // LIGHT SENSORS
  24:.\main.c      **** #define NUM_SENSORS 6
  25:.\main.c      **** #define LIGHT_LEVEL 300
  26:.\main.c      **** 
  27:.\main.c      **** // ADC
  28:.\main.c      **** #define ADC_READINGS_SIZE 90
  29:.\main.c      **** 
  30:.\main.c      **** // Speed calculations
  31:.\main.c      **** #define LINEAR_DISTANCE_PER_REV 20.42035225
  32:.\main.c      **** #define TICKS_PER_REV 228
  33:.\main.c      **** #define TIMER_PERIOD 0.03
  34:.\main.c      **** 
  35:.\main.c      **** // Speed control
  36:.\main.c      **** #define DESIRED_COUNT 8
  37:.\main.c      **** #define TURN_SPEED 450
  38:.\main.c      **** 
  39:.\main.c      **** // Distances
  40:.\main.c      **** #define GRID_SIZE 12
  41:.\main.c      **** #define HALF_ROBOT_LENGTH 10
  42:.\main.c      **** #define SMALL_FORWARD_DISTANCE 8
  43:.\main.c      **** 
  44:.\main.c      **** // Line following macros - require calibration
  45:.\main.c      **** #define ADJUST_SPEED_LARGE 3
  46:.\main.c      **** #define ADJUST_SPEED_SMALL 1
  47:.\main.c      **** #define MAX_SPEED 9
  48:.\main.c      **** #define MIN_SPEED 4
  49:.\main.c      **** #define SLOW_DOWN_SPEED 1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 5


  50:.\main.c      **** 
  51:.\main.c      **** // Debug flag - uncomment when debugging
  52:.\main.c      **** //#define PUTTY
  53:.\main.c      **** //* ================= FUNCTIONS =======================
  54:.\main.c      **** void usbPutString(char *s);
  55:.\main.c      **** 
  56:.\main.c      **** // sensors
  57:.\main.c      **** int32 getValForChannel(int16 n);
  58:.\main.c      **** void updateSensorValues();
  59:.\main.c      **** 
  60:.\main.c      **** // general
  61:.\main.c      **** void changeRightWheelSpeed(int amount);
  62:.\main.c      **** void changeLeftWheelSpeed(int amount);
  63:.\main.c      **** void invertWheels();
  64:.\main.c      **** void setWheelDirection(int isLeftForward, int isRightForward);
  65:.\main.c      **** void correctSpeed(int prevCount, int count, int desired_count, int isLeftWheel);
  66:.\main.c      **** float getDistance(int prevCountM1, int prevCountM2);
  67:.\main.c      **** 
  68:.\main.c      **** // straight
  69:.\main.c      **** void turnRight();
  70:.\main.c      **** void turnLeft();
  71:.\main.c      **** void goStraight(int desired_distance, int *right_speed_count, int *left_wheel_count);
  72:.\main.c      **** 
  73:.\main.c      **** // turning
  74:.\main.c      **** void turnForDegrees(int degrees);
  75:.\main.c      **** void sharpTurnRight();
  76:.\main.c      **** void sharpTurnLeft();
  77:.\main.c      **** void uTurn(int *left_wheel_count, int *right_wheel_count);
  78:.\main.c      **** //* ================= GLOBAL VARIABLES =======================
  79:.\main.c      **** // ADC
  80:.\main.c      **** volatile int adc_flag = FALSE;
  81:.\main.c      **** int8 sensor_readings[NUM_SENSORS] = { 0 };
  82:.\main.c      **** int adc_readings[NUM_SENSORS] = { 0 };
  83:.\main.c      **** int sample_count = 0;
  84:.\main.c      **** // Encoder
  85:.\main.c      **** volatile int timer_flag = FALSE;
  86:.\main.c      **** volatile int countM1 = 0;
  87:.\main.c      **** volatile int countM2 = 0;
  88:.\main.c      **** int prevCountM1 = 0;
  89:.\main.c      **** int prevCountM2 = 0;
  90:.\main.c      **** //* ================== ISR ======================
  91:.\main.c      **** CY_ISR(ENCODER_ISR) {
 169              		.loc 1 91 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 1, uses_anonymous_args = 0
 173 0000 80B5     		push	{r7, lr}
 174              		.cfi_def_cfa_offset 8
 175              		.cfi_offset 7, -8
 176              		.cfi_offset 14, -4
 177 0002 00AF     		add	r7, sp, #0
 178              		.cfi_def_cfa_register 7
  92:.\main.c      ****     countM1 = QuadDec_M1_GetCounter();
 179              		.loc 1 92 0
 180 0004 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 181 0008 0346     		mov	r3, r0
 182 000a 1A46     		mov	r2, r3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 6


 183 000c 054B     		ldr	r3, .L2
 184 000e 1A60     		str	r2, [r3]
  93:.\main.c      ****     countM2 = QuadDec_M2_GetCounter();
 185              		.loc 1 93 0
 186 0010 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 187 0014 0346     		mov	r3, r0
 188 0016 1A46     		mov	r2, r3
 189 0018 034B     		ldr	r3, .L2+4
 190 001a 1A60     		str	r2, [r3]
  94:.\main.c      ****     timer_flag = TRUE;
 191              		.loc 1 94 0
 192 001c 034B     		ldr	r3, .L2+8
 193 001e 0122     		movs	r2, #1
 194 0020 1A60     		str	r2, [r3]
  95:.\main.c      **** }
 195              		.loc 1 95 0
 196 0022 80BD     		pop	{r7, pc}
 197              	.L3:
 198              		.align	2
 199              	.L2:
 200 0024 00000000 		.word	countM1
 201 0028 00000000 		.word	countM2
 202 002c 00000000 		.word	timer_flag
 203              		.cfi_endproc
 204              	.LFE63:
 205              		.size	ENCODER_ISR, .-ENCODER_ISR
 206              		.section	.text.ADC_ISR,"ax",%progbits
 207              		.align	2
 208              		.global	ADC_ISR
 209              		.thumb
 210              		.thumb_func
 211              		.type	ADC_ISR, %function
 212              	ADC_ISR:
 213              	.LFB64:
  96:.\main.c      **** 
  97:.\main.c      **** /* ### Retrieve and Store Measurements ### */
  98:.\main.c      **** CY_ISR(ADC_ISR) {
 214              		.loc 1 98 0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 1, uses_anonymous_args = 0
 218              		@ link register save eliminated.
 219 0000 80B4     		push	{r7}
 220              		.cfi_def_cfa_offset 4
 221              		.cfi_offset 7, -4
 222 0002 00AF     		add	r7, sp, #0
 223              		.cfi_def_cfa_register 7
  99:.\main.c      ****     adc_flag = TRUE;
 224              		.loc 1 99 0
 225 0004 034B     		ldr	r3, .L5
 226 0006 0122     		movs	r2, #1
 227 0008 1A60     		str	r2, [r3]
 100:.\main.c      **** }
 228              		.loc 1 100 0
 229 000a BD46     		mov	sp, r7
 230              		.cfi_def_cfa_register 13
 231              		@ sp needed
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 7


 232 000c 5DF8047B 		ldr	r7, [sp], #4
 233              		.cfi_restore 7
 234              		.cfi_def_cfa_offset 0
 235 0010 7047     		bx	lr
 236              	.L6:
 237 0012 00BF     		.align	2
 238              	.L5:
 239 0014 00000000 		.word	adc_flag
 240              		.cfi_endproc
 241              	.LFE64:
 242              		.size	ADC_ISR, .-ADC_ISR
 243              		.section	.text.main,"ax",%progbits
 244              		.align	2
 245              		.global	main
 246              		.thumb
 247              		.thumb_func
 248              		.type	main, %function
 249              	main:
 250              	.LFB65:
 101:.\main.c      **** 
 102:.\main.c      **** /** ## Notes
 103:.\main.c      ****     
 104:.\main.c      ****     Ratio of linear distance to quad decoder ticks
 105:.\main.c      ****     One revolution gives a linear distance (in cm)
 106:.\main.c      ****     Each revolution is 57 ticks (228 for 4x mode)
 107:.\main.c      ****     Centimetres per tick = linear distance / countM(1|2)
 108:.\main.c      ****     
 109:.\main.c      ****     Decoder use a 4x count, so each revolution gives 4 counts
 110:.\main.c      ****     Sampling rate is determined by our 100ms timer (might be a little slow)
 111:.\main.c      ****     
 112:.\main.c      ****     ## Algorithm Control Flow
 113:.\main.c      ****     - Get ADC value for each channel
 114:.\main.c      ****     - Get decoder val for M1 & M2
 115:.\main.c      ****     - Use these values to drive the movement of the robot
 116:.\main.c      ****     
 117:.\main.c      **** */
 118:.\main.c      **** 
 119:.\main.c      **** int main()
 120:.\main.c      **** {
 251              		.loc 1 120 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 8
 254              		@ frame_needed = 1, uses_anonymous_args = 0
 255 0000 80B5     		push	{r7, lr}
 256              		.cfi_def_cfa_offset 8
 257              		.cfi_offset 7, -8
 258              		.cfi_offset 14, -4
 259 0002 82B0     		sub	sp, sp, #8
 260              		.cfi_def_cfa_offset 16
 261 0004 00AF     		add	r7, sp, #0
 262              		.cfi_def_cfa_register 7
 121:.\main.c      ****     // delay
 122:.\main.c      ****     CyDelay(2000);
 263              		.loc 1 122 0
 264 0006 4FF4FA60 		mov	r0, #2000
 265 000a FFF7FEFF 		bl	CyDelay
 123:.\main.c      ****     
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 8


 124:.\main.c      ****     // --------------------------------
 125:.\main.c      ****     // ----- INITIALIZATIONS ----------
 126:.\main.c      ****     // ========================================
 127:.\main.c      ****     CYGlobalIntEnable;
 266              		.loc 1 127 0
 267              	@ 127 ".\main.c" 1
 268 000e 62B6     		CPSIE   i
 269              	@ 0 "" 2
 128:.\main.c      ****     
 129:.\main.c      ****     // PWMs
 130:.\main.c      ****     PWM_1_Start();
 270              		.loc 1 130 0
 271              		.thumb
 272 0010 FFF7FEFF 		bl	PWM_1_Start
 131:.\main.c      ****     PWM_2_Start();
 273              		.loc 1 131 0
 274 0014 FFF7FEFF 		bl	PWM_2_Start
 132:.\main.c      ****     
 133:.\main.c      ****     // Timer for encoder
 134:.\main.c      ****     Timer_TS_Start();
 275              		.loc 1 134 0
 276 0018 FFF7FEFF 		bl	Timer_TS_Start
 135:.\main.c      ****     isr_TS_Start(); // Timer interrupts need to be started independently
 277              		.loc 1 135 0
 278 001c FFF7FEFF 		bl	isr_TS_Start
 136:.\main.c      ****     isr_TS_StartEx(ENCODER_ISR);
 279              		.loc 1 136 0
 280 0020 1A48     		ldr	r0, .L9
 281 0022 FFF7FEFF 		bl	isr_TS_StartEx
 137:.\main.c      ****     
 138:.\main.c      ****     // Quad Decoders
 139:.\main.c      ****     QuadDec_M1_Start();
 282              		.loc 1 139 0
 283 0026 FFF7FEFF 		bl	QuadDec_M1_Start
 140:.\main.c      ****     QuadDec_M2_Start();
 284              		.loc 1 140 0
 285 002a FFF7FEFF 		bl	QuadDec_M2_Start
 141:.\main.c      ****     
 142:.\main.c      ****     // ADC
 143:.\main.c      ****     ADC_Start(); // Start ADC
 286              		.loc 1 143 0
 287 002e FFF7FEFF 		bl	ADC_Start
 144:.\main.c      ****     ADC_IRQ_Enable(); // Enable ADC interrupts
 288              		.loc 1 144 0
 289 0032 FFF7FEFF 		bl	ADC_IRQ_Enable
 145:.\main.c      ****     ADC_StartConvert(); // Start conversions
 290              		.loc 1 145 0
 291 0036 FFF7FEFF 		bl	ADC_StartConvert
 146:.\main.c      ****     isr_eoc_StartEx(ADC_ISR); // link interrupt for ADC
 292              		.loc 1 146 0
 293 003a 1548     		ldr	r0, .L9+4
 294 003c FFF7FEFF 		bl	isr_eoc_StartEx
 147:.\main.c      **** 
 148:.\main.c      ****     // ------------ USB SETUP ------------    
 149:.\main.c      ****     #ifdef USE_USB    
 150:.\main.c      ****         USBUART_Start(0, USBUART_5V_OPERATION);
 295              		.loc 1 150 0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 9


 296 0040 0020     		movs	r0, #0
 297 0042 0121     		movs	r1, #1
 298 0044 FFF7FEFF 		bl	USBUART_Start
 151:.\main.c      ****     #endif            
 152:.\main.c      ****     
 153:.\main.c      ****     // To make sure wheels rotate in the same direction i.e. forward
 154:.\main.c      ****     INV2_Write(1);
 299              		.loc 1 154 0
 300 0048 0120     		movs	r0, #1
 301 004a FFF7FEFF 		bl	INV2_Write
 155:.\main.c      ****     
 156:.\main.c      ****     int right_wheel_count = DESIRED_COUNT;
 302              		.loc 1 156 0
 303 004e 0823     		movs	r3, #8
 304 0050 7B60     		str	r3, [r7, #4]
 157:.\main.c      ****     int left_wheel_count = DESIRED_COUNT;
 305              		.loc 1 157 0
 306 0052 0823     		movs	r3, #8
 307 0054 3B60     		str	r3, [r7]
 158:.\main.c      ****     
 159:.\main.c      ****     goStraight(GRID_SIZE * 2 - HALF_ROBOT_LENGTH, &right_wheel_count, &left_wheel_count);
 308              		.loc 1 159 0
 309 0056 3A1D     		adds	r2, r7, #4
 310 0058 3B46     		mov	r3, r7
 311 005a 0E20     		movs	r0, #14
 312 005c 1146     		mov	r1, r2
 313 005e 1A46     		mov	r2, r3
 314 0060 FFF7FEFF 		bl	goStraight
 160:.\main.c      ****     uTurn(&right_wheel_count, &left_wheel_count);
 315              		.loc 1 160 0
 316 0064 3A1D     		adds	r2, r7, #4
 317 0066 3B46     		mov	r3, r7
 318 0068 1046     		mov	r0, r2
 319 006a 1946     		mov	r1, r3
 320 006c FFF7FEFF 		bl	uTurn
 161:.\main.c      ****     
 162:.\main.c      **** //    char directions[8] = {'4', 'L', '4', 'R', '2', 'R'};
 163:.\main.c      **** //    //char directions[8] = {'4', 'R', '4'};
 164:.\main.c      **** //    int direction_index = 0;
 165:.\main.c      **** //    
 166:.\main.c      **** //    while (directions[direction_index] != 0) {
 167:.\main.c      **** //        if (directions[direction_index] == 'R') {
 168:.\main.c      **** //            usbPutString("Sharp turn right\r\n");
 169:.\main.c      **** //            sharpTurnRight(&right_wheel_count, &left_wheel_count);
 170:.\main.c      **** //        } else if (directions[direction_index] == 'L') {
 171:.\main.c      **** //            usbPutString("Sharp turn left\r\n");
 172:.\main.c      **** //            sharpTurnLeft(&right_wheel_count, &left_wheel_count);
 173:.\main.c      **** //        } else {
 174:.\main.c      **** //            usbPutString("Straight\r\n");
 175:.\main.c      **** //            int num_coords = directions[direction_index] - '0';
 176:.\main.c      **** //            goStraight(GRID_SIZE * num_coords - HALF_ROBOT_LENGTH, &right_wheel_count, &left_whee
 177:.\main.c      **** //        }
 178:.\main.c      ****         
 179:.\main.c      **** //        int num_coords;
 180:.\main.c      **** //            
 181:.\main.c      **** //        switch(directions[direction_index]) {
 182:.\main.c      **** //            case 'R':
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 10


 183:.\main.c      **** //                sharpTurnRight(&right_wheel_count, &left_wheel_count);
 184:.\main.c      **** //                usbPutString("Sharp turn right");
 185:.\main.c      **** //                break;
 186:.\main.c      **** //            case 'L':
 187:.\main.c      **** //                sharpTurnLeft(&right_wheel_count, &left_wheel_count);
 188:.\main.c      **** //                usbPutString("Sharp turn left");
 189:.\main.c      **** //                break;
 190:.\main.c      **** //            default: 
 191:.\main.c      **** //                usbPutString("Straight");
 192:.\main.c      **** //                num_coords = directions[direction_index] - '0';
 193:.\main.c      **** //                goStraight(GRID_SIZE * num_coords - DESIRED_COUNT, &right_wheel_count, &left_whee
 194:.\main.c      **** //                break;
 195:.\main.c      **** //        }
 196:.\main.c      **** //        direction_index++;
 197:.\main.c      **** //    }
 198:.\main.c      ****     
 199:.\main.c      ****     LED_Write(1);
 321              		.loc 1 199 0
 322 0070 0120     		movs	r0, #1
 323 0072 FFF7FEFF 		bl	LED_Write
 200:.\main.c      ****     
 201:.\main.c      ****     PWM_1_WriteCompare(0);
 324              		.loc 1 201 0
 325 0076 0020     		movs	r0, #0
 326 0078 FFF7FEFF 		bl	PWM_1_WriteCompare
 202:.\main.c      ****     PWM_2_WriteCompare(0);
 327              		.loc 1 202 0
 328 007c 0020     		movs	r0, #0
 329 007e FFF7FEFF 		bl	PWM_2_WriteCompare
 203:.\main.c      ****     
 204:.\main.c      ****     return 0;
 330              		.loc 1 204 0
 331 0082 0023     		movs	r3, #0
 205:.\main.c      **** }
 332              		.loc 1 205 0
 333 0084 1846     		mov	r0, r3
 334 0086 0837     		adds	r7, r7, #8
 335              		.cfi_def_cfa_offset 8
 336 0088 BD46     		mov	sp, r7
 337              		.cfi_def_cfa_register 13
 338              		@ sp needed
 339 008a 80BD     		pop	{r7, pc}
 340              	.L10:
 341              		.align	2
 342              	.L9:
 343 008c 00000000 		.word	ENCODER_ISR
 344 0090 00000000 		.word	ADC_ISR
 345              		.cfi_endproc
 346              	.LFE65:
 347              		.size	main, .-main
 348              		.section	.text.getValForChannel,"ax",%progbits
 349              		.align	2
 350              		.global	getValForChannel
 351              		.thumb
 352              		.thumb_func
 353              		.type	getValForChannel, %function
 354              	getValForChannel:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 11


 355              	.LFB66:
 206:.\main.c      **** 
 207:.\main.c      **** // --------------------------------------------- ADC ------------------------------------------
 208:.\main.c      **** // Simple ADC conversion
 209:.\main.c      **** int32 getValForChannel(int16 n){
 356              		.loc 1 209 0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 8
 359              		@ frame_needed = 1, uses_anonymous_args = 0
 360 0000 80B5     		push	{r7, lr}
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 7, -8
 363              		.cfi_offset 14, -4
 364 0002 82B0     		sub	sp, sp, #8
 365              		.cfi_def_cfa_offset 16
 366 0004 00AF     		add	r7, sp, #0
 367              		.cfi_def_cfa_register 7
 368 0006 0346     		mov	r3, r0
 369 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 210:.\main.c      ****     return ADC_CountsTo_mVolts(ADC_GetResult16(n));
 370              		.loc 1 210 0
 371 000a FB88     		ldrh	r3, [r7, #6]
 372 000c 1846     		mov	r0, r3
 373 000e FFF7FEFF 		bl	ADC_GetResult16
 374 0012 0346     		mov	r3, r0
 375 0014 1846     		mov	r0, r3
 376 0016 FFF7FEFF 		bl	ADC_CountsTo_mVolts
 377 001a 0346     		mov	r3, r0
 211:.\main.c      **** }
 378              		.loc 1 211 0
 379 001c 1846     		mov	r0, r3
 380 001e 0837     		adds	r7, r7, #8
 381              		.cfi_def_cfa_offset 8
 382 0020 BD46     		mov	sp, r7
 383              		.cfi_def_cfa_register 13
 384              		@ sp needed
 385 0022 80BD     		pop	{r7, pc}
 386              		.cfi_endproc
 387              	.LFE66:
 388              		.size	getValForChannel, .-getValForChannel
 389              		.section	.text.updateSensorValues,"ax",%progbits
 390              		.align	2
 391              		.global	updateSensorValues
 392              		.thumb
 393              		.thumb_func
 394              		.type	updateSensorValues, %function
 395              	updateSensorValues:
 396              	.LFB67:
 212:.\main.c      **** 
 213:.\main.c      **** void updateSensorValues(){
 397              		.loc 1 213 0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 8
 400              		@ frame_needed = 1, uses_anonymous_args = 0
 401 0000 80B5     		push	{r7, lr}
 402              		.cfi_def_cfa_offset 8
 403              		.cfi_offset 7, -8
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 12


 404              		.cfi_offset 14, -4
 405 0002 82B0     		sub	sp, sp, #8
 406              		.cfi_def_cfa_offset 16
 407 0004 00AF     		add	r7, sp, #0
 408              		.cfi_def_cfa_register 7
 214:.\main.c      ****     // update each sensor with the maximum reading so far
 215:.\main.c      ****     int i;
 216:.\main.c      ****     for (i = 0; i < NUM_SENSORS; i++){
 409              		.loc 1 216 0
 410 0006 0023     		movs	r3, #0
 411 0008 7B60     		str	r3, [r7, #4]
 412 000a 15E0     		b	.L14
 413              	.L16:
 414              	.LBB2:
 217:.\main.c      ****         int reading = getValForChannel(i);
 415              		.loc 1 217 0
 416 000c 7B68     		ldr	r3, [r7, #4]
 417 000e 9BB2     		uxth	r3, r3
 418 0010 1BB2     		sxth	r3, r3
 419 0012 1846     		mov	r0, r3
 420 0014 FFF7FEFF 		bl	getValForChannel
 421 0018 3860     		str	r0, [r7]
 218:.\main.c      ****         if (reading > adc_readings[i]) {
 422              		.loc 1 218 0
 423 001a 234A     		ldr	r2, .L21
 424 001c 7B68     		ldr	r3, [r7, #4]
 425 001e 52F82320 		ldr	r2, [r2, r3, lsl #2]
 426 0022 3B68     		ldr	r3, [r7]
 427 0024 9A42     		cmp	r2, r3
 428 0026 04DA     		bge	.L15
 219:.\main.c      ****             adc_readings[i] = reading;
 429              		.loc 1 219 0
 430 0028 1F49     		ldr	r1, .L21
 431 002a 7B68     		ldr	r3, [r7, #4]
 432 002c 3A68     		ldr	r2, [r7]
 433 002e 41F82320 		str	r2, [r1, r3, lsl #2]
 434              	.L15:
 435              	.LBE2:
 216:.\main.c      ****         int reading = getValForChannel(i);
 436              		.loc 1 216 0 discriminator 2
 437 0032 7B68     		ldr	r3, [r7, #4]
 438 0034 0133     		adds	r3, r3, #1
 439 0036 7B60     		str	r3, [r7, #4]
 440              	.L14:
 216:.\main.c      ****         int reading = getValForChannel(i);
 441              		.loc 1 216 0 is_stmt 0 discriminator 1
 442 0038 7B68     		ldr	r3, [r7, #4]
 443 003a 052B     		cmp	r3, #5
 444 003c E6DD     		ble	.L16
 220:.\main.c      ****         }
 221:.\main.c      ****     }
 222:.\main.c      **** 
 223:.\main.c      ****     sample_count++;
 445              		.loc 1 223 0 is_stmt 1
 446 003e 1B4B     		ldr	r3, .L21+4
 447 0040 1B68     		ldr	r3, [r3]
 448 0042 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 13


 449 0044 194A     		ldr	r2, .L21+4
 450 0046 1360     		str	r3, [r2]
 224:.\main.c      ****     if (sample_count == ADC_READINGS_SIZE){
 451              		.loc 1 224 0
 452 0048 184B     		ldr	r3, .L21+4
 453 004a 1B68     		ldr	r3, [r3]
 454 004c 5A2B     		cmp	r3, #90
 455 004e 25D1     		bne	.L17
 225:.\main.c      ****         // Black = 1 (high voltage level)
 226:.\main.c      ****         for (i = 0; i < NUM_SENSORS; i++){
 456              		.loc 1 226 0
 457 0050 0023     		movs	r3, #0
 458 0052 7B60     		str	r3, [r7, #4]
 459 0054 18E0     		b	.L18
 460              	.L19:
 227:.\main.c      ****             sensor_readings[i] = !!(adc_readings[i] < LIGHT_LEVEL);
 461              		.loc 1 227 0 discriminator 3
 462 0056 144A     		ldr	r2, .L21
 463 0058 7B68     		ldr	r3, [r7, #4]
 464 005a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 465 005e 40F22B12 		movw	r2, #299
 466 0062 9342     		cmp	r3, r2
 467 0064 D4BF     		ite	le
 468 0066 0123     		movle	r3, #1
 469 0068 0023     		movgt	r3, #0
 470 006a DBB2     		uxtb	r3, r3
 471 006c D9B2     		uxtb	r1, r3
 472 006e 104A     		ldr	r2, .L21+8
 473 0070 7B68     		ldr	r3, [r7, #4]
 474 0072 1344     		add	r3, r3, r2
 475 0074 0A46     		mov	r2, r1
 476 0076 1A70     		strb	r2, [r3]
 228:.\main.c      ****             adc_readings[i] = 0; // Reset max value from samples
 477              		.loc 1 228 0 discriminator 3
 478 0078 0B4A     		ldr	r2, .L21
 479 007a 7B68     		ldr	r3, [r7, #4]
 480 007c 0021     		movs	r1, #0
 481 007e 42F82310 		str	r1, [r2, r3, lsl #2]
 226:.\main.c      ****             sensor_readings[i] = !!(adc_readings[i] < LIGHT_LEVEL);
 482              		.loc 1 226 0 discriminator 3
 483 0082 7B68     		ldr	r3, [r7, #4]
 484 0084 0133     		adds	r3, r3, #1
 485 0086 7B60     		str	r3, [r7, #4]
 486              	.L18:
 226:.\main.c      ****             sensor_readings[i] = !!(adc_readings[i] < LIGHT_LEVEL);
 487              		.loc 1 226 0 is_stmt 0 discriminator 1
 488 0088 7B68     		ldr	r3, [r7, #4]
 489 008a 052B     		cmp	r3, #5
 490 008c E3DD     		ble	.L19
 229:.\main.c      ****         }
 230:.\main.c      ****         ADC_DEBUG_Write(1);
 491              		.loc 1 230 0 is_stmt 1
 492 008e 0120     		movs	r0, #1
 493 0090 FFF7FEFF 		bl	ADC_DEBUG_Write
 231:.\main.c      ****         sample_count = 0;
 494              		.loc 1 231 0
 495 0094 054B     		ldr	r3, .L21+4
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 14


 496 0096 0022     		movs	r2, #0
 497 0098 1A60     		str	r2, [r3]
 498 009a 02E0     		b	.L13
 499              	.L17:
 232:.\main.c      ****     }
 233:.\main.c      ****     else ADC_DEBUG_Write(0);
 500              		.loc 1 233 0
 501 009c 0020     		movs	r0, #0
 502 009e FFF7FEFF 		bl	ADC_DEBUG_Write
 503              	.L13:
 234:.\main.c      **** }
 504              		.loc 1 234 0
 505 00a2 0837     		adds	r7, r7, #8
 506              		.cfi_def_cfa_offset 8
 507 00a4 BD46     		mov	sp, r7
 508              		.cfi_def_cfa_register 13
 509              		@ sp needed
 510 00a6 80BD     		pop	{r7, pc}
 511              	.L22:
 512              		.align	2
 513              	.L21:
 514 00a8 00000000 		.word	adc_readings
 515 00ac 00000000 		.word	sample_count
 516 00b0 00000000 		.word	sensor_readings
 517              		.cfi_endproc
 518              	.LFE67:
 519              		.size	updateSensorValues, .-updateSensorValues
 520              		.section	.rodata
 521              		.align	2
 522              	.LC0:
 523 0000 0D0A00   		.ascii	"\015\012\000"
 524 0003 00       		.align	2
 525              	.LC1:
 526 0004 202D2064 		.ascii	" - desired  \000"
 526      65736972 
 526      65642020 
 526      00
 527 0011 000000   		.align	2
 528              	.LC2:
 529 0014 0D0A202D 		.ascii	"\015\012 - distance \000"
 529      20646973 
 529      74616E63 
 529      652000
 530              		.global	__aeabi_f2iz
 531              		.global	__aeabi_fadd
 532 0023 00       		.align	2
 533              	.LC3:
 534 0024 0D0A202D 		.ascii	"\015\012 - desired - \000"
 534      20646573 
 534      69726564 
 534      202D2000 
 535              		.align	2
 536              	.LC4:
 537 0034 202D2064 		.ascii	" - distance - \000"
 537      69737461 
 537      6E636520 
 537      2D2000
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 15


 538 0043 00       		.align	2
 539              	.LC5:
 540 0044 202D2074 		.ascii	" - turn right\015\012\000"
 540      75726E20 
 540      72696768 
 540      740D0A00 
 541              		.align	2
 542              	.LC6:
 543 0054 202D2074 		.ascii	" - turn left\015\012\000"
 543      75726E20 
 543      6C656674 
 543      0D0A00
 544              		.global	__aeabi_i2f
 545              		.global	__aeabi_fcmpgt
 546              		.section	.text.goStraight,"ax",%progbits
 547              		.align	2
 548              		.global	goStraight
 549              		.thumb
 550              		.thumb_func
 551              		.type	goStraight, %function
 552              	goStraight:
 553              	.LFB68:
 235:.\main.c      **** 
 236:.\main.c      **** // --------------------------------------------- STRAIGHT -----------------------------------------
 237:.\main.c      **** void goStraight(int desired_distance, int *right_wheel_count, int *left_wheel_count) {
 554              		.loc 1 237 0
 555              		.cfi_startproc
 556              		@ args = 0, pretend = 0, frame = 56
 557              		@ frame_needed = 1, uses_anonymous_args = 0
 558 0000 80B5     		push	{r7, lr}
 559              		.cfi_def_cfa_offset 8
 560              		.cfi_offset 7, -8
 561              		.cfi_offset 14, -4
 562 0002 8EB0     		sub	sp, sp, #56
 563              		.cfi_def_cfa_offset 64
 564 0004 00AF     		add	r7, sp, #0
 565              		.cfi_def_cfa_register 7
 566 0006 F860     		str	r0, [r7, #12]
 567 0008 B960     		str	r1, [r7, #8]
 568 000a 7A60     		str	r2, [r7, #4]
 238:.\main.c      ****     usbPutString("\r\n");
 569              		.loc 1 238 0
 570 000c 8448     		ldr	r0, .L36
 571 000e FFF7FEFF 		bl	usbPutString
 239:.\main.c      ****     usbPutString(" - desired  ");
 572              		.loc 1 239 0
 573 0012 8448     		ldr	r0, .L36+4
 574 0014 FFF7FEFF 		bl	usbPutString
 240:.\main.c      ****     char buf[32];
 241:.\main.c      ****     itoa(desired_distance, buf, 10);
 575              		.loc 1 241 0
 576 0018 07F11403 		add	r3, r7, #20
 577 001c F868     		ldr	r0, [r7, #12]
 578 001e 1946     		mov	r1, r3
 579 0020 0A22     		movs	r2, #10
 580 0022 FFF7FEFF 		bl	itoa
 242:.\main.c      ****     usbPutString(buf);
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 16


 581              		.loc 1 242 0
 582 0026 07F11403 		add	r3, r7, #20
 583 002a 1846     		mov	r0, r3
 584 002c FFF7FEFF 		bl	usbPutString
 243:.\main.c      ****     
 244:.\main.c      ****     *right_wheel_count = DESIRED_COUNT;//TODO: check if needed
 585              		.loc 1 244 0
 586 0030 BB68     		ldr	r3, [r7, #8]
 587 0032 0822     		movs	r2, #8
 588 0034 1A60     		str	r2, [r3]
 245:.\main.c      ****     *left_wheel_count = DESIRED_COUNT;
 589              		.loc 1 245 0
 590 0036 7B68     		ldr	r3, [r7, #4]
 591 0038 0822     		movs	r2, #8
 592 003a 1A60     		str	r2, [r3]
 246:.\main.c      ****     
 247:.\main.c      ****     float distance = 0;
 593              		.loc 1 247 0
 594 003c 4FF00003 		mov	r3, #0
 595 0040 7B63     		str	r3, [r7, #52]	@ float
 248:.\main.c      ****     
 249:.\main.c      ****     usbPutString("\r\n - distance ");
 596              		.loc 1 249 0
 597 0042 7948     		ldr	r0, .L36+8
 598 0044 FFF7FEFF 		bl	usbPutString
 250:.\main.c      ****     itoa(distance, buf, 10);
 599              		.loc 1 250 0
 600 0048 786B     		ldr	r0, [r7, #52]	@ float
 601 004a FFF7FEFF 		bl	__aeabi_f2iz
 602 004e 0246     		mov	r2, r0
 603 0050 07F11403 		add	r3, r7, #20
 604 0054 1046     		mov	r0, r2
 605 0056 1946     		mov	r1, r3
 606 0058 0A22     		movs	r2, #10
 607 005a FFF7FEFF 		bl	itoa
 251:.\main.c      ****     usbPutString(buf);
 608              		.loc 1 251 0
 609 005e 07F11403 		add	r3, r7, #20
 610 0062 1846     		mov	r0, r3
 611 0064 FFF7FEFF 		bl	usbPutString
 252:.\main.c      ****     usbPutString("\r\n");
 612              		.loc 1 252 0
 613 0068 6D48     		ldr	r0, .L36
 614 006a FFF7FEFF 		bl	usbPutString
 253:.\main.c      ****     usbPutString("\r\n");
 615              		.loc 1 253 0
 616 006e 6C48     		ldr	r0, .L36
 617 0070 FFF7FEFF 		bl	usbPutString
 254:.\main.c      ****     
 255:.\main.c      ****     while (distance < desired_distance) {
 618              		.loc 1 255 0
 619 0074 C5E0     		b	.L24
 620              	.L35:
 256:.\main.c      ****         if (adc_flag) {
 621              		.loc 1 256 0
 622 0076 6D4B     		ldr	r3, .L36+12
 623 0078 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 17


 624 007a 002B     		cmp	r3, #0
 625 007c 04D0     		beq	.L25
 257:.\main.c      ****             updateSensorValues();
 626              		.loc 1 257 0
 627 007e FFF7FEFF 		bl	updateSensorValues
 258:.\main.c      ****             adc_flag = FALSE;
 628              		.loc 1 258 0
 629 0082 6A4B     		ldr	r3, .L36+12
 630 0084 0022     		movs	r2, #0
 631 0086 1A60     		str	r2, [r3]
 632              	.L25:
 259:.\main.c      ****         }
 260:.\main.c      ****         
 261:.\main.c      ****          // New count values from encoder are ready
 262:.\main.c      ****         if (timer_flag){
 633              		.loc 1 262 0
 634 0088 694B     		ldr	r3, .L36+16
 635 008a 1B68     		ldr	r3, [r3]
 636 008c 002B     		cmp	r3, #0
 637 008e 57D0     		beq	.L26
 263:.\main.c      ****             isr_TS_Disable();
 638              		.loc 1 263 0
 639 0090 FFF7FEFF 		bl	isr_TS_Disable
 264:.\main.c      ****             
 265:.\main.c      ****             // update distance
 266:.\main.c      ****             distance += getDistance(prevCountM1, prevCountM2);
 640              		.loc 1 266 0
 641 0094 674B     		ldr	r3, .L36+20
 642 0096 1A68     		ldr	r2, [r3]
 643 0098 674B     		ldr	r3, .L36+24
 644 009a 1B68     		ldr	r3, [r3]
 645 009c 1046     		mov	r0, r2
 646 009e 1946     		mov	r1, r3
 647 00a0 FFF7FEFF 		bl	getDistance
 648 00a4 0346     		mov	r3, r0
 649 00a6 786B     		ldr	r0, [r7, #52]	@ float
 650 00a8 1946     		mov	r1, r3
 651 00aa FFF7FEFF 		bl	__aeabi_fadd
 652 00ae 0346     		mov	r3, r0
 653 00b0 7B63     		str	r3, [r7, #52]	@ float
 267:.\main.c      ****             
 268:.\main.c      ****             usbPutString("\r\n - desired - ");
 654              		.loc 1 268 0
 655 00b2 6248     		ldr	r0, .L36+28
 656 00b4 FFF7FEFF 		bl	usbPutString
 269:.\main.c      ****             itoa(desired_distance, buf, 10);
 657              		.loc 1 269 0
 658 00b8 07F11403 		add	r3, r7, #20
 659 00bc F868     		ldr	r0, [r7, #12]
 660 00be 1946     		mov	r1, r3
 661 00c0 0A22     		movs	r2, #10
 662 00c2 FFF7FEFF 		bl	itoa
 270:.\main.c      ****             usbPutString(buf);
 663              		.loc 1 270 0
 664 00c6 07F11403 		add	r3, r7, #20
 665 00ca 1846     		mov	r0, r3
 666 00cc FFF7FEFF 		bl	usbPutString
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 18


 271:.\main.c      ****             usbPutString(" - distance - ");
 667              		.loc 1 271 0
 668 00d0 5B48     		ldr	r0, .L36+32
 669 00d2 FFF7FEFF 		bl	usbPutString
 272:.\main.c      ****             itoa(distance, buf, 10);
 670              		.loc 1 272 0
 671 00d6 786B     		ldr	r0, [r7, #52]	@ float
 672 00d8 FFF7FEFF 		bl	__aeabi_f2iz
 673 00dc 0246     		mov	r2, r0
 674 00de 07F11403 		add	r3, r7, #20
 675 00e2 1046     		mov	r0, r2
 676 00e4 1946     		mov	r1, r3
 677 00e6 0A22     		movs	r2, #10
 678 00e8 FFF7FEFF 		bl	itoa
 273:.\main.c      ****             usbPutString(buf);
 679              		.loc 1 273 0
 680 00ec 07F11403 		add	r3, r7, #20
 681 00f0 1846     		mov	r0, r3
 682 00f2 FFF7FEFF 		bl	usbPutString
 274:.\main.c      ****             
 275:.\main.c      ****             
 276:.\main.c      ****             // Correct speed
 277:.\main.c      ****             correctSpeed(prevCountM1,countM1,*left_wheel_count,TRUE);
 683              		.loc 1 277 0
 684 00f6 4F4B     		ldr	r3, .L36+20
 685 00f8 1968     		ldr	r1, [r3]
 686 00fa 524B     		ldr	r3, .L36+36
 687 00fc 1A68     		ldr	r2, [r3]
 688 00fe 7B68     		ldr	r3, [r7, #4]
 689 0100 1B68     		ldr	r3, [r3]
 690 0102 0846     		mov	r0, r1
 691 0104 1146     		mov	r1, r2
 692 0106 1A46     		mov	r2, r3
 693 0108 0123     		movs	r3, #1
 694 010a FFF7FEFF 		bl	correctSpeed
 278:.\main.c      ****             correctSpeed(prevCountM2,countM2,*right_wheel_count,FALSE);
 695              		.loc 1 278 0
 696 010e 4A4B     		ldr	r3, .L36+24
 697 0110 1968     		ldr	r1, [r3]
 698 0112 4D4B     		ldr	r3, .L36+40
 699 0114 1A68     		ldr	r2, [r3]
 700 0116 BB68     		ldr	r3, [r7, #8]
 701 0118 1B68     		ldr	r3, [r3]
 702 011a 0846     		mov	r0, r1
 703 011c 1146     		mov	r1, r2
 704 011e 1A46     		mov	r2, r3
 705 0120 0023     		movs	r3, #0
 706 0122 FFF7FEFF 		bl	correctSpeed
 279:.\main.c      ****             
 280:.\main.c      ****             // Update previous values
 281:.\main.c      ****             prevCountM1 = countM1;
 707              		.loc 1 281 0
 708 0126 474B     		ldr	r3, .L36+36
 709 0128 1B68     		ldr	r3, [r3]
 710 012a 424A     		ldr	r2, .L36+20
 711 012c 1360     		str	r3, [r2]
 282:.\main.c      ****             prevCountM2 = countM2;
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 19


 712              		.loc 1 282 0
 713 012e 464B     		ldr	r3, .L36+40
 714 0130 1B68     		ldr	r3, [r3]
 715 0132 414A     		ldr	r2, .L36+24
 716 0134 1360     		str	r3, [r2]
 283:.\main.c      ****             
 284:.\main.c      ****             // Reset flag
 285:.\main.c      ****             timer_flag = FALSE;
 717              		.loc 1 285 0
 718 0136 3E4B     		ldr	r3, .L36+16
 719 0138 0022     		movs	r2, #0
 720 013a 1A60     		str	r2, [r3]
 286:.\main.c      ****             isr_TS_Enable();
 721              		.loc 1 286 0
 722 013c FFF7FEFF 		bl	isr_TS_Enable
 723              	.L26:
 287:.\main.c      ****         }
 288:.\main.c      ****         
 289:.\main.c      ****         // follow a line algorithm
 290:.\main.c      ****         if (sensor_readings[TOP_MID_SENSOR]) { // on line
 724              		.loc 1 290 0
 725 0140 424B     		ldr	r3, .L36+44
 726 0142 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 727 0144 002B     		cmp	r3, #0
 728 0146 25D0     		beq	.L27
 291:.\main.c      ****             if (!sensor_readings[TOP_LEFT_SENSOR] && sensor_readings[TOP_RIGHT_SENSOR]) {// Deviate
 729              		.loc 1 291 0
 730 0148 404B     		ldr	r3, .L36+44
 731 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 732 014c 002B     		cmp	r3, #0
 733 014e 0ED1     		bne	.L28
 734              		.loc 1 291 0 is_stmt 0 discriminator 1
 735 0150 3E4B     		ldr	r3, .L36+44
 736 0152 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 737 0154 002B     		cmp	r3, #0
 738 0156 0AD0     		beq	.L28
 292:.\main.c      ****                 *right_wheel_count -= ADJUST_SPEED_SMALL;
 739              		.loc 1 292 0 is_stmt 1
 740 0158 BB68     		ldr	r3, [r7, #8]
 741 015a 1B68     		ldr	r3, [r3]
 742 015c 5A1E     		subs	r2, r3, #1
 743 015e BB68     		ldr	r3, [r7, #8]
 744 0160 1A60     		str	r2, [r3]
 293:.\main.c      ****                 *left_wheel_count += ADJUST_SPEED_SMALL;
 745              		.loc 1 293 0
 746 0162 7B68     		ldr	r3, [r7, #4]
 747 0164 1B68     		ldr	r3, [r3]
 748 0166 5A1C     		adds	r2, r3, #1
 749 0168 7B68     		ldr	r3, [r7, #4]
 750 016a 1A60     		str	r2, [r3]
 751 016c 2DE0     		b	.L30
 752              	.L28:
 294:.\main.c      ****             } else if (sensor_readings[TOP_LEFT_SENSOR] && !sensor_readings[TOP_RIGHT_SENSOR]) { //
 753              		.loc 1 294 0
 754 016e 374B     		ldr	r3, .L36+44
 755 0170 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 756 0172 002B     		cmp	r3, #0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 20


 757 0174 29D0     		beq	.L30
 758              		.loc 1 294 0 is_stmt 0 discriminator 1
 759 0176 354B     		ldr	r3, .L36+44
 760 0178 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 761 017a 002B     		cmp	r3, #0
 762 017c 25D1     		bne	.L30
 295:.\main.c      ****                 *right_wheel_count += ADJUST_SPEED_SMALL;
 763              		.loc 1 295 0 is_stmt 1
 764 017e BB68     		ldr	r3, [r7, #8]
 765 0180 1B68     		ldr	r3, [r3]
 766 0182 5A1C     		adds	r2, r3, #1
 767 0184 BB68     		ldr	r3, [r7, #8]
 768 0186 1A60     		str	r2, [r3]
 296:.\main.c      ****                 *left_wheel_count -= ADJUST_SPEED_SMALL;
 769              		.loc 1 296 0
 770 0188 7B68     		ldr	r3, [r7, #4]
 771 018a 1B68     		ldr	r3, [r3]
 772 018c 5A1E     		subs	r2, r3, #1
 773 018e 7B68     		ldr	r3, [r7, #4]
 774 0190 1A60     		str	r2, [r3]
 775 0192 1AE0     		b	.L30
 776              	.L27:
 297:.\main.c      ****             }
 298:.\main.c      ****         } else { // moved off
 299:.\main.c      ****             if (!sensor_readings[TOP_LEFT_SENSOR] && sensor_readings[TOP_RIGHT_SENSOR]) {// Deviate
 777              		.loc 1 299 0
 778 0194 2D4B     		ldr	r3, .L36+44
 779 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 780 0198 002B     		cmp	r3, #0
 781 019a 09D1     		bne	.L31
 782              		.loc 1 299 0 is_stmt 0 discriminator 1
 783 019c 2B4B     		ldr	r3, .L36+44
 784 019e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 785 01a0 002B     		cmp	r3, #0
 786 01a2 05D0     		beq	.L31
 300:.\main.c      ****                 usbPutString(" - turn right\r\n");
 787              		.loc 1 300 0 is_stmt 1
 788 01a4 2A48     		ldr	r0, .L36+48
 789 01a6 FFF7FEFF 		bl	usbPutString
 301:.\main.c      ****                 turnRight();
 790              		.loc 1 301 0
 791 01aa FFF7FEFF 		bl	turnRight
 792 01ae 0CE0     		b	.L30
 793              	.L31:
 302:.\main.c      ****             } else if (sensor_readings[TOP_LEFT_SENSOR] && !sensor_readings[TOP_RIGHT_SENSOR]) {// 
 794              		.loc 1 302 0
 795 01b0 264B     		ldr	r3, .L36+44
 796 01b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 797 01b4 002B     		cmp	r3, #0
 798 01b6 08D0     		beq	.L30
 799              		.loc 1 302 0 is_stmt 0 discriminator 1
 800 01b8 244B     		ldr	r3, .L36+44
 801 01ba 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 802 01bc 002B     		cmp	r3, #0
 803 01be 04D1     		bne	.L30
 303:.\main.c      ****                 usbPutString(" - turn left\r\n");
 804              		.loc 1 303 0 is_stmt 1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 21


 805 01c0 2448     		ldr	r0, .L36+52
 806 01c2 FFF7FEFF 		bl	usbPutString
 304:.\main.c      **** 				turnLeft();
 807              		.loc 1 304 0
 808 01c6 FFF7FEFF 		bl	turnLeft
 809              	.L30:
 305:.\main.c      ****             }
 306:.\main.c      ****         }
 307:.\main.c      ****         
 308:.\main.c      ****         if (*right_wheel_count > MAX_SPEED) {
 810              		.loc 1 308 0
 811 01ca BB68     		ldr	r3, [r7, #8]
 812 01cc 1B68     		ldr	r3, [r3]
 813 01ce 092B     		cmp	r3, #9
 814 01d0 02DD     		ble	.L32
 309:.\main.c      ****             *right_wheel_count = MAX_SPEED;
 815              		.loc 1 309 0
 816 01d2 BB68     		ldr	r3, [r7, #8]
 817 01d4 0922     		movs	r2, #9
 818 01d6 1A60     		str	r2, [r3]
 819              	.L32:
 310:.\main.c      ****         }
 311:.\main.c      ****         if (*left_wheel_count > MAX_SPEED) {
 820              		.loc 1 311 0
 821 01d8 7B68     		ldr	r3, [r7, #4]
 822 01da 1B68     		ldr	r3, [r3]
 823 01dc 092B     		cmp	r3, #9
 824 01de 02DD     		ble	.L33
 312:.\main.c      ****             *left_wheel_count = MAX_SPEED;
 825              		.loc 1 312 0
 826 01e0 7B68     		ldr	r3, [r7, #4]
 827 01e2 0922     		movs	r2, #9
 828 01e4 1A60     		str	r2, [r3]
 829              	.L33:
 313:.\main.c      ****         }
 314:.\main.c      ****         if (*right_wheel_count < MIN_SPEED) {
 830              		.loc 1 314 0
 831 01e6 BB68     		ldr	r3, [r7, #8]
 832 01e8 1B68     		ldr	r3, [r3]
 833 01ea 032B     		cmp	r3, #3
 834 01ec 02DC     		bgt	.L34
 315:.\main.c      ****             *right_wheel_count = MIN_SPEED;
 835              		.loc 1 315 0
 836 01ee BB68     		ldr	r3, [r7, #8]
 837 01f0 0422     		movs	r2, #4
 838 01f2 1A60     		str	r2, [r3]
 839              	.L34:
 316:.\main.c      ****         }
 317:.\main.c      ****         if (*left_wheel_count < MIN_SPEED) {
 840              		.loc 1 317 0
 841 01f4 7B68     		ldr	r3, [r7, #4]
 842 01f6 1B68     		ldr	r3, [r3]
 843 01f8 032B     		cmp	r3, #3
 844 01fa 02DC     		bgt	.L24
 318:.\main.c      ****             *left_wheel_count = MIN_SPEED;
 845              		.loc 1 318 0
 846 01fc 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 22


 847 01fe 0422     		movs	r2, #4
 848 0200 1A60     		str	r2, [r3]
 849              	.L24:
 255:.\main.c      ****         if (adc_flag) {
 850              		.loc 1 255 0
 851 0202 F868     		ldr	r0, [r7, #12]
 852 0204 FFF7FEFF 		bl	__aeabi_i2f
 853 0208 0346     		mov	r3, r0
 854 020a 1846     		mov	r0, r3
 855 020c 796B     		ldr	r1, [r7, #52]	@ float
 856 020e FFF7FEFF 		bl	__aeabi_fcmpgt
 857 0212 0346     		mov	r3, r0
 858 0214 002B     		cmp	r3, #0
 859 0216 7FF42EAF 		bne	.L35
 319:.\main.c      ****         }
 320:.\main.c      ****     }
 321:.\main.c      **** }
 860              		.loc 1 321 0
 861 021a 3837     		adds	r7, r7, #56
 862              		.cfi_def_cfa_offset 8
 863 021c BD46     		mov	sp, r7
 864              		.cfi_def_cfa_register 13
 865              		@ sp needed
 866 021e 80BD     		pop	{r7, pc}
 867              	.L37:
 868              		.align	2
 869              	.L36:
 870 0220 00000000 		.word	.LC0
 871 0224 04000000 		.word	.LC1
 872 0228 14000000 		.word	.LC2
 873 022c 00000000 		.word	adc_flag
 874 0230 00000000 		.word	timer_flag
 875 0234 00000000 		.word	prevCountM1
 876 0238 00000000 		.word	prevCountM2
 877 023c 24000000 		.word	.LC3
 878 0240 34000000 		.word	.LC4
 879 0244 00000000 		.word	countM1
 880 0248 00000000 		.word	countM2
 881 024c 00000000 		.word	sensor_readings
 882 0250 44000000 		.word	.LC5
 883 0254 54000000 		.word	.LC6
 884              		.cfi_endproc
 885              	.LFE68:
 886              		.size	goStraight, .-goStraight
 887              		.global	__aeabi_fcmplt
 888              		.section	.text.turnForDegrees,"ax",%progbits
 889              		.align	2
 890              		.global	turnForDegrees
 891              		.thumb
 892              		.thumb_func
 893              		.type	turnForDegrees, %function
 894              	turnForDegrees:
 895              	.LFB69:
 322:.\main.c      **** 
 323:.\main.c      **** // --------------------------------------------- TURNS ------------------------------------------
 324:.\main.c      **** void turnForDegrees(int degrees) {
 896              		.loc 1 324 0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 23


 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 16
 899              		@ frame_needed = 1, uses_anonymous_args = 0
 900 0000 80B5     		push	{r7, lr}
 901              		.cfi_def_cfa_offset 8
 902              		.cfi_offset 7, -8
 903              		.cfi_offset 14, -4
 904 0002 84B0     		sub	sp, sp, #16
 905              		.cfi_def_cfa_offset 24
 906 0004 00AF     		add	r7, sp, #0
 907              		.cfi_def_cfa_register 7
 908 0006 7860     		str	r0, [r7, #4]
 325:.\main.c      ****     float distance_to_turn = degrees / 13;
 909              		.loc 1 325 0
 910 0008 7B68     		ldr	r3, [r7, #4]
 911 000a 224A     		ldr	r2, .L42
 912 000c 82FB0312 		smull	r1, r2, r2, r3
 913 0010 9210     		asrs	r2, r2, #2
 914 0012 DB17     		asrs	r3, r3, #31
 915 0014 D31A     		subs	r3, r2, r3
 916 0016 1846     		mov	r0, r3
 917 0018 FFF7FEFF 		bl	__aeabi_i2f
 918 001c 0346     		mov	r3, r0
 919 001e BB60     		str	r3, [r7, #8]	@ float
 326:.\main.c      ****     float distance_turned = 0;
 920              		.loc 1 326 0
 921 0020 4FF00003 		mov	r3, #0
 922 0024 FB60     		str	r3, [r7, #12]	@ float
 327:.\main.c      ****     
 328:.\main.c      ****     while (distance_turned < distance_to_turn) {
 923              		.loc 1 328 0
 924 0026 2AE0     		b	.L39
 925              	.L41:
 329:.\main.c      ****         // update sensor values so they're not 'stuck' when we leave function
 330:.\main.c      ****         if (adc_flag) {
 926              		.loc 1 330 0
 927 0028 1B4B     		ldr	r3, .L42+4
 928 002a 1B68     		ldr	r3, [r3]
 929 002c 002B     		cmp	r3, #0
 930 002e 04D0     		beq	.L40
 331:.\main.c      ****             updateSensorValues();
 931              		.loc 1 331 0
 932 0030 FFF7FEFF 		bl	updateSensorValues
 332:.\main.c      ****             adc_flag = FALSE;
 933              		.loc 1 332 0
 934 0034 184B     		ldr	r3, .L42+4
 935 0036 0022     		movs	r2, #0
 936 0038 1A60     		str	r2, [r3]
 937              	.L40:
 333:.\main.c      ****         }
 334:.\main.c      ****         
 335:.\main.c      ****          // New count values from encoder are ready
 336:.\main.c      ****         if (timer_flag){
 938              		.loc 1 336 0
 939 003a 184B     		ldr	r3, .L42+8
 940 003c 1B68     		ldr	r3, [r3]
 941 003e 002B     		cmp	r3, #0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 24


 942 0040 1DD0     		beq	.L39
 337:.\main.c      ****             isr_TS_Disable();
 943              		.loc 1 337 0
 944 0042 FFF7FEFF 		bl	isr_TS_Disable
 338:.\main.c      ****             
 339:.\main.c      ****             distance_turned += getDistance(prevCountM1, prevCountM2);
 945              		.loc 1 339 0
 946 0046 164B     		ldr	r3, .L42+12
 947 0048 1A68     		ldr	r2, [r3]
 948 004a 164B     		ldr	r3, .L42+16
 949 004c 1B68     		ldr	r3, [r3]
 950 004e 1046     		mov	r0, r2
 951 0050 1946     		mov	r1, r3
 952 0052 FFF7FEFF 		bl	getDistance
 953 0056 0346     		mov	r3, r0
 954 0058 F868     		ldr	r0, [r7, #12]	@ float
 955 005a 1946     		mov	r1, r3
 956 005c FFF7FEFF 		bl	__aeabi_fadd
 957 0060 0346     		mov	r3, r0
 958 0062 FB60     		str	r3, [r7, #12]	@ float
 340:.\main.c      ****             
 341:.\main.c      ****             // Update previous values
 342:.\main.c      ****             prevCountM1 = countM1;
 959              		.loc 1 342 0
 960 0064 104B     		ldr	r3, .L42+20
 961 0066 1B68     		ldr	r3, [r3]
 962 0068 0D4A     		ldr	r2, .L42+12
 963 006a 1360     		str	r3, [r2]
 343:.\main.c      ****             prevCountM2 = countM2;
 964              		.loc 1 343 0
 965 006c 0F4B     		ldr	r3, .L42+24
 966 006e 1B68     		ldr	r3, [r3]
 967 0070 0C4A     		ldr	r2, .L42+16
 968 0072 1360     		str	r3, [r2]
 344:.\main.c      ****             
 345:.\main.c      ****             // Reset flag
 346:.\main.c      ****             timer_flag = FALSE;
 969              		.loc 1 346 0
 970 0074 094B     		ldr	r3, .L42+8
 971 0076 0022     		movs	r2, #0
 972 0078 1A60     		str	r2, [r3]
 347:.\main.c      ****             
 348:.\main.c      ****             isr_TS_Enable();
 973              		.loc 1 348 0
 974 007a FFF7FEFF 		bl	isr_TS_Enable
 975              	.L39:
 328:.\main.c      ****         // update sensor values so they're not 'stuck' when we leave function
 976              		.loc 1 328 0
 977 007e F868     		ldr	r0, [r7, #12]	@ float
 978 0080 B968     		ldr	r1, [r7, #8]	@ float
 979 0082 FFF7FEFF 		bl	__aeabi_fcmplt
 980 0086 0346     		mov	r3, r0
 981 0088 002B     		cmp	r3, #0
 982 008a CDD1     		bne	.L41
 349:.\main.c      ****         }
 350:.\main.c      ****     }
 351:.\main.c      **** }
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 25


 983              		.loc 1 351 0
 984 008c 1037     		adds	r7, r7, #16
 985              		.cfi_def_cfa_offset 8
 986 008e BD46     		mov	sp, r7
 987              		.cfi_def_cfa_register 13
 988              		@ sp needed
 989 0090 80BD     		pop	{r7, pc}
 990              	.L43:
 991 0092 00BF     		.align	2
 992              	.L42:
 993 0094 4FECC44E 		.word	1321528399
 994 0098 00000000 		.word	adc_flag
 995 009c 00000000 		.word	timer_flag
 996 00a0 00000000 		.word	prevCountM1
 997 00a4 00000000 		.word	prevCountM2
 998 00a8 00000000 		.word	countM1
 999 00ac 00000000 		.word	countM2
 1000              		.cfi_endproc
 1001              	.LFE69:
 1002              		.size	turnForDegrees, .-turnForDegrees
 1003              		.section	.rodata
 1004 0063 00       		.align	2
 1005              	.LC7:
 1006 0064 202D2066 		.ascii	" - forward\015\012\000"
 1006      6F727761 
 1006      72640D0A 
 1006      00
 1007 0071 000000   		.align	2
 1008              	.LC8:
 1009 0074 202D2074 		.ascii	" - turn 45\015\012\000"
 1009      75726E20 
 1009      34350D0A 
 1009      00
 1010 0081 000000   		.align	2
 1011              	.LC9:
 1012 0084 202D2066 		.ascii	" - finish turn\015\012\000"
 1012      696E6973 
 1012      68207475 
 1012      726E0D0A 
 1012      00
 1013              		.section	.text.sharpTurnLeft,"ax",%progbits
 1014              		.align	2
 1015              		.global	sharpTurnLeft
 1016              		.thumb
 1017              		.thumb_func
 1018              		.type	sharpTurnLeft, %function
 1019              	sharpTurnLeft:
 1020              	.LFB70:
 352:.\main.c      **** 
 353:.\main.c      **** void sharpTurnLeft() {
 1021              		.loc 1 353 0
 1022              		.cfi_startproc
 1023              		@ args = 0, pretend = 0, frame = 0
 1024              		@ frame_needed = 1, uses_anonymous_args = 0
 1025 0000 80B5     		push	{r7, lr}
 1026              		.cfi_def_cfa_offset 8
 1027              		.cfi_offset 7, -8
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 26


 1028              		.cfi_offset 14, -4
 1029 0002 00AF     		add	r7, sp, #0
 1030              		.cfi_def_cfa_register 7
 354:.\main.c      ****     usbPutString(" - forward\r\n");
 1031              		.loc 1 354 0
 1032 0004 1C48     		ldr	r0, .L49
 1033 0006 FFF7FEFF 		bl	usbPutString
 355:.\main.c      ****     // go until we reach the junction
 356:.\main.c      ****     while (!sensor_readings[BOTTOM_LEFT_SENSOR]) {
 1034              		.loc 1 356 0
 1035 000a 08E0     		b	.L45
 1036              	.L46:
 357:.\main.c      ****         if (adc_flag) {
 1037              		.loc 1 357 0
 1038 000c 1B4B     		ldr	r3, .L49+4
 1039 000e 1B68     		ldr	r3, [r3]
 1040 0010 002B     		cmp	r3, #0
 1041 0012 04D0     		beq	.L45
 358:.\main.c      ****             updateSensorValues();
 1042              		.loc 1 358 0
 1043 0014 FFF7FEFF 		bl	updateSensorValues
 359:.\main.c      ****             adc_flag = FALSE;
 1044              		.loc 1 359 0
 1045 0018 184B     		ldr	r3, .L49+4
 1046 001a 0022     		movs	r2, #0
 1047 001c 1A60     		str	r2, [r3]
 1048              	.L45:
 356:.\main.c      ****         if (adc_flag) {
 1049              		.loc 1 356 0
 1050 001e 184B     		ldr	r3, .L49+8
 1051 0020 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1052 0022 002B     		cmp	r3, #0
 1053 0024 F2D0     		beq	.L46
 360:.\main.c      ****         }
 361:.\main.c      ****     }
 362:.\main.c      ****     
 363:.\main.c      ****     usbPutString(" - turn 45\r\n");
 1054              		.loc 1 363 0
 1055 0026 1748     		ldr	r0, .L49+12
 1056 0028 FFF7FEFF 		bl	usbPutString
 364:.\main.c      ****     
 365:.\main.c      ****     // make the turn
 366:.\main.c      ****     setWheelDirection(FALSE, TRUE);
 1057              		.loc 1 366 0
 1058 002c 0020     		movs	r0, #0
 1059 002e 0121     		movs	r1, #1
 1060 0030 FFF7FEFF 		bl	setWheelDirection
 367:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 1061              		.loc 1 367 0
 1062 0034 4FF4E170 		mov	r0, #450
 1063 0038 FFF7FEFF 		bl	PWM_1_WriteCompare
 368:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 1064              		.loc 1 368 0
 1065 003c 4FF4E170 		mov	r0, #450
 1066 0040 FFF7FEFF 		bl	PWM_2_WriteCompare
 369:.\main.c      ****     
 370:.\main.c      ****     turnForDegrees(45); // so that it doesn't stop if it's already on a line
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 27


 1067              		.loc 1 370 0
 1068 0044 2D20     		movs	r0, #45
 1069 0046 FFF7FEFF 		bl	turnForDegrees
 371:.\main.c      ****     
 372:.\main.c      ****     usbPutString(" - finish turn\r\n");
 1070              		.loc 1 372 0
 1071 004a 0F48     		ldr	r0, .L49+16
 1072 004c FFF7FEFF 		bl	usbPutString
 373:.\main.c      ****     
 374:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 1073              		.loc 1 374 0
 1074 0050 08E0     		b	.L47
 1075              	.L48:
 375:.\main.c      ****         if (adc_flag) {
 1076              		.loc 1 375 0
 1077 0052 0A4B     		ldr	r3, .L49+4
 1078 0054 1B68     		ldr	r3, [r3]
 1079 0056 002B     		cmp	r3, #0
 1080 0058 04D0     		beq	.L47
 376:.\main.c      ****             updateSensorValues();
 1081              		.loc 1 376 0
 1082 005a FFF7FEFF 		bl	updateSensorValues
 377:.\main.c      ****             adc_flag = FALSE;
 1083              		.loc 1 377 0
 1084 005e 074B     		ldr	r3, .L49+4
 1085 0060 0022     		movs	r2, #0
 1086 0062 1A60     		str	r2, [r3]
 1087              	.L47:
 374:.\main.c      ****         if (adc_flag) {
 1088              		.loc 1 374 0
 1089 0064 064B     		ldr	r3, .L49+8
 1090 0066 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1091 0068 002B     		cmp	r3, #0
 1092 006a F2D0     		beq	.L48
 378:.\main.c      ****         }
 379:.\main.c      ****     }
 380:.\main.c      ****     setWheelDirection(TRUE, TRUE);
 1093              		.loc 1 380 0
 1094 006c 0120     		movs	r0, #1
 1095 006e 0121     		movs	r1, #1
 1096 0070 FFF7FEFF 		bl	setWheelDirection
 381:.\main.c      **** }
 1097              		.loc 1 381 0
 1098 0074 80BD     		pop	{r7, pc}
 1099              	.L50:
 1100 0076 00BF     		.align	2
 1101              	.L49:
 1102 0078 64000000 		.word	.LC7
 1103 007c 00000000 		.word	adc_flag
 1104 0080 00000000 		.word	sensor_readings
 1105 0084 74000000 		.word	.LC8
 1106 0088 84000000 		.word	.LC9
 1107              		.cfi_endproc
 1108              	.LFE70:
 1109              		.size	sharpTurnLeft, .-sharpTurnLeft
 1110              		.section	.text.sharpTurnRight,"ax",%progbits
 1111              		.align	2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 28


 1112              		.global	sharpTurnRight
 1113              		.thumb
 1114              		.thumb_func
 1115              		.type	sharpTurnRight, %function
 1116              	sharpTurnRight:
 1117              	.LFB71:
 382:.\main.c      **** 
 383:.\main.c      **** void sharpTurnRight() {
 1118              		.loc 1 383 0
 1119              		.cfi_startproc
 1120              		@ args = 0, pretend = 0, frame = 0
 1121              		@ frame_needed = 1, uses_anonymous_args = 0
 1122 0000 80B5     		push	{r7, lr}
 1123              		.cfi_def_cfa_offset 8
 1124              		.cfi_offset 7, -8
 1125              		.cfi_offset 14, -4
 1126 0002 00AF     		add	r7, sp, #0
 1127              		.cfi_def_cfa_register 7
 384:.\main.c      ****     usbPutString(" - forward\r\n");
 1128              		.loc 1 384 0
 1129 0004 1C48     		ldr	r0, .L56
 1130 0006 FFF7FEFF 		bl	usbPutString
 385:.\main.c      ****     
 386:.\main.c      ****     // go until we reach the junction
 387:.\main.c      ****     while (!sensor_readings[BOTTOM_RIGHT_SENSOR]) {
 1131              		.loc 1 387 0
 1132 000a 08E0     		b	.L52
 1133              	.L53:
 388:.\main.c      ****         if (adc_flag) {
 1134              		.loc 1 388 0
 1135 000c 1B4B     		ldr	r3, .L56+4
 1136 000e 1B68     		ldr	r3, [r3]
 1137 0010 002B     		cmp	r3, #0
 1138 0012 04D0     		beq	.L52
 389:.\main.c      ****             updateSensorValues();
 1139              		.loc 1 389 0
 1140 0014 FFF7FEFF 		bl	updateSensorValues
 390:.\main.c      ****             adc_flag = FALSE;
 1141              		.loc 1 390 0
 1142 0018 184B     		ldr	r3, .L56+4
 1143 001a 0022     		movs	r2, #0
 1144 001c 1A60     		str	r2, [r3]
 1145              	.L52:
 387:.\main.c      ****         if (adc_flag) {
 1146              		.loc 1 387 0
 1147 001e 184B     		ldr	r3, .L56+8
 1148 0020 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1149 0022 002B     		cmp	r3, #0
 1150 0024 F2D0     		beq	.L53
 391:.\main.c      ****         }
 392:.\main.c      ****     }
 393:.\main.c      ****     
 394:.\main.c      ****     usbPutString(" - turn 45\r\n");
 1151              		.loc 1 394 0
 1152 0026 1748     		ldr	r0, .L56+12
 1153 0028 FFF7FEFF 		bl	usbPutString
 395:.\main.c      ****     
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 29


 396:.\main.c      ****     // make the turn
 397:.\main.c      ****     setWheelDirection(TRUE, FALSE);
 1154              		.loc 1 397 0
 1155 002c 0120     		movs	r0, #1
 1156 002e 0021     		movs	r1, #0
 1157 0030 FFF7FEFF 		bl	setWheelDirection
 398:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 1158              		.loc 1 398 0
 1159 0034 4FF4E170 		mov	r0, #450
 1160 0038 FFF7FEFF 		bl	PWM_1_WriteCompare
 399:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 1161              		.loc 1 399 0
 1162 003c 4FF4E170 		mov	r0, #450
 1163 0040 FFF7FEFF 		bl	PWM_2_WriteCompare
 400:.\main.c      ****     
 401:.\main.c      ****     turnForDegrees(45); // so that it doesn't stop if it's already on a line
 1164              		.loc 1 401 0
 1165 0044 2D20     		movs	r0, #45
 1166 0046 FFF7FEFF 		bl	turnForDegrees
 402:.\main.c      ****     
 403:.\main.c      ****     usbPutString(" - finish turn\r\n");
 1167              		.loc 1 403 0
 1168 004a 0F48     		ldr	r0, .L56+16
 1169 004c FFF7FEFF 		bl	usbPutString
 404:.\main.c      ****     
 405:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 1170              		.loc 1 405 0
 1171 0050 08E0     		b	.L54
 1172              	.L55:
 406:.\main.c      ****         if (adc_flag) {
 1173              		.loc 1 406 0
 1174 0052 0A4B     		ldr	r3, .L56+4
 1175 0054 1B68     		ldr	r3, [r3]
 1176 0056 002B     		cmp	r3, #0
 1177 0058 04D0     		beq	.L54
 407:.\main.c      ****             updateSensorValues();
 1178              		.loc 1 407 0
 1179 005a FFF7FEFF 		bl	updateSensorValues
 408:.\main.c      ****             adc_flag = FALSE;
 1180              		.loc 1 408 0
 1181 005e 074B     		ldr	r3, .L56+4
 1182 0060 0022     		movs	r2, #0
 1183 0062 1A60     		str	r2, [r3]
 1184              	.L54:
 405:.\main.c      ****         if (adc_flag) {
 1185              		.loc 1 405 0
 1186 0064 064B     		ldr	r3, .L56+8
 1187 0066 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1188 0068 002B     		cmp	r3, #0
 1189 006a F2D0     		beq	.L55
 409:.\main.c      ****         }
 410:.\main.c      ****     }
 411:.\main.c      ****     setWheelDirection(TRUE, TRUE);
 1190              		.loc 1 411 0
 1191 006c 0120     		movs	r0, #1
 1192 006e 0121     		movs	r1, #1
 1193 0070 FFF7FEFF 		bl	setWheelDirection
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 30


 412:.\main.c      **** }
 1194              		.loc 1 412 0
 1195 0074 80BD     		pop	{r7, pc}
 1196              	.L57:
 1197 0076 00BF     		.align	2
 1198              	.L56:
 1199 0078 64000000 		.word	.LC7
 1200 007c 00000000 		.word	adc_flag
 1201 0080 00000000 		.word	sensor_readings
 1202 0084 74000000 		.word	.LC8
 1203 0088 84000000 		.word	.LC9
 1204              		.cfi_endproc
 1205              	.LFE71:
 1206              		.size	sharpTurnRight, .-sharpTurnRight
 1207              		.section	.rodata
 1208 0095 000000   		.align	2
 1209              	.LC10:
 1210 0098 202D2055 		.ascii	" - U turn\015\012\000"
 1210      20747572 
 1210      6E0D0A00 
 1211              		.align	2
 1212              	.LC11:
 1213 00a4 202D2074 		.ascii	" - turn 135\015\012\000"
 1213      75726E20 
 1213      3133350D 
 1213      0A00
 1214 00b2 0000     		.section	.text.uTurn,"ax",%progbits
 1215              		.align	2
 1216              		.global	uTurn
 1217              		.thumb
 1218              		.thumb_func
 1219              		.type	uTurn, %function
 1220              	uTurn:
 1221              	.LFB72:
 413:.\main.c      ****     
 414:.\main.c      **** void uTurn(int *left_wheel_count, int *right_wheel_count) {
 1222              		.loc 1 414 0
 1223              		.cfi_startproc
 1224              		@ args = 0, pretend = 0, frame = 16
 1225              		@ frame_needed = 1, uses_anonymous_args = 0
 1226 0000 80B5     		push	{r7, lr}
 1227              		.cfi_def_cfa_offset 8
 1228              		.cfi_offset 7, -8
 1229              		.cfi_offset 14, -4
 1230 0002 84B0     		sub	sp, sp, #16
 1231              		.cfi_def_cfa_offset 24
 1232 0004 00AF     		add	r7, sp, #0
 1233              		.cfi_def_cfa_register 7
 1234 0006 7860     		str	r0, [r7, #4]
 1235 0008 3960     		str	r1, [r7]
 415:.\main.c      ****     usbPutString(" - U turn\r\n");
 1236              		.loc 1 415 0
 1237 000a 3948     		ldr	r0, .L63
 1238 000c FFF7FEFF 		bl	usbPutString
 416:.\main.c      ****     
 417:.\main.c      ****     // go forward slightly
 418:.\main.c      ****     float distance = 0;
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 31


 1239              		.loc 1 418 0
 1240 0010 4FF00003 		mov	r3, #0
 1241 0014 FB60     		str	r3, [r7, #12]	@ float
 419:.\main.c      ****     while (distance < SMALL_FORWARD_DISTANCE) {
 1242              		.loc 1 419 0
 1243 0016 39E0     		b	.L59
 1244              	.L60:
 420:.\main.c      ****          // New count values from encoder are ready
 421:.\main.c      ****         if (timer_flag){
 1245              		.loc 1 421 0
 1246 0018 364B     		ldr	r3, .L63+4
 1247 001a 1B68     		ldr	r3, [r3]
 1248 001c 002B     		cmp	r3, #0
 1249 001e 35D0     		beq	.L59
 422:.\main.c      ****             isr_TS_Disable();
 1250              		.loc 1 422 0
 1251 0020 FFF7FEFF 		bl	isr_TS_Disable
 423:.\main.c      ****             
 424:.\main.c      ****             // update distance
 425:.\main.c      ****             distance += getDistance(prevCountM1, prevCountM2);
 1252              		.loc 1 425 0
 1253 0024 344B     		ldr	r3, .L63+8
 1254 0026 1A68     		ldr	r2, [r3]
 1255 0028 344B     		ldr	r3, .L63+12
 1256 002a 1B68     		ldr	r3, [r3]
 1257 002c 1046     		mov	r0, r2
 1258 002e 1946     		mov	r1, r3
 1259 0030 FFF7FEFF 		bl	getDistance
 1260 0034 0346     		mov	r3, r0
 1261 0036 F868     		ldr	r0, [r7, #12]	@ float
 1262 0038 1946     		mov	r1, r3
 1263 003a FFF7FEFF 		bl	__aeabi_fadd
 1264 003e 0346     		mov	r3, r0
 1265 0040 FB60     		str	r3, [r7, #12]	@ float
 426:.\main.c      ****             
 427:.\main.c      ****             // Correct speed
 428:.\main.c      ****             correctSpeed(prevCountM1,countM1,*left_wheel_count,TRUE);
 1266              		.loc 1 428 0
 1267 0042 2D4B     		ldr	r3, .L63+8
 1268 0044 1968     		ldr	r1, [r3]
 1269 0046 2E4B     		ldr	r3, .L63+16
 1270 0048 1A68     		ldr	r2, [r3]
 1271 004a 7B68     		ldr	r3, [r7, #4]
 1272 004c 1B68     		ldr	r3, [r3]
 1273 004e 0846     		mov	r0, r1
 1274 0050 1146     		mov	r1, r2
 1275 0052 1A46     		mov	r2, r3
 1276 0054 0123     		movs	r3, #1
 1277 0056 FFF7FEFF 		bl	correctSpeed
 429:.\main.c      ****             correctSpeed(prevCountM2,countM2,*right_wheel_count,FALSE);
 1278              		.loc 1 429 0
 1279 005a 284B     		ldr	r3, .L63+12
 1280 005c 1968     		ldr	r1, [r3]
 1281 005e 294B     		ldr	r3, .L63+20
 1282 0060 1A68     		ldr	r2, [r3]
 1283 0062 3B68     		ldr	r3, [r7]
 1284 0064 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 32


 1285 0066 0846     		mov	r0, r1
 1286 0068 1146     		mov	r1, r2
 1287 006a 1A46     		mov	r2, r3
 1288 006c 0023     		movs	r3, #0
 1289 006e FFF7FEFF 		bl	correctSpeed
 430:.\main.c      ****             
 431:.\main.c      ****             // Update previous values
 432:.\main.c      ****             prevCountM1 = countM1;
 1290              		.loc 1 432 0
 1291 0072 234B     		ldr	r3, .L63+16
 1292 0074 1B68     		ldr	r3, [r3]
 1293 0076 204A     		ldr	r2, .L63+8
 1294 0078 1360     		str	r3, [r2]
 433:.\main.c      ****             prevCountM2 = countM2;
 1295              		.loc 1 433 0
 1296 007a 224B     		ldr	r3, .L63+20
 1297 007c 1B68     		ldr	r3, [r3]
 1298 007e 1F4A     		ldr	r2, .L63+12
 1299 0080 1360     		str	r3, [r2]
 434:.\main.c      ****             
 435:.\main.c      ****             // Reset flag
 436:.\main.c      ****             timer_flag = FALSE;
 1300              		.loc 1 436 0
 1301 0082 1C4B     		ldr	r3, .L63+4
 1302 0084 0022     		movs	r2, #0
 1303 0086 1A60     		str	r2, [r3]
 437:.\main.c      ****             
 438:.\main.c      ****             isr_TS_Enable();
 1304              		.loc 1 438 0
 1305 0088 FFF7FEFF 		bl	isr_TS_Enable
 1306              	.L59:
 419:.\main.c      ****          // New count values from encoder are ready
 1307              		.loc 1 419 0
 1308 008c F868     		ldr	r0, [r7, #12]	@ float
 1309 008e 4FF08241 		mov	r1, #1090519040
 1310 0092 FFF7FEFF 		bl	__aeabi_fcmplt
 1311 0096 0346     		mov	r3, r0
 1312 0098 002B     		cmp	r3, #0
 1313 009a BDD1     		bne	.L60
 439:.\main.c      ****         }
 440:.\main.c      ****     }
 441:.\main.c      ****     
 442:.\main.c      ****     usbPutString(" - turn 135\r\n");
 1314              		.loc 1 442 0
 1315 009c 1A48     		ldr	r0, .L63+24
 1316 009e FFF7FEFF 		bl	usbPutString
 443:.\main.c      ****     
 444:.\main.c      ****     // make the turn
 445:.\main.c      ****     setWheelDirection(TRUE, FALSE);
 1317              		.loc 1 445 0
 1318 00a2 0120     		movs	r0, #1
 1319 00a4 0021     		movs	r1, #0
 1320 00a6 FFF7FEFF 		bl	setWheelDirection
 446:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 1321              		.loc 1 446 0
 1322 00aa 4FF4E170 		mov	r0, #450
 1323 00ae FFF7FEFF 		bl	PWM_1_WriteCompare
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 33


 447:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 1324              		.loc 1 447 0
 1325 00b2 4FF4E170 		mov	r0, #450
 1326 00b6 FFF7FEFF 		bl	PWM_2_WriteCompare
 448:.\main.c      ****     
 449:.\main.c      ****     // the number 180 is roughly a 135 degree turn
 450:.\main.c      ****     turnForDegrees(180); // so that it doesn't stop if it's already on a line
 1327              		.loc 1 450 0
 1328 00ba B420     		movs	r0, #180
 1329 00bc FFF7FEFF 		bl	turnForDegrees
 451:.\main.c      ****     
 452:.\main.c      ****     usbPutString(" - finish turn\r\n");
 1330              		.loc 1 452 0
 1331 00c0 1248     		ldr	r0, .L63+28
 1332 00c2 FFF7FEFF 		bl	usbPutString
 453:.\main.c      ****     
 454:.\main.c      ****     // finish turn
 455:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 1333              		.loc 1 455 0
 1334 00c6 08E0     		b	.L61
 1335              	.L62:
 456:.\main.c      ****         if (adc_flag) {
 1336              		.loc 1 456 0
 1337 00c8 114B     		ldr	r3, .L63+32
 1338 00ca 1B68     		ldr	r3, [r3]
 1339 00cc 002B     		cmp	r3, #0
 1340 00ce 04D0     		beq	.L61
 457:.\main.c      ****             updateSensorValues();
 1341              		.loc 1 457 0
 1342 00d0 FFF7FEFF 		bl	updateSensorValues
 458:.\main.c      ****             adc_flag = FALSE;
 1343              		.loc 1 458 0
 1344 00d4 0E4B     		ldr	r3, .L63+32
 1345 00d6 0022     		movs	r2, #0
 1346 00d8 1A60     		str	r2, [r3]
 1347              	.L61:
 455:.\main.c      ****         if (adc_flag) {
 1348              		.loc 1 455 0
 1349 00da 0E4B     		ldr	r3, .L63+36
 1350 00dc 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1351 00de 002B     		cmp	r3, #0
 1352 00e0 F2D0     		beq	.L62
 459:.\main.c      ****         }
 460:.\main.c      ****     }
 461:.\main.c      ****     setWheelDirection(TRUE, TRUE);
 1353              		.loc 1 461 0
 1354 00e2 0120     		movs	r0, #1
 1355 00e4 0121     		movs	r1, #1
 1356 00e6 FFF7FEFF 		bl	setWheelDirection
 462:.\main.c      **** }
 1357              		.loc 1 462 0
 1358 00ea 1037     		adds	r7, r7, #16
 1359              		.cfi_def_cfa_offset 8
 1360 00ec BD46     		mov	sp, r7
 1361              		.cfi_def_cfa_register 13
 1362              		@ sp needed
 1363 00ee 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 34


 1364              	.L64:
 1365              		.align	2
 1366              	.L63:
 1367 00f0 98000000 		.word	.LC10
 1368 00f4 00000000 		.word	timer_flag
 1369 00f8 00000000 		.word	prevCountM1
 1370 00fc 00000000 		.word	prevCountM2
 1371 0100 00000000 		.word	countM1
 1372 0104 00000000 		.word	countM2
 1373 0108 A4000000 		.word	.LC11
 1374 010c 84000000 		.word	.LC9
 1375 0110 00000000 		.word	adc_flag
 1376 0114 00000000 		.word	sensor_readings
 1377              		.cfi_endproc
 1378              	.LFE72:
 1379              		.size	uTurn, .-uTurn
 1380              		.section	.text.changeLeftWheelSpeed,"ax",%progbits
 1381              		.align	2
 1382              		.global	changeLeftWheelSpeed
 1383              		.thumb
 1384              		.thumb_func
 1385              		.type	changeLeftWheelSpeed, %function
 1386              	changeLeftWheelSpeed:
 1387              	.LFB73:
 463:.\main.c      **** 
 464:.\main.c      **** // --------------------------------------------- HELPERS ------------------------------------------
 465:.\main.c      **** void changeLeftWheelSpeed(int amount) {
 1388              		.loc 1 465 0
 1389              		.cfi_startproc
 1390              		@ args = 0, pretend = 0, frame = 16
 1391              		@ frame_needed = 1, uses_anonymous_args = 0
 1392 0000 80B5     		push	{r7, lr}
 1393              		.cfi_def_cfa_offset 8
 1394              		.cfi_offset 7, -8
 1395              		.cfi_offset 14, -4
 1396 0002 84B0     		sub	sp, sp, #16
 1397              		.cfi_def_cfa_offset 24
 1398 0004 00AF     		add	r7, sp, #0
 1399              		.cfi_def_cfa_register 7
 1400 0006 7860     		str	r0, [r7, #4]
 466:.\main.c      ****     int new_value = PWM_1_ReadCompare() + amount;
 1401              		.loc 1 466 0
 1402 0008 FFF7FEFF 		bl	PWM_1_ReadCompare
 1403 000c 0346     		mov	r3, r0
 1404 000e 1A46     		mov	r2, r3
 1405 0010 7B68     		ldr	r3, [r7, #4]
 1406 0012 1344     		add	r3, r3, r2
 1407 0014 FB60     		str	r3, [r7, #12]
 467:.\main.c      ****     PWM_1_WriteCompare((new_value > 0) ? new_value:0); // account for underflow
 1408              		.loc 1 467 0
 1409 0016 FB68     		ldr	r3, [r7, #12]
 1410 0018 23EAE373 		bic	r3, r3, r3, asr #31
 1411 001c 9BB2     		uxth	r3, r3
 1412 001e 1846     		mov	r0, r3
 1413 0020 FFF7FEFF 		bl	PWM_1_WriteCompare
 468:.\main.c      **** }
 1414              		.loc 1 468 0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 35


 1415 0024 1037     		adds	r7, r7, #16
 1416              		.cfi_def_cfa_offset 8
 1417 0026 BD46     		mov	sp, r7
 1418              		.cfi_def_cfa_register 13
 1419              		@ sp needed
 1420 0028 80BD     		pop	{r7, pc}
 1421              		.cfi_endproc
 1422              	.LFE73:
 1423              		.size	changeLeftWheelSpeed, .-changeLeftWheelSpeed
 1424 002a 00BF     		.section	.text.changeRightWheelSpeed,"ax",%progbits
 1425              		.align	2
 1426              		.global	changeRightWheelSpeed
 1427              		.thumb
 1428              		.thumb_func
 1429              		.type	changeRightWheelSpeed, %function
 1430              	changeRightWheelSpeed:
 1431              	.LFB74:
 469:.\main.c      **** 
 470:.\main.c      **** void changeRightWheelSpeed(int amount){
 1432              		.loc 1 470 0
 1433              		.cfi_startproc
 1434              		@ args = 0, pretend = 0, frame = 16
 1435              		@ frame_needed = 1, uses_anonymous_args = 0
 1436 0000 80B5     		push	{r7, lr}
 1437              		.cfi_def_cfa_offset 8
 1438              		.cfi_offset 7, -8
 1439              		.cfi_offset 14, -4
 1440 0002 84B0     		sub	sp, sp, #16
 1441              		.cfi_def_cfa_offset 24
 1442 0004 00AF     		add	r7, sp, #0
 1443              		.cfi_def_cfa_register 7
 1444 0006 7860     		str	r0, [r7, #4]
 471:.\main.c      ****     int new_value = PWM_2_ReadCompare() + amount;
 1445              		.loc 1 471 0
 1446 0008 FFF7FEFF 		bl	PWM_2_ReadCompare
 1447 000c 0346     		mov	r3, r0
 1448 000e 1A46     		mov	r2, r3
 1449 0010 7B68     		ldr	r3, [r7, #4]
 1450 0012 1344     		add	r3, r3, r2
 1451 0014 FB60     		str	r3, [r7, #12]
 472:.\main.c      ****     PWM_2_WriteCompare((new_value > 0) ? new_value:0); // account for underflow
 1452              		.loc 1 472 0
 1453 0016 FB68     		ldr	r3, [r7, #12]
 1454 0018 23EAE373 		bic	r3, r3, r3, asr #31
 1455 001c 9BB2     		uxth	r3, r3
 1456 001e 1846     		mov	r0, r3
 1457 0020 FFF7FEFF 		bl	PWM_2_WriteCompare
 473:.\main.c      **** }
 1458              		.loc 1 473 0
 1459 0024 1037     		adds	r7, r7, #16
 1460              		.cfi_def_cfa_offset 8
 1461 0026 BD46     		mov	sp, r7
 1462              		.cfi_def_cfa_register 13
 1463              		@ sp needed
 1464 0028 80BD     		pop	{r7, pc}
 1465              		.cfi_endproc
 1466              	.LFE74:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 36


 1467              		.size	changeRightWheelSpeed, .-changeRightWheelSpeed
 1468              		.global	__aeabi_fdiv
 1469              		.global	__aeabi_f2d
 1470              		.global	__aeabi_dmul
 1471              		.global	__aeabi_d2f
 1472 002a 00BF     		.section	.text.getDistance,"ax",%progbits
 1473              		.align	2
 1474              		.global	getDistance
 1475              		.thumb
 1476              		.thumb_func
 1477              		.type	getDistance, %function
 1478              	getDistance:
 1479              	.LFB75:
 474:.\main.c      **** 
 475:.\main.c      **** float getDistance(int prevCountM1, int prevCountM2) {
 1480              		.loc 1 475 0
 1481              		.cfi_startproc
 1482              		@ args = 0, pretend = 0, frame = 16
 1483              		@ frame_needed = 1, uses_anonymous_args = 0
 1484 0000 80B5     		push	{r7, lr}
 1485              		.cfi_def_cfa_offset 8
 1486              		.cfi_offset 7, -8
 1487              		.cfi_offset 14, -4
 1488 0002 84B0     		sub	sp, sp, #16
 1489              		.cfi_def_cfa_offset 24
 1490 0004 00AF     		add	r7, sp, #0
 1491              		.cfi_def_cfa_register 7
 1492 0006 7860     		str	r0, [r7, #4]
 1493 0008 3960     		str	r1, [r7]
 476:.\main.c      ****     float m1_dist = ((float)abs(countM1 - prevCountM1) / TICKS_PER_REV) * LINEAR_DISTANCE_PER_REV;
 1494              		.loc 1 476 0
 1495 000a 2D4B     		ldr	r3, .L69+8
 1496 000c 1A68     		ldr	r2, [r3]
 1497 000e 7B68     		ldr	r3, [r7, #4]
 1498 0010 D31A     		subs	r3, r2, r3
 1499 0012 002B     		cmp	r3, #0
 1500 0014 B8BF     		it	lt
 1501 0016 5B42     		rsblt	r3, r3, #0
 1502 0018 1846     		mov	r0, r3
 1503 001a FFF7FEFF 		bl	__aeabi_i2f
 1504 001e 0346     		mov	r3, r0
 1505 0020 1846     		mov	r0, r3
 1506 0022 2849     		ldr	r1, .L69+12
 1507 0024 FFF7FEFF 		bl	__aeabi_fdiv
 1508 0028 0346     		mov	r3, r0
 1509 002a 1846     		mov	r0, r3
 1510 002c FFF7FEFF 		bl	__aeabi_f2d
 1511 0030 0246     		mov	r2, r0
 1512 0032 0B46     		mov	r3, r1
 1513 0034 1046     		mov	r0, r2
 1514 0036 1946     		mov	r1, r3
 1515 0038 1FA3     		adr	r3, .L69
 1516 003a D3E90023 		ldrd	r2, [r3]
 1517 003e FFF7FEFF 		bl	__aeabi_dmul
 1518 0042 0246     		mov	r2, r0
 1519 0044 0B46     		mov	r3, r1
 1520 0046 1046     		mov	r0, r2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 37


 1521 0048 1946     		mov	r1, r3
 1522 004a FFF7FEFF 		bl	__aeabi_d2f
 1523 004e 0346     		mov	r3, r0
 1524 0050 FB60     		str	r3, [r7, #12]	@ float
 477:.\main.c      ****     float m2_dist = ((float)abs(countM2 - prevCountM2) / TICKS_PER_REV) * LINEAR_DISTANCE_PER_REV;
 1525              		.loc 1 477 0
 1526 0052 1D4B     		ldr	r3, .L69+16
 1527 0054 1A68     		ldr	r2, [r3]
 1528 0056 3B68     		ldr	r3, [r7]
 1529 0058 D31A     		subs	r3, r2, r3
 1530 005a 002B     		cmp	r3, #0
 1531 005c B8BF     		it	lt
 1532 005e 5B42     		rsblt	r3, r3, #0
 1533 0060 1846     		mov	r0, r3
 1534 0062 FFF7FEFF 		bl	__aeabi_i2f
 1535 0066 0346     		mov	r3, r0
 1536 0068 1846     		mov	r0, r3
 1537 006a 1649     		ldr	r1, .L69+12
 1538 006c FFF7FEFF 		bl	__aeabi_fdiv
 1539 0070 0346     		mov	r3, r0
 1540 0072 1846     		mov	r0, r3
 1541 0074 FFF7FEFF 		bl	__aeabi_f2d
 1542 0078 0246     		mov	r2, r0
 1543 007a 0B46     		mov	r3, r1
 1544 007c 1046     		mov	r0, r2
 1545 007e 1946     		mov	r1, r3
 1546 0080 0DA3     		adr	r3, .L69
 1547 0082 D3E90023 		ldrd	r2, [r3]
 1548 0086 FFF7FEFF 		bl	__aeabi_dmul
 1549 008a 0246     		mov	r2, r0
 1550 008c 0B46     		mov	r3, r1
 1551 008e 1046     		mov	r0, r2
 1552 0090 1946     		mov	r1, r3
 1553 0092 FFF7FEFF 		bl	__aeabi_d2f
 1554 0096 0346     		mov	r3, r0
 1555 0098 BB60     		str	r3, [r7, #8]	@ float
 478:.\main.c      ****     return (m1_dist + m2_dist) / 2;
 1556              		.loc 1 478 0
 1557 009a F868     		ldr	r0, [r7, #12]	@ float
 1558 009c B968     		ldr	r1, [r7, #8]	@ float
 1559 009e FFF7FEFF 		bl	__aeabi_fadd
 1560 00a2 0346     		mov	r3, r0
 1561 00a4 1846     		mov	r0, r3
 1562 00a6 4FF08041 		mov	r1, #1073741824
 1563 00aa FFF7FEFF 		bl	__aeabi_fdiv
 1564 00ae 0346     		mov	r3, r0
 479:.\main.c      **** };
 1565              		.loc 1 479 0
 1566 00b0 1846     		mov	r0, r3
 1567 00b2 1037     		adds	r7, r7, #16
 1568              		.cfi_def_cfa_offset 8
 1569 00b4 BD46     		mov	sp, r7
 1570              		.cfi_def_cfa_register 13
 1571              		@ sp needed
 1572 00b6 80BD     		pop	{r7, pc}
 1573              	.L70:
 1574              		.align	3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 38


 1575              	.L69:
 1576 00b8 CE8C7E34 		.word	880708814
 1577 00bc 9C6B3440 		.word	1077177244
 1578 00c0 00000000 		.word	countM1
 1579 00c4 00006443 		.word	1130627072
 1580 00c8 00000000 		.word	countM2
 1581              		.cfi_endproc
 1582              	.LFE75:
 1583              		.size	getDistance, .-getDistance
 1584 00cc AFF30080 		.section	.text.correctSpeed,"ax",%progbits
 1585              		.align	2
 1586              		.global	correctSpeed
 1587              		.thumb
 1588              		.thumb_func
 1589              		.type	correctSpeed, %function
 1590              	correctSpeed:
 1591              	.LFB76:
 480:.\main.c      **** 
 481:.\main.c      **** /* ## SPEED CONTROL ## 
 482:.\main.c      **** * Gets difference between counts, compares to difference we expect. Add correction to PWM.*/
 483:.\main.c      **** void correctSpeed(int prevCount, int count, int desired_count, int isLeftWheel){    
 1592              		.loc 1 483 0
 1593              		.cfi_startproc
 1594              		@ args = 0, pretend = 0, frame = 24
 1595              		@ frame_needed = 1, uses_anonymous_args = 0
 1596 0000 80B5     		push	{r7, lr}
 1597              		.cfi_def_cfa_offset 8
 1598              		.cfi_offset 7, -8
 1599              		.cfi_offset 14, -4
 1600 0002 86B0     		sub	sp, sp, #24
 1601              		.cfi_def_cfa_offset 32
 1602 0004 00AF     		add	r7, sp, #0
 1603              		.cfi_def_cfa_register 7
 1604 0006 F860     		str	r0, [r7, #12]
 1605 0008 B960     		str	r1, [r7, #8]
 1606 000a 7A60     		str	r2, [r7, #4]
 1607 000c 3B60     		str	r3, [r7]
 484:.\main.c      ****     // Account for overflow edge or other unknown error
 485:.\main.c      ****     if (prevCount > count) return;
 1608              		.loc 1 485 0
 1609 000e FA68     		ldr	r2, [r7, #12]
 1610 0010 BB68     		ldr	r3, [r7, #8]
 1611 0012 9A42     		cmp	r2, r3
 1612 0014 00DD     		ble	.L72
 1613 0016 19E0     		b	.L71
 1614              	.L72:
 486:.\main.c      ****     
 487:.\main.c      ****     // Account for when PSoc is powered but wheels aren't moving
 488:.\main.c      ****     int diff_count = abs(count - prevCount);
 1615              		.loc 1 488 0
 1616 0018 BA68     		ldr	r2, [r7, #8]
 1617 001a FB68     		ldr	r3, [r7, #12]
 1618 001c D31A     		subs	r3, r2, r3
 1619 001e 002B     		cmp	r3, #0
 1620 0020 B8BF     		it	lt
 1621 0022 5B42     		rsblt	r3, r3, #0
 1622 0024 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 39


 489:.\main.c      ****     if (diff_count == 0) return;
 1623              		.loc 1 489 0
 1624 0026 7B69     		ldr	r3, [r7, #20]
 1625 0028 002B     		cmp	r3, #0
 1626 002a 00D1     		bne	.L74
 1627              		.loc 1 489 0 is_stmt 0 discriminator 2
 1628 002c 0EE0     		b	.L71
 1629              	.L74:
 490:.\main.c      ****         
 491:.\main.c      ****     /* Determine correction that must be applied to the wheel
 492:.\main.c      ****     * desired_count > diff_count :-> wheel is slow; increase PWM
 493:.\main.c      ****     * desired_count < diff_count :-> wheel is fast; decrease PWM
 494:.\main.c      ****     * desired_count == diff_count :-> wheel is stable; do nothing
 495:.\main.c      ****     */
 496:.\main.c      ****     int correction = desired_count-diff_count;
 1630              		.loc 1 496 0 is_stmt 1
 1631 002e 7A68     		ldr	r2, [r7, #4]
 1632 0030 7B69     		ldr	r3, [r7, #20]
 1633 0032 D31A     		subs	r3, r2, r3
 1634 0034 3B61     		str	r3, [r7, #16]
 497:.\main.c      ****     
 498:.\main.c      ****     // Apply the speed correction to the appropriate wheel          
 499:.\main.c      ****     if (isLeftWheel) changeLeftWheelSpeed(correction);
 1635              		.loc 1 499 0
 1636 0036 3B68     		ldr	r3, [r7]
 1637 0038 002B     		cmp	r3, #0
 1638 003a 03D0     		beq	.L75
 1639              		.loc 1 499 0 is_stmt 0 discriminator 1
 1640 003c 3869     		ldr	r0, [r7, #16]
 1641 003e FFF7FEFF 		bl	changeLeftWheelSpeed
 1642 0042 02E0     		b	.L76
 1643              	.L75:
 500:.\main.c      ****     else changeRightWheelSpeed(correction);
 1644              		.loc 1 500 0 is_stmt 1
 1645 0044 3869     		ldr	r0, [r7, #16]
 1646 0046 FFF7FEFF 		bl	changeRightWheelSpeed
 1647              	.L76:
 501:.\main.c      ****     
 502:.\main.c      ****     return;
 1648              		.loc 1 502 0 discriminator 3
 1649 004a 00BF     		nop
 1650              	.L71:
 503:.\main.c      **** }
 1651              		.loc 1 503 0
 1652 004c 1837     		adds	r7, r7, #24
 1653              		.cfi_def_cfa_offset 8
 1654 004e BD46     		mov	sp, r7
 1655              		.cfi_def_cfa_register 13
 1656              		@ sp needed
 1657 0050 80BD     		pop	{r7, pc}
 1658              		.cfi_endproc
 1659              	.LFE76:
 1660              		.size	correctSpeed, .-correctSpeed
 1661 0052 00BF     		.section	.text.setWheelDirection,"ax",%progbits
 1662              		.align	2
 1663              		.global	setWheelDirection
 1664              		.thumb
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 40


 1665              		.thumb_func
 1666              		.type	setWheelDirection, %function
 1667              	setWheelDirection:
 1668              	.LFB77:
 504:.\main.c      **** 
 505:.\main.c      **** void setWheelDirection(int leftIsForward, int rightIsForward){
 1669              		.loc 1 505 0
 1670              		.cfi_startproc
 1671              		@ args = 0, pretend = 0, frame = 8
 1672              		@ frame_needed = 1, uses_anonymous_args = 0
 1673 0000 80B5     		push	{r7, lr}
 1674              		.cfi_def_cfa_offset 8
 1675              		.cfi_offset 7, -8
 1676              		.cfi_offset 14, -4
 1677 0002 82B0     		sub	sp, sp, #8
 1678              		.cfi_def_cfa_offset 16
 1679 0004 00AF     		add	r7, sp, #0
 1680              		.cfi_def_cfa_register 7
 1681 0006 7860     		str	r0, [r7, #4]
 1682 0008 3960     		str	r1, [r7]
 506:.\main.c      ****     INV1_Write(!leftIsForward);
 1683              		.loc 1 506 0
 1684 000a 7B68     		ldr	r3, [r7, #4]
 1685 000c 002B     		cmp	r3, #0
 1686 000e 0CBF     		ite	eq
 1687 0010 0123     		moveq	r3, #1
 1688 0012 0023     		movne	r3, #0
 1689 0014 DBB2     		uxtb	r3, r3
 1690 0016 1846     		mov	r0, r3
 1691 0018 FFF7FEFF 		bl	INV1_Write
 507:.\main.c      ****     INV2_Write(rightIsForward);
 1692              		.loc 1 507 0
 1693 001c 3B68     		ldr	r3, [r7]
 1694 001e DBB2     		uxtb	r3, r3
 1695 0020 1846     		mov	r0, r3
 1696 0022 FFF7FEFF 		bl	INV2_Write
 508:.\main.c      **** }
 1697              		.loc 1 508 0
 1698 0026 0837     		adds	r7, r7, #8
 1699              		.cfi_def_cfa_offset 8
 1700 0028 BD46     		mov	sp, r7
 1701              		.cfi_def_cfa_register 13
 1702              		@ sp needed
 1703 002a 80BD     		pop	{r7, pc}
 1704              		.cfi_endproc
 1705              	.LFE77:
 1706              		.size	setWheelDirection, .-setWheelDirection
 1707              		.section	.text.turnLeft,"ax",%progbits
 1708              		.align	2
 1709              		.global	turnLeft
 1710              		.thumb
 1711              		.thumb_func
 1712              		.type	turnLeft, %function
 1713              	turnLeft:
 1714              	.LFB78:
 509:.\main.c      **** 
 510:.\main.c      **** void turnLeft() {
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 41


 1715              		.loc 1 510 0
 1716              		.cfi_startproc
 1717              		@ args = 0, pretend = 0, frame = 0
 1718              		@ frame_needed = 1, uses_anonymous_args = 0
 1719 0000 80B5     		push	{r7, lr}
 1720              		.cfi_def_cfa_offset 8
 1721              		.cfi_offset 7, -8
 1722              		.cfi_offset 14, -4
 1723 0002 00AF     		add	r7, sp, #0
 1724              		.cfi_def_cfa_register 7
 511:.\main.c      ****     PWM_1_WriteCompare(0);
 1725              		.loc 1 511 0
 1726 0004 0020     		movs	r0, #0
 1727 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 512:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 1728              		.loc 1 512 0
 1729 000a 4FF4E170 		mov	r0, #450
 1730 000e FFF7FEFF 		bl	PWM_2_WriteCompare
 513:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 1731              		.loc 1 513 0
 1732 0012 08E0     		b	.L79
 1733              	.L80:
 514:.\main.c      ****         if (adc_flag) {
 1734              		.loc 1 514 0
 1735 0014 084B     		ldr	r3, .L81
 1736 0016 1B68     		ldr	r3, [r3]
 1737 0018 002B     		cmp	r3, #0
 1738 001a 04D0     		beq	.L79
 515:.\main.c      ****             updateSensorValues();
 1739              		.loc 1 515 0
 1740 001c FFF7FEFF 		bl	updateSensorValues
 516:.\main.c      ****             adc_flag = FALSE;
 1741              		.loc 1 516 0
 1742 0020 054B     		ldr	r3, .L81
 1743 0022 0022     		movs	r2, #0
 1744 0024 1A60     		str	r2, [r3]
 1745              	.L79:
 513:.\main.c      ****         if (adc_flag) {
 1746              		.loc 1 513 0
 1747 0026 054B     		ldr	r3, .L81+4
 1748 0028 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1749 002a 002B     		cmp	r3, #0
 1750 002c F2D0     		beq	.L80
 517:.\main.c      ****         }
 518:.\main.c      ****     }
 519:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 1751              		.loc 1 519 0
 1752 002e 4FF4E170 		mov	r0, #450
 1753 0032 FFF7FEFF 		bl	PWM_1_WriteCompare
 520:.\main.c      **** }
 1754              		.loc 1 520 0
 1755 0036 80BD     		pop	{r7, pc}
 1756              	.L82:
 1757              		.align	2
 1758              	.L81:
 1759 0038 00000000 		.word	adc_flag
 1760 003c 00000000 		.word	sensor_readings
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 42


 1761              		.cfi_endproc
 1762              	.LFE78:
 1763              		.size	turnLeft, .-turnLeft
 1764              		.section	.text.turnRight,"ax",%progbits
 1765              		.align	2
 1766              		.global	turnRight
 1767              		.thumb
 1768              		.thumb_func
 1769              		.type	turnRight, %function
 1770              	turnRight:
 1771              	.LFB79:
 521:.\main.c      **** 
 522:.\main.c      **** void turnRight() {
 1772              		.loc 1 522 0
 1773              		.cfi_startproc
 1774              		@ args = 0, pretend = 0, frame = 0
 1775              		@ frame_needed = 1, uses_anonymous_args = 0
 1776 0000 80B5     		push	{r7, lr}
 1777              		.cfi_def_cfa_offset 8
 1778              		.cfi_offset 7, -8
 1779              		.cfi_offset 14, -4
 1780 0002 00AF     		add	r7, sp, #0
 1781              		.cfi_def_cfa_register 7
 523:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 1782              		.loc 1 523 0
 1783 0004 4FF4E170 		mov	r0, #450
 1784 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
 524:.\main.c      ****     PWM_2_WriteCompare(0);
 1785              		.loc 1 524 0
 1786 000c 0020     		movs	r0, #0
 1787 000e FFF7FEFF 		bl	PWM_2_WriteCompare
 525:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 1788              		.loc 1 525 0
 1789 0012 08E0     		b	.L84
 1790              	.L85:
 526:.\main.c      ****         if (adc_flag) {
 1791              		.loc 1 526 0
 1792 0014 084B     		ldr	r3, .L86
 1793 0016 1B68     		ldr	r3, [r3]
 1794 0018 002B     		cmp	r3, #0
 1795 001a 04D0     		beq	.L84
 527:.\main.c      ****             updateSensorValues();
 1796              		.loc 1 527 0
 1797 001c FFF7FEFF 		bl	updateSensorValues
 528:.\main.c      ****             adc_flag = FALSE;
 1798              		.loc 1 528 0
 1799 0020 054B     		ldr	r3, .L86
 1800 0022 0022     		movs	r2, #0
 1801 0024 1A60     		str	r2, [r3]
 1802              	.L84:
 525:.\main.c      ****         if (adc_flag) {
 1803              		.loc 1 525 0
 1804 0026 054B     		ldr	r3, .L86+4
 1805 0028 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1806 002a 002B     		cmp	r3, #0
 1807 002c F2D0     		beq	.L85
 529:.\main.c      ****         }
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 43


 530:.\main.c      ****     }
 531:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 1808              		.loc 1 531 0
 1809 002e 4FF4E170 		mov	r0, #450
 1810 0032 FFF7FEFF 		bl	PWM_2_WriteCompare
 532:.\main.c      **** }
 1811              		.loc 1 532 0
 1812 0036 80BD     		pop	{r7, pc}
 1813              	.L87:
 1814              		.align	2
 1815              	.L86:
 1816 0038 00000000 		.word	adc_flag
 1817 003c 00000000 		.word	sensor_readings
 1818              		.cfi_endproc
 1819              	.LFE79:
 1820              		.size	turnRight, .-turnRight
 1821              		.section	.text.usbPutString,"ax",%progbits
 1822              		.align	2
 1823              		.global	usbPutString
 1824              		.thumb
 1825              		.thumb_func
 1826              		.type	usbPutString, %function
 1827              	usbPutString:
 1828              	.LFB80:
 533:.\main.c      **** 
 534:.\main.c      **** //* ========================================
 535:.\main.c      **** void usbPutString(char *s) {
 1829              		.loc 1 535 0
 1830              		.cfi_startproc
 1831              		@ args = 0, pretend = 0, frame = 8
 1832              		@ frame_needed = 1, uses_anonymous_args = 0
 1833              		@ link register save eliminated.
 1834 0000 80B4     		push	{r7}
 1835              		.cfi_def_cfa_offset 4
 1836              		.cfi_offset 7, -4
 1837 0002 83B0     		sub	sp, sp, #12
 1838              		.cfi_def_cfa_offset 16
 1839 0004 00AF     		add	r7, sp, #0
 1840              		.cfi_def_cfa_register 7
 1841 0006 7860     		str	r0, [r7, #4]
 536:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
 537:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 538:.\main.c      **** //  length to 62 char (63rd char is a '!')
 539:.\main.c      ****     
 540:.\main.c      **** #ifdef PUTTY
 541:.\main.c      ****     while (USBUART_CDCIsReady() == 0){ };
 542:.\main.c      ****     USBUART_PutData((uint8 *)s, strlen(s));
 543:.\main.c      **** #endif
 544:.\main.c      ****     (void)s;
 545:.\main.c      ****     return;
 1842              		.loc 1 545 0
 1843 0008 00BF     		nop
 546:.\main.c      **** }
 1844              		.loc 1 546 0
 1845 000a 0C37     		adds	r7, r7, #12
 1846              		.cfi_def_cfa_offset 4
 1847 000c BD46     		mov	sp, r7
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 44


 1848              		.cfi_def_cfa_register 13
 1849              		@ sp needed
 1850 000e 5DF8047B 		ldr	r7, [sp], #4
 1851              		.cfi_restore 7
 1852              		.cfi_def_cfa_offset 0
 1853 0012 7047     		bx	lr
 1854              		.cfi_endproc
 1855              	.LFE80:
 1856              		.size	usbPutString, .-usbPutString
 1857              		.text
 1858              	.Letext0:
 1859              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 1860              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 1861              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1862              		.file 5 ".\\vars.h"
 1863              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1864              		.section	.debug_info,"",%progbits
 1865              	.Ldebug_info0:
 1866 0000 6B070000 		.4byte	0x76b
 1867 0004 0400     		.2byte	0x4
 1868 0006 00000000 		.4byte	.Ldebug_abbrev0
 1869 000a 04       		.byte	0x4
 1870 000b 01       		.uleb128 0x1
 1871 000c 0C020000 		.4byte	.LASF102
 1872 0010 01       		.byte	0x1
 1873 0011 2E000000 		.4byte	.LASF103
 1874 0015 9E000000 		.4byte	.LASF104
 1875 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1876 001d 00000000 		.4byte	0
 1877 0021 00000000 		.4byte	.Ldebug_line0
 1878 0025 02       		.uleb128 0x2
 1879 0026 01       		.byte	0x1
 1880 0027 06       		.byte	0x6
 1881 0028 19030000 		.4byte	.LASF0
 1882 002c 02       		.uleb128 0x2
 1883 002d 01       		.byte	0x1
 1884 002e 08       		.byte	0x8
 1885 002f ED020000 		.4byte	.LASF1
 1886 0033 02       		.uleb128 0x2
 1887 0034 02       		.byte	0x2
 1888 0035 05       		.byte	0x5
 1889 0036 4D000000 		.4byte	.LASF2
 1890 003a 02       		.uleb128 0x2
 1891 003b 02       		.byte	0x2
 1892 003c 07       		.byte	0x7
 1893 003d B0030000 		.4byte	.LASF3
 1894 0041 03       		.uleb128 0x3
 1895 0042 01050000 		.4byte	.LASF11
 1896 0046 02       		.byte	0x2
 1897 0047 3F       		.byte	0x3f
 1898 0048 4C000000 		.4byte	0x4c
 1899 004c 02       		.uleb128 0x2
 1900 004d 04       		.byte	0x4
 1901 004e 05       		.byte	0x5
 1902 004f E4030000 		.4byte	.LASF4
 1903 0053 02       		.uleb128 0x2
 1904 0054 04       		.byte	0x4
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 45


 1905 0055 07       		.byte	0x7
 1906 0056 83030000 		.4byte	.LASF5
 1907 005a 02       		.uleb128 0x2
 1908 005b 08       		.byte	0x8
 1909 005c 05       		.byte	0x5
 1910 005d A6010000 		.4byte	.LASF6
 1911 0061 02       		.uleb128 0x2
 1912 0062 08       		.byte	0x8
 1913 0063 07       		.byte	0x7
 1914 0064 33030000 		.4byte	.LASF7
 1915 0068 04       		.uleb128 0x4
 1916 0069 04       		.byte	0x4
 1917 006a 05       		.byte	0x5
 1918 006b 696E7400 		.ascii	"int\000"
 1919 006f 02       		.uleb128 0x2
 1920 0070 04       		.byte	0x4
 1921 0071 07       		.byte	0x7
 1922 0072 50030000 		.4byte	.LASF8
 1923 0076 02       		.uleb128 0x2
 1924 0077 04       		.byte	0x4
 1925 0078 07       		.byte	0x7
 1926 0079 64000000 		.4byte	.LASF9
 1927 007d 05       		.uleb128 0x5
 1928 007e 04       		.byte	0x4
 1929 007f 83000000 		.4byte	0x83
 1930 0083 02       		.uleb128 0x2
 1931 0084 01       		.byte	0x1
 1932 0085 08       		.byte	0x8
 1933 0086 D6030000 		.4byte	.LASF10
 1934 008a 03       		.uleb128 0x3
 1935 008b 06040000 		.4byte	.LASF12
 1936 008f 03       		.byte	0x3
 1937 0090 2C       		.byte	0x2c
 1938 0091 41000000 		.4byte	0x41
 1939 0095 06       		.uleb128 0x6
 1940 0096 59010000 		.4byte	.LASF13
 1941 009a 04       		.byte	0x4
 1942 009b 9201     		.2byte	0x192
 1943 009d 2C000000 		.4byte	0x2c
 1944 00a1 06       		.uleb128 0x6
 1945 00a2 46010000 		.4byte	.LASF14
 1946 00a6 04       		.byte	0x4
 1947 00a7 9301     		.2byte	0x193
 1948 00a9 3A000000 		.4byte	0x3a
 1949 00ad 06       		.uleb128 0x6
 1950 00ae C1010000 		.4byte	.LASF15
 1951 00b2 04       		.byte	0x4
 1952 00b3 9501     		.2byte	0x195
 1953 00b5 25000000 		.4byte	0x25
 1954 00b9 06       		.uleb128 0x6
 1955 00ba 53010000 		.4byte	.LASF16
 1956 00be 04       		.byte	0x4
 1957 00bf 9601     		.2byte	0x196
 1958 00c1 33000000 		.4byte	0x33
 1959 00c5 06       		.uleb128 0x6
 1960 00c6 BF040000 		.4byte	.LASF17
 1961 00ca 04       		.byte	0x4
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 46


 1962 00cb 9701     		.2byte	0x197
 1963 00cd 4C000000 		.4byte	0x4c
 1964 00d1 02       		.uleb128 0x2
 1965 00d2 04       		.byte	0x4
 1966 00d3 04       		.byte	0x4
 1967 00d4 A0010000 		.4byte	.LASF18
 1968 00d8 02       		.uleb128 0x2
 1969 00d9 08       		.byte	0x8
 1970 00da 04       		.byte	0x4
 1971 00db C5040000 		.4byte	.LASF19
 1972 00df 07       		.uleb128 0x7
 1973 00e0 C3030000 		.4byte	.LASF105
 1974 00e4 20       		.byte	0x20
 1975 00e5 05       		.byte	0x5
 1976 00e6 29       		.byte	0x29
 1977 00e7 B8010000 		.4byte	0x1b8
 1978 00eb 08       		.uleb128 0x8
 1979 00ec A8050000 		.4byte	.LASF20
 1980 00f0 05       		.byte	0x5
 1981 00f1 2A       		.byte	0x2a
 1982 00f2 AD000000 		.4byte	0xad
 1983 00f6 00       		.byte	0
 1984 00f7 08       		.uleb128 0x8
 1985 00f8 4D010000 		.4byte	.LASF21
 1986 00fc 05       		.byte	0x5
 1987 00fd 2B       		.byte	0x2b
 1988 00fe 95000000 		.4byte	0x95
 1989 0102 01       		.byte	0x1
 1990 0103 08       		.uleb128 0x8
 1991 0104 ED030000 		.4byte	.LASF22
 1992 0108 05       		.byte	0x5
 1993 0109 2C       		.byte	0x2c
 1994 010a B9000000 		.4byte	0xb9
 1995 010e 02       		.byte	0x2
 1996 010f 08       		.uleb128 0x8
 1997 0110 86050000 		.4byte	.LASF23
 1998 0114 05       		.byte	0x5
 1999 0115 2D       		.byte	0x2d
 2000 0116 B9000000 		.4byte	0xb9
 2001 011a 04       		.byte	0x4
 2002 011b 08       		.uleb128 0x8
 2003 011c 9A020000 		.4byte	.LASF24
 2004 0120 05       		.byte	0x5
 2005 0121 2E       		.byte	0x2e
 2006 0122 B9000000 		.4byte	0xb9
 2007 0126 06       		.byte	0x6
 2008 0127 08       		.uleb128 0x8
 2009 0128 94040000 		.4byte	.LASF25
 2010 012c 05       		.byte	0x5
 2011 012d 2F       		.byte	0x2f
 2012 012e B9000000 		.4byte	0xb9
 2013 0132 08       		.byte	0x8
 2014 0133 08       		.uleb128 0x8
 2015 0134 25050000 		.4byte	.LASF26
 2016 0138 05       		.byte	0x5
 2017 0139 30       		.byte	0x30
 2018 013a B9000000 		.4byte	0xb9
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 47


 2019 013e 0A       		.byte	0xa
 2020 013f 08       		.uleb128 0x8
 2021 0140 FB020000 		.4byte	.LASF27
 2022 0144 05       		.byte	0x5
 2023 0145 31       		.byte	0x31
 2024 0146 B9000000 		.4byte	0xb9
 2025 014a 0C       		.byte	0xc
 2026 014b 08       		.uleb128 0x8
 2027 014c F0010000 		.4byte	.LASF28
 2028 0150 05       		.byte	0x5
 2029 0151 32       		.byte	0x32
 2030 0152 B9000000 		.4byte	0xb9
 2031 0156 0E       		.byte	0xe
 2032 0157 08       		.uleb128 0x8
 2033 0158 A8030000 		.4byte	.LASF29
 2034 015c 05       		.byte	0x5
 2035 015d 33       		.byte	0x33
 2036 015e B9000000 		.4byte	0xb9
 2037 0162 10       		.byte	0x10
 2038 0163 08       		.uleb128 0x8
 2039 0164 D1020000 		.4byte	.LASF30
 2040 0168 05       		.byte	0x5
 2041 0169 34       		.byte	0x34
 2042 016a B9000000 		.4byte	0xb9
 2043 016e 12       		.byte	0x12
 2044 016f 08       		.uleb128 0x8
 2045 0170 38040000 		.4byte	.LASF31
 2046 0174 05       		.byte	0x5
 2047 0175 35       		.byte	0x35
 2048 0176 B9000000 		.4byte	0xb9
 2049 017a 14       		.byte	0x14
 2050 017b 08       		.uleb128 0x8
 2051 017c 5F010000 		.4byte	.LASF32
 2052 0180 05       		.byte	0x5
 2053 0181 36       		.byte	0x36
 2054 0182 B9000000 		.4byte	0xb9
 2055 0186 16       		.byte	0x16
 2056 0187 08       		.uleb128 0x8
 2057 0188 45000000 		.4byte	.LASF33
 2058 018c 05       		.byte	0x5
 2059 018d 37       		.byte	0x37
 2060 018e B9000000 		.4byte	0xb9
 2061 0192 18       		.byte	0x18
 2062 0193 08       		.uleb128 0x8
 2063 0194 E8010000 		.4byte	.LASF34
 2064 0198 05       		.byte	0x5
 2065 0199 38       		.byte	0x38
 2066 019a B9000000 		.4byte	0xb9
 2067 019e 1A       		.byte	0x1a
 2068 019f 08       		.uleb128 0x8
 2069 01a0 9F030000 		.4byte	.LASF35
 2070 01a4 05       		.byte	0x5
 2071 01a5 39       		.byte	0x39
 2072 01a6 B9000000 		.4byte	0xb9
 2073 01aa 1C       		.byte	0x1c
 2074 01ab 08       		.uleb128 0x8
 2075 01ac 1E040000 		.4byte	.LASF36
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 48


 2076 01b0 05       		.byte	0x5
 2077 01b1 3A       		.byte	0x3a
 2078 01b2 B9000000 		.4byte	0xb9
 2079 01b6 1E       		.byte	0x1e
 2080 01b7 00       		.byte	0
 2081 01b8 09       		.uleb128 0x9
 2082 01b9 0D030000 		.4byte	.LASF37
 2083 01bd 01       		.byte	0x1
 2084 01be 5B       		.byte	0x5b
 2085 01bf 00000000 		.4byte	.LFB63
 2086 01c3 30000000 		.4byte	.LFE63-.LFB63
 2087 01c7 01       		.uleb128 0x1
 2088 01c8 9C       		.byte	0x9c
 2089 01c9 0A       		.uleb128 0xa
 2090 01ca 0B000000 		.4byte	.LASF38
 2091 01ce 01       		.byte	0x1
 2092 01cf 62       		.byte	0x62
 2093 01d0 00000000 		.4byte	.LFB64
 2094 01d4 18000000 		.4byte	.LFE64-.LFB64
 2095 01d8 01       		.uleb128 0x1
 2096 01d9 9C       		.byte	0x9c
 2097 01da 0B       		.uleb128 0xb
 2098 01db 8D000000 		.4byte	.LASF42
 2099 01df 01       		.byte	0x1
 2100 01e0 77       		.byte	0x77
 2101 01e1 68000000 		.4byte	0x68
 2102 01e5 00000000 		.4byte	.LFB65
 2103 01e9 94000000 		.4byte	.LFE65-.LFB65
 2104 01ed 01       		.uleb128 0x1
 2105 01ee 9C       		.byte	0x9c
 2106 01ef 10020000 		.4byte	0x210
 2107 01f3 0C       		.uleb128 0xc
 2108 01f4 9C040000 		.4byte	.LASF39
 2109 01f8 01       		.byte	0x1
 2110 01f9 9C       		.byte	0x9c
 2111 01fa 68000000 		.4byte	0x68
 2112 01fe 02       		.uleb128 0x2
 2113 01ff 91       		.byte	0x91
 2114 0200 74       		.sleb128 -12
 2115 0201 0C       		.uleb128 0xc
 2116 0202 AE040000 		.4byte	.LASF40
 2117 0206 01       		.byte	0x1
 2118 0207 9D       		.byte	0x9d
 2119 0208 68000000 		.4byte	0x68
 2120 020c 02       		.uleb128 0x2
 2121 020d 91       		.byte	0x91
 2122 020e 70       		.sleb128 -16
 2123 020f 00       		.byte	0
 2124 0210 0D       		.uleb128 0xd
 2125 0211 47040000 		.4byte	.LASF57
 2126 0215 01       		.byte	0x1
 2127 0216 D1       		.byte	0xd1
 2128 0217 C5000000 		.4byte	0xc5
 2129 021b 00000000 		.4byte	.LFB66
 2130 021f 24000000 		.4byte	.LFE66-.LFB66
 2131 0223 01       		.uleb128 0x1
 2132 0224 9C       		.byte	0x9c
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 49


 2133 0225 36020000 		.4byte	0x236
 2134 0229 0E       		.uleb128 0xe
 2135 022a 6E00     		.ascii	"n\000"
 2136 022c 01       		.byte	0x1
 2137 022d D1       		.byte	0xd1
 2138 022e B9000000 		.4byte	0xb9
 2139 0232 02       		.uleb128 0x2
 2140 0233 91       		.byte	0x91
 2141 0234 76       		.sleb128 -10
 2142 0235 00       		.byte	0
 2143 0236 0F       		.uleb128 0xf
 2144 0237 C6010000 		.4byte	.LASF106
 2145 023b 01       		.byte	0x1
 2146 023c D5       		.byte	0xd5
 2147 023d 00000000 		.4byte	.LFB67
 2148 0241 B4000000 		.4byte	.LFE67-.LFB67
 2149 0245 01       		.uleb128 0x1
 2150 0246 9C       		.byte	0x9c
 2151 0247 70020000 		.4byte	0x270
 2152 024b 10       		.uleb128 0x10
 2153 024c 6900     		.ascii	"i\000"
 2154 024e 01       		.byte	0x1
 2155 024f D7       		.byte	0xd7
 2156 0250 68000000 		.4byte	0x68
 2157 0254 02       		.uleb128 0x2
 2158 0255 91       		.byte	0x91
 2159 0256 74       		.sleb128 -12
 2160 0257 11       		.uleb128 0x11
 2161 0258 0C000000 		.4byte	.LBB2
 2162 025c 26000000 		.4byte	.LBE2-.LBB2
 2163 0260 0C       		.uleb128 0xc
 2164 0261 8C040000 		.4byte	.LASF41
 2165 0265 01       		.byte	0x1
 2166 0266 D9       		.byte	0xd9
 2167 0267 68000000 		.4byte	0x68
 2168 026b 02       		.uleb128 0x2
 2169 026c 91       		.byte	0x91
 2170 026d 70       		.sleb128 -16
 2171 026e 00       		.byte	0
 2172 026f 00       		.byte	0
 2173 0270 12       		.uleb128 0x12
 2174 0271 95010000 		.4byte	.LASF43
 2175 0275 01       		.byte	0x1
 2176 0276 ED       		.byte	0xed
 2177 0277 00000000 		.4byte	.LFB68
 2178 027b 58020000 		.4byte	.LFE68-.LFB68
 2179 027f 01       		.uleb128 0x1
 2180 0280 9C       		.byte	0x9c
 2181 0281 CC020000 		.4byte	0x2cc
 2182 0285 13       		.uleb128 0x13
 2183 0286 66040000 		.4byte	.LASF44
 2184 028a 01       		.byte	0x1
 2185 028b ED       		.byte	0xed
 2186 028c 68000000 		.4byte	0x68
 2187 0290 02       		.uleb128 0x2
 2188 0291 91       		.byte	0x91
 2189 0292 4C       		.sleb128 -52
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 50


 2190 0293 13       		.uleb128 0x13
 2191 0294 9C040000 		.4byte	.LASF39
 2192 0298 01       		.byte	0x1
 2193 0299 ED       		.byte	0xed
 2194 029a CC020000 		.4byte	0x2cc
 2195 029e 02       		.uleb128 0x2
 2196 029f 91       		.byte	0x91
 2197 02a0 48       		.sleb128 -56
 2198 02a1 13       		.uleb128 0x13
 2199 02a2 AE040000 		.4byte	.LASF40
 2200 02a6 01       		.byte	0x1
 2201 02a7 ED       		.byte	0xed
 2202 02a8 CC020000 		.4byte	0x2cc
 2203 02ac 02       		.uleb128 0x2
 2204 02ad 91       		.byte	0x91
 2205 02ae 44       		.sleb128 -60
 2206 02af 10       		.uleb128 0x10
 2207 02b0 62756600 		.ascii	"buf\000"
 2208 02b4 01       		.byte	0x1
 2209 02b5 F0       		.byte	0xf0
 2210 02b6 D2020000 		.4byte	0x2d2
 2211 02ba 02       		.uleb128 0x2
 2212 02bb 91       		.byte	0x91
 2213 02bc 54       		.sleb128 -44
 2214 02bd 0C       		.uleb128 0xc
 2215 02be CD030000 		.4byte	.LASF45
 2216 02c2 01       		.byte	0x1
 2217 02c3 F7       		.byte	0xf7
 2218 02c4 D1000000 		.4byte	0xd1
 2219 02c8 02       		.uleb128 0x2
 2220 02c9 91       		.byte	0x91
 2221 02ca 74       		.sleb128 -12
 2222 02cb 00       		.byte	0
 2223 02cc 05       		.uleb128 0x5
 2224 02cd 04       		.byte	0x4
 2225 02ce 68000000 		.4byte	0x68
 2226 02d2 14       		.uleb128 0x14
 2227 02d3 83000000 		.4byte	0x83
 2228 02d7 E2020000 		.4byte	0x2e2
 2229 02db 15       		.uleb128 0x15
 2230 02dc 76000000 		.4byte	0x76
 2231 02e0 1F       		.byte	0x1f
 2232 02e1 00       		.byte	0
 2233 02e2 16       		.uleb128 0x16
 2234 02e3 74030000 		.4byte	.LASF46
 2235 02e7 01       		.byte	0x1
 2236 02e8 4401     		.2byte	0x144
 2237 02ea 00000000 		.4byte	.LFB69
 2238 02ee B0000000 		.4byte	.LFE69-.LFB69
 2239 02f2 01       		.uleb128 0x1
 2240 02f3 9C       		.byte	0x9c
 2241 02f4 26030000 		.4byte	0x326
 2242 02f8 17       		.uleb128 0x17
 2243 02f9 E5020000 		.4byte	.LASF47
 2244 02fd 01       		.byte	0x1
 2245 02fe 4401     		.2byte	0x144
 2246 0300 68000000 		.4byte	0x68
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 51


 2247 0304 02       		.uleb128 0x2
 2248 0305 91       		.byte	0x91
 2249 0306 6C       		.sleb128 -20
 2250 0307 18       		.uleb128 0x18
 2251 0308 28010000 		.4byte	.LASF48
 2252 030c 01       		.byte	0x1
 2253 030d 4501     		.2byte	0x145
 2254 030f D1000000 		.4byte	0xd1
 2255 0313 02       		.uleb128 0x2
 2256 0314 91       		.byte	0x91
 2257 0315 70       		.sleb128 -16
 2258 0316 18       		.uleb128 0x18
 2259 0317 0E040000 		.4byte	.LASF49
 2260 031b 01       		.byte	0x1
 2261 031c 4601     		.2byte	0x146
 2262 031e D1000000 		.4byte	0xd1
 2263 0322 02       		.uleb128 0x2
 2264 0323 91       		.byte	0x91
 2265 0324 74       		.sleb128 -12
 2266 0325 00       		.byte	0
 2267 0326 19       		.uleb128 0x19
 2268 0327 F8030000 		.4byte	.LASF50
 2269 032b 01       		.byte	0x1
 2270 032c 6101     		.2byte	0x161
 2271 032e 00000000 		.4byte	.LFB70
 2272 0332 8C000000 		.4byte	.LFE70-.LFB70
 2273 0336 01       		.uleb128 0x1
 2274 0337 9C       		.byte	0x9c
 2275 0338 19       		.uleb128 0x19
 2276 0339 BB050000 		.4byte	.LASF51
 2277 033d 01       		.byte	0x1
 2278 033e 7F01     		.2byte	0x17f
 2279 0340 00000000 		.4byte	.LFB71
 2280 0344 8C000000 		.4byte	.LFE71-.LFB71
 2281 0348 01       		.uleb128 0x1
 2282 0349 9C       		.byte	0x9c
 2283 034a 16       		.uleb128 0x16
 2284 034b 41040000 		.4byte	.LASF52
 2285 034f 01       		.byte	0x1
 2286 0350 9E01     		.2byte	0x19e
 2287 0352 00000000 		.4byte	.LFB72
 2288 0356 18010000 		.4byte	.LFE72-.LFB72
 2289 035a 01       		.uleb128 0x1
 2290 035b 9C       		.byte	0x9c
 2291 035c 8E030000 		.4byte	0x38e
 2292 0360 17       		.uleb128 0x17
 2293 0361 AE040000 		.4byte	.LASF40
 2294 0365 01       		.byte	0x1
 2295 0366 9E01     		.2byte	0x19e
 2296 0368 CC020000 		.4byte	0x2cc
 2297 036c 02       		.uleb128 0x2
 2298 036d 91       		.byte	0x91
 2299 036e 6C       		.sleb128 -20
 2300 036f 17       		.uleb128 0x17
 2301 0370 9C040000 		.4byte	.LASF39
 2302 0374 01       		.byte	0x1
 2303 0375 9E01     		.2byte	0x19e
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 52


 2304 0377 CC020000 		.4byte	0x2cc
 2305 037b 02       		.uleb128 0x2
 2306 037c 91       		.byte	0x91
 2307 037d 68       		.sleb128 -24
 2308 037e 18       		.uleb128 0x18
 2309 037f CD030000 		.4byte	.LASF45
 2310 0383 01       		.byte	0x1
 2311 0384 A201     		.2byte	0x1a2
 2312 0386 D1000000 		.4byte	0xd1
 2313 038a 02       		.uleb128 0x2
 2314 038b 91       		.byte	0x91
 2315 038c 74       		.sleb128 -12
 2316 038d 00       		.byte	0
 2317 038e 16       		.uleb128 0x16
 2318 038f 77040000 		.4byte	.LASF53
 2319 0393 01       		.byte	0x1
 2320 0394 D101     		.2byte	0x1d1
 2321 0396 00000000 		.4byte	.LFB73
 2322 039a 2A000000 		.4byte	.LFE73-.LFB73
 2323 039e 01       		.uleb128 0x1
 2324 039f 9C       		.byte	0x9c
 2325 03a0 C3030000 		.4byte	0x3c3
 2326 03a4 17       		.uleb128 0x17
 2327 03a5 91050000 		.4byte	.LASF54
 2328 03a9 01       		.byte	0x1
 2329 03aa D101     		.2byte	0x1d1
 2330 03ac 68000000 		.4byte	0x68
 2331 03b0 02       		.uleb128 0x2
 2332 03b1 91       		.byte	0x91
 2333 03b2 6C       		.sleb128 -20
 2334 03b3 18       		.uleb128 0x18
 2335 03b4 1B050000 		.4byte	.LASF55
 2336 03b8 01       		.byte	0x1
 2337 03b9 D201     		.2byte	0x1d2
 2338 03bb 68000000 		.4byte	0x68
 2339 03bf 02       		.uleb128 0x2
 2340 03c0 91       		.byte	0x91
 2341 03c1 74       		.sleb128 -12
 2342 03c2 00       		.byte	0
 2343 03c3 16       		.uleb128 0x16
 2344 03c4 6D000000 		.4byte	.LASF56
 2345 03c8 01       		.byte	0x1
 2346 03c9 D601     		.2byte	0x1d6
 2347 03cb 00000000 		.4byte	.LFB74
 2348 03cf 2A000000 		.4byte	.LFE74-.LFB74
 2349 03d3 01       		.uleb128 0x1
 2350 03d4 9C       		.byte	0x9c
 2351 03d5 F8030000 		.4byte	0x3f8
 2352 03d9 17       		.uleb128 0x17
 2353 03da 91050000 		.4byte	.LASF54
 2354 03de 01       		.byte	0x1
 2355 03df D601     		.2byte	0x1d6
 2356 03e1 68000000 		.4byte	0x68
 2357 03e5 02       		.uleb128 0x2
 2358 03e6 91       		.byte	0x91
 2359 03e7 6C       		.sleb128 -20
 2360 03e8 18       		.uleb128 0x18
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 53


 2361 03e9 1B050000 		.4byte	.LASF55
 2362 03ed 01       		.byte	0x1
 2363 03ee D701     		.2byte	0x1d7
 2364 03f0 68000000 		.4byte	0x68
 2365 03f4 02       		.uleb128 0x2
 2366 03f5 91       		.byte	0x91
 2367 03f6 74       		.sleb128 -12
 2368 03f7 00       		.byte	0
 2369 03f8 1A       		.uleb128 0x1a
 2370 03f9 4C050000 		.4byte	.LASF58
 2371 03fd 01       		.byte	0x1
 2372 03fe DB01     		.2byte	0x1db
 2373 0400 D1000000 		.4byte	0xd1
 2374 0404 00000000 		.4byte	.LFB75
 2375 0408 CC000000 		.4byte	.LFE75-.LFB75
 2376 040c 01       		.uleb128 0x1
 2377 040d 9C       		.byte	0x9c
 2378 040e 4F040000 		.4byte	0x44f
 2379 0412 17       		.uleb128 0x17
 2380 0413 D9020000 		.4byte	.LASF59
 2381 0417 01       		.byte	0x1
 2382 0418 DB01     		.2byte	0x1db
 2383 041a 68000000 		.4byte	0x68
 2384 041e 02       		.uleb128 0x2
 2385 041f 91       		.byte	0x91
 2386 0420 6C       		.sleb128 -20
 2387 0421 17       		.uleb128 0x17
 2388 0422 6C010000 		.4byte	.LASF60
 2389 0426 01       		.byte	0x1
 2390 0427 DB01     		.2byte	0x1db
 2391 0429 68000000 		.4byte	0x68
 2392 042d 02       		.uleb128 0x2
 2393 042e 91       		.byte	0x91
 2394 042f 68       		.sleb128 -24
 2395 0430 18       		.uleb128 0x18
 2396 0431 5D030000 		.4byte	.LASF61
 2397 0435 01       		.byte	0x1
 2398 0436 DC01     		.2byte	0x1dc
 2399 0438 D1000000 		.4byte	0xd1
 2400 043c 02       		.uleb128 0x2
 2401 043d 91       		.byte	0x91
 2402 043e 74       		.sleb128 -12
 2403 043f 18       		.uleb128 0x18
 2404 0440 1A000000 		.4byte	.LASF62
 2405 0444 01       		.byte	0x1
 2406 0445 DD01     		.2byte	0x1dd
 2407 0447 D1000000 		.4byte	0xd1
 2408 044b 02       		.uleb128 0x2
 2409 044c 91       		.byte	0x91
 2410 044d 70       		.sleb128 -16
 2411 044e 00       		.byte	0
 2412 044f 16       		.uleb128 0x16
 2413 0450 78010000 		.4byte	.LASF63
 2414 0454 01       		.byte	0x1
 2415 0455 E301     		.2byte	0x1e3
 2416 0457 00000000 		.4byte	.LFB76
 2417 045b 52000000 		.4byte	.LFE76-.LFB76
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 54


 2418 045f 01       		.uleb128 0x1
 2419 0460 9C       		.byte	0x9c
 2420 0461 C0040000 		.4byte	0x4c0
 2421 0465 17       		.uleb128 0x17
 2422 0466 95030000 		.4byte	.LASF64
 2423 046a 01       		.byte	0x1
 2424 046b E301     		.2byte	0x1e3
 2425 046d 68000000 		.4byte	0x68
 2426 0471 02       		.uleb128 0x2
 2427 0472 91       		.byte	0x91
 2428 0473 6C       		.sleb128 -20
 2429 0474 17       		.uleb128 0x17
 2430 0475 EF040000 		.4byte	.LASF65
 2431 0479 01       		.byte	0x1
 2432 047a E301     		.2byte	0x1e3
 2433 047c 68000000 		.4byte	0x68
 2434 0480 02       		.uleb128 0x2
 2435 0481 91       		.byte	0x91
 2436 0482 68       		.sleb128 -24
 2437 0483 17       		.uleb128 0x17
 2438 0484 25030000 		.4byte	.LASF66
 2439 0488 01       		.byte	0x1
 2440 0489 E301     		.2byte	0x1e3
 2441 048b 68000000 		.4byte	0x68
 2442 048f 02       		.uleb128 0x2
 2443 0490 91       		.byte	0x91
 2444 0491 64       		.sleb128 -28
 2445 0492 17       		.uleb128 0x17
 2446 0493 92000000 		.4byte	.LASF67
 2447 0497 01       		.byte	0x1
 2448 0498 E301     		.2byte	0x1e3
 2449 049a 68000000 		.4byte	0x68
 2450 049e 02       		.uleb128 0x2
 2451 049f 91       		.byte	0x91
 2452 04a0 60       		.sleb128 -32
 2453 04a1 18       		.uleb128 0x18
 2454 04a2 CC040000 		.4byte	.LASF68
 2455 04a6 01       		.byte	0x1
 2456 04a7 E801     		.2byte	0x1e8
 2457 04a9 68000000 		.4byte	0x68
 2458 04ad 02       		.uleb128 0x2
 2459 04ae 91       		.byte	0x91
 2460 04af 74       		.sleb128 -12
 2461 04b0 18       		.uleb128 0x18
 2462 04b1 00000000 		.4byte	.LASF69
 2463 04b5 01       		.byte	0x1
 2464 04b6 F001     		.2byte	0x1f0
 2465 04b8 68000000 		.4byte	0x68
 2466 04bc 02       		.uleb128 0x2
 2467 04bd 91       		.byte	0x91
 2468 04be 70       		.sleb128 -16
 2469 04bf 00       		.byte	0
 2470 04c0 16       		.uleb128 0x16
 2471 04c1 58050000 		.4byte	.LASF70
 2472 04c5 01       		.byte	0x1
 2473 04c6 F901     		.2byte	0x1f9
 2474 04c8 00000000 		.4byte	.LFB77
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 55


 2475 04cc 2C000000 		.4byte	.LFE77-.LFB77
 2476 04d0 01       		.uleb128 0x1
 2477 04d1 9C       		.byte	0x9c
 2478 04d2 F5040000 		.4byte	0x4f5
 2479 04d6 17       		.uleb128 0x17
 2480 04d7 AD050000 		.4byte	.LASF71
 2481 04db 01       		.byte	0x1
 2482 04dc F901     		.2byte	0x1f9
 2483 04de 68000000 		.4byte	0x68
 2484 04e2 02       		.uleb128 0x2
 2485 04e3 91       		.byte	0x91
 2486 04e4 74       		.sleb128 -12
 2487 04e5 17       		.uleb128 0x17
 2488 04e6 FD010000 		.4byte	.LASF72
 2489 04ea 01       		.byte	0x1
 2490 04eb F901     		.2byte	0x1f9
 2491 04ed 68000000 		.4byte	0x68
 2492 04f1 02       		.uleb128 0x2
 2493 04f2 91       		.byte	0x91
 2494 04f3 70       		.sleb128 -16
 2495 04f4 00       		.byte	0
 2496 04f5 19       		.uleb128 0x19
 2497 04f6 04030000 		.4byte	.LASF73
 2498 04fa 01       		.byte	0x1
 2499 04fb FE01     		.2byte	0x1fe
 2500 04fd 00000000 		.4byte	.LFB78
 2501 0501 40000000 		.4byte	.LFE78-.LFB78
 2502 0505 01       		.uleb128 0x1
 2503 0506 9C       		.byte	0x9c
 2504 0507 19       		.uleb128 0x19
 2505 0508 2D050000 		.4byte	.LASF74
 2506 050c 01       		.byte	0x1
 2507 050d 0A02     		.2byte	0x20a
 2508 050f 00000000 		.4byte	.LFB79
 2509 0513 40000000 		.4byte	.LFE79-.LFB79
 2510 0517 01       		.uleb128 0x1
 2511 0518 9C       		.byte	0x9c
 2512 0519 1B       		.uleb128 0x1b
 2513 051a B4010000 		.4byte	.LASF75
 2514 051e 01       		.byte	0x1
 2515 051f 1702     		.2byte	0x217
 2516 0521 00000000 		.4byte	.LFB80
 2517 0525 14000000 		.4byte	.LFE80-.LFB80
 2518 0529 01       		.uleb128 0x1
 2519 052a 9C       		.byte	0x9c
 2520 052b 3D050000 		.4byte	0x53d
 2521 052f 1C       		.uleb128 0x1c
 2522 0530 7300     		.ascii	"s\000"
 2523 0532 01       		.byte	0x1
 2524 0533 1702     		.2byte	0x217
 2525 0535 7D000000 		.4byte	0x7d
 2526 0539 02       		.uleb128 0x2
 2527 053a 91       		.byte	0x91
 2528 053b 74       		.sleb128 -12
 2529 053c 00       		.byte	0
 2530 053d 1D       		.uleb128 0x1d
 2531 053e 39010000 		.4byte	.LASF76
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 56


 2532 0542 06       		.byte	0x6
 2533 0543 9606     		.2byte	0x696
 2534 0545 49050000 		.4byte	0x549
 2535 0549 1E       		.uleb128 0x1e
 2536 054a 8A000000 		.4byte	0x8a
 2537 054e 1F       		.uleb128 0x1f
 2538 054f 747300   		.ascii	"ts\000"
 2539 0552 05       		.byte	0x5
 2540 0553 10       		.byte	0x10
 2541 0554 95000000 		.4byte	0x95
 2542 0558 05       		.uleb128 0x5
 2543 0559 03       		.byte	0x3
 2544 055a 00000000 		.4byte	ts
 2545 055e 20       		.uleb128 0x20
 2546 055f 13000000 		.4byte	.LASF77
 2547 0563 05       		.byte	0x5
 2548 0564 11       		.byte	0x11
 2549 0565 A1000000 		.4byte	0xa1
 2550 0569 05       		.uleb128 0x5
 2551 056a 03       		.byte	0x3
 2552 056b 00000000 		.4byte	ts_enc
 2553 056f 20       		.uleb128 0x20
 2554 0570 42050000 		.4byte	.LASF78
 2555 0574 05       		.byte	0x5
 2556 0575 12       		.byte	0x12
 2557 0576 A1000000 		.4byte	0xa1
 2558 057a 05       		.uleb128 0x5
 2559 057b 03       		.byte	0x3
 2560 057c 00000000 		.4byte	ts_update
 2561 0580 20       		.uleb128 0x20
 2562 0581 E6040000 		.4byte	.LASF79
 2563 0585 05       		.byte	0x5
 2564 0586 13       		.byte	0x13
 2565 0587 A1000000 		.4byte	0xa1
 2566 058b 05       		.uleb128 0x5
 2567 058c 03       		.byte	0x3
 2568 058d 00000000 		.4byte	ts_speed
 2569 0591 20       		.uleb128 0x20
 2570 0592 37050000 		.4byte	.LASF80
 2571 0596 05       		.byte	0x5
 2572 0597 14       		.byte	0x14
 2573 0598 A1000000 		.4byte	0xa1
 2574 059c 05       		.uleb128 0x5
 2575 059d 03       		.byte	0x3
 2576 059e 00000000 		.4byte	ts_display
 2577 05a2 20       		.uleb128 0x20
 2578 05a3 F5040000 		.4byte	.LASF81
 2579 05a7 05       		.byte	0x5
 2580 05a8 16       		.byte	0x16
 2581 05a9 95000000 		.4byte	0x95
 2582 05ad 05       		.uleb128 0x5
 2583 05ae 03       		.byte	0x3
 2584 05af 00000000 		.4byte	flag_ts_enc
 2585 05b3 20       		.uleb128 0x20
 2586 05b4 D9010000 		.4byte	.LASF82
 2587 05b8 05       		.byte	0x5
 2588 05b9 17       		.byte	0x17
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 57


 2589 05ba 95000000 		.4byte	0x95
 2590 05be 05       		.uleb128 0x5
 2591 05bf 03       		.byte	0x3
 2592 05c0 00000000 		.4byte	flag_ts_update
 2593 05c4 20       		.uleb128 0x20
 2594 05c5 37000000 		.4byte	.LASF83
 2595 05c9 05       		.byte	0x5
 2596 05ca 18       		.byte	0x18
 2597 05cb 95000000 		.4byte	0x95
 2598 05cf 05       		.uleb128 0x5
 2599 05d0 03       		.byte	0x3
 2600 05d1 00000000 		.4byte	flag_ts_speed
 2601 05d5 20       		.uleb128 0x20
 2602 05d6 AC020000 		.4byte	.LASF84
 2603 05da 05       		.byte	0x5
 2604 05db 19       		.byte	0x19
 2605 05dc 95000000 		.4byte	0x95
 2606 05e0 05       		.uleb128 0x5
 2607 05e1 03       		.byte	0x3
 2608 05e2 00000000 		.4byte	flag_ts_display
 2609 05e6 20       		.uleb128 0x20
 2610 05e7 BC020000 		.4byte	.LASF85
 2611 05eb 05       		.byte	0x5
 2612 05ec 1C       		.byte	0x1c
 2613 05ed 95000000 		.4byte	0x95
 2614 05f1 05       		.uleb128 0x5
 2615 05f2 03       		.byte	0x3
 2616 05f3 00000000 		.4byte	flag_rx
 2617 05f7 20       		.uleb128 0x20
 2618 05f8 22000000 		.4byte	.LASF86
 2619 05fc 05       		.byte	0x5
 2620 05fd 1D       		.byte	0x1d
 2621 05fe 95000000 		.4byte	0x95
 2622 0602 05       		.uleb128 0x5
 2623 0603 03       		.byte	0x3
 2624 0604 00000000 		.4byte	flag_packet
 2625 0608 20       		.uleb128 0x20
 2626 0609 65030000 		.4byte	.LASF87
 2627 060d 05       		.byte	0x5
 2628 060e 1E       		.byte	0x1e
 2629 060f 95000000 		.4byte	0x95
 2630 0613 05       		.uleb128 0x5
 2631 0614 03       		.byte	0x3
 2632 0615 00000000 		.4byte	flag_KB_string
 2633 0619 20       		.uleb128 0x20
 2634 061a D7040000 		.4byte	.LASF88
 2635 061e 05       		.byte	0x5
 2636 061f 20       		.byte	0x20
 2637 0620 95000000 		.4byte	0x95
 2638 0624 05       		.uleb128 0x5
 2639 0625 03       		.byte	0x3
 2640 0626 00000000 		.4byte	dataready_flag
 2641 062a 20       		.uleb128 0x20
 2642 062b 6A050000 		.4byte	.LASF89
 2643 062f 05       		.byte	0x5
 2644 0630 22       		.byte	0x22
 2645 0631 95000000 		.4byte	0x95
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 58


 2646 0635 05       		.uleb128 0x5
 2647 0636 03       		.byte	0x3
 2648 0637 00000000 		.4byte	flag_rf_transmission_active
 2649 063b 14       		.uleb128 0x14
 2650 063c 83000000 		.4byte	0x83
 2651 0640 4B060000 		.4byte	0x64b
 2652 0644 15       		.uleb128 0x15
 2653 0645 76000000 		.4byte	0x76
 2654 0649 3F       		.byte	0x3f
 2655 064a 00       		.byte	0
 2656 064b 20       		.uleb128 0x20
 2657 064c 58040000 		.4byte	.LASF90
 2658 0650 05       		.byte	0x5
 2659 0651 25       		.byte	0x25
 2660 0652 3B060000 		.4byte	0x63b
 2661 0656 05       		.uleb128 0x5
 2662 0657 03       		.byte	0x3
 2663 0658 00000000 		.4byte	displaystring
 2664 065c 20       		.uleb128 0x20
 2665 065d 85010000 		.4byte	.LASF91
 2666 0661 05       		.byte	0x5
 2667 0662 26       		.byte	0x26
 2668 0663 3B060000 		.4byte	0x63b
 2669 0667 05       		.uleb128 0x5
 2670 0668 03       		.byte	0x3
 2671 0669 00000000 		.4byte	line
 2672 066d 20       		.uleb128 0x20
 2673 066e 4A030000 		.4byte	.LASF92
 2674 0672 05       		.byte	0x5
 2675 0673 26       		.byte	0x26
 2676 0674 3B060000 		.4byte	0x63b
 2677 0678 05       		.uleb128 0x5
 2678 0679 03       		.byte	0x3
 2679 067a 00000000 		.4byte	entry
 2680 067e 14       		.uleb128 0x14
 2681 067f 95000000 		.4byte	0x95
 2682 0683 8E060000 		.4byte	0x68e
 2683 0687 15       		.uleb128 0x15
 2684 0688 76000000 		.4byte	0x76
 2685 068c 3F       		.byte	0x3f
 2686 068d 00       		.byte	0
 2687 068e 20       		.uleb128 0x20
 2688 068f 83000000 		.4byte	.LASF93
 2689 0693 05       		.byte	0x5
 2690 0694 27       		.byte	0x27
 2691 0695 7E060000 		.4byte	0x67e
 2692 0699 05       		.uleb128 0x5
 2693 069a 03       		.byte	0x3
 2694 069b 00000000 		.4byte	usbBuffer
 2695 069f 20       		.uleb128 0x20
 2696 06a0 57000000 		.4byte	.LASF94
 2697 06a4 05       		.byte	0x5
 2698 06a5 3C       		.byte	0x3c
 2699 06a6 DF000000 		.4byte	0xdf
 2700 06aa 05       		.uleb128 0x5
 2701 06ab 03       		.byte	0x3
 2702 06ac 00000000 		.4byte	system_state
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 59


 2703 06b0 20       		.uleb128 0x20
 2704 06b1 DB030000 		.4byte	.LASF95
 2705 06b5 01       		.byte	0x1
 2706 06b6 50       		.byte	0x50
 2707 06b7 C1060000 		.4byte	0x6c1
 2708 06bb 05       		.uleb128 0x5
 2709 06bc 03       		.byte	0x3
 2710 06bd 00000000 		.4byte	adc_flag
 2711 06c1 1E       		.uleb128 0x1e
 2712 06c2 68000000 		.4byte	0x68
 2713 06c6 14       		.uleb128 0x14
 2714 06c7 AD000000 		.4byte	0xad
 2715 06cb D6060000 		.4byte	0x6d6
 2716 06cf 15       		.uleb128 0x15
 2717 06d0 76000000 		.4byte	0x76
 2718 06d4 05       		.byte	0x5
 2719 06d5 00       		.byte	0
 2720 06d6 20       		.uleb128 0x20
 2721 06d7 98050000 		.4byte	.LASF96
 2722 06db 01       		.byte	0x1
 2723 06dc 51       		.byte	0x51
 2724 06dd C6060000 		.4byte	0x6c6
 2725 06e1 05       		.uleb128 0x5
 2726 06e2 03       		.byte	0x3
 2727 06e3 00000000 		.4byte	sensor_readings
 2728 06e7 14       		.uleb128 0x14
 2729 06e8 68000000 		.4byte	0x68
 2730 06ec F7060000 		.4byte	0x6f7
 2731 06f0 15       		.uleb128 0x15
 2732 06f1 76000000 		.4byte	0x76
 2733 06f5 05       		.byte	0x5
 2734 06f6 00       		.byte	0
 2735 06f7 20       		.uleb128 0x20
 2736 06f8 C4020000 		.4byte	.LASF97
 2737 06fc 01       		.byte	0x1
 2738 06fd 52       		.byte	0x52
 2739 06fe E7060000 		.4byte	0x6e7
 2740 0702 05       		.uleb128 0x5
 2741 0703 03       		.byte	0x3
 2742 0704 00000000 		.4byte	adc_readings
 2743 0708 20       		.uleb128 0x20
 2744 0709 2B040000 		.4byte	.LASF98
 2745 070d 01       		.byte	0x1
 2746 070e 53       		.byte	0x53
 2747 070f 68000000 		.4byte	0x68
 2748 0713 05       		.uleb128 0x5
 2749 0714 03       		.byte	0x3
 2750 0715 00000000 		.4byte	sample_count
 2751 0719 20       		.uleb128 0x20
 2752 071a 8A010000 		.4byte	.LASF99
 2753 071e 01       		.byte	0x1
 2754 071f 55       		.byte	0x55
 2755 0720 C1060000 		.4byte	0x6c1
 2756 0724 05       		.uleb128 0x5
 2757 0725 03       		.byte	0x3
 2758 0726 00000000 		.4byte	timer_flag
 2759 072a 20       		.uleb128 0x20
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 60


 2760 072b 0B050000 		.4byte	.LASF100
 2761 072f 01       		.byte	0x1
 2762 0730 56       		.byte	0x56
 2763 0731 C1060000 		.4byte	0x6c1
 2764 0735 05       		.uleb128 0x5
 2765 0736 03       		.byte	0x3
 2766 0737 00000000 		.4byte	countM1
 2767 073b 20       		.uleb128 0x20
 2768 073c 13050000 		.4byte	.LASF101
 2769 0740 01       		.byte	0x1
 2770 0741 57       		.byte	0x57
 2771 0742 C1060000 		.4byte	0x6c1
 2772 0746 05       		.uleb128 0x5
 2773 0747 03       		.byte	0x3
 2774 0748 00000000 		.4byte	countM2
 2775 074c 20       		.uleb128 0x20
 2776 074d D9020000 		.4byte	.LASF59
 2777 0751 01       		.byte	0x1
 2778 0752 58       		.byte	0x58
 2779 0753 68000000 		.4byte	0x68
 2780 0757 05       		.uleb128 0x5
 2781 0758 03       		.byte	0x3
 2782 0759 00000000 		.4byte	prevCountM1
 2783 075d 20       		.uleb128 0x20
 2784 075e 6C010000 		.4byte	.LASF60
 2785 0762 01       		.byte	0x1
 2786 0763 59       		.byte	0x59
 2787 0764 68000000 		.4byte	0x68
 2788 0768 05       		.uleb128 0x5
 2789 0769 03       		.byte	0x3
 2790 076a 00000000 		.4byte	prevCountM2
 2791 076e 00       		.byte	0
 2792              		.section	.debug_abbrev,"",%progbits
 2793              	.Ldebug_abbrev0:
 2794 0000 01       		.uleb128 0x1
 2795 0001 11       		.uleb128 0x11
 2796 0002 01       		.byte	0x1
 2797 0003 25       		.uleb128 0x25
 2798 0004 0E       		.uleb128 0xe
 2799 0005 13       		.uleb128 0x13
 2800 0006 0B       		.uleb128 0xb
 2801 0007 03       		.uleb128 0x3
 2802 0008 0E       		.uleb128 0xe
 2803 0009 1B       		.uleb128 0x1b
 2804 000a 0E       		.uleb128 0xe
 2805 000b 55       		.uleb128 0x55
 2806 000c 17       		.uleb128 0x17
 2807 000d 11       		.uleb128 0x11
 2808 000e 01       		.uleb128 0x1
 2809 000f 10       		.uleb128 0x10
 2810 0010 17       		.uleb128 0x17
 2811 0011 00       		.byte	0
 2812 0012 00       		.byte	0
 2813 0013 02       		.uleb128 0x2
 2814 0014 24       		.uleb128 0x24
 2815 0015 00       		.byte	0
 2816 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 61


 2817 0017 0B       		.uleb128 0xb
 2818 0018 3E       		.uleb128 0x3e
 2819 0019 0B       		.uleb128 0xb
 2820 001a 03       		.uleb128 0x3
 2821 001b 0E       		.uleb128 0xe
 2822 001c 00       		.byte	0
 2823 001d 00       		.byte	0
 2824 001e 03       		.uleb128 0x3
 2825 001f 16       		.uleb128 0x16
 2826 0020 00       		.byte	0
 2827 0021 03       		.uleb128 0x3
 2828 0022 0E       		.uleb128 0xe
 2829 0023 3A       		.uleb128 0x3a
 2830 0024 0B       		.uleb128 0xb
 2831 0025 3B       		.uleb128 0x3b
 2832 0026 0B       		.uleb128 0xb
 2833 0027 49       		.uleb128 0x49
 2834 0028 13       		.uleb128 0x13
 2835 0029 00       		.byte	0
 2836 002a 00       		.byte	0
 2837 002b 04       		.uleb128 0x4
 2838 002c 24       		.uleb128 0x24
 2839 002d 00       		.byte	0
 2840 002e 0B       		.uleb128 0xb
 2841 002f 0B       		.uleb128 0xb
 2842 0030 3E       		.uleb128 0x3e
 2843 0031 0B       		.uleb128 0xb
 2844 0032 03       		.uleb128 0x3
 2845 0033 08       		.uleb128 0x8
 2846 0034 00       		.byte	0
 2847 0035 00       		.byte	0
 2848 0036 05       		.uleb128 0x5
 2849 0037 0F       		.uleb128 0xf
 2850 0038 00       		.byte	0
 2851 0039 0B       		.uleb128 0xb
 2852 003a 0B       		.uleb128 0xb
 2853 003b 49       		.uleb128 0x49
 2854 003c 13       		.uleb128 0x13
 2855 003d 00       		.byte	0
 2856 003e 00       		.byte	0
 2857 003f 06       		.uleb128 0x6
 2858 0040 16       		.uleb128 0x16
 2859 0041 00       		.byte	0
 2860 0042 03       		.uleb128 0x3
 2861 0043 0E       		.uleb128 0xe
 2862 0044 3A       		.uleb128 0x3a
 2863 0045 0B       		.uleb128 0xb
 2864 0046 3B       		.uleb128 0x3b
 2865 0047 05       		.uleb128 0x5
 2866 0048 49       		.uleb128 0x49
 2867 0049 13       		.uleb128 0x13
 2868 004a 00       		.byte	0
 2869 004b 00       		.byte	0
 2870 004c 07       		.uleb128 0x7
 2871 004d 13       		.uleb128 0x13
 2872 004e 01       		.byte	0x1
 2873 004f 03       		.uleb128 0x3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 62


 2874 0050 0E       		.uleb128 0xe
 2875 0051 0B       		.uleb128 0xb
 2876 0052 0B       		.uleb128 0xb
 2877 0053 3A       		.uleb128 0x3a
 2878 0054 0B       		.uleb128 0xb
 2879 0055 3B       		.uleb128 0x3b
 2880 0056 0B       		.uleb128 0xb
 2881 0057 01       		.uleb128 0x1
 2882 0058 13       		.uleb128 0x13
 2883 0059 00       		.byte	0
 2884 005a 00       		.byte	0
 2885 005b 08       		.uleb128 0x8
 2886 005c 0D       		.uleb128 0xd
 2887 005d 00       		.byte	0
 2888 005e 03       		.uleb128 0x3
 2889 005f 0E       		.uleb128 0xe
 2890 0060 3A       		.uleb128 0x3a
 2891 0061 0B       		.uleb128 0xb
 2892 0062 3B       		.uleb128 0x3b
 2893 0063 0B       		.uleb128 0xb
 2894 0064 49       		.uleb128 0x49
 2895 0065 13       		.uleb128 0x13
 2896 0066 38       		.uleb128 0x38
 2897 0067 0B       		.uleb128 0xb
 2898 0068 00       		.byte	0
 2899 0069 00       		.byte	0
 2900 006a 09       		.uleb128 0x9
 2901 006b 2E       		.uleb128 0x2e
 2902 006c 00       		.byte	0
 2903 006d 3F       		.uleb128 0x3f
 2904 006e 19       		.uleb128 0x19
 2905 006f 03       		.uleb128 0x3
 2906 0070 0E       		.uleb128 0xe
 2907 0071 3A       		.uleb128 0x3a
 2908 0072 0B       		.uleb128 0xb
 2909 0073 3B       		.uleb128 0x3b
 2910 0074 0B       		.uleb128 0xb
 2911 0075 27       		.uleb128 0x27
 2912 0076 19       		.uleb128 0x19
 2913 0077 11       		.uleb128 0x11
 2914 0078 01       		.uleb128 0x1
 2915 0079 12       		.uleb128 0x12
 2916 007a 06       		.uleb128 0x6
 2917 007b 40       		.uleb128 0x40
 2918 007c 18       		.uleb128 0x18
 2919 007d 9642     		.uleb128 0x2116
 2920 007f 19       		.uleb128 0x19
 2921 0080 00       		.byte	0
 2922 0081 00       		.byte	0
 2923 0082 0A       		.uleb128 0xa
 2924 0083 2E       		.uleb128 0x2e
 2925 0084 00       		.byte	0
 2926 0085 3F       		.uleb128 0x3f
 2927 0086 19       		.uleb128 0x19
 2928 0087 03       		.uleb128 0x3
 2929 0088 0E       		.uleb128 0xe
 2930 0089 3A       		.uleb128 0x3a
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 63


 2931 008a 0B       		.uleb128 0xb
 2932 008b 3B       		.uleb128 0x3b
 2933 008c 0B       		.uleb128 0xb
 2934 008d 27       		.uleb128 0x27
 2935 008e 19       		.uleb128 0x19
 2936 008f 11       		.uleb128 0x11
 2937 0090 01       		.uleb128 0x1
 2938 0091 12       		.uleb128 0x12
 2939 0092 06       		.uleb128 0x6
 2940 0093 40       		.uleb128 0x40
 2941 0094 18       		.uleb128 0x18
 2942 0095 9742     		.uleb128 0x2117
 2943 0097 19       		.uleb128 0x19
 2944 0098 00       		.byte	0
 2945 0099 00       		.byte	0
 2946 009a 0B       		.uleb128 0xb
 2947 009b 2E       		.uleb128 0x2e
 2948 009c 01       		.byte	0x1
 2949 009d 3F       		.uleb128 0x3f
 2950 009e 19       		.uleb128 0x19
 2951 009f 03       		.uleb128 0x3
 2952 00a0 0E       		.uleb128 0xe
 2953 00a1 3A       		.uleb128 0x3a
 2954 00a2 0B       		.uleb128 0xb
 2955 00a3 3B       		.uleb128 0x3b
 2956 00a4 0B       		.uleb128 0xb
 2957 00a5 49       		.uleb128 0x49
 2958 00a6 13       		.uleb128 0x13
 2959 00a7 11       		.uleb128 0x11
 2960 00a8 01       		.uleb128 0x1
 2961 00a9 12       		.uleb128 0x12
 2962 00aa 06       		.uleb128 0x6
 2963 00ab 40       		.uleb128 0x40
 2964 00ac 18       		.uleb128 0x18
 2965 00ad 9642     		.uleb128 0x2116
 2966 00af 19       		.uleb128 0x19
 2967 00b0 01       		.uleb128 0x1
 2968 00b1 13       		.uleb128 0x13
 2969 00b2 00       		.byte	0
 2970 00b3 00       		.byte	0
 2971 00b4 0C       		.uleb128 0xc
 2972 00b5 34       		.uleb128 0x34
 2973 00b6 00       		.byte	0
 2974 00b7 03       		.uleb128 0x3
 2975 00b8 0E       		.uleb128 0xe
 2976 00b9 3A       		.uleb128 0x3a
 2977 00ba 0B       		.uleb128 0xb
 2978 00bb 3B       		.uleb128 0x3b
 2979 00bc 0B       		.uleb128 0xb
 2980 00bd 49       		.uleb128 0x49
 2981 00be 13       		.uleb128 0x13
 2982 00bf 02       		.uleb128 0x2
 2983 00c0 18       		.uleb128 0x18
 2984 00c1 00       		.byte	0
 2985 00c2 00       		.byte	0
 2986 00c3 0D       		.uleb128 0xd
 2987 00c4 2E       		.uleb128 0x2e
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 64


 2988 00c5 01       		.byte	0x1
 2989 00c6 3F       		.uleb128 0x3f
 2990 00c7 19       		.uleb128 0x19
 2991 00c8 03       		.uleb128 0x3
 2992 00c9 0E       		.uleb128 0xe
 2993 00ca 3A       		.uleb128 0x3a
 2994 00cb 0B       		.uleb128 0xb
 2995 00cc 3B       		.uleb128 0x3b
 2996 00cd 0B       		.uleb128 0xb
 2997 00ce 27       		.uleb128 0x27
 2998 00cf 19       		.uleb128 0x19
 2999 00d0 49       		.uleb128 0x49
 3000 00d1 13       		.uleb128 0x13
 3001 00d2 11       		.uleb128 0x11
 3002 00d3 01       		.uleb128 0x1
 3003 00d4 12       		.uleb128 0x12
 3004 00d5 06       		.uleb128 0x6
 3005 00d6 40       		.uleb128 0x40
 3006 00d7 18       		.uleb128 0x18
 3007 00d8 9642     		.uleb128 0x2116
 3008 00da 19       		.uleb128 0x19
 3009 00db 01       		.uleb128 0x1
 3010 00dc 13       		.uleb128 0x13
 3011 00dd 00       		.byte	0
 3012 00de 00       		.byte	0
 3013 00df 0E       		.uleb128 0xe
 3014 00e0 05       		.uleb128 0x5
 3015 00e1 00       		.byte	0
 3016 00e2 03       		.uleb128 0x3
 3017 00e3 08       		.uleb128 0x8
 3018 00e4 3A       		.uleb128 0x3a
 3019 00e5 0B       		.uleb128 0xb
 3020 00e6 3B       		.uleb128 0x3b
 3021 00e7 0B       		.uleb128 0xb
 3022 00e8 49       		.uleb128 0x49
 3023 00e9 13       		.uleb128 0x13
 3024 00ea 02       		.uleb128 0x2
 3025 00eb 18       		.uleb128 0x18
 3026 00ec 00       		.byte	0
 3027 00ed 00       		.byte	0
 3028 00ee 0F       		.uleb128 0xf
 3029 00ef 2E       		.uleb128 0x2e
 3030 00f0 01       		.byte	0x1
 3031 00f1 3F       		.uleb128 0x3f
 3032 00f2 19       		.uleb128 0x19
 3033 00f3 03       		.uleb128 0x3
 3034 00f4 0E       		.uleb128 0xe
 3035 00f5 3A       		.uleb128 0x3a
 3036 00f6 0B       		.uleb128 0xb
 3037 00f7 3B       		.uleb128 0x3b
 3038 00f8 0B       		.uleb128 0xb
 3039 00f9 11       		.uleb128 0x11
 3040 00fa 01       		.uleb128 0x1
 3041 00fb 12       		.uleb128 0x12
 3042 00fc 06       		.uleb128 0x6
 3043 00fd 40       		.uleb128 0x40
 3044 00fe 18       		.uleb128 0x18
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 65


 3045 00ff 9642     		.uleb128 0x2116
 3046 0101 19       		.uleb128 0x19
 3047 0102 01       		.uleb128 0x1
 3048 0103 13       		.uleb128 0x13
 3049 0104 00       		.byte	0
 3050 0105 00       		.byte	0
 3051 0106 10       		.uleb128 0x10
 3052 0107 34       		.uleb128 0x34
 3053 0108 00       		.byte	0
 3054 0109 03       		.uleb128 0x3
 3055 010a 08       		.uleb128 0x8
 3056 010b 3A       		.uleb128 0x3a
 3057 010c 0B       		.uleb128 0xb
 3058 010d 3B       		.uleb128 0x3b
 3059 010e 0B       		.uleb128 0xb
 3060 010f 49       		.uleb128 0x49
 3061 0110 13       		.uleb128 0x13
 3062 0111 02       		.uleb128 0x2
 3063 0112 18       		.uleb128 0x18
 3064 0113 00       		.byte	0
 3065 0114 00       		.byte	0
 3066 0115 11       		.uleb128 0x11
 3067 0116 0B       		.uleb128 0xb
 3068 0117 01       		.byte	0x1
 3069 0118 11       		.uleb128 0x11
 3070 0119 01       		.uleb128 0x1
 3071 011a 12       		.uleb128 0x12
 3072 011b 06       		.uleb128 0x6
 3073 011c 00       		.byte	0
 3074 011d 00       		.byte	0
 3075 011e 12       		.uleb128 0x12
 3076 011f 2E       		.uleb128 0x2e
 3077 0120 01       		.byte	0x1
 3078 0121 3F       		.uleb128 0x3f
 3079 0122 19       		.uleb128 0x19
 3080 0123 03       		.uleb128 0x3
 3081 0124 0E       		.uleb128 0xe
 3082 0125 3A       		.uleb128 0x3a
 3083 0126 0B       		.uleb128 0xb
 3084 0127 3B       		.uleb128 0x3b
 3085 0128 0B       		.uleb128 0xb
 3086 0129 27       		.uleb128 0x27
 3087 012a 19       		.uleb128 0x19
 3088 012b 11       		.uleb128 0x11
 3089 012c 01       		.uleb128 0x1
 3090 012d 12       		.uleb128 0x12
 3091 012e 06       		.uleb128 0x6
 3092 012f 40       		.uleb128 0x40
 3093 0130 18       		.uleb128 0x18
 3094 0131 9642     		.uleb128 0x2116
 3095 0133 19       		.uleb128 0x19
 3096 0134 01       		.uleb128 0x1
 3097 0135 13       		.uleb128 0x13
 3098 0136 00       		.byte	0
 3099 0137 00       		.byte	0
 3100 0138 13       		.uleb128 0x13
 3101 0139 05       		.uleb128 0x5
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 66


 3102 013a 00       		.byte	0
 3103 013b 03       		.uleb128 0x3
 3104 013c 0E       		.uleb128 0xe
 3105 013d 3A       		.uleb128 0x3a
 3106 013e 0B       		.uleb128 0xb
 3107 013f 3B       		.uleb128 0x3b
 3108 0140 0B       		.uleb128 0xb
 3109 0141 49       		.uleb128 0x49
 3110 0142 13       		.uleb128 0x13
 3111 0143 02       		.uleb128 0x2
 3112 0144 18       		.uleb128 0x18
 3113 0145 00       		.byte	0
 3114 0146 00       		.byte	0
 3115 0147 14       		.uleb128 0x14
 3116 0148 01       		.uleb128 0x1
 3117 0149 01       		.byte	0x1
 3118 014a 49       		.uleb128 0x49
 3119 014b 13       		.uleb128 0x13
 3120 014c 01       		.uleb128 0x1
 3121 014d 13       		.uleb128 0x13
 3122 014e 00       		.byte	0
 3123 014f 00       		.byte	0
 3124 0150 15       		.uleb128 0x15
 3125 0151 21       		.uleb128 0x21
 3126 0152 00       		.byte	0
 3127 0153 49       		.uleb128 0x49
 3128 0154 13       		.uleb128 0x13
 3129 0155 2F       		.uleb128 0x2f
 3130 0156 0B       		.uleb128 0xb
 3131 0157 00       		.byte	0
 3132 0158 00       		.byte	0
 3133 0159 16       		.uleb128 0x16
 3134 015a 2E       		.uleb128 0x2e
 3135 015b 01       		.byte	0x1
 3136 015c 3F       		.uleb128 0x3f
 3137 015d 19       		.uleb128 0x19
 3138 015e 03       		.uleb128 0x3
 3139 015f 0E       		.uleb128 0xe
 3140 0160 3A       		.uleb128 0x3a
 3141 0161 0B       		.uleb128 0xb
 3142 0162 3B       		.uleb128 0x3b
 3143 0163 05       		.uleb128 0x5
 3144 0164 27       		.uleb128 0x27
 3145 0165 19       		.uleb128 0x19
 3146 0166 11       		.uleb128 0x11
 3147 0167 01       		.uleb128 0x1
 3148 0168 12       		.uleb128 0x12
 3149 0169 06       		.uleb128 0x6
 3150 016a 40       		.uleb128 0x40
 3151 016b 18       		.uleb128 0x18
 3152 016c 9642     		.uleb128 0x2116
 3153 016e 19       		.uleb128 0x19
 3154 016f 01       		.uleb128 0x1
 3155 0170 13       		.uleb128 0x13
 3156 0171 00       		.byte	0
 3157 0172 00       		.byte	0
 3158 0173 17       		.uleb128 0x17
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 67


 3159 0174 05       		.uleb128 0x5
 3160 0175 00       		.byte	0
 3161 0176 03       		.uleb128 0x3
 3162 0177 0E       		.uleb128 0xe
 3163 0178 3A       		.uleb128 0x3a
 3164 0179 0B       		.uleb128 0xb
 3165 017a 3B       		.uleb128 0x3b
 3166 017b 05       		.uleb128 0x5
 3167 017c 49       		.uleb128 0x49
 3168 017d 13       		.uleb128 0x13
 3169 017e 02       		.uleb128 0x2
 3170 017f 18       		.uleb128 0x18
 3171 0180 00       		.byte	0
 3172 0181 00       		.byte	0
 3173 0182 18       		.uleb128 0x18
 3174 0183 34       		.uleb128 0x34
 3175 0184 00       		.byte	0
 3176 0185 03       		.uleb128 0x3
 3177 0186 0E       		.uleb128 0xe
 3178 0187 3A       		.uleb128 0x3a
 3179 0188 0B       		.uleb128 0xb
 3180 0189 3B       		.uleb128 0x3b
 3181 018a 05       		.uleb128 0x5
 3182 018b 49       		.uleb128 0x49
 3183 018c 13       		.uleb128 0x13
 3184 018d 02       		.uleb128 0x2
 3185 018e 18       		.uleb128 0x18
 3186 018f 00       		.byte	0
 3187 0190 00       		.byte	0
 3188 0191 19       		.uleb128 0x19
 3189 0192 2E       		.uleb128 0x2e
 3190 0193 00       		.byte	0
 3191 0194 3F       		.uleb128 0x3f
 3192 0195 19       		.uleb128 0x19
 3193 0196 03       		.uleb128 0x3
 3194 0197 0E       		.uleb128 0xe
 3195 0198 3A       		.uleb128 0x3a
 3196 0199 0B       		.uleb128 0xb
 3197 019a 3B       		.uleb128 0x3b
 3198 019b 05       		.uleb128 0x5
 3199 019c 11       		.uleb128 0x11
 3200 019d 01       		.uleb128 0x1
 3201 019e 12       		.uleb128 0x12
 3202 019f 06       		.uleb128 0x6
 3203 01a0 40       		.uleb128 0x40
 3204 01a1 18       		.uleb128 0x18
 3205 01a2 9642     		.uleb128 0x2116
 3206 01a4 19       		.uleb128 0x19
 3207 01a5 00       		.byte	0
 3208 01a6 00       		.byte	0
 3209 01a7 1A       		.uleb128 0x1a
 3210 01a8 2E       		.uleb128 0x2e
 3211 01a9 01       		.byte	0x1
 3212 01aa 3F       		.uleb128 0x3f
 3213 01ab 19       		.uleb128 0x19
 3214 01ac 03       		.uleb128 0x3
 3215 01ad 0E       		.uleb128 0xe
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 68


 3216 01ae 3A       		.uleb128 0x3a
 3217 01af 0B       		.uleb128 0xb
 3218 01b0 3B       		.uleb128 0x3b
 3219 01b1 05       		.uleb128 0x5
 3220 01b2 27       		.uleb128 0x27
 3221 01b3 19       		.uleb128 0x19
 3222 01b4 49       		.uleb128 0x49
 3223 01b5 13       		.uleb128 0x13
 3224 01b6 11       		.uleb128 0x11
 3225 01b7 01       		.uleb128 0x1
 3226 01b8 12       		.uleb128 0x12
 3227 01b9 06       		.uleb128 0x6
 3228 01ba 40       		.uleb128 0x40
 3229 01bb 18       		.uleb128 0x18
 3230 01bc 9642     		.uleb128 0x2116
 3231 01be 19       		.uleb128 0x19
 3232 01bf 01       		.uleb128 0x1
 3233 01c0 13       		.uleb128 0x13
 3234 01c1 00       		.byte	0
 3235 01c2 00       		.byte	0
 3236 01c3 1B       		.uleb128 0x1b
 3237 01c4 2E       		.uleb128 0x2e
 3238 01c5 01       		.byte	0x1
 3239 01c6 3F       		.uleb128 0x3f
 3240 01c7 19       		.uleb128 0x19
 3241 01c8 03       		.uleb128 0x3
 3242 01c9 0E       		.uleb128 0xe
 3243 01ca 3A       		.uleb128 0x3a
 3244 01cb 0B       		.uleb128 0xb
 3245 01cc 3B       		.uleb128 0x3b
 3246 01cd 05       		.uleb128 0x5
 3247 01ce 27       		.uleb128 0x27
 3248 01cf 19       		.uleb128 0x19
 3249 01d0 11       		.uleb128 0x11
 3250 01d1 01       		.uleb128 0x1
 3251 01d2 12       		.uleb128 0x12
 3252 01d3 06       		.uleb128 0x6
 3253 01d4 40       		.uleb128 0x40
 3254 01d5 18       		.uleb128 0x18
 3255 01d6 9742     		.uleb128 0x2117
 3256 01d8 19       		.uleb128 0x19
 3257 01d9 01       		.uleb128 0x1
 3258 01da 13       		.uleb128 0x13
 3259 01db 00       		.byte	0
 3260 01dc 00       		.byte	0
 3261 01dd 1C       		.uleb128 0x1c
 3262 01de 05       		.uleb128 0x5
 3263 01df 00       		.byte	0
 3264 01e0 03       		.uleb128 0x3
 3265 01e1 08       		.uleb128 0x8
 3266 01e2 3A       		.uleb128 0x3a
 3267 01e3 0B       		.uleb128 0xb
 3268 01e4 3B       		.uleb128 0x3b
 3269 01e5 05       		.uleb128 0x5
 3270 01e6 49       		.uleb128 0x49
 3271 01e7 13       		.uleb128 0x13
 3272 01e8 02       		.uleb128 0x2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 69


 3273 01e9 18       		.uleb128 0x18
 3274 01ea 00       		.byte	0
 3275 01eb 00       		.byte	0
 3276 01ec 1D       		.uleb128 0x1d
 3277 01ed 34       		.uleb128 0x34
 3278 01ee 00       		.byte	0
 3279 01ef 03       		.uleb128 0x3
 3280 01f0 0E       		.uleb128 0xe
 3281 01f1 3A       		.uleb128 0x3a
 3282 01f2 0B       		.uleb128 0xb
 3283 01f3 3B       		.uleb128 0x3b
 3284 01f4 05       		.uleb128 0x5
 3285 01f5 49       		.uleb128 0x49
 3286 01f6 13       		.uleb128 0x13
 3287 01f7 3F       		.uleb128 0x3f
 3288 01f8 19       		.uleb128 0x19
 3289 01f9 3C       		.uleb128 0x3c
 3290 01fa 19       		.uleb128 0x19
 3291 01fb 00       		.byte	0
 3292 01fc 00       		.byte	0
 3293 01fd 1E       		.uleb128 0x1e
 3294 01fe 35       		.uleb128 0x35
 3295 01ff 00       		.byte	0
 3296 0200 49       		.uleb128 0x49
 3297 0201 13       		.uleb128 0x13
 3298 0202 00       		.byte	0
 3299 0203 00       		.byte	0
 3300 0204 1F       		.uleb128 0x1f
 3301 0205 34       		.uleb128 0x34
 3302 0206 00       		.byte	0
 3303 0207 03       		.uleb128 0x3
 3304 0208 08       		.uleb128 0x8
 3305 0209 3A       		.uleb128 0x3a
 3306 020a 0B       		.uleb128 0xb
 3307 020b 3B       		.uleb128 0x3b
 3308 020c 0B       		.uleb128 0xb
 3309 020d 49       		.uleb128 0x49
 3310 020e 13       		.uleb128 0x13
 3311 020f 3F       		.uleb128 0x3f
 3312 0210 19       		.uleb128 0x19
 3313 0211 02       		.uleb128 0x2
 3314 0212 18       		.uleb128 0x18
 3315 0213 00       		.byte	0
 3316 0214 00       		.byte	0
 3317 0215 20       		.uleb128 0x20
 3318 0216 34       		.uleb128 0x34
 3319 0217 00       		.byte	0
 3320 0218 03       		.uleb128 0x3
 3321 0219 0E       		.uleb128 0xe
 3322 021a 3A       		.uleb128 0x3a
 3323 021b 0B       		.uleb128 0xb
 3324 021c 3B       		.uleb128 0x3b
 3325 021d 0B       		.uleb128 0xb
 3326 021e 49       		.uleb128 0x49
 3327 021f 13       		.uleb128 0x13
 3328 0220 3F       		.uleb128 0x3f
 3329 0221 19       		.uleb128 0x19
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 70


 3330 0222 02       		.uleb128 0x2
 3331 0223 18       		.uleb128 0x18
 3332 0224 00       		.byte	0
 3333 0225 00       		.byte	0
 3334 0226 00       		.byte	0
 3335              		.section	.debug_aranges,"",%progbits
 3336 0000 A4000000 		.4byte	0xa4
 3337 0004 0200     		.2byte	0x2
 3338 0006 00000000 		.4byte	.Ldebug_info0
 3339 000a 04       		.byte	0x4
 3340 000b 00       		.byte	0
 3341 000c 0000     		.2byte	0
 3342 000e 0000     		.2byte	0
 3343 0010 00000000 		.4byte	.LFB63
 3344 0014 30000000 		.4byte	.LFE63-.LFB63
 3345 0018 00000000 		.4byte	.LFB64
 3346 001c 18000000 		.4byte	.LFE64-.LFB64
 3347 0020 00000000 		.4byte	.LFB65
 3348 0024 94000000 		.4byte	.LFE65-.LFB65
 3349 0028 00000000 		.4byte	.LFB66
 3350 002c 24000000 		.4byte	.LFE66-.LFB66
 3351 0030 00000000 		.4byte	.LFB67
 3352 0034 B4000000 		.4byte	.LFE67-.LFB67
 3353 0038 00000000 		.4byte	.LFB68
 3354 003c 58020000 		.4byte	.LFE68-.LFB68
 3355 0040 00000000 		.4byte	.LFB69
 3356 0044 B0000000 		.4byte	.LFE69-.LFB69
 3357 0048 00000000 		.4byte	.LFB70
 3358 004c 8C000000 		.4byte	.LFE70-.LFB70
 3359 0050 00000000 		.4byte	.LFB71
 3360 0054 8C000000 		.4byte	.LFE71-.LFB71
 3361 0058 00000000 		.4byte	.LFB72
 3362 005c 18010000 		.4byte	.LFE72-.LFB72
 3363 0060 00000000 		.4byte	.LFB73
 3364 0064 2A000000 		.4byte	.LFE73-.LFB73
 3365 0068 00000000 		.4byte	.LFB74
 3366 006c 2A000000 		.4byte	.LFE74-.LFB74
 3367 0070 00000000 		.4byte	.LFB75
 3368 0074 CC000000 		.4byte	.LFE75-.LFB75
 3369 0078 00000000 		.4byte	.LFB76
 3370 007c 52000000 		.4byte	.LFE76-.LFB76
 3371 0080 00000000 		.4byte	.LFB77
 3372 0084 2C000000 		.4byte	.LFE77-.LFB77
 3373 0088 00000000 		.4byte	.LFB78
 3374 008c 40000000 		.4byte	.LFE78-.LFB78
 3375 0090 00000000 		.4byte	.LFB79
 3376 0094 40000000 		.4byte	.LFE79-.LFB79
 3377 0098 00000000 		.4byte	.LFB80
 3378 009c 14000000 		.4byte	.LFE80-.LFB80
 3379 00a0 00000000 		.4byte	0
 3380 00a4 00000000 		.4byte	0
 3381              		.section	.debug_ranges,"",%progbits
 3382              	.Ldebug_ranges0:
 3383 0000 00000000 		.4byte	.LFB63
 3384 0004 30000000 		.4byte	.LFE63
 3385 0008 00000000 		.4byte	.LFB64
 3386 000c 18000000 		.4byte	.LFE64
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 71


 3387 0010 00000000 		.4byte	.LFB65
 3388 0014 94000000 		.4byte	.LFE65
 3389 0018 00000000 		.4byte	.LFB66
 3390 001c 24000000 		.4byte	.LFE66
 3391 0020 00000000 		.4byte	.LFB67
 3392 0024 B4000000 		.4byte	.LFE67
 3393 0028 00000000 		.4byte	.LFB68
 3394 002c 58020000 		.4byte	.LFE68
 3395 0030 00000000 		.4byte	.LFB69
 3396 0034 B0000000 		.4byte	.LFE69
 3397 0038 00000000 		.4byte	.LFB70
 3398 003c 8C000000 		.4byte	.LFE70
 3399 0040 00000000 		.4byte	.LFB71
 3400 0044 8C000000 		.4byte	.LFE71
 3401 0048 00000000 		.4byte	.LFB72
 3402 004c 18010000 		.4byte	.LFE72
 3403 0050 00000000 		.4byte	.LFB73
 3404 0054 2A000000 		.4byte	.LFE73
 3405 0058 00000000 		.4byte	.LFB74
 3406 005c 2A000000 		.4byte	.LFE74
 3407 0060 00000000 		.4byte	.LFB75
 3408 0064 CC000000 		.4byte	.LFE75
 3409 0068 00000000 		.4byte	.LFB76
 3410 006c 52000000 		.4byte	.LFE76
 3411 0070 00000000 		.4byte	.LFB77
 3412 0074 2C000000 		.4byte	.LFE77
 3413 0078 00000000 		.4byte	.LFB78
 3414 007c 40000000 		.4byte	.LFE78
 3415 0080 00000000 		.4byte	.LFB79
 3416 0084 40000000 		.4byte	.LFE79
 3417 0088 00000000 		.4byte	.LFB80
 3418 008c 14000000 		.4byte	.LFE80
 3419 0090 00000000 		.4byte	0
 3420 0094 00000000 		.4byte	0
 3421              		.section	.debug_line,"",%progbits
 3422              	.Ldebug_line0:
 3423 0000 BA030000 		.section	.debug_str,"MS",%progbits,1
 3423      02005501 
 3423      00000201 
 3423      FB0E0D00 
 3423      01010101 
 3424              	.LASF69:
 3425 0000 636F7272 		.ascii	"correction\000"
 3425      65637469 
 3425      6F6E00
 3426              	.LASF38:
 3427 000b 4144435F 		.ascii	"ADC_ISR\000"
 3427      49535200 
 3428              	.LASF77:
 3429 0013 74735F65 		.ascii	"ts_enc\000"
 3429      6E6300
 3430              	.LASF62:
 3431 001a 6D325F64 		.ascii	"m2_dist\000"
 3431      69737400 
 3432              	.LASF86:
 3433 0022 666C6167 		.ascii	"flag_packet\000"
 3433      5F706163 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 72


 3433      6B657400 
 3434              	.LASF103:
 3435 002e 2E5C6D61 		.ascii	".\\main.c\000"
 3435      696E2E63 
 3435      00
 3436              	.LASF83:
 3437 0037 666C6167 		.ascii	"flag_ts_speed\000"
 3437      5F74735F 
 3437      73706565 
 3437      6400
 3438              	.LASF33:
 3439 0045 67325F78 		.ascii	"g2_xpos\000"
 3439      706F7300 
 3440              	.LASF2:
 3441 004d 73686F72 		.ascii	"short int\000"
 3441      7420696E 
 3441      7400
 3442              	.LASF94:
 3443 0057 73797374 		.ascii	"system_state\000"
 3443      656D5F73 
 3443      74617465 
 3443      00
 3444              	.LASF9:
 3445 0064 73697A65 		.ascii	"sizetype\000"
 3445      74797065 
 3445      00
 3446              	.LASF56:
 3447 006d 6368616E 		.ascii	"changeRightWheelSpeed\000"
 3447      67655269 
 3447      67687457 
 3447      6865656C 
 3447      53706565 
 3448              	.LASF93:
 3449 0083 75736242 		.ascii	"usbBuffer\000"
 3449      75666665 
 3449      7200
 3450              	.LASF42:
 3451 008d 6D61696E 		.ascii	"main\000"
 3451      00
 3452              	.LASF67:
 3453 0092 69734C65 		.ascii	"isLeftWheel\000"
 3453      66745768 
 3453      65656C00 
 3454              	.LASF104:
 3455 009e 5C5C6669 		.ascii	"\\\\files.auckland.ac.nz\\myhome\\Desktop\\Flik\\CS"
 3455      6C65732E 
 3455      6175636B 
 3455      6C616E64 
 3455      2E61632E 
 3456 00cb 3330315F 		.ascii	"301_Class.cyprj.Archive01-20190825T234813Z-001\\CS3"
 3456      436C6173 
 3456      732E6379 
 3456      70726A2E 
 3456      41726368 
 3457 00fd 30315F43 		.ascii	"01_Class.cyprj.Archive01\\CS301_Class.cydsn\000"
 3457      6C617373 
 3457      2E637970 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 73


 3457      726A2E41 
 3457      72636869 
 3458              	.LASF48:
 3459 0128 64697374 		.ascii	"distance_to_turn\000"
 3459      616E6365 
 3459      5F746F5F 
 3459      7475726E 
 3459      00
 3460              	.LASF76:
 3461 0139 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3461      52784275 
 3461      66666572 
 3461      00
 3462              	.LASF14:
 3463 0146 75696E74 		.ascii	"uint16\000"
 3463      313600
 3464              	.LASF21:
 3465 014d 696E6465 		.ascii	"index\000"
 3465      7800
 3466              	.LASF16:
 3467 0153 696E7431 		.ascii	"int16\000"
 3467      3600
 3468              	.LASF13:
 3469 0159 75696E74 		.ascii	"uint8\000"
 3469      3800
 3470              	.LASF32:
 3471 015f 67315F64 		.ascii	"g1_direction\000"
 3471      69726563 
 3471      74696F6E 
 3471      00
 3472              	.LASF60:
 3473 016c 70726576 		.ascii	"prevCountM2\000"
 3473      436F756E 
 3473      744D3200 
 3474              	.LASF63:
 3475 0178 636F7272 		.ascii	"correctSpeed\000"
 3475      65637453 
 3475      70656564 
 3475      00
 3476              	.LASF91:
 3477 0185 6C696E65 		.ascii	"line\000"
 3477      00
 3478              	.LASF99:
 3479 018a 74696D65 		.ascii	"timer_flag\000"
 3479      725F666C 
 3479      616700
 3480              	.LASF43:
 3481 0195 676F5374 		.ascii	"goStraight\000"
 3481      72616967 
 3481      687400
 3482              	.LASF18:
 3483 01a0 666C6F61 		.ascii	"float\000"
 3483      7400
 3484              	.LASF6:
 3485 01a6 6C6F6E67 		.ascii	"long long int\000"
 3485      206C6F6E 
 3485      6720696E 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 74


 3485      7400
 3486              	.LASF75:
 3487 01b4 75736250 		.ascii	"usbPutString\000"
 3487      75745374 
 3487      72696E67 
 3487      00
 3488              	.LASF15:
 3489 01c1 696E7438 		.ascii	"int8\000"
 3489      00
 3490              	.LASF106:
 3491 01c6 75706461 		.ascii	"updateSensorValues\000"
 3491      74655365 
 3491      6E736F72 
 3491      56616C75 
 3491      657300
 3492              	.LASF82:
 3493 01d9 666C6167 		.ascii	"flag_ts_update\000"
 3493      5F74735F 
 3493      75706461 
 3493      746500
 3494              	.LASF34:
 3495 01e8 67325F79 		.ascii	"g2_ypos\000"
 3495      706F7300 
 3496              	.LASF28:
 3497 01f0 67305F64 		.ascii	"g0_direction\000"
 3497      69726563 
 3497      74696F6E 
 3497      00
 3498              	.LASF72:
 3499 01fd 72696768 		.ascii	"rightIsForward\000"
 3499      74497346 
 3499      6F727761 
 3499      726400
 3500              	.LASF102:
 3501 020c 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3501      4320342E 
 3501      392E3320 
 3501      32303135 
 3501      30333033 
 3502 023f 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3502      20726576 
 3502      6973696F 
 3502      6E203232 
 3502      31323230 
 3503 0272 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3503      66756E63 
 3503      74696F6E 
 3503      2D736563 
 3503      74696F6E 
 3504              	.LASF24:
 3505 029a 726F626F 		.ascii	"robot_orientation\000"
 3505      745F6F72 
 3505      69656E74 
 3505      6174696F 
 3505      6E00
 3506              	.LASF84:
 3507 02ac 666C6167 		.ascii	"flag_ts_display\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 75


 3507      5F74735F 
 3507      64697370 
 3507      6C617900 
 3508              	.LASF85:
 3509 02bc 666C6167 		.ascii	"flag_rx\000"
 3509      5F727800 
 3510              	.LASF97:
 3511 02c4 6164635F 		.ascii	"adc_readings\000"
 3511      72656164 
 3511      696E6773 
 3511      00
 3512              	.LASF30:
 3513 02d1 67315F79 		.ascii	"g1_ypos\000"
 3513      706F7300 
 3514              	.LASF59:
 3515 02d9 70726576 		.ascii	"prevCountM1\000"
 3515      436F756E 
 3515      744D3100 
 3516              	.LASF47:
 3517 02e5 64656772 		.ascii	"degrees\000"
 3517      65657300 
 3518              	.LASF1:
 3519 02ed 756E7369 		.ascii	"unsigned char\000"
 3519      676E6564 
 3519      20636861 
 3519      7200
 3520              	.LASF27:
 3521 02fb 67305F73 		.ascii	"g0_speed\000"
 3521      70656564 
 3521      00
 3522              	.LASF73:
 3523 0304 7475726E 		.ascii	"turnLeft\000"
 3523      4C656674 
 3523      00
 3524              	.LASF37:
 3525 030d 454E434F 		.ascii	"ENCODER_ISR\000"
 3525      4445525F 
 3525      49535200 
 3526              	.LASF0:
 3527 0319 7369676E 		.ascii	"signed char\000"
 3527      65642063 
 3527      68617200 
 3528              	.LASF66:
 3529 0325 64657369 		.ascii	"desired_count\000"
 3529      7265645F 
 3529      636F756E 
 3529      7400
 3530              	.LASF7:
 3531 0333 6C6F6E67 		.ascii	"long long unsigned int\000"
 3531      206C6F6E 
 3531      6720756E 
 3531      7369676E 
 3531      65642069 
 3532              	.LASF92:
 3533 034a 656E7472 		.ascii	"entry\000"
 3533      7900
 3534              	.LASF8:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 76


 3535 0350 756E7369 		.ascii	"unsigned int\000"
 3535      676E6564 
 3535      20696E74 
 3535      00
 3536              	.LASF61:
 3537 035d 6D315F64 		.ascii	"m1_dist\000"
 3537      69737400 
 3538              	.LASF87:
 3539 0365 666C6167 		.ascii	"flag_KB_string\000"
 3539      5F4B425F 
 3539      73747269 
 3539      6E6700
 3540              	.LASF46:
 3541 0374 7475726E 		.ascii	"turnForDegrees\000"
 3541      466F7244 
 3541      65677265 
 3541      657300
 3542              	.LASF5:
 3543 0383 6C6F6E67 		.ascii	"long unsigned int\000"
 3543      20756E73 
 3543      69676E65 
 3543      6420696E 
 3543      7400
 3544              	.LASF64:
 3545 0395 70726576 		.ascii	"prevCount\000"
 3545      436F756E 
 3545      7400
 3546              	.LASF35:
 3547 039f 67325F73 		.ascii	"g2_speed\000"
 3547      70656564 
 3547      00
 3548              	.LASF29:
 3549 03a8 67315F78 		.ascii	"g1_xpos\000"
 3549      706F7300 
 3550              	.LASF3:
 3551 03b0 73686F72 		.ascii	"short unsigned int\000"
 3551      7420756E 
 3551      7369676E 
 3551      65642069 
 3551      6E7400
 3552              	.LASF105:
 3553 03c3 64617461 		.ascii	"data_main\000"
 3553      5F6D6169 
 3553      6E00
 3554              	.LASF45:
 3555 03cd 64697374 		.ascii	"distance\000"
 3555      616E6365 
 3555      00
 3556              	.LASF10:
 3557 03d6 63686172 		.ascii	"char\000"
 3557      00
 3558              	.LASF95:
 3559 03db 6164635F 		.ascii	"adc_flag\000"
 3559      666C6167 
 3559      00
 3560              	.LASF4:
 3561 03e4 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 77


 3561      20696E74 
 3561      00
 3562              	.LASF22:
 3563 03ed 726F626F 		.ascii	"robot_xpos\000"
 3563      745F7870 
 3563      6F7300
 3564              	.LASF50:
 3565 03f8 73686172 		.ascii	"sharpTurnLeft\000"
 3565      70547572 
 3565      6E4C6566 
 3565      7400
 3566              	.LASF12:
 3567 0406 696E7433 		.ascii	"int32_t\000"
 3567      325F7400 
 3568              	.LASF49:
 3569 040e 64697374 		.ascii	"distance_turned\000"
 3569      616E6365 
 3569      5F747572 
 3569      6E656400 
 3570              	.LASF36:
 3571 041e 67325F64 		.ascii	"g2_direction\000"
 3571      69726563 
 3571      74696F6E 
 3571      00
 3572              	.LASF98:
 3573 042b 73616D70 		.ascii	"sample_count\000"
 3573      6C655F63 
 3573      6F756E74 
 3573      00
 3574              	.LASF31:
 3575 0438 67315F73 		.ascii	"g1_speed\000"
 3575      70656564 
 3575      00
 3576              	.LASF52:
 3577 0441 75547572 		.ascii	"uTurn\000"
 3577      6E00
 3578              	.LASF57:
 3579 0447 67657456 		.ascii	"getValForChannel\000"
 3579      616C466F 
 3579      72436861 
 3579      6E6E656C 
 3579      00
 3580              	.LASF90:
 3581 0458 64697370 		.ascii	"displaystring\000"
 3581      6C617973 
 3581      7472696E 
 3581      6700
 3582              	.LASF44:
 3583 0466 64657369 		.ascii	"desired_distance\000"
 3583      7265645F 
 3583      64697374 
 3583      616E6365 
 3583      00
 3584              	.LASF53:
 3585 0477 6368616E 		.ascii	"changeLeftWheelSpeed\000"
 3585      67654C65 
 3585      66745768 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 78


 3585      65656C53 
 3585      70656564 
 3586              	.LASF41:
 3587 048c 72656164 		.ascii	"reading\000"
 3587      696E6700 
 3588              	.LASF25:
 3589 0494 67305F78 		.ascii	"g0_xpos\000"
 3589      706F7300 
 3590              	.LASF39:
 3591 049c 72696768 		.ascii	"right_wheel_count\000"
 3591      745F7768 
 3591      65656C5F 
 3591      636F756E 
 3591      7400
 3592              	.LASF40:
 3593 04ae 6C656674 		.ascii	"left_wheel_count\000"
 3593      5F776865 
 3593      656C5F63 
 3593      6F756E74 
 3593      00
 3594              	.LASF17:
 3595 04bf 696E7433 		.ascii	"int32\000"
 3595      3200
 3596              	.LASF19:
 3597 04c5 646F7562 		.ascii	"double\000"
 3597      6C6500
 3598              	.LASF68:
 3599 04cc 64696666 		.ascii	"diff_count\000"
 3599      5F636F75 
 3599      6E7400
 3600              	.LASF88:
 3601 04d7 64617461 		.ascii	"dataready_flag\000"
 3601      72656164 
 3601      795F666C 
 3601      616700
 3602              	.LASF79:
 3603 04e6 74735F73 		.ascii	"ts_speed\000"
 3603      70656564 
 3603      00
 3604              	.LASF65:
 3605 04ef 636F756E 		.ascii	"count\000"
 3605      7400
 3606              	.LASF81:
 3607 04f5 666C6167 		.ascii	"flag_ts_enc\000"
 3607      5F74735F 
 3607      656E6300 
 3608              	.LASF11:
 3609 0501 5F5F696E 		.ascii	"__int32_t\000"
 3609      7433325F 
 3609      7400
 3610              	.LASF100:
 3611 050b 636F756E 		.ascii	"countM1\000"
 3611      744D3100 
 3612              	.LASF101:
 3613 0513 636F756E 		.ascii	"countM2\000"
 3613      744D3200 
 3614              	.LASF55:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 79


 3615 051b 6E65775F 		.ascii	"new_value\000"
 3615      76616C75 
 3615      6500
 3616              	.LASF26:
 3617 0525 67305F79 		.ascii	"g0_ypos\000"
 3617      706F7300 
 3618              	.LASF74:
 3619 052d 7475726E 		.ascii	"turnRight\000"
 3619      52696768 
 3619      7400
 3620              	.LASF80:
 3621 0537 74735F64 		.ascii	"ts_display\000"
 3621      6973706C 
 3621      617900
 3622              	.LASF78:
 3623 0542 74735F75 		.ascii	"ts_update\000"
 3623      70646174 
 3623      6500
 3624              	.LASF58:
 3625 054c 67657444 		.ascii	"getDistance\000"
 3625      69737461 
 3625      6E636500 
 3626              	.LASF70:
 3627 0558 73657457 		.ascii	"setWheelDirection\000"
 3627      6865656C 
 3627      44697265 
 3627      6374696F 
 3627      6E00
 3628              	.LASF89:
 3629 056a 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3629      5F72665F 
 3629      7472616E 
 3629      736D6973 
 3629      73696F6E 
 3630              	.LASF23:
 3631 0586 726F626F 		.ascii	"robot_ypos\000"
 3631      745F7970 
 3631      6F7300
 3632              	.LASF54:
 3633 0591 616D6F75 		.ascii	"amount\000"
 3633      6E7400
 3634              	.LASF96:
 3635 0598 73656E73 		.ascii	"sensor_readings\000"
 3635      6F725F72 
 3635      65616469 
 3635      6E677300 
 3636              	.LASF20:
 3637 05a8 72737369 		.ascii	"rssi\000"
 3637      00
 3638              	.LASF71:
 3639 05ad 6C656674 		.ascii	"leftIsForward\000"
 3639      4973466F 
 3639      72776172 
 3639      6400
 3640              	.LASF51:
 3641 05bb 73686172 		.ascii	"sharpTurnRight\000"
 3641      70547572 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\cc8QQi6R.s 			page 80


 3641      6E526967 
 3641      687400
 3642              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
