ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	displaystring
  95 0001 000000   		.align	2
  96              		.type	displaystring, %object
  97              		.size	displaystring, 64
  98              	displaystring:
  99 0004 43533330 		.ascii	"CS301 2020\012\000"
  99      31203230 
  99      32300A00 
 100 0010 00000000 		.space	52
 100      00000000 
 100      00000000 
 100      00000000 
 100      00000000 
 101              		.comm	line,64,4
 102              		.comm	entry,64,4
 103              		.comm	usbBuffer,64,4
 104              		.comm	system_state,32,4
 105              		.global	adc_flag
 106              		.bss
 107 0012 0000     		.align	2
 108              		.type	adc_flag, %object
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 3


 109              		.size	adc_flag, 4
 110              	adc_flag:
 111 0014 00000000 		.space	4
 112              		.global	sensor_readings
 113              		.align	2
 114              		.type	sensor_readings, %object
 115              		.size	sensor_readings, 6
 116              	sensor_readings:
 117 0018 00000000 		.space	6
 117      0000
 118              		.global	adc_readings
 119 001e 0000     		.align	2
 120              		.type	adc_readings, %object
 121              		.size	adc_readings, 24
 122              	adc_readings:
 123 0020 00000000 		.space	24
 123      00000000 
 123      00000000 
 123      00000000 
 123      00000000 
 124              		.global	sample_count
 125              		.align	2
 126              		.type	sample_count, %object
 127              		.size	sample_count, 4
 128              	sample_count:
 129 0038 00000000 		.space	4
 130              		.global	timer_flag
 131              		.align	2
 132              		.type	timer_flag, %object
 133              		.size	timer_flag, 4
 134              	timer_flag:
 135 003c 00000000 		.space	4
 136              		.global	countM1
 137              		.align	2
 138              		.type	countM1, %object
 139              		.size	countM1, 4
 140              	countM1:
 141 0040 00000000 		.space	4
 142              		.global	countM2
 143              		.align	2
 144              		.type	countM2, %object
 145              		.size	countM2, 4
 146              	countM2:
 147 0044 00000000 		.space	4
 148              		.global	prevCountM1
 149              		.align	2
 150              		.type	prevCountM1, %object
 151              		.size	prevCountM1, 4
 152              	prevCountM1:
 153 0048 00000000 		.space	4
 154              		.global	prevCountM2
 155              		.align	2
 156              		.type	prevCountM2, %object
 157              		.size	prevCountM2, 4
 158              	prevCountM2:
 159 004c 00000000 		.space	4
 160              		.section	.text.ENCODER_ISR,"ax",%progbits
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 4


 161              		.align	2
 162              		.global	ENCODER_ISR
 163              		.thumb
 164              		.thumb_func
 165              		.type	ENCODER_ISR, %function
 166              	ENCODER_ISR:
 167              	.LFB63:
 168              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  * 2019 COMPSYS 
   3:.\main.c      ****  * 302 GROUP 2
   4:.\main.c      ****  * FLIK
   5:.\main.c      **** */
   6:.\main.c      **** // ================== INCLUDE ======================
   7:.\main.c      **** #include <stdio.h>
   8:.\main.c      **** #include <string.h>
   9:.\main.c      **** #include <stdlib.h>
  10:.\main.c      **** #include <project.h>
  11:.\main.c      **** 
  12:.\main.c      **** #include "defines.h"
  13:.\main.c      **** #include "vars.h"
  14:.\main.c      **** // =================== MACROS =====================
  15:.\main.c      **** // SENSOR MAPPINGS
  16:.\main.c      **** #define TOP_LEFT_SENSOR 0
  17:.\main.c      **** #define TOP_MID_SENSOR 1
  18:.\main.c      **** #define TOP_RIGHT_SENSOR 2
  19:.\main.c      **** #define BOTTOM_LEFT_SENSOR 3
  20:.\main.c      **** #define BOTTOM_MID_SENSOR 4
  21:.\main.c      **** #define BOTTOM_RIGHT_SENSOR 5
  22:.\main.c      **** 
  23:.\main.c      **** // LIGHT SENSORS
  24:.\main.c      **** #define NUM_SENSORS 6
  25:.\main.c      **** #define LIGHT_LEVEL 300
  26:.\main.c      **** 
  27:.\main.c      **** // ADC
  28:.\main.c      **** #define ADC_READINGS_SIZE 90
  29:.\main.c      **** 
  30:.\main.c      **** // Speed calculations
  31:.\main.c      **** #define LINEAR_DISTANCE_PER_REV 20.42035225
  32:.\main.c      **** #define TICKS_PER_REV 228
  33:.\main.c      **** #define TIMER_PERIOD 0.03
  34:.\main.c      **** 
  35:.\main.c      **** // Speed control
  36:.\main.c      **** #define DESIRED_COUNT 8
  37:.\main.c      **** #define TURN_SPEED 450
  38:.\main.c      **** 
  39:.\main.c      **** // Distances
  40:.\main.c      **** #define GRID_SIZE 12
  41:.\main.c      **** #define HALF_ROBOT_LENGTH 10
  42:.\main.c      **** #define SMALL_FORWARD_DISTANCE 8
  43:.\main.c      **** 
  44:.\main.c      **** // Line following macros - require calibration
  45:.\main.c      **** #define ADJUST_SPEED_LARGE 3
  46:.\main.c      **** #define ADJUST_SPEED_SMALL 1
  47:.\main.c      **** #define MAX_SPEED 9
  48:.\main.c      **** #define MIN_SPEED 4
  49:.\main.c      **** #define SLOW_DOWN_SPEED 1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 5


  50:.\main.c      **** 
  51:.\main.c      **** // Debug flag - uncomment when debugging
  52:.\main.c      **** //#define PUTTY
  53:.\main.c      **** //* ================= FUNCTIONS =======================
  54:.\main.c      **** void usbPutString(char *s);
  55:.\main.c      **** 
  56:.\main.c      **** // sensors
  57:.\main.c      **** int32 getValForChannel(int16 n);
  58:.\main.c      **** void updateSensorValues();
  59:.\main.c      **** 
  60:.\main.c      **** // general
  61:.\main.c      **** void changeRightWheelSpeed(int amount);
  62:.\main.c      **** void changeLeftWheelSpeed(int amount);
  63:.\main.c      **** void invertWheels();
  64:.\main.c      **** void setWheelDirection(int isLeftForward, int isRightForward);
  65:.\main.c      **** void correctSpeed(int prevCount, int count, int desired_count, int isLeftWheel);
  66:.\main.c      **** float getDistance(int prevCountM1, int prevCountM2);
  67:.\main.c      **** 
  68:.\main.c      **** // straight
  69:.\main.c      **** void turnRight();
  70:.\main.c      **** void turnLeft();
  71:.\main.c      **** void goStraightForBlock(int desired_blocks, int *right_speed_count, int *left_wheel_count);
  72:.\main.c      **** 
  73:.\main.c      **** // turning
  74:.\main.c      **** void turnForDegrees(int degrees);
  75:.\main.c      **** void sharpTurnRight();
  76:.\main.c      **** void sharpTurnLeft();
  77:.\main.c      **** void uTurn(int *left_wheel_count, int *right_wheel_count);
  78:.\main.c      **** //* ================= GLOBAL VARIABLES =======================
  79:.\main.c      **** // ADC
  80:.\main.c      **** volatile int adc_flag = FALSE;
  81:.\main.c      **** int8 sensor_readings[NUM_SENSORS] = { 0 };
  82:.\main.c      **** int adc_readings[NUM_SENSORS] = { 0 };
  83:.\main.c      **** int sample_count = 0;
  84:.\main.c      **** // Encoder
  85:.\main.c      **** volatile int timer_flag = FALSE;
  86:.\main.c      **** volatile int countM1 = 0;
  87:.\main.c      **** volatile int countM2 = 0;
  88:.\main.c      **** int prevCountM1 = 0;
  89:.\main.c      **** int prevCountM2 = 0;
  90:.\main.c      **** //* ================== ISR ======================
  91:.\main.c      **** CY_ISR(ENCODER_ISR) {
 169              		.loc 1 91 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 1, uses_anonymous_args = 0
 173 0000 80B5     		push	{r7, lr}
 174              		.cfi_def_cfa_offset 8
 175              		.cfi_offset 7, -8
 176              		.cfi_offset 14, -4
 177 0002 00AF     		add	r7, sp, #0
 178              		.cfi_def_cfa_register 7
  92:.\main.c      ****     countM1 = QuadDec_M1_GetCounter();
 179              		.loc 1 92 0
 180 0004 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 181 0008 0346     		mov	r3, r0
 182 000a 1A46     		mov	r2, r3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 6


 183 000c 054B     		ldr	r3, .L2
 184 000e 1A60     		str	r2, [r3]
  93:.\main.c      ****     countM2 = QuadDec_M2_GetCounter();
 185              		.loc 1 93 0
 186 0010 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 187 0014 0346     		mov	r3, r0
 188 0016 1A46     		mov	r2, r3
 189 0018 034B     		ldr	r3, .L2+4
 190 001a 1A60     		str	r2, [r3]
  94:.\main.c      ****     timer_flag = TRUE;
 191              		.loc 1 94 0
 192 001c 034B     		ldr	r3, .L2+8
 193 001e 0122     		movs	r2, #1
 194 0020 1A60     		str	r2, [r3]
  95:.\main.c      **** }
 195              		.loc 1 95 0
 196 0022 80BD     		pop	{r7, pc}
 197              	.L3:
 198              		.align	2
 199              	.L2:
 200 0024 00000000 		.word	countM1
 201 0028 00000000 		.word	countM2
 202 002c 00000000 		.word	timer_flag
 203              		.cfi_endproc
 204              	.LFE63:
 205              		.size	ENCODER_ISR, .-ENCODER_ISR
 206              		.section	.text.ADC_ISR,"ax",%progbits
 207              		.align	2
 208              		.global	ADC_ISR
 209              		.thumb
 210              		.thumb_func
 211              		.type	ADC_ISR, %function
 212              	ADC_ISR:
 213              	.LFB64:
  96:.\main.c      **** 
  97:.\main.c      **** /* ### Retrieve and Store Measurements ### */
  98:.\main.c      **** CY_ISR(ADC_ISR) {
 214              		.loc 1 98 0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 1, uses_anonymous_args = 0
 218              		@ link register save eliminated.
 219 0000 80B4     		push	{r7}
 220              		.cfi_def_cfa_offset 4
 221              		.cfi_offset 7, -4
 222 0002 00AF     		add	r7, sp, #0
 223              		.cfi_def_cfa_register 7
  99:.\main.c      ****     adc_flag = TRUE;
 224              		.loc 1 99 0
 225 0004 034B     		ldr	r3, .L5
 226 0006 0122     		movs	r2, #1
 227 0008 1A60     		str	r2, [r3]
 100:.\main.c      **** }
 228              		.loc 1 100 0
 229 000a BD46     		mov	sp, r7
 230              		.cfi_def_cfa_register 13
 231              		@ sp needed
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 7


 232 000c 5DF8047B 		ldr	r7, [sp], #4
 233              		.cfi_restore 7
 234              		.cfi_def_cfa_offset 0
 235 0010 7047     		bx	lr
 236              	.L6:
 237 0012 00BF     		.align	2
 238              	.L5:
 239 0014 00000000 		.word	adc_flag
 240              		.cfi_endproc
 241              	.LFE64:
 242              		.size	ADC_ISR, .-ADC_ISR
 243              		.section	.rodata
 244              		.align	2
 245              	.LC0:
 246 0000 53686172 		.ascii	"Sharp turn right\015\012\000"
 246      70207475 
 246      726E2072 
 246      69676874 
 246      0D0A00
 247 0013 00       		.align	2
 248              	.LC1:
 249 0014 53686172 		.ascii	"Sharp turn left\015\012\000"
 249      70207475 
 249      726E206C 
 249      6566740D 
 249      0A00
 250 0026 0000     		.align	2
 251              	.LC2:
 252 0028 55207475 		.ascii	"U turn\015\012\000"
 252      726E0D0A 
 252      00
 253 0031 000000   		.align	2
 254              	.LC3:
 255 0034 53747261 		.ascii	"Straight\015\012\000"
 255      69676874 
 255      0D0A00
 256              		.section	.text.main,"ax",%progbits
 257              		.align	2
 258              		.global	main
 259              		.thumb
 260              		.thumb_func
 261              		.type	main, %function
 262              	main:
 263              	.LFB65:
 101:.\main.c      **** 
 102:.\main.c      **** /** ## Notes
 103:.\main.c      ****     
 104:.\main.c      ****     Ratio of linear distance to quad decoder ticks
 105:.\main.c      ****     One revolution gives a linear distance (in cm)
 106:.\main.c      ****     Each revolution is 57 ticks (228 for 4x mode)
 107:.\main.c      ****     Centimetres per tick = linear distance / countM(1|2)
 108:.\main.c      ****     
 109:.\main.c      ****     Decoder use a 4x count, so each revolution gives 4 counts
 110:.\main.c      ****     Sampling rate is determined by our 100ms timer (might be a little slow)
 111:.\main.c      ****     
 112:.\main.c      ****     ## Algorithm Control Flow
 113:.\main.c      ****     - Get ADC value for each channel
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 8


 114:.\main.c      ****     - Get decoder val for M1 & M2
 115:.\main.c      ****     - Use these values to drive the movement of the robot
 116:.\main.c      ****     
 117:.\main.c      **** */
 118:.\main.c      **** 
 119:.\main.c      **** int main()
 120:.\main.c      **** {
 264              		.loc 1 120 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 48
 267              		@ frame_needed = 1, uses_anonymous_args = 0
 268 0000 80B5     		push	{r7, lr}
 269              		.cfi_def_cfa_offset 8
 270              		.cfi_offset 7, -8
 271              		.cfi_offset 14, -4
 272 0002 8CB0     		sub	sp, sp, #48
 273              		.cfi_def_cfa_offset 56
 274 0004 00AF     		add	r7, sp, #0
 275              		.cfi_def_cfa_register 7
 121:.\main.c      ****     // delay
 122:.\main.c      ****     CyDelay(2000);
 276              		.loc 1 122 0
 277 0006 4FF4FA60 		mov	r0, #2000
 278 000a FFF7FEFF 		bl	CyDelay
 123:.\main.c      ****     
 124:.\main.c      ****     // --------------------------------
 125:.\main.c      ****     // ----- INITIALIZATIONS ----------
 126:.\main.c      ****     // ========================================
 127:.\main.c      ****     CYGlobalIntEnable;
 279              		.loc 1 127 0
 280              	@ 127 ".\main.c" 1
 281 000e 62B6     		CPSIE   i
 282              	@ 0 "" 2
 128:.\main.c      ****     
 129:.\main.c      ****     // PWMs
 130:.\main.c      ****     PWM_1_Start();
 283              		.loc 1 130 0
 284              		.thumb
 285 0010 FFF7FEFF 		bl	PWM_1_Start
 131:.\main.c      ****     PWM_2_Start();
 286              		.loc 1 131 0
 287 0014 FFF7FEFF 		bl	PWM_2_Start
 132:.\main.c      ****     
 133:.\main.c      ****     // Timer for encoder
 134:.\main.c      ****     Timer_TS_Start();
 288              		.loc 1 134 0
 289 0018 FFF7FEFF 		bl	Timer_TS_Start
 135:.\main.c      ****     isr_TS_Start(); // Timer interrupts need to be started independently
 290              		.loc 1 135 0
 291 001c FFF7FEFF 		bl	isr_TS_Start
 136:.\main.c      ****     isr_TS_StartEx(ENCODER_ISR);
 292              		.loc 1 136 0
 293 0020 6748     		ldr	r0, .L15
 294 0022 FFF7FEFF 		bl	isr_TS_StartEx
 137:.\main.c      ****     
 138:.\main.c      ****     // Quad Decoders
 139:.\main.c      ****     QuadDec_M1_Start();
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 9


 295              		.loc 1 139 0
 296 0026 FFF7FEFF 		bl	QuadDec_M1_Start
 140:.\main.c      ****     QuadDec_M2_Start();
 297              		.loc 1 140 0
 298 002a FFF7FEFF 		bl	QuadDec_M2_Start
 141:.\main.c      ****     
 142:.\main.c      ****     // ADC
 143:.\main.c      ****     ADC_Start(); // Start ADC
 299              		.loc 1 143 0
 300 002e FFF7FEFF 		bl	ADC_Start
 144:.\main.c      ****     ADC_IRQ_Enable(); // Enable ADC interrupts
 301              		.loc 1 144 0
 302 0032 FFF7FEFF 		bl	ADC_IRQ_Enable
 145:.\main.c      ****     ADC_StartConvert(); // Start conversions
 303              		.loc 1 145 0
 304 0036 FFF7FEFF 		bl	ADC_StartConvert
 146:.\main.c      ****     isr_eoc_StartEx(ADC_ISR); // link interrupt for ADC
 305              		.loc 1 146 0
 306 003a 6248     		ldr	r0, .L15+4
 307 003c FFF7FEFF 		bl	isr_eoc_StartEx
 147:.\main.c      **** 
 148:.\main.c      ****     // ------------ USB SETUP ------------    
 149:.\main.c      ****     #ifdef USE_USB    
 150:.\main.c      ****         USBUART_Start(0, USBUART_5V_OPERATION);
 308              		.loc 1 150 0
 309 0040 0020     		movs	r0, #0
 310 0042 0121     		movs	r1, #1
 311 0044 FFF7FEFF 		bl	USBUART_Start
 151:.\main.c      ****     #endif            
 152:.\main.c      ****     
 153:.\main.c      ****     // To make sure wheels rotate in the same direction i.e. forward
 154:.\main.c      ****     INV2_Write(1);
 312              		.loc 1 154 0
 313 0048 0120     		movs	r0, #1
 314 004a FFF7FEFF 		bl	INV2_Write
 155:.\main.c      ****     
 156:.\main.c      ****     int right_wheel_count = DESIRED_COUNT;
 315              		.loc 1 156 0
 316 004e 0823     		movs	r3, #8
 317 0050 7B62     		str	r3, [r7, #36]
 157:.\main.c      ****     int left_wheel_count = DESIRED_COUNT;
 318              		.loc 1 157 0
 319 0052 0823     		movs	r3, #8
 320 0054 3B62     		str	r3, [r7, #32]
 158:.\main.c      ****     
 159:.\main.c      ****     char directions[32] = {'4', 'L', '6', 'L', '2', 'L', '4', 'R', '4', 'L', '2', 'R', '6', 'R', '2
 321              		.loc 1 159 0
 322 0056 3B46     		mov	r3, r7
 323 0058 0022     		movs	r2, #0
 324 005a 1A60     		str	r2, [r3]
 325 005c 0433     		adds	r3, r3, #4
 326 005e 0022     		movs	r2, #0
 327 0060 1A60     		str	r2, [r3]
 328 0062 0433     		adds	r3, r3, #4
 329 0064 0022     		movs	r2, #0
 330 0066 1A60     		str	r2, [r3]
 331 0068 0433     		adds	r3, r3, #4
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 10


 332 006a 0022     		movs	r2, #0
 333 006c 1A60     		str	r2, [r3]
 334 006e 0433     		adds	r3, r3, #4
 335 0070 0022     		movs	r2, #0
 336 0072 1A60     		str	r2, [r3]
 337 0074 0433     		adds	r3, r3, #4
 338 0076 0022     		movs	r2, #0
 339 0078 1A60     		str	r2, [r3]
 340 007a 0433     		adds	r3, r3, #4
 341 007c 0022     		movs	r2, #0
 342 007e 1A60     		str	r2, [r3]
 343 0080 0433     		adds	r3, r3, #4
 344 0082 0022     		movs	r2, #0
 345 0084 1A60     		str	r2, [r3]
 346 0086 0433     		adds	r3, r3, #4
 347 0088 3423     		movs	r3, #52
 348 008a 3B70     		strb	r3, [r7]
 349 008c 4C23     		movs	r3, #76
 350 008e 7B70     		strb	r3, [r7, #1]
 351 0090 3623     		movs	r3, #54
 352 0092 BB70     		strb	r3, [r7, #2]
 353 0094 4C23     		movs	r3, #76
 354 0096 FB70     		strb	r3, [r7, #3]
 355 0098 3223     		movs	r3, #50
 356 009a 3B71     		strb	r3, [r7, #4]
 357 009c 4C23     		movs	r3, #76
 358 009e 7B71     		strb	r3, [r7, #5]
 359 00a0 3423     		movs	r3, #52
 360 00a2 BB71     		strb	r3, [r7, #6]
 361 00a4 5223     		movs	r3, #82
 362 00a6 FB71     		strb	r3, [r7, #7]
 363 00a8 3423     		movs	r3, #52
 364 00aa 3B72     		strb	r3, [r7, #8]
 365 00ac 4C23     		movs	r3, #76
 366 00ae 7B72     		strb	r3, [r7, #9]
 367 00b0 3223     		movs	r3, #50
 368 00b2 BB72     		strb	r3, [r7, #10]
 369 00b4 5223     		movs	r3, #82
 370 00b6 FB72     		strb	r3, [r7, #11]
 371 00b8 3623     		movs	r3, #54
 372 00ba 3B73     		strb	r3, [r7, #12]
 373 00bc 5223     		movs	r3, #82
 374 00be 7B73     		strb	r3, [r7, #13]
 375 00c0 3223     		movs	r3, #50
 376 00c2 BB73     		strb	r3, [r7, #14]
 377 00c4 5223     		movs	r3, #82
 378 00c6 FB73     		strb	r3, [r7, #15]
 379 00c8 3223     		movs	r3, #50
 380 00ca 3B74     		strb	r3, [r7, #16]
 381 00cc 4C23     		movs	r3, #76
 382 00ce 7B74     		strb	r3, [r7, #17]
 383 00d0 3223     		movs	r3, #50
 384 00d2 BB74     		strb	r3, [r7, #18]
 385 00d4 5223     		movs	r3, #82
 386 00d6 FB74     		strb	r3, [r7, #19]
 387 00d8 3223     		movs	r3, #50
 388 00da 3B75     		strb	r3, [r7, #20]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 11


 389 00dc 4C23     		movs	r3, #76
 390 00de 7B75     		strb	r3, [r7, #21]
 391 00e0 3523     		movs	r3, #53
 392 00e2 BB75     		strb	r3, [r7, #22]
 393 00e4 3523     		movs	r3, #53
 394 00e6 FB75     		strb	r3, [r7, #23]
 395 00e8 4C23     		movs	r3, #76
 396 00ea 3B76     		strb	r3, [r7, #24]
 397 00ec 3423     		movs	r3, #52
 398 00ee 7B76     		strb	r3, [r7, #25]
 399 00f0 4C23     		movs	r3, #76
 400 00f2 BB76     		strb	r3, [r7, #26]
 401 00f4 3223     		movs	r3, #50
 402 00f6 FB76     		strb	r3, [r7, #27]
 403 00f8 5523     		movs	r3, #85
 404 00fa 3B77     		strb	r3, [r7, #28]
 160:.\main.c      ****     //char directions[8] = {'4', 'L', '6', 'U', '6', 'R', '4'};
 161:.\main.c      ****     //char directions[8] = {'4', 'U'};
 162:.\main.c      ****     //char directions[8] = {'2', 'R', '2', 'R', '4', 'L', '4', 'U'};
 163:.\main.c      ****     //char directions[8] = {'4', 'L', '4', 'R', '2', 'R'};
 164:.\main.c      ****     //char directions[8] = {'4', 'R', '4'};
 165:.\main.c      ****     int direction_index = 0;
 405              		.loc 1 165 0
 406 00fc 0023     		movs	r3, #0
 407 00fe FB62     		str	r3, [r7, #44]
 166:.\main.c      ****     
 167:.\main.c      ****     while (directions[direction_index] != 0) {
 408              		.loc 1 167 0
 409 0100 4AE0     		b	.L8
 410              	.L13:
 168:.\main.c      ****         if (directions[direction_index] == 'R') {
 411              		.loc 1 168 0
 412 0102 3A46     		mov	r2, r7
 413 0104 FB6A     		ldr	r3, [r7, #44]
 414 0106 1344     		add	r3, r3, r2
 415 0108 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 416 010a 522B     		cmp	r3, #82
 417 010c 0BD1     		bne	.L9
 169:.\main.c      ****             usbPutString("Sharp turn right\r\n");
 418              		.loc 1 169 0
 419 010e 2E48     		ldr	r0, .L15+8
 420 0110 FFF7FEFF 		bl	usbPutString
 170:.\main.c      ****             sharpTurnRight(&right_wheel_count, &left_wheel_count);
 421              		.loc 1 170 0
 422 0114 07F12402 		add	r2, r7, #36
 423 0118 07F12003 		add	r3, r7, #32
 424 011c 1046     		mov	r0, r2
 425 011e 1946     		mov	r1, r3
 426 0120 FFF7FEFF 		bl	sharpTurnRight
 427 0124 35E0     		b	.L10
 428              	.L9:
 171:.\main.c      ****         } else if (directions[direction_index] == 'L') {
 429              		.loc 1 171 0
 430 0126 3A46     		mov	r2, r7
 431 0128 FB6A     		ldr	r3, [r7, #44]
 432 012a 1344     		add	r3, r3, r2
 433 012c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 12


 434 012e 4C2B     		cmp	r3, #76
 435 0130 0BD1     		bne	.L11
 172:.\main.c      ****             usbPutString("Sharp turn left\r\n");
 436              		.loc 1 172 0
 437 0132 2648     		ldr	r0, .L15+12
 438 0134 FFF7FEFF 		bl	usbPutString
 173:.\main.c      ****             sharpTurnLeft(&right_wheel_count, &left_wheel_count);
 439              		.loc 1 173 0
 440 0138 07F12402 		add	r2, r7, #36
 441 013c 07F12003 		add	r3, r7, #32
 442 0140 1046     		mov	r0, r2
 443 0142 1946     		mov	r1, r3
 444 0144 FFF7FEFF 		bl	sharpTurnLeft
 445 0148 23E0     		b	.L10
 446              	.L11:
 174:.\main.c      ****         } else if (directions[direction_index] == 'U') {
 447              		.loc 1 174 0
 448 014a 3A46     		mov	r2, r7
 449 014c FB6A     		ldr	r3, [r7, #44]
 450 014e 1344     		add	r3, r3, r2
 451 0150 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 452 0152 552B     		cmp	r3, #85
 453 0154 0BD1     		bne	.L12
 175:.\main.c      ****             usbPutString("U turn\r\n");
 454              		.loc 1 175 0
 455 0156 1E48     		ldr	r0, .L15+16
 456 0158 FFF7FEFF 		bl	usbPutString
 176:.\main.c      ****             uTurn(&right_wheel_count, &left_wheel_count);
 457              		.loc 1 176 0
 458 015c 07F12402 		add	r2, r7, #36
 459 0160 07F12003 		add	r3, r7, #32
 460 0164 1046     		mov	r0, r2
 461 0166 1946     		mov	r1, r3
 462 0168 FFF7FEFF 		bl	uTurn
 463 016c 11E0     		b	.L10
 464              	.L12:
 465              	.LBB2:
 177:.\main.c      ****         } else {
 178:.\main.c      ****             usbPutString("Straight\r\n");
 466              		.loc 1 178 0
 467 016e 1948     		ldr	r0, .L15+20
 468 0170 FFF7FEFF 		bl	usbPutString
 179:.\main.c      ****             int num_coords = directions[direction_index] - '0';
 469              		.loc 1 179 0
 470 0174 3A46     		mov	r2, r7
 471 0176 FB6A     		ldr	r3, [r7, #44]
 472 0178 1344     		add	r3, r3, r2
 473 017a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 474 017c 303B     		subs	r3, r3, #48
 475 017e BB62     		str	r3, [r7, #40]
 180:.\main.c      ****             goStraightForBlock(num_coords, &right_wheel_count, &left_wheel_count);
 476              		.loc 1 180 0
 477 0180 07F12402 		add	r2, r7, #36
 478 0184 07F12003 		add	r3, r7, #32
 479 0188 B86A     		ldr	r0, [r7, #40]
 480 018a 1146     		mov	r1, r2
 481 018c 1A46     		mov	r2, r3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 13


 482 018e FFF7FEFF 		bl	goStraightForBlock
 483              	.L10:
 484              	.LBE2:
 181:.\main.c      ****         }
 182:.\main.c      ****         
 183:.\main.c      **** //        int num_coords;
 184:.\main.c      **** //            
 185:.\main.c      **** //        switch(directions[direction_index]) {
 186:.\main.c      **** //            case 'R':
 187:.\main.c      **** //                sharpTurnRight(&right_wheel_count, &left_wheel_count);
 188:.\main.c      **** //                usbPutString("Sharp turn right\r\n");
 189:.\main.c      **** //                break;
 190:.\main.c      **** //            case 'L':
 191:.\main.c      **** //                sharpTurnLeft(&right_wheel_count, &left_wheel_count);
 192:.\main.c      **** //                usbPutString("Sharp turn left\r\n");
 193:.\main.c      **** //                break;
 194:.\main.c      **** //            case 'U':
 195:.\main.c      **** //                uTurn(&right_wheel_count, &left_wheel_count);
 196:.\main.c      **** //                usbPutString("U turn\r\n");
 197:.\main.c      **** //                break;
 198:.\main.c      **** //            default: 
 199:.\main.c      **** //                usbPutString("Straight\r\n");
 200:.\main.c      **** //                num_coords = directions[direction_index] - '0';
 201:.\main.c      **** //                goStraightForBlock(num_coords, &right_wheel_count, &left_wheel_count);
 202:.\main.c      **** //                break;
 203:.\main.c      **** //        }
 204:.\main.c      ****         direction_index++;
 485              		.loc 1 204 0
 486 0192 FB6A     		ldr	r3, [r7, #44]
 487 0194 0133     		adds	r3, r3, #1
 488 0196 FB62     		str	r3, [r7, #44]
 489              	.L8:
 167:.\main.c      ****         if (directions[direction_index] == 'R') {
 490              		.loc 1 167 0
 491 0198 3A46     		mov	r2, r7
 492 019a FB6A     		ldr	r3, [r7, #44]
 493 019c 1344     		add	r3, r3, r2
 494 019e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 495 01a0 002B     		cmp	r3, #0
 496 01a2 AED1     		bne	.L13
 205:.\main.c      ****     }
 206:.\main.c      ****     
 207:.\main.c      ****     LED_Write(1);
 497              		.loc 1 207 0
 498 01a4 0120     		movs	r0, #1
 499 01a6 FFF7FEFF 		bl	LED_Write
 208:.\main.c      ****     
 209:.\main.c      ****     PWM_1_WriteCompare(0);
 500              		.loc 1 209 0
 501 01aa 0020     		movs	r0, #0
 502 01ac FFF7FEFF 		bl	PWM_1_WriteCompare
 210:.\main.c      ****     PWM_2_WriteCompare(0);
 503              		.loc 1 210 0
 504 01b0 0020     		movs	r0, #0
 505 01b2 FFF7FEFF 		bl	PWM_2_WriteCompare
 211:.\main.c      ****     
 212:.\main.c      ****     return 0;
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 14


 506              		.loc 1 212 0
 507 01b6 0023     		movs	r3, #0
 213:.\main.c      **** }
 508              		.loc 1 213 0
 509 01b8 1846     		mov	r0, r3
 510 01ba 3037     		adds	r7, r7, #48
 511              		.cfi_def_cfa_offset 8
 512 01bc BD46     		mov	sp, r7
 513              		.cfi_def_cfa_register 13
 514              		@ sp needed
 515 01be 80BD     		pop	{r7, pc}
 516              	.L16:
 517              		.align	2
 518              	.L15:
 519 01c0 00000000 		.word	ENCODER_ISR
 520 01c4 00000000 		.word	ADC_ISR
 521 01c8 00000000 		.word	.LC0
 522 01cc 14000000 		.word	.LC1
 523 01d0 28000000 		.word	.LC2
 524 01d4 34000000 		.word	.LC3
 525              		.cfi_endproc
 526              	.LFE65:
 527              		.size	main, .-main
 528              		.section	.text.getValForChannel,"ax",%progbits
 529              		.align	2
 530              		.global	getValForChannel
 531              		.thumb
 532              		.thumb_func
 533              		.type	getValForChannel, %function
 534              	getValForChannel:
 535              	.LFB66:
 214:.\main.c      **** 
 215:.\main.c      **** // --------------------------------------------- ADC ------------------------------------------
 216:.\main.c      **** // Simple ADC conversion
 217:.\main.c      **** int32 getValForChannel(int16 n){
 536              		.loc 1 217 0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 8
 539              		@ frame_needed = 1, uses_anonymous_args = 0
 540 0000 80B5     		push	{r7, lr}
 541              		.cfi_def_cfa_offset 8
 542              		.cfi_offset 7, -8
 543              		.cfi_offset 14, -4
 544 0002 82B0     		sub	sp, sp, #8
 545              		.cfi_def_cfa_offset 16
 546 0004 00AF     		add	r7, sp, #0
 547              		.cfi_def_cfa_register 7
 548 0006 0346     		mov	r3, r0
 549 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 218:.\main.c      ****     return ADC_CountsTo_mVolts(ADC_GetResult16(n));
 550              		.loc 1 218 0
 551 000a FB88     		ldrh	r3, [r7, #6]
 552 000c 1846     		mov	r0, r3
 553 000e FFF7FEFF 		bl	ADC_GetResult16
 554 0012 0346     		mov	r3, r0
 555 0014 1846     		mov	r0, r3
 556 0016 FFF7FEFF 		bl	ADC_CountsTo_mVolts
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 15


 557 001a 0346     		mov	r3, r0
 219:.\main.c      **** }
 558              		.loc 1 219 0
 559 001c 1846     		mov	r0, r3
 560 001e 0837     		adds	r7, r7, #8
 561              		.cfi_def_cfa_offset 8
 562 0020 BD46     		mov	sp, r7
 563              		.cfi_def_cfa_register 13
 564              		@ sp needed
 565 0022 80BD     		pop	{r7, pc}
 566              		.cfi_endproc
 567              	.LFE66:
 568              		.size	getValForChannel, .-getValForChannel
 569              		.section	.text.updateSensorValues,"ax",%progbits
 570              		.align	2
 571              		.global	updateSensorValues
 572              		.thumb
 573              		.thumb_func
 574              		.type	updateSensorValues, %function
 575              	updateSensorValues:
 576              	.LFB67:
 220:.\main.c      **** 
 221:.\main.c      **** void updateSensorValues(){
 577              		.loc 1 221 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 8
 580              		@ frame_needed = 1, uses_anonymous_args = 0
 581 0000 80B5     		push	{r7, lr}
 582              		.cfi_def_cfa_offset 8
 583              		.cfi_offset 7, -8
 584              		.cfi_offset 14, -4
 585 0002 82B0     		sub	sp, sp, #8
 586              		.cfi_def_cfa_offset 16
 587 0004 00AF     		add	r7, sp, #0
 588              		.cfi_def_cfa_register 7
 222:.\main.c      ****     // update each sensor with the maximum reading so far
 223:.\main.c      ****     int i;
 224:.\main.c      ****     for (i = 0; i < NUM_SENSORS; i++){
 589              		.loc 1 224 0
 590 0006 0023     		movs	r3, #0
 591 0008 7B60     		str	r3, [r7, #4]
 592 000a 15E0     		b	.L20
 593              	.L22:
 594              	.LBB3:
 225:.\main.c      ****         int reading = getValForChannel(i);
 595              		.loc 1 225 0
 596 000c 7B68     		ldr	r3, [r7, #4]
 597 000e 9BB2     		uxth	r3, r3
 598 0010 1BB2     		sxth	r3, r3
 599 0012 1846     		mov	r0, r3
 600 0014 FFF7FEFF 		bl	getValForChannel
 601 0018 3860     		str	r0, [r7]
 226:.\main.c      ****         if (reading > adc_readings[i]) {
 602              		.loc 1 226 0
 603 001a 234A     		ldr	r2, .L27
 604 001c 7B68     		ldr	r3, [r7, #4]
 605 001e 52F82320 		ldr	r2, [r2, r3, lsl #2]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 16


 606 0022 3B68     		ldr	r3, [r7]
 607 0024 9A42     		cmp	r2, r3
 608 0026 04DA     		bge	.L21
 227:.\main.c      ****             adc_readings[i] = reading;
 609              		.loc 1 227 0
 610 0028 1F49     		ldr	r1, .L27
 611 002a 7B68     		ldr	r3, [r7, #4]
 612 002c 3A68     		ldr	r2, [r7]
 613 002e 41F82320 		str	r2, [r1, r3, lsl #2]
 614              	.L21:
 615              	.LBE3:
 224:.\main.c      ****         int reading = getValForChannel(i);
 616              		.loc 1 224 0 discriminator 2
 617 0032 7B68     		ldr	r3, [r7, #4]
 618 0034 0133     		adds	r3, r3, #1
 619 0036 7B60     		str	r3, [r7, #4]
 620              	.L20:
 224:.\main.c      ****         int reading = getValForChannel(i);
 621              		.loc 1 224 0 is_stmt 0 discriminator 1
 622 0038 7B68     		ldr	r3, [r7, #4]
 623 003a 052B     		cmp	r3, #5
 624 003c E6DD     		ble	.L22
 228:.\main.c      ****         }
 229:.\main.c      ****     }
 230:.\main.c      **** 
 231:.\main.c      ****     sample_count++;
 625              		.loc 1 231 0 is_stmt 1
 626 003e 1B4B     		ldr	r3, .L27+4
 627 0040 1B68     		ldr	r3, [r3]
 628 0042 0133     		adds	r3, r3, #1
 629 0044 194A     		ldr	r2, .L27+4
 630 0046 1360     		str	r3, [r2]
 232:.\main.c      ****     if (sample_count == ADC_READINGS_SIZE){
 631              		.loc 1 232 0
 632 0048 184B     		ldr	r3, .L27+4
 633 004a 1B68     		ldr	r3, [r3]
 634 004c 5A2B     		cmp	r3, #90
 635 004e 25D1     		bne	.L23
 233:.\main.c      ****         // Black = 1 (high voltage level)
 234:.\main.c      ****         for (i = 0; i < NUM_SENSORS; i++){
 636              		.loc 1 234 0
 637 0050 0023     		movs	r3, #0
 638 0052 7B60     		str	r3, [r7, #4]
 639 0054 18E0     		b	.L24
 640              	.L25:
 235:.\main.c      ****             sensor_readings[i] = !!(adc_readings[i] < LIGHT_LEVEL);
 641              		.loc 1 235 0 discriminator 3
 642 0056 144A     		ldr	r2, .L27
 643 0058 7B68     		ldr	r3, [r7, #4]
 644 005a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 645 005e 40F22B12 		movw	r2, #299
 646 0062 9342     		cmp	r3, r2
 647 0064 D4BF     		ite	le
 648 0066 0123     		movle	r3, #1
 649 0068 0023     		movgt	r3, #0
 650 006a DBB2     		uxtb	r3, r3
 651 006c D9B2     		uxtb	r1, r3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 17


 652 006e 104A     		ldr	r2, .L27+8
 653 0070 7B68     		ldr	r3, [r7, #4]
 654 0072 1344     		add	r3, r3, r2
 655 0074 0A46     		mov	r2, r1
 656 0076 1A70     		strb	r2, [r3]
 236:.\main.c      ****             adc_readings[i] = 0; // Reset max value from samples
 657              		.loc 1 236 0 discriminator 3
 658 0078 0B4A     		ldr	r2, .L27
 659 007a 7B68     		ldr	r3, [r7, #4]
 660 007c 0021     		movs	r1, #0
 661 007e 42F82310 		str	r1, [r2, r3, lsl #2]
 234:.\main.c      ****             sensor_readings[i] = !!(adc_readings[i] < LIGHT_LEVEL);
 662              		.loc 1 234 0 discriminator 3
 663 0082 7B68     		ldr	r3, [r7, #4]
 664 0084 0133     		adds	r3, r3, #1
 665 0086 7B60     		str	r3, [r7, #4]
 666              	.L24:
 234:.\main.c      ****             sensor_readings[i] = !!(adc_readings[i] < LIGHT_LEVEL);
 667              		.loc 1 234 0 is_stmt 0 discriminator 1
 668 0088 7B68     		ldr	r3, [r7, #4]
 669 008a 052B     		cmp	r3, #5
 670 008c E3DD     		ble	.L25
 237:.\main.c      ****         }
 238:.\main.c      ****         ADC_DEBUG_Write(1);
 671              		.loc 1 238 0 is_stmt 1
 672 008e 0120     		movs	r0, #1
 673 0090 FFF7FEFF 		bl	ADC_DEBUG_Write
 239:.\main.c      ****         sample_count = 0;
 674              		.loc 1 239 0
 675 0094 054B     		ldr	r3, .L27+4
 676 0096 0022     		movs	r2, #0
 677 0098 1A60     		str	r2, [r3]
 678 009a 02E0     		b	.L19
 679              	.L23:
 240:.\main.c      ****     }
 241:.\main.c      ****     else ADC_DEBUG_Write(0);
 680              		.loc 1 241 0
 681 009c 0020     		movs	r0, #0
 682 009e FFF7FEFF 		bl	ADC_DEBUG_Write
 683              	.L19:
 242:.\main.c      **** }
 684              		.loc 1 242 0
 685 00a2 0837     		adds	r7, r7, #8
 686              		.cfi_def_cfa_offset 8
 687 00a4 BD46     		mov	sp, r7
 688              		.cfi_def_cfa_register 13
 689              		@ sp needed
 690 00a6 80BD     		pop	{r7, pc}
 691              	.L28:
 692              		.align	2
 693              	.L27:
 694 00a8 00000000 		.word	adc_readings
 695 00ac 00000000 		.word	sample_count
 696 00b0 00000000 		.word	sensor_readings
 697              		.cfi_endproc
 698              	.LFE67:
 699              		.size	updateSensorValues, .-updateSensorValues
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 18


 700              		.global	__aeabi_fadd
 701              		.section	.rodata
 702 003f 00       		.align	2
 703              	.LC4:
 704 0040 202D2074 		.ascii	" - turn right\015\012\000"
 704      75726E20 
 704      72696768 
 704      740D0A00 
 705              		.align	2
 706              	.LC5:
 707 0050 202D2074 		.ascii	" - turn left\015\012\000"
 707      75726E20 
 707      6C656674 
 707      0D0A00
 708              		.global	__aeabi_i2f
 709              		.global	__aeabi_fcmpgt
 710              		.section	.text.goStraightForBlock,"ax",%progbits
 711              		.align	2
 712              		.global	goStraightForBlock
 713              		.thumb
 714              		.thumb_func
 715              		.type	goStraightForBlock, %function
 716              	goStraightForBlock:
 717              	.LFB68:
 243:.\main.c      **** 
 244:.\main.c      **** // --------------------------------------------- STRAIGHT -----------------------------------------
 245:.\main.c      **** void goStraightForBlock(int desired_blocks, int *right_wheel_count, int *left_wheel_count) {
 718              		.loc 1 245 0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 24
 721              		@ frame_needed = 1, uses_anonymous_args = 0
 722 0000 80B5     		push	{r7, lr}
 723              		.cfi_def_cfa_offset 8
 724              		.cfi_offset 7, -8
 725              		.cfi_offset 14, -4
 726 0002 86B0     		sub	sp, sp, #24
 727              		.cfi_def_cfa_offset 32
 728 0004 00AF     		add	r7, sp, #0
 729              		.cfi_def_cfa_register 7
 730 0006 F860     		str	r0, [r7, #12]
 731 0008 B960     		str	r1, [r7, #8]
 732 000a 7A60     		str	r2, [r7, #4]
 246:.\main.c      **** //    usbPutString("\r\n");
 247:.\main.c      **** //    usbPutString(" - desired  ");
 248:.\main.c      ****     
 249:.\main.c      ****     *right_wheel_count = DESIRED_COUNT;//TODO: check if needed
 733              		.loc 1 249 0
 734 000c BB68     		ldr	r3, [r7, #8]
 735 000e 0822     		movs	r2, #8
 736 0010 1A60     		str	r2, [r3]
 250:.\main.c      ****     *left_wheel_count = DESIRED_COUNT;
 737              		.loc 1 250 0
 738 0012 7B68     		ldr	r3, [r7, #4]
 739 0014 0822     		movs	r2, #8
 740 0016 1A60     		str	r2, [r3]
 251:.\main.c      ****     
 252:.\main.c      ****     float distance = 0;
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 19


 741              		.loc 1 252 0
 742 0018 4FF00003 		mov	r3, #0
 743 001c 7B61     		str	r3, [r7, #20]	@ float
 253:.\main.c      ****     int desired_distance = GRID_SIZE * desired_blocks - HALF_ROBOT_LENGTH;
 744              		.loc 1 253 0
 745 001e FA68     		ldr	r2, [r7, #12]
 746 0020 1346     		mov	r3, r2
 747 0022 5B00     		lsls	r3, r3, #1
 748 0024 1344     		add	r3, r3, r2
 749 0026 9B00     		lsls	r3, r3, #2
 750 0028 0A3B     		subs	r3, r3, #10
 751 002a 3B61     		str	r3, [r7, #16]
 254:.\main.c      ****     
 255:.\main.c      **** //    char buf[32];
 256:.\main.c      **** //    itoa(desired_distance, buf, 10);
 257:.\main.c      **** //    usbPutString(buf);
 258:.\main.c      **** //    usbPutString("\r\n - distance ");
 259:.\main.c      **** //    itoa(distance, buf, 10);
 260:.\main.c      **** //    usbPutString(buf);
 261:.\main.c      **** //    usbPutString("\r\n");
 262:.\main.c      **** //    usbPutString("\r\n");
 263:.\main.c      ****     
 264:.\main.c      ****     while (distance < desired_distance) {
 752              		.loc 1 264 0
 753 002c A3E0     		b	.L30
 754              	.L41:
 265:.\main.c      ****         if (adc_flag) {
 755              		.loc 1 265 0
 756 002e 594B     		ldr	r3, .L42
 757 0030 1B68     		ldr	r3, [r3]
 758 0032 002B     		cmp	r3, #0
 759 0034 04D0     		beq	.L31
 266:.\main.c      ****             updateSensorValues();
 760              		.loc 1 266 0
 761 0036 FFF7FEFF 		bl	updateSensorValues
 267:.\main.c      ****             adc_flag = FALSE;
 762              		.loc 1 267 0
 763 003a 564B     		ldr	r3, .L42
 764 003c 0022     		movs	r2, #0
 765 003e 1A60     		str	r2, [r3]
 766              	.L31:
 268:.\main.c      ****         }
 269:.\main.c      ****         
 270:.\main.c      ****          // New count values from encoder are ready
 271:.\main.c      ****         if (timer_flag){
 767              		.loc 1 271 0
 768 0040 554B     		ldr	r3, .L42+4
 769 0042 1B68     		ldr	r3, [r3]
 770 0044 002B     		cmp	r3, #0
 771 0046 35D0     		beq	.L32
 272:.\main.c      ****             isr_TS_Disable();
 772              		.loc 1 272 0
 773 0048 FFF7FEFF 		bl	isr_TS_Disable
 273:.\main.c      ****             
 274:.\main.c      ****             // update distance
 275:.\main.c      ****             distance += getDistance(prevCountM1, prevCountM2);
 774              		.loc 1 275 0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 20


 775 004c 534B     		ldr	r3, .L42+8
 776 004e 1A68     		ldr	r2, [r3]
 777 0050 534B     		ldr	r3, .L42+12
 778 0052 1B68     		ldr	r3, [r3]
 779 0054 1046     		mov	r0, r2
 780 0056 1946     		mov	r1, r3
 781 0058 FFF7FEFF 		bl	getDistance
 782 005c 0346     		mov	r3, r0
 783 005e 7869     		ldr	r0, [r7, #20]	@ float
 784 0060 1946     		mov	r1, r3
 785 0062 FFF7FEFF 		bl	__aeabi_fadd
 786 0066 0346     		mov	r3, r0
 787 0068 7B61     		str	r3, [r7, #20]	@ float
 276:.\main.c      ****             
 277:.\main.c      **** //            usbPutString("\r\n - desired - ");
 278:.\main.c      **** //            itoa(desired_distance, buf, 10);
 279:.\main.c      **** //            usbPutString(buf);
 280:.\main.c      **** //            usbPutString(" - distance - ");
 281:.\main.c      **** //            itoa(distance, buf, 10);
 282:.\main.c      **** //            usbPutString(buf);
 283:.\main.c      ****             
 284:.\main.c      ****             
 285:.\main.c      ****             // Correct speed
 286:.\main.c      ****             correctSpeed(prevCountM1,countM1,*left_wheel_count,TRUE);
 788              		.loc 1 286 0
 789 006a 4C4B     		ldr	r3, .L42+8
 790 006c 1968     		ldr	r1, [r3]
 791 006e 4D4B     		ldr	r3, .L42+16
 792 0070 1A68     		ldr	r2, [r3]
 793 0072 7B68     		ldr	r3, [r7, #4]
 794 0074 1B68     		ldr	r3, [r3]
 795 0076 0846     		mov	r0, r1
 796 0078 1146     		mov	r1, r2
 797 007a 1A46     		mov	r2, r3
 798 007c 0123     		movs	r3, #1
 799 007e FFF7FEFF 		bl	correctSpeed
 287:.\main.c      ****             correctSpeed(prevCountM2,countM2,*right_wheel_count,FALSE);
 800              		.loc 1 287 0
 801 0082 474B     		ldr	r3, .L42+12
 802 0084 1968     		ldr	r1, [r3]
 803 0086 484B     		ldr	r3, .L42+20
 804 0088 1A68     		ldr	r2, [r3]
 805 008a BB68     		ldr	r3, [r7, #8]
 806 008c 1B68     		ldr	r3, [r3]
 807 008e 0846     		mov	r0, r1
 808 0090 1146     		mov	r1, r2
 809 0092 1A46     		mov	r2, r3
 810 0094 0023     		movs	r3, #0
 811 0096 FFF7FEFF 		bl	correctSpeed
 288:.\main.c      ****             
 289:.\main.c      ****             // Update previous values
 290:.\main.c      ****             prevCountM1 = countM1;
 812              		.loc 1 290 0
 813 009a 424B     		ldr	r3, .L42+16
 814 009c 1B68     		ldr	r3, [r3]
 815 009e 3F4A     		ldr	r2, .L42+8
 816 00a0 1360     		str	r3, [r2]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 21


 291:.\main.c      ****             prevCountM2 = countM2;
 817              		.loc 1 291 0
 818 00a2 414B     		ldr	r3, .L42+20
 819 00a4 1B68     		ldr	r3, [r3]
 820 00a6 3E4A     		ldr	r2, .L42+12
 821 00a8 1360     		str	r3, [r2]
 292:.\main.c      ****             
 293:.\main.c      ****             // Reset flag
 294:.\main.c      ****             timer_flag = FALSE;
 822              		.loc 1 294 0
 823 00aa 3B4B     		ldr	r3, .L42+4
 824 00ac 0022     		movs	r2, #0
 825 00ae 1A60     		str	r2, [r3]
 295:.\main.c      ****             isr_TS_Enable();
 826              		.loc 1 295 0
 827 00b0 FFF7FEFF 		bl	isr_TS_Enable
 828              	.L32:
 296:.\main.c      ****         }
 297:.\main.c      ****         
 298:.\main.c      ****         // follow a line algorithm
 299:.\main.c      ****         if (sensor_readings[TOP_MID_SENSOR]) { // on line
 829              		.loc 1 299 0
 830 00b4 3D4B     		ldr	r3, .L42+24
 831 00b6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 832 00b8 002B     		cmp	r3, #0
 833 00ba 25D0     		beq	.L33
 300:.\main.c      ****             if (!sensor_readings[TOP_LEFT_SENSOR] && sensor_readings[TOP_RIGHT_SENSOR]) {// Deviate
 834              		.loc 1 300 0
 835 00bc 3B4B     		ldr	r3, .L42+24
 836 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 837 00c0 002B     		cmp	r3, #0
 838 00c2 0ED1     		bne	.L34
 839              		.loc 1 300 0 is_stmt 0 discriminator 1
 840 00c4 394B     		ldr	r3, .L42+24
 841 00c6 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 842 00c8 002B     		cmp	r3, #0
 843 00ca 0AD0     		beq	.L34
 301:.\main.c      ****                 *right_wheel_count -= ADJUST_SPEED_SMALL;
 844              		.loc 1 301 0 is_stmt 1
 845 00cc BB68     		ldr	r3, [r7, #8]
 846 00ce 1B68     		ldr	r3, [r3]
 847 00d0 5A1E     		subs	r2, r3, #1
 848 00d2 BB68     		ldr	r3, [r7, #8]
 849 00d4 1A60     		str	r2, [r3]
 302:.\main.c      ****                 *left_wheel_count += ADJUST_SPEED_SMALL;
 850              		.loc 1 302 0
 851 00d6 7B68     		ldr	r3, [r7, #4]
 852 00d8 1B68     		ldr	r3, [r3]
 853 00da 5A1C     		adds	r2, r3, #1
 854 00dc 7B68     		ldr	r3, [r7, #4]
 855 00de 1A60     		str	r2, [r3]
 856 00e0 2DE0     		b	.L36
 857              	.L34:
 303:.\main.c      ****             } else if (sensor_readings[TOP_LEFT_SENSOR] && !sensor_readings[TOP_RIGHT_SENSOR]) { //
 858              		.loc 1 303 0
 859 00e2 324B     		ldr	r3, .L42+24
 860 00e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 22


 861 00e6 002B     		cmp	r3, #0
 862 00e8 29D0     		beq	.L36
 863              		.loc 1 303 0 is_stmt 0 discriminator 1
 864 00ea 304B     		ldr	r3, .L42+24
 865 00ec 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 866 00ee 002B     		cmp	r3, #0
 867 00f0 25D1     		bne	.L36
 304:.\main.c      ****                 *right_wheel_count += ADJUST_SPEED_SMALL;
 868              		.loc 1 304 0 is_stmt 1
 869 00f2 BB68     		ldr	r3, [r7, #8]
 870 00f4 1B68     		ldr	r3, [r3]
 871 00f6 5A1C     		adds	r2, r3, #1
 872 00f8 BB68     		ldr	r3, [r7, #8]
 873 00fa 1A60     		str	r2, [r3]
 305:.\main.c      ****                 *left_wheel_count -= ADJUST_SPEED_SMALL;
 874              		.loc 1 305 0
 875 00fc 7B68     		ldr	r3, [r7, #4]
 876 00fe 1B68     		ldr	r3, [r3]
 877 0100 5A1E     		subs	r2, r3, #1
 878 0102 7B68     		ldr	r3, [r7, #4]
 879 0104 1A60     		str	r2, [r3]
 880 0106 1AE0     		b	.L36
 881              	.L33:
 306:.\main.c      ****             }
 307:.\main.c      ****         } else { // moved off
 308:.\main.c      ****             if (!sensor_readings[TOP_LEFT_SENSOR] && sensor_readings[TOP_RIGHT_SENSOR]) {// Deviate
 882              		.loc 1 308 0
 883 0108 284B     		ldr	r3, .L42+24
 884 010a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 885 010c 002B     		cmp	r3, #0
 886 010e 09D1     		bne	.L37
 887              		.loc 1 308 0 is_stmt 0 discriminator 1
 888 0110 264B     		ldr	r3, .L42+24
 889 0112 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 890 0114 002B     		cmp	r3, #0
 891 0116 05D0     		beq	.L37
 309:.\main.c      ****                 usbPutString(" - turn right\r\n");
 892              		.loc 1 309 0 is_stmt 1
 893 0118 2548     		ldr	r0, .L42+28
 894 011a FFF7FEFF 		bl	usbPutString
 310:.\main.c      ****                 turnRight();
 895              		.loc 1 310 0
 896 011e FFF7FEFF 		bl	turnRight
 897 0122 0CE0     		b	.L36
 898              	.L37:
 311:.\main.c      ****             } else if (sensor_readings[TOP_LEFT_SENSOR] && !sensor_readings[TOP_RIGHT_SENSOR]) {// 
 899              		.loc 1 311 0
 900 0124 214B     		ldr	r3, .L42+24
 901 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 902 0128 002B     		cmp	r3, #0
 903 012a 08D0     		beq	.L36
 904              		.loc 1 311 0 is_stmt 0 discriminator 1
 905 012c 1F4B     		ldr	r3, .L42+24
 906 012e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 907 0130 002B     		cmp	r3, #0
 908 0132 04D1     		bne	.L36
 312:.\main.c      ****                 usbPutString(" - turn left\r\n");
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 23


 909              		.loc 1 312 0 is_stmt 1
 910 0134 1F48     		ldr	r0, .L42+32
 911 0136 FFF7FEFF 		bl	usbPutString
 313:.\main.c      **** 				turnLeft();
 912              		.loc 1 313 0
 913 013a FFF7FEFF 		bl	turnLeft
 914              	.L36:
 314:.\main.c      ****             }
 315:.\main.c      ****         }
 316:.\main.c      ****         
 317:.\main.c      ****         if (*right_wheel_count > MAX_SPEED) {
 915              		.loc 1 317 0
 916 013e BB68     		ldr	r3, [r7, #8]
 917 0140 1B68     		ldr	r3, [r3]
 918 0142 092B     		cmp	r3, #9
 919 0144 02DD     		ble	.L38
 318:.\main.c      ****             *right_wheel_count = MAX_SPEED;
 920              		.loc 1 318 0
 921 0146 BB68     		ldr	r3, [r7, #8]
 922 0148 0922     		movs	r2, #9
 923 014a 1A60     		str	r2, [r3]
 924              	.L38:
 319:.\main.c      ****         }
 320:.\main.c      ****         if (*left_wheel_count > MAX_SPEED) {
 925              		.loc 1 320 0
 926 014c 7B68     		ldr	r3, [r7, #4]
 927 014e 1B68     		ldr	r3, [r3]
 928 0150 092B     		cmp	r3, #9
 929 0152 02DD     		ble	.L39
 321:.\main.c      ****             *left_wheel_count = MAX_SPEED;
 930              		.loc 1 321 0
 931 0154 7B68     		ldr	r3, [r7, #4]
 932 0156 0922     		movs	r2, #9
 933 0158 1A60     		str	r2, [r3]
 934              	.L39:
 322:.\main.c      ****         }
 323:.\main.c      ****         if (*right_wheel_count < MIN_SPEED) {
 935              		.loc 1 323 0
 936 015a BB68     		ldr	r3, [r7, #8]
 937 015c 1B68     		ldr	r3, [r3]
 938 015e 032B     		cmp	r3, #3
 939 0160 02DC     		bgt	.L40
 324:.\main.c      ****             *right_wheel_count = MIN_SPEED;
 940              		.loc 1 324 0
 941 0162 BB68     		ldr	r3, [r7, #8]
 942 0164 0422     		movs	r2, #4
 943 0166 1A60     		str	r2, [r3]
 944              	.L40:
 325:.\main.c      ****         }
 326:.\main.c      ****         if (*left_wheel_count < MIN_SPEED) {
 945              		.loc 1 326 0
 946 0168 7B68     		ldr	r3, [r7, #4]
 947 016a 1B68     		ldr	r3, [r3]
 948 016c 032B     		cmp	r3, #3
 949 016e 02DC     		bgt	.L30
 327:.\main.c      ****             *left_wheel_count = MIN_SPEED;
 950              		.loc 1 327 0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 24


 951 0170 7B68     		ldr	r3, [r7, #4]
 952 0172 0422     		movs	r2, #4
 953 0174 1A60     		str	r2, [r3]
 954              	.L30:
 264:.\main.c      ****         if (adc_flag) {
 955              		.loc 1 264 0
 956 0176 3869     		ldr	r0, [r7, #16]
 957 0178 FFF7FEFF 		bl	__aeabi_i2f
 958 017c 0346     		mov	r3, r0
 959 017e 1846     		mov	r0, r3
 960 0180 7969     		ldr	r1, [r7, #20]	@ float
 961 0182 FFF7FEFF 		bl	__aeabi_fcmpgt
 962 0186 0346     		mov	r3, r0
 963 0188 002B     		cmp	r3, #0
 964 018a 7FF450AF 		bne	.L41
 328:.\main.c      ****         }
 329:.\main.c      ****     }
 330:.\main.c      **** }
 965              		.loc 1 330 0
 966 018e 1837     		adds	r7, r7, #24
 967              		.cfi_def_cfa_offset 8
 968 0190 BD46     		mov	sp, r7
 969              		.cfi_def_cfa_register 13
 970              		@ sp needed
 971 0192 80BD     		pop	{r7, pc}
 972              	.L43:
 973              		.align	2
 974              	.L42:
 975 0194 00000000 		.word	adc_flag
 976 0198 00000000 		.word	timer_flag
 977 019c 00000000 		.word	prevCountM1
 978 01a0 00000000 		.word	prevCountM2
 979 01a4 00000000 		.word	countM1
 980 01a8 00000000 		.word	countM2
 981 01ac 00000000 		.word	sensor_readings
 982 01b0 40000000 		.word	.LC4
 983 01b4 50000000 		.word	.LC5
 984              		.cfi_endproc
 985              	.LFE68:
 986              		.size	goStraightForBlock, .-goStraightForBlock
 987              		.global	__aeabi_fcmplt
 988              		.section	.text.turnForDegrees,"ax",%progbits
 989              		.align	2
 990              		.global	turnForDegrees
 991              		.thumb
 992              		.thumb_func
 993              		.type	turnForDegrees, %function
 994              	turnForDegrees:
 995              	.LFB69:
 331:.\main.c      **** 
 332:.\main.c      **** // --------------------------------------------- TURNS ------------------------------------------
 333:.\main.c      **** void turnForDegrees(int degrees) {
 996              		.loc 1 333 0
 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 16
 999              		@ frame_needed = 1, uses_anonymous_args = 0
 1000 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 25


 1001              		.cfi_def_cfa_offset 8
 1002              		.cfi_offset 7, -8
 1003              		.cfi_offset 14, -4
 1004 0002 84B0     		sub	sp, sp, #16
 1005              		.cfi_def_cfa_offset 24
 1006 0004 00AF     		add	r7, sp, #0
 1007              		.cfi_def_cfa_register 7
 1008 0006 7860     		str	r0, [r7, #4]
 334:.\main.c      ****     float distance_to_turn = degrees / 13;
 1009              		.loc 1 334 0
 1010 0008 7B68     		ldr	r3, [r7, #4]
 1011 000a 224A     		ldr	r2, .L48
 1012 000c 82FB0312 		smull	r1, r2, r2, r3
 1013 0010 9210     		asrs	r2, r2, #2
 1014 0012 DB17     		asrs	r3, r3, #31
 1015 0014 D31A     		subs	r3, r2, r3
 1016 0016 1846     		mov	r0, r3
 1017 0018 FFF7FEFF 		bl	__aeabi_i2f
 1018 001c 0346     		mov	r3, r0
 1019 001e BB60     		str	r3, [r7, #8]	@ float
 335:.\main.c      ****     float distance_turned = 0;
 1020              		.loc 1 335 0
 1021 0020 4FF00003 		mov	r3, #0
 1022 0024 FB60     		str	r3, [r7, #12]	@ float
 336:.\main.c      ****     
 337:.\main.c      ****     while (distance_turned < distance_to_turn) {
 1023              		.loc 1 337 0
 1024 0026 2AE0     		b	.L45
 1025              	.L47:
 338:.\main.c      ****         // update sensor values so they're not 'stuck' when we leave function
 339:.\main.c      ****         if (adc_flag) {
 1026              		.loc 1 339 0
 1027 0028 1B4B     		ldr	r3, .L48+4
 1028 002a 1B68     		ldr	r3, [r3]
 1029 002c 002B     		cmp	r3, #0
 1030 002e 04D0     		beq	.L46
 340:.\main.c      ****             updateSensorValues();
 1031              		.loc 1 340 0
 1032 0030 FFF7FEFF 		bl	updateSensorValues
 341:.\main.c      ****             adc_flag = FALSE;
 1033              		.loc 1 341 0
 1034 0034 184B     		ldr	r3, .L48+4
 1035 0036 0022     		movs	r2, #0
 1036 0038 1A60     		str	r2, [r3]
 1037              	.L46:
 342:.\main.c      ****         }
 343:.\main.c      ****         
 344:.\main.c      ****          // New count values from encoder are ready
 345:.\main.c      ****         if (timer_flag){
 1038              		.loc 1 345 0
 1039 003a 184B     		ldr	r3, .L48+8
 1040 003c 1B68     		ldr	r3, [r3]
 1041 003e 002B     		cmp	r3, #0
 1042 0040 1DD0     		beq	.L45
 346:.\main.c      ****             isr_TS_Disable();
 1043              		.loc 1 346 0
 1044 0042 FFF7FEFF 		bl	isr_TS_Disable
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 26


 347:.\main.c      ****             
 348:.\main.c      ****             distance_turned += getDistance(prevCountM1, prevCountM2);
 1045              		.loc 1 348 0
 1046 0046 164B     		ldr	r3, .L48+12
 1047 0048 1A68     		ldr	r2, [r3]
 1048 004a 164B     		ldr	r3, .L48+16
 1049 004c 1B68     		ldr	r3, [r3]
 1050 004e 1046     		mov	r0, r2
 1051 0050 1946     		mov	r1, r3
 1052 0052 FFF7FEFF 		bl	getDistance
 1053 0056 0346     		mov	r3, r0
 1054 0058 F868     		ldr	r0, [r7, #12]	@ float
 1055 005a 1946     		mov	r1, r3
 1056 005c FFF7FEFF 		bl	__aeabi_fadd
 1057 0060 0346     		mov	r3, r0
 1058 0062 FB60     		str	r3, [r7, #12]	@ float
 349:.\main.c      ****             
 350:.\main.c      ****             // Update previous values
 351:.\main.c      ****             prevCountM1 = countM1;
 1059              		.loc 1 351 0
 1060 0064 104B     		ldr	r3, .L48+20
 1061 0066 1B68     		ldr	r3, [r3]
 1062 0068 0D4A     		ldr	r2, .L48+12
 1063 006a 1360     		str	r3, [r2]
 352:.\main.c      ****             prevCountM2 = countM2;
 1064              		.loc 1 352 0
 1065 006c 0F4B     		ldr	r3, .L48+24
 1066 006e 1B68     		ldr	r3, [r3]
 1067 0070 0C4A     		ldr	r2, .L48+16
 1068 0072 1360     		str	r3, [r2]
 353:.\main.c      ****             
 354:.\main.c      ****             // Reset flag
 355:.\main.c      ****             timer_flag = FALSE;
 1069              		.loc 1 355 0
 1070 0074 094B     		ldr	r3, .L48+8
 1071 0076 0022     		movs	r2, #0
 1072 0078 1A60     		str	r2, [r3]
 356:.\main.c      ****             
 357:.\main.c      ****             isr_TS_Enable();
 1073              		.loc 1 357 0
 1074 007a FFF7FEFF 		bl	isr_TS_Enable
 1075              	.L45:
 337:.\main.c      ****         // update sensor values so they're not 'stuck' when we leave function
 1076              		.loc 1 337 0
 1077 007e F868     		ldr	r0, [r7, #12]	@ float
 1078 0080 B968     		ldr	r1, [r7, #8]	@ float
 1079 0082 FFF7FEFF 		bl	__aeabi_fcmplt
 1080 0086 0346     		mov	r3, r0
 1081 0088 002B     		cmp	r3, #0
 1082 008a CDD1     		bne	.L47
 358:.\main.c      ****         }
 359:.\main.c      ****     }
 360:.\main.c      **** }
 1083              		.loc 1 360 0
 1084 008c 1037     		adds	r7, r7, #16
 1085              		.cfi_def_cfa_offset 8
 1086 008e BD46     		mov	sp, r7
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 27


 1087              		.cfi_def_cfa_register 13
 1088              		@ sp needed
 1089 0090 80BD     		pop	{r7, pc}
 1090              	.L49:
 1091 0092 00BF     		.align	2
 1092              	.L48:
 1093 0094 4FECC44E 		.word	1321528399
 1094 0098 00000000 		.word	adc_flag
 1095 009c 00000000 		.word	timer_flag
 1096 00a0 00000000 		.word	prevCountM1
 1097 00a4 00000000 		.word	prevCountM2
 1098 00a8 00000000 		.word	countM1
 1099 00ac 00000000 		.word	countM2
 1100              		.cfi_endproc
 1101              	.LFE69:
 1102              		.size	turnForDegrees, .-turnForDegrees
 1103              		.section	.rodata
 1104 005f 00       		.align	2
 1105              	.LC6:
 1106 0060 202D2066 		.ascii	" - forward\015\012\000"
 1106      6F727761 
 1106      72640D0A 
 1106      00
 1107 006d 000000   		.align	2
 1108              	.LC7:
 1109 0070 202D2074 		.ascii	" - turn 45\015\012\000"
 1109      75726E20 
 1109      34350D0A 
 1109      00
 1110 007d 000000   		.align	2
 1111              	.LC8:
 1112 0080 202D2066 		.ascii	" - finish turn\015\012\000"
 1112      696E6973 
 1112      68207475 
 1112      726E0D0A 
 1112      00
 1113              		.section	.text.sharpTurnLeft,"ax",%progbits
 1114              		.align	2
 1115              		.global	sharpTurnLeft
 1116              		.thumb
 1117              		.thumb_func
 1118              		.type	sharpTurnLeft, %function
 1119              	sharpTurnLeft:
 1120              	.LFB70:
 361:.\main.c      **** 
 362:.\main.c      **** void sharpTurnLeft() {
 1121              		.loc 1 362 0
 1122              		.cfi_startproc
 1123              		@ args = 0, pretend = 0, frame = 0
 1124              		@ frame_needed = 1, uses_anonymous_args = 0
 1125 0000 80B5     		push	{r7, lr}
 1126              		.cfi_def_cfa_offset 8
 1127              		.cfi_offset 7, -8
 1128              		.cfi_offset 14, -4
 1129 0002 00AF     		add	r7, sp, #0
 1130              		.cfi_def_cfa_register 7
 363:.\main.c      ****     usbPutString(" - forward\r\n");
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 28


 1131              		.loc 1 363 0
 1132 0004 1C48     		ldr	r0, .L55
 1133 0006 FFF7FEFF 		bl	usbPutString
 364:.\main.c      ****     // go until we reach the junction
 365:.\main.c      ****     while (!sensor_readings[BOTTOM_LEFT_SENSOR]) {
 1134              		.loc 1 365 0
 1135 000a 08E0     		b	.L51
 1136              	.L52:
 366:.\main.c      ****         if (adc_flag) {
 1137              		.loc 1 366 0
 1138 000c 1B4B     		ldr	r3, .L55+4
 1139 000e 1B68     		ldr	r3, [r3]
 1140 0010 002B     		cmp	r3, #0
 1141 0012 04D0     		beq	.L51
 367:.\main.c      ****             updateSensorValues();
 1142              		.loc 1 367 0
 1143 0014 FFF7FEFF 		bl	updateSensorValues
 368:.\main.c      ****             adc_flag = FALSE;
 1144              		.loc 1 368 0
 1145 0018 184B     		ldr	r3, .L55+4
 1146 001a 0022     		movs	r2, #0
 1147 001c 1A60     		str	r2, [r3]
 1148              	.L51:
 365:.\main.c      ****         if (adc_flag) {
 1149              		.loc 1 365 0
 1150 001e 184B     		ldr	r3, .L55+8
 1151 0020 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1152 0022 002B     		cmp	r3, #0
 1153 0024 F2D0     		beq	.L52
 369:.\main.c      ****         }
 370:.\main.c      ****     }
 371:.\main.c      ****     
 372:.\main.c      ****     usbPutString(" - turn 45\r\n");
 1154              		.loc 1 372 0
 1155 0026 1748     		ldr	r0, .L55+12
 1156 0028 FFF7FEFF 		bl	usbPutString
 373:.\main.c      ****     
 374:.\main.c      ****     // make the turn
 375:.\main.c      ****     setWheelDirection(FALSE, TRUE);
 1157              		.loc 1 375 0
 1158 002c 0020     		movs	r0, #0
 1159 002e 0121     		movs	r1, #1
 1160 0030 FFF7FEFF 		bl	setWheelDirection
 376:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 1161              		.loc 1 376 0
 1162 0034 4FF4E170 		mov	r0, #450
 1163 0038 FFF7FEFF 		bl	PWM_1_WriteCompare
 377:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 1164              		.loc 1 377 0
 1165 003c 4FF4E170 		mov	r0, #450
 1166 0040 FFF7FEFF 		bl	PWM_2_WriteCompare
 378:.\main.c      ****     
 379:.\main.c      ****     turnForDegrees(45); // so that it doesn't stop if it's already on a line
 1167              		.loc 1 379 0
 1168 0044 2D20     		movs	r0, #45
 1169 0046 FFF7FEFF 		bl	turnForDegrees
 380:.\main.c      ****     
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 29


 381:.\main.c      ****     usbPutString(" - finish turn\r\n");
 1170              		.loc 1 381 0
 1171 004a 0F48     		ldr	r0, .L55+16
 1172 004c FFF7FEFF 		bl	usbPutString
 382:.\main.c      ****     
 383:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 1173              		.loc 1 383 0
 1174 0050 08E0     		b	.L53
 1175              	.L54:
 384:.\main.c      ****         if (adc_flag) {
 1176              		.loc 1 384 0
 1177 0052 0A4B     		ldr	r3, .L55+4
 1178 0054 1B68     		ldr	r3, [r3]
 1179 0056 002B     		cmp	r3, #0
 1180 0058 04D0     		beq	.L53
 385:.\main.c      ****             updateSensorValues();
 1181              		.loc 1 385 0
 1182 005a FFF7FEFF 		bl	updateSensorValues
 386:.\main.c      ****             adc_flag = FALSE;
 1183              		.loc 1 386 0
 1184 005e 074B     		ldr	r3, .L55+4
 1185 0060 0022     		movs	r2, #0
 1186 0062 1A60     		str	r2, [r3]
 1187              	.L53:
 383:.\main.c      ****         if (adc_flag) {
 1188              		.loc 1 383 0
 1189 0064 064B     		ldr	r3, .L55+8
 1190 0066 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1191 0068 002B     		cmp	r3, #0
 1192 006a F2D0     		beq	.L54
 387:.\main.c      ****         }
 388:.\main.c      ****     }
 389:.\main.c      ****     setWheelDirection(TRUE, TRUE);
 1193              		.loc 1 389 0
 1194 006c 0120     		movs	r0, #1
 1195 006e 0121     		movs	r1, #1
 1196 0070 FFF7FEFF 		bl	setWheelDirection
 390:.\main.c      **** }
 1197              		.loc 1 390 0
 1198 0074 80BD     		pop	{r7, pc}
 1199              	.L56:
 1200 0076 00BF     		.align	2
 1201              	.L55:
 1202 0078 60000000 		.word	.LC6
 1203 007c 00000000 		.word	adc_flag
 1204 0080 00000000 		.word	sensor_readings
 1205 0084 70000000 		.word	.LC7
 1206 0088 80000000 		.word	.LC8
 1207              		.cfi_endproc
 1208              	.LFE70:
 1209              		.size	sharpTurnLeft, .-sharpTurnLeft
 1210              		.section	.text.sharpTurnRight,"ax",%progbits
 1211              		.align	2
 1212              		.global	sharpTurnRight
 1213              		.thumb
 1214              		.thumb_func
 1215              		.type	sharpTurnRight, %function
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 30


 1216              	sharpTurnRight:
 1217              	.LFB71:
 391:.\main.c      **** 
 392:.\main.c      **** void sharpTurnRight() {
 1218              		.loc 1 392 0
 1219              		.cfi_startproc
 1220              		@ args = 0, pretend = 0, frame = 0
 1221              		@ frame_needed = 1, uses_anonymous_args = 0
 1222 0000 80B5     		push	{r7, lr}
 1223              		.cfi_def_cfa_offset 8
 1224              		.cfi_offset 7, -8
 1225              		.cfi_offset 14, -4
 1226 0002 00AF     		add	r7, sp, #0
 1227              		.cfi_def_cfa_register 7
 393:.\main.c      ****     usbPutString(" - forward\r\n");
 1228              		.loc 1 393 0
 1229 0004 1C48     		ldr	r0, .L62
 1230 0006 FFF7FEFF 		bl	usbPutString
 394:.\main.c      ****     
 395:.\main.c      ****     // go until we reach the junction
 396:.\main.c      ****     while (!sensor_readings[BOTTOM_RIGHT_SENSOR]) {
 1231              		.loc 1 396 0
 1232 000a 08E0     		b	.L58
 1233              	.L59:
 397:.\main.c      ****         if (adc_flag) {
 1234              		.loc 1 397 0
 1235 000c 1B4B     		ldr	r3, .L62+4
 1236 000e 1B68     		ldr	r3, [r3]
 1237 0010 002B     		cmp	r3, #0
 1238 0012 04D0     		beq	.L58
 398:.\main.c      ****             updateSensorValues();
 1239              		.loc 1 398 0
 1240 0014 FFF7FEFF 		bl	updateSensorValues
 399:.\main.c      ****             adc_flag = FALSE;
 1241              		.loc 1 399 0
 1242 0018 184B     		ldr	r3, .L62+4
 1243 001a 0022     		movs	r2, #0
 1244 001c 1A60     		str	r2, [r3]
 1245              	.L58:
 396:.\main.c      ****         if (adc_flag) {
 1246              		.loc 1 396 0
 1247 001e 184B     		ldr	r3, .L62+8
 1248 0020 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1249 0022 002B     		cmp	r3, #0
 1250 0024 F2D0     		beq	.L59
 400:.\main.c      ****         }
 401:.\main.c      ****     }
 402:.\main.c      ****     
 403:.\main.c      ****     usbPutString(" - turn 45\r\n");
 1251              		.loc 1 403 0
 1252 0026 1748     		ldr	r0, .L62+12
 1253 0028 FFF7FEFF 		bl	usbPutString
 404:.\main.c      ****     
 405:.\main.c      ****     // make the turn
 406:.\main.c      ****     setWheelDirection(TRUE, FALSE);
 1254              		.loc 1 406 0
 1255 002c 0120     		movs	r0, #1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 31


 1256 002e 0021     		movs	r1, #0
 1257 0030 FFF7FEFF 		bl	setWheelDirection
 407:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 1258              		.loc 1 407 0
 1259 0034 4FF4E170 		mov	r0, #450
 1260 0038 FFF7FEFF 		bl	PWM_1_WriteCompare
 408:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 1261              		.loc 1 408 0
 1262 003c 4FF4E170 		mov	r0, #450
 1263 0040 FFF7FEFF 		bl	PWM_2_WriteCompare
 409:.\main.c      ****     
 410:.\main.c      ****     turnForDegrees(45); // so that it doesn't stop if it's already on a line
 1264              		.loc 1 410 0
 1265 0044 2D20     		movs	r0, #45
 1266 0046 FFF7FEFF 		bl	turnForDegrees
 411:.\main.c      ****     
 412:.\main.c      ****     usbPutString(" - finish turn\r\n");
 1267              		.loc 1 412 0
 1268 004a 0F48     		ldr	r0, .L62+16
 1269 004c FFF7FEFF 		bl	usbPutString
 413:.\main.c      ****     
 414:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 1270              		.loc 1 414 0
 1271 0050 08E0     		b	.L60
 1272              	.L61:
 415:.\main.c      ****         if (adc_flag) {
 1273              		.loc 1 415 0
 1274 0052 0A4B     		ldr	r3, .L62+4
 1275 0054 1B68     		ldr	r3, [r3]
 1276 0056 002B     		cmp	r3, #0
 1277 0058 04D0     		beq	.L60
 416:.\main.c      ****             updateSensorValues();
 1278              		.loc 1 416 0
 1279 005a FFF7FEFF 		bl	updateSensorValues
 417:.\main.c      ****             adc_flag = FALSE;
 1280              		.loc 1 417 0
 1281 005e 074B     		ldr	r3, .L62+4
 1282 0060 0022     		movs	r2, #0
 1283 0062 1A60     		str	r2, [r3]
 1284              	.L60:
 414:.\main.c      ****         if (adc_flag) {
 1285              		.loc 1 414 0
 1286 0064 064B     		ldr	r3, .L62+8
 1287 0066 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1288 0068 002B     		cmp	r3, #0
 1289 006a F2D0     		beq	.L61
 418:.\main.c      ****         }
 419:.\main.c      ****     }
 420:.\main.c      ****     setWheelDirection(TRUE, TRUE);
 1290              		.loc 1 420 0
 1291 006c 0120     		movs	r0, #1
 1292 006e 0121     		movs	r1, #1
 1293 0070 FFF7FEFF 		bl	setWheelDirection
 421:.\main.c      **** }
 1294              		.loc 1 421 0
 1295 0074 80BD     		pop	{r7, pc}
 1296              	.L63:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 32


 1297 0076 00BF     		.align	2
 1298              	.L62:
 1299 0078 60000000 		.word	.LC6
 1300 007c 00000000 		.word	adc_flag
 1301 0080 00000000 		.word	sensor_readings
 1302 0084 70000000 		.word	.LC7
 1303 0088 80000000 		.word	.LC8
 1304              		.cfi_endproc
 1305              	.LFE71:
 1306              		.size	sharpTurnRight, .-sharpTurnRight
 1307              		.section	.rodata
 1308 0091 000000   		.align	2
 1309              	.LC9:
 1310 0094 202D2066 		.ascii	" - forward slightly\015\012\000"
 1310      6F727761 
 1310      72642073 
 1310      6C696768 
 1310      746C790D 
 1311 00aa 0000     		.align	2
 1312              	.LC10:
 1313 00ac 202D2066 		.ascii	" - forward till junction\015\012\000"
 1313      6F727761 
 1313      72642074 
 1313      696C6C20 
 1313      6A756E63 
 1314 00c7 00       		.align	2
 1315              	.LC11:
 1316 00c8 202D2074 		.ascii	" - turn 135\015\012\000"
 1316      75726E20 
 1316      3133350D 
 1316      0A00
 1317 00d6 0000     		.section	.text.uTurn,"ax",%progbits
 1318              		.align	2
 1319              		.global	uTurn
 1320              		.thumb
 1321              		.thumb_func
 1322              		.type	uTurn, %function
 1323              	uTurn:
 1324              	.LFB72:
 422:.\main.c      ****     
 423:.\main.c      **** void uTurn(int *left_wheel_count, int *right_wheel_count) {
 1325              		.loc 1 423 0
 1326              		.cfi_startproc
 1327              		@ args = 0, pretend = 0, frame = 16
 1328              		@ frame_needed = 1, uses_anonymous_args = 0
 1329 0000 80B5     		push	{r7, lr}
 1330              		.cfi_def_cfa_offset 8
 1331              		.cfi_offset 7, -8
 1332              		.cfi_offset 14, -4
 1333 0002 84B0     		sub	sp, sp, #16
 1334              		.cfi_def_cfa_offset 24
 1335 0004 00AF     		add	r7, sp, #0
 1336              		.cfi_def_cfa_register 7
 1337 0006 7860     		str	r0, [r7, #4]
 1338 0008 3960     		str	r1, [r7]
 424:.\main.c      ****     usbPutString("U turn\r\n");
 1339              		.loc 1 424 0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 33


 1340 000a 4C48     		ldr	r0, .L73
 1341 000c FFF7FEFF 		bl	usbPutString
 425:.\main.c      ****     
 426:.\main.c      ****     usbPutString(" - forward slightly\r\n");
 1342              		.loc 1 426 0
 1343 0010 4B48     		ldr	r0, .L73+4
 1344 0012 FFF7FEFF 		bl	usbPutString
 427:.\main.c      ****     // go forward slightly
 428:.\main.c      ****     float distance = 0;
 1345              		.loc 1 428 0
 1346 0016 4FF00003 		mov	r3, #0
 1347 001a FB60     		str	r3, [r7, #12]	@ float
 429:.\main.c      ****     while (distance < SMALL_FORWARD_DISTANCE) {
 1348              		.loc 1 429 0
 1349 001c 42E0     		b	.L65
 1350              	.L67:
 430:.\main.c      ****         
 431:.\main.c      ****         if (adc_flag) {
 1351              		.loc 1 431 0
 1352 001e 494B     		ldr	r3, .L73+8
 1353 0020 1B68     		ldr	r3, [r3]
 1354 0022 002B     		cmp	r3, #0
 1355 0024 04D0     		beq	.L66
 432:.\main.c      ****             updateSensorValues();
 1356              		.loc 1 432 0
 1357 0026 FFF7FEFF 		bl	updateSensorValues
 433:.\main.c      ****             adc_flag = FALSE;
 1358              		.loc 1 433 0
 1359 002a 464B     		ldr	r3, .L73+8
 1360 002c 0022     		movs	r2, #0
 1361 002e 1A60     		str	r2, [r3]
 1362              	.L66:
 434:.\main.c      ****         }
 435:.\main.c      ****         
 436:.\main.c      ****          // New count values from encoder are ready
 437:.\main.c      ****         if (timer_flag){
 1363              		.loc 1 437 0
 1364 0030 454B     		ldr	r3, .L73+12
 1365 0032 1B68     		ldr	r3, [r3]
 1366 0034 002B     		cmp	r3, #0
 1367 0036 35D0     		beq	.L65
 438:.\main.c      ****             isr_TS_Disable();
 1368              		.loc 1 438 0
 1369 0038 FFF7FEFF 		bl	isr_TS_Disable
 439:.\main.c      ****             
 440:.\main.c      ****             // update distance
 441:.\main.c      ****             distance += getDistance(prevCountM1, prevCountM2);
 1370              		.loc 1 441 0
 1371 003c 434B     		ldr	r3, .L73+16
 1372 003e 1A68     		ldr	r2, [r3]
 1373 0040 434B     		ldr	r3, .L73+20
 1374 0042 1B68     		ldr	r3, [r3]
 1375 0044 1046     		mov	r0, r2
 1376 0046 1946     		mov	r1, r3
 1377 0048 FFF7FEFF 		bl	getDistance
 1378 004c 0346     		mov	r3, r0
 1379 004e F868     		ldr	r0, [r7, #12]	@ float
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 34


 1380 0050 1946     		mov	r1, r3
 1381 0052 FFF7FEFF 		bl	__aeabi_fadd
 1382 0056 0346     		mov	r3, r0
 1383 0058 FB60     		str	r3, [r7, #12]	@ float
 442:.\main.c      ****             
 443:.\main.c      ****             // Correct speed
 444:.\main.c      ****             correctSpeed(prevCountM1,countM1,*left_wheel_count,TRUE);
 1384              		.loc 1 444 0
 1385 005a 3C4B     		ldr	r3, .L73+16
 1386 005c 1968     		ldr	r1, [r3]
 1387 005e 3D4B     		ldr	r3, .L73+24
 1388 0060 1A68     		ldr	r2, [r3]
 1389 0062 7B68     		ldr	r3, [r7, #4]
 1390 0064 1B68     		ldr	r3, [r3]
 1391 0066 0846     		mov	r0, r1
 1392 0068 1146     		mov	r1, r2
 1393 006a 1A46     		mov	r2, r3
 1394 006c 0123     		movs	r3, #1
 1395 006e FFF7FEFF 		bl	correctSpeed
 445:.\main.c      ****             correctSpeed(prevCountM2,countM2,*right_wheel_count,FALSE);
 1396              		.loc 1 445 0
 1397 0072 374B     		ldr	r3, .L73+20
 1398 0074 1968     		ldr	r1, [r3]
 1399 0076 384B     		ldr	r3, .L73+28
 1400 0078 1A68     		ldr	r2, [r3]
 1401 007a 3B68     		ldr	r3, [r7]
 1402 007c 1B68     		ldr	r3, [r3]
 1403 007e 0846     		mov	r0, r1
 1404 0080 1146     		mov	r1, r2
 1405 0082 1A46     		mov	r2, r3
 1406 0084 0023     		movs	r3, #0
 1407 0086 FFF7FEFF 		bl	correctSpeed
 446:.\main.c      ****             
 447:.\main.c      ****             // Update previous values
 448:.\main.c      ****             prevCountM1 = countM1;
 1408              		.loc 1 448 0
 1409 008a 324B     		ldr	r3, .L73+24
 1410 008c 1B68     		ldr	r3, [r3]
 1411 008e 2F4A     		ldr	r2, .L73+16
 1412 0090 1360     		str	r3, [r2]
 449:.\main.c      ****             prevCountM2 = countM2;
 1413              		.loc 1 449 0
 1414 0092 314B     		ldr	r3, .L73+28
 1415 0094 1B68     		ldr	r3, [r3]
 1416 0096 2E4A     		ldr	r2, .L73+20
 1417 0098 1360     		str	r3, [r2]
 450:.\main.c      ****             
 451:.\main.c      ****             // Reset flag
 452:.\main.c      ****             timer_flag = FALSE;
 1418              		.loc 1 452 0
 1419 009a 2B4B     		ldr	r3, .L73+12
 1420 009c 0022     		movs	r2, #0
 1421 009e 1A60     		str	r2, [r3]
 453:.\main.c      ****             
 454:.\main.c      ****             isr_TS_Enable();
 1422              		.loc 1 454 0
 1423 00a0 FFF7FEFF 		bl	isr_TS_Enable
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 35


 1424              	.L65:
 429:.\main.c      ****         
 1425              		.loc 1 429 0
 1426 00a4 F868     		ldr	r0, [r7, #12]	@ float
 1427 00a6 4FF08241 		mov	r1, #1090519040
 1428 00aa FFF7FEFF 		bl	__aeabi_fcmplt
 1429 00ae 0346     		mov	r3, r0
 1430 00b0 002B     		cmp	r3, #0
 1431 00b2 B4D1     		bne	.L67
 455:.\main.c      ****         }
 456:.\main.c      ****     }
 457:.\main.c      ****     
 458:.\main.c      ****     usbPutString(" - forward till junction\r\n");
 1432              		.loc 1 458 0
 1433 00b4 2948     		ldr	r0, .L73+32
 1434 00b6 FFF7FEFF 		bl	usbPutString
 459:.\main.c      ****     // go until we reach the junction
 460:.\main.c      ****     while (!sensor_readings[BOTTOM_RIGHT_SENSOR] && !sensor_readings[BOTTOM_LEFT_SENSOR] && sensor_
 1435              		.loc 1 460 0
 1436 00ba 08E0     		b	.L68
 1437              	.L70:
 461:.\main.c      ****         if (adc_flag) {
 1438              		.loc 1 461 0
 1439 00bc 214B     		ldr	r3, .L73+8
 1440 00be 1B68     		ldr	r3, [r3]
 1441 00c0 002B     		cmp	r3, #0
 1442 00c2 04D0     		beq	.L68
 462:.\main.c      ****             updateSensorValues();
 1443              		.loc 1 462 0
 1444 00c4 FFF7FEFF 		bl	updateSensorValues
 463:.\main.c      ****             adc_flag = FALSE;
 1445              		.loc 1 463 0
 1446 00c8 1E4B     		ldr	r3, .L73+8
 1447 00ca 0022     		movs	r2, #0
 1448 00cc 1A60     		str	r2, [r3]
 1449              	.L68:
 460:.\main.c      ****         if (adc_flag) {
 1450              		.loc 1 460 0
 1451 00ce 244B     		ldr	r3, .L73+36
 1452 00d0 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1453 00d2 002B     		cmp	r3, #0
 1454 00d4 07D1     		bne	.L69
 460:.\main.c      ****         if (adc_flag) {
 1455              		.loc 1 460 0 is_stmt 0 discriminator 1
 1456 00d6 224B     		ldr	r3, .L73+36
 1457 00d8 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1458 00da 002B     		cmp	r3, #0
 1459 00dc 03D1     		bne	.L69
 460:.\main.c      ****         if (adc_flag) {
 1460              		.loc 1 460 0 discriminator 2
 1461 00de 204B     		ldr	r3, .L73+36
 1462 00e0 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1463 00e2 002B     		cmp	r3, #0
 1464 00e4 EAD1     		bne	.L70
 1465              	.L69:
 464:.\main.c      ****         }
 465:.\main.c      ****     }
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 36


 466:.\main.c      ****     
 467:.\main.c      ****     usbPutString(" - turn 135\r\n");
 1466              		.loc 1 467 0 is_stmt 1
 1467 00e6 1F48     		ldr	r0, .L73+40
 1468 00e8 FFF7FEFF 		bl	usbPutString
 468:.\main.c      ****     
 469:.\main.c      ****     // make the turn
 470:.\main.c      ****     setWheelDirection(TRUE, FALSE);
 1469              		.loc 1 470 0
 1470 00ec 0120     		movs	r0, #1
 1471 00ee 0021     		movs	r1, #0
 1472 00f0 FFF7FEFF 		bl	setWheelDirection
 471:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 1473              		.loc 1 471 0
 1474 00f4 4FF4E170 		mov	r0, #450
 1475 00f8 FFF7FEFF 		bl	PWM_1_WriteCompare
 472:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 1476              		.loc 1 472 0
 1477 00fc 4FF4E170 		mov	r0, #450
 1478 0100 FFF7FEFF 		bl	PWM_2_WriteCompare
 473:.\main.c      ****     
 474:.\main.c      ****     // the number 180 is roughly a 135 degree turn
 475:.\main.c      ****     turnForDegrees(230); // so that it doesn't stop if it's already on a line
 1479              		.loc 1 475 0
 1480 0104 E620     		movs	r0, #230
 1481 0106 FFF7FEFF 		bl	turnForDegrees
 476:.\main.c      ****     
 477:.\main.c      ****     usbPutString(" - finish turn\r\n");
 1482              		.loc 1 477 0
 1483 010a 1748     		ldr	r0, .L73+44
 1484 010c FFF7FEFF 		bl	usbPutString
 478:.\main.c      ****     
 479:.\main.c      ****     // finish turn
 480:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 1485              		.loc 1 480 0
 1486 0110 08E0     		b	.L71
 1487              	.L72:
 481:.\main.c      ****         if (adc_flag) {
 1488              		.loc 1 481 0
 1489 0112 0C4B     		ldr	r3, .L73+8
 1490 0114 1B68     		ldr	r3, [r3]
 1491 0116 002B     		cmp	r3, #0
 1492 0118 04D0     		beq	.L71
 482:.\main.c      ****             updateSensorValues();
 1493              		.loc 1 482 0
 1494 011a FFF7FEFF 		bl	updateSensorValues
 483:.\main.c      ****             adc_flag = FALSE;
 1495              		.loc 1 483 0
 1496 011e 094B     		ldr	r3, .L73+8
 1497 0120 0022     		movs	r2, #0
 1498 0122 1A60     		str	r2, [r3]
 1499              	.L71:
 480:.\main.c      ****         if (adc_flag) {
 1500              		.loc 1 480 0
 1501 0124 0E4B     		ldr	r3, .L73+36
 1502 0126 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1503 0128 002B     		cmp	r3, #0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 37


 1504 012a F2D0     		beq	.L72
 484:.\main.c      ****         }
 485:.\main.c      ****     }
 486:.\main.c      ****     setWheelDirection(TRUE, TRUE);
 1505              		.loc 1 486 0
 1506 012c 0120     		movs	r0, #1
 1507 012e 0121     		movs	r1, #1
 1508 0130 FFF7FEFF 		bl	setWheelDirection
 487:.\main.c      **** }
 1509              		.loc 1 487 0
 1510 0134 1037     		adds	r7, r7, #16
 1511              		.cfi_def_cfa_offset 8
 1512 0136 BD46     		mov	sp, r7
 1513              		.cfi_def_cfa_register 13
 1514              		@ sp needed
 1515 0138 80BD     		pop	{r7, pc}
 1516              	.L74:
 1517 013a 00BF     		.align	2
 1518              	.L73:
 1519 013c 28000000 		.word	.LC2
 1520 0140 94000000 		.word	.LC9
 1521 0144 00000000 		.word	adc_flag
 1522 0148 00000000 		.word	timer_flag
 1523 014c 00000000 		.word	prevCountM1
 1524 0150 00000000 		.word	prevCountM2
 1525 0154 00000000 		.word	countM1
 1526 0158 00000000 		.word	countM2
 1527 015c AC000000 		.word	.LC10
 1528 0160 00000000 		.word	sensor_readings
 1529 0164 C8000000 		.word	.LC11
 1530 0168 80000000 		.word	.LC8
 1531              		.cfi_endproc
 1532              	.LFE72:
 1533              		.size	uTurn, .-uTurn
 1534              		.section	.text.changeLeftWheelSpeed,"ax",%progbits
 1535              		.align	2
 1536              		.global	changeLeftWheelSpeed
 1537              		.thumb
 1538              		.thumb_func
 1539              		.type	changeLeftWheelSpeed, %function
 1540              	changeLeftWheelSpeed:
 1541              	.LFB73:
 488:.\main.c      **** 
 489:.\main.c      **** // --------------------------------------------- HELPERS ------------------------------------------
 490:.\main.c      **** void changeLeftWheelSpeed(int amount) {
 1542              		.loc 1 490 0
 1543              		.cfi_startproc
 1544              		@ args = 0, pretend = 0, frame = 16
 1545              		@ frame_needed = 1, uses_anonymous_args = 0
 1546 0000 80B5     		push	{r7, lr}
 1547              		.cfi_def_cfa_offset 8
 1548              		.cfi_offset 7, -8
 1549              		.cfi_offset 14, -4
 1550 0002 84B0     		sub	sp, sp, #16
 1551              		.cfi_def_cfa_offset 24
 1552 0004 00AF     		add	r7, sp, #0
 1553              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 38


 1554 0006 7860     		str	r0, [r7, #4]
 491:.\main.c      ****     int new_value = PWM_1_ReadCompare() + amount;
 1555              		.loc 1 491 0
 1556 0008 FFF7FEFF 		bl	PWM_1_ReadCompare
 1557 000c 0346     		mov	r3, r0
 1558 000e 1A46     		mov	r2, r3
 1559 0010 7B68     		ldr	r3, [r7, #4]
 1560 0012 1344     		add	r3, r3, r2
 1561 0014 FB60     		str	r3, [r7, #12]
 492:.\main.c      ****     PWM_1_WriteCompare((new_value > 0) ? new_value:0); // account for underflow
 1562              		.loc 1 492 0
 1563 0016 FB68     		ldr	r3, [r7, #12]
 1564 0018 23EAE373 		bic	r3, r3, r3, asr #31
 1565 001c 9BB2     		uxth	r3, r3
 1566 001e 1846     		mov	r0, r3
 1567 0020 FFF7FEFF 		bl	PWM_1_WriteCompare
 493:.\main.c      **** }
 1568              		.loc 1 493 0
 1569 0024 1037     		adds	r7, r7, #16
 1570              		.cfi_def_cfa_offset 8
 1571 0026 BD46     		mov	sp, r7
 1572              		.cfi_def_cfa_register 13
 1573              		@ sp needed
 1574 0028 80BD     		pop	{r7, pc}
 1575              		.cfi_endproc
 1576              	.LFE73:
 1577              		.size	changeLeftWheelSpeed, .-changeLeftWheelSpeed
 1578 002a 00BF     		.section	.text.changeRightWheelSpeed,"ax",%progbits
 1579              		.align	2
 1580              		.global	changeRightWheelSpeed
 1581              		.thumb
 1582              		.thumb_func
 1583              		.type	changeRightWheelSpeed, %function
 1584              	changeRightWheelSpeed:
 1585              	.LFB74:
 494:.\main.c      **** 
 495:.\main.c      **** void changeRightWheelSpeed(int amount){
 1586              		.loc 1 495 0
 1587              		.cfi_startproc
 1588              		@ args = 0, pretend = 0, frame = 16
 1589              		@ frame_needed = 1, uses_anonymous_args = 0
 1590 0000 80B5     		push	{r7, lr}
 1591              		.cfi_def_cfa_offset 8
 1592              		.cfi_offset 7, -8
 1593              		.cfi_offset 14, -4
 1594 0002 84B0     		sub	sp, sp, #16
 1595              		.cfi_def_cfa_offset 24
 1596 0004 00AF     		add	r7, sp, #0
 1597              		.cfi_def_cfa_register 7
 1598 0006 7860     		str	r0, [r7, #4]
 496:.\main.c      ****     int new_value = PWM_2_ReadCompare() + amount;
 1599              		.loc 1 496 0
 1600 0008 FFF7FEFF 		bl	PWM_2_ReadCompare
 1601 000c 0346     		mov	r3, r0
 1602 000e 1A46     		mov	r2, r3
 1603 0010 7B68     		ldr	r3, [r7, #4]
 1604 0012 1344     		add	r3, r3, r2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 39


 1605 0014 FB60     		str	r3, [r7, #12]
 497:.\main.c      ****     PWM_2_WriteCompare((new_value > 0) ? new_value:0); // account for underflow
 1606              		.loc 1 497 0
 1607 0016 FB68     		ldr	r3, [r7, #12]
 1608 0018 23EAE373 		bic	r3, r3, r3, asr #31
 1609 001c 9BB2     		uxth	r3, r3
 1610 001e 1846     		mov	r0, r3
 1611 0020 FFF7FEFF 		bl	PWM_2_WriteCompare
 498:.\main.c      **** }
 1612              		.loc 1 498 0
 1613 0024 1037     		adds	r7, r7, #16
 1614              		.cfi_def_cfa_offset 8
 1615 0026 BD46     		mov	sp, r7
 1616              		.cfi_def_cfa_register 13
 1617              		@ sp needed
 1618 0028 80BD     		pop	{r7, pc}
 1619              		.cfi_endproc
 1620              	.LFE74:
 1621              		.size	changeRightWheelSpeed, .-changeRightWheelSpeed
 1622              		.global	__aeabi_fdiv
 1623              		.global	__aeabi_f2d
 1624              		.global	__aeabi_dmul
 1625              		.global	__aeabi_d2f
 1626 002a 00BF     		.section	.text.getDistance,"ax",%progbits
 1627              		.align	2
 1628              		.global	getDistance
 1629              		.thumb
 1630              		.thumb_func
 1631              		.type	getDistance, %function
 1632              	getDistance:
 1633              	.LFB75:
 499:.\main.c      **** 
 500:.\main.c      **** float getDistance(int prevCountM1, int prevCountM2) {
 1634              		.loc 1 500 0
 1635              		.cfi_startproc
 1636              		@ args = 0, pretend = 0, frame = 16
 1637              		@ frame_needed = 1, uses_anonymous_args = 0
 1638 0000 80B5     		push	{r7, lr}
 1639              		.cfi_def_cfa_offset 8
 1640              		.cfi_offset 7, -8
 1641              		.cfi_offset 14, -4
 1642 0002 84B0     		sub	sp, sp, #16
 1643              		.cfi_def_cfa_offset 24
 1644 0004 00AF     		add	r7, sp, #0
 1645              		.cfi_def_cfa_register 7
 1646 0006 7860     		str	r0, [r7, #4]
 1647 0008 3960     		str	r1, [r7]
 501:.\main.c      ****     float m1_dist = ((float)abs(countM1 - prevCountM1) / TICKS_PER_REV) * LINEAR_DISTANCE_PER_REV;
 1648              		.loc 1 501 0
 1649 000a 2D4B     		ldr	r3, .L79+8
 1650 000c 1A68     		ldr	r2, [r3]
 1651 000e 7B68     		ldr	r3, [r7, #4]
 1652 0010 D31A     		subs	r3, r2, r3
 1653 0012 002B     		cmp	r3, #0
 1654 0014 B8BF     		it	lt
 1655 0016 5B42     		rsblt	r3, r3, #0
 1656 0018 1846     		mov	r0, r3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 40


 1657 001a FFF7FEFF 		bl	__aeabi_i2f
 1658 001e 0346     		mov	r3, r0
 1659 0020 1846     		mov	r0, r3
 1660 0022 2849     		ldr	r1, .L79+12
 1661 0024 FFF7FEFF 		bl	__aeabi_fdiv
 1662 0028 0346     		mov	r3, r0
 1663 002a 1846     		mov	r0, r3
 1664 002c FFF7FEFF 		bl	__aeabi_f2d
 1665 0030 0246     		mov	r2, r0
 1666 0032 0B46     		mov	r3, r1
 1667 0034 1046     		mov	r0, r2
 1668 0036 1946     		mov	r1, r3
 1669 0038 1FA3     		adr	r3, .L79
 1670 003a D3E90023 		ldrd	r2, [r3]
 1671 003e FFF7FEFF 		bl	__aeabi_dmul
 1672 0042 0246     		mov	r2, r0
 1673 0044 0B46     		mov	r3, r1
 1674 0046 1046     		mov	r0, r2
 1675 0048 1946     		mov	r1, r3
 1676 004a FFF7FEFF 		bl	__aeabi_d2f
 1677 004e 0346     		mov	r3, r0
 1678 0050 FB60     		str	r3, [r7, #12]	@ float
 502:.\main.c      ****     float m2_dist = ((float)abs(countM2 - prevCountM2) / TICKS_PER_REV) * LINEAR_DISTANCE_PER_REV;
 1679              		.loc 1 502 0
 1680 0052 1D4B     		ldr	r3, .L79+16
 1681 0054 1A68     		ldr	r2, [r3]
 1682 0056 3B68     		ldr	r3, [r7]
 1683 0058 D31A     		subs	r3, r2, r3
 1684 005a 002B     		cmp	r3, #0
 1685 005c B8BF     		it	lt
 1686 005e 5B42     		rsblt	r3, r3, #0
 1687 0060 1846     		mov	r0, r3
 1688 0062 FFF7FEFF 		bl	__aeabi_i2f
 1689 0066 0346     		mov	r3, r0
 1690 0068 1846     		mov	r0, r3
 1691 006a 1649     		ldr	r1, .L79+12
 1692 006c FFF7FEFF 		bl	__aeabi_fdiv
 1693 0070 0346     		mov	r3, r0
 1694 0072 1846     		mov	r0, r3
 1695 0074 FFF7FEFF 		bl	__aeabi_f2d
 1696 0078 0246     		mov	r2, r0
 1697 007a 0B46     		mov	r3, r1
 1698 007c 1046     		mov	r0, r2
 1699 007e 1946     		mov	r1, r3
 1700 0080 0DA3     		adr	r3, .L79
 1701 0082 D3E90023 		ldrd	r2, [r3]
 1702 0086 FFF7FEFF 		bl	__aeabi_dmul
 1703 008a 0246     		mov	r2, r0
 1704 008c 0B46     		mov	r3, r1
 1705 008e 1046     		mov	r0, r2
 1706 0090 1946     		mov	r1, r3
 1707 0092 FFF7FEFF 		bl	__aeabi_d2f
 1708 0096 0346     		mov	r3, r0
 1709 0098 BB60     		str	r3, [r7, #8]	@ float
 503:.\main.c      ****     return (m1_dist + m2_dist) / 2;
 1710              		.loc 1 503 0
 1711 009a F868     		ldr	r0, [r7, #12]	@ float
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 41


 1712 009c B968     		ldr	r1, [r7, #8]	@ float
 1713 009e FFF7FEFF 		bl	__aeabi_fadd
 1714 00a2 0346     		mov	r3, r0
 1715 00a4 1846     		mov	r0, r3
 1716 00a6 4FF08041 		mov	r1, #1073741824
 1717 00aa FFF7FEFF 		bl	__aeabi_fdiv
 1718 00ae 0346     		mov	r3, r0
 504:.\main.c      **** };
 1719              		.loc 1 504 0
 1720 00b0 1846     		mov	r0, r3
 1721 00b2 1037     		adds	r7, r7, #16
 1722              		.cfi_def_cfa_offset 8
 1723 00b4 BD46     		mov	sp, r7
 1724              		.cfi_def_cfa_register 13
 1725              		@ sp needed
 1726 00b6 80BD     		pop	{r7, pc}
 1727              	.L80:
 1728              		.align	3
 1729              	.L79:
 1730 00b8 CE8C7E34 		.word	880708814
 1731 00bc 9C6B3440 		.word	1077177244
 1732 00c0 00000000 		.word	countM1
 1733 00c4 00006443 		.word	1130627072
 1734 00c8 00000000 		.word	countM2
 1735              		.cfi_endproc
 1736              	.LFE75:
 1737              		.size	getDistance, .-getDistance
 1738 00cc AFF30080 		.section	.text.correctSpeed,"ax",%progbits
 1739              		.align	2
 1740              		.global	correctSpeed
 1741              		.thumb
 1742              		.thumb_func
 1743              		.type	correctSpeed, %function
 1744              	correctSpeed:
 1745              	.LFB76:
 505:.\main.c      **** 
 506:.\main.c      **** /* ## SPEED CONTROL ## 
 507:.\main.c      **** * Gets difference between counts, compares to difference we expect. Add correction to PWM.*/
 508:.\main.c      **** void correctSpeed(int prevCount, int count, int desired_count, int isLeftWheel){    
 1746              		.loc 1 508 0
 1747              		.cfi_startproc
 1748              		@ args = 0, pretend = 0, frame = 24
 1749              		@ frame_needed = 1, uses_anonymous_args = 0
 1750 0000 80B5     		push	{r7, lr}
 1751              		.cfi_def_cfa_offset 8
 1752              		.cfi_offset 7, -8
 1753              		.cfi_offset 14, -4
 1754 0002 86B0     		sub	sp, sp, #24
 1755              		.cfi_def_cfa_offset 32
 1756 0004 00AF     		add	r7, sp, #0
 1757              		.cfi_def_cfa_register 7
 1758 0006 F860     		str	r0, [r7, #12]
 1759 0008 B960     		str	r1, [r7, #8]
 1760 000a 7A60     		str	r2, [r7, #4]
 1761 000c 3B60     		str	r3, [r7]
 509:.\main.c      ****     // Account for overflow edge or other unknown error
 510:.\main.c      ****     if (prevCount > count) return;
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 42


 1762              		.loc 1 510 0
 1763 000e FA68     		ldr	r2, [r7, #12]
 1764 0010 BB68     		ldr	r3, [r7, #8]
 1765 0012 9A42     		cmp	r2, r3
 1766 0014 00DD     		ble	.L82
 1767 0016 19E0     		b	.L81
 1768              	.L82:
 511:.\main.c      ****     
 512:.\main.c      ****     // Account for when PSoc is powered but wheels aren't moving
 513:.\main.c      ****     int diff_count = abs(count - prevCount);
 1769              		.loc 1 513 0
 1770 0018 BA68     		ldr	r2, [r7, #8]
 1771 001a FB68     		ldr	r3, [r7, #12]
 1772 001c D31A     		subs	r3, r2, r3
 1773 001e 002B     		cmp	r3, #0
 1774 0020 B8BF     		it	lt
 1775 0022 5B42     		rsblt	r3, r3, #0
 1776 0024 7B61     		str	r3, [r7, #20]
 514:.\main.c      ****     if (diff_count == 0) return;
 1777              		.loc 1 514 0
 1778 0026 7B69     		ldr	r3, [r7, #20]
 1779 0028 002B     		cmp	r3, #0
 1780 002a 00D1     		bne	.L84
 1781              		.loc 1 514 0 is_stmt 0 discriminator 2
 1782 002c 0EE0     		b	.L81
 1783              	.L84:
 515:.\main.c      ****         
 516:.\main.c      ****     /* Determine correction that must be applied to the wheel
 517:.\main.c      ****     * desired_count > diff_count :-> wheel is slow; increase PWM
 518:.\main.c      ****     * desired_count < diff_count :-> wheel is fast; decrease PWM
 519:.\main.c      ****     * desired_count == diff_count :-> wheel is stable; do nothing
 520:.\main.c      ****     */
 521:.\main.c      ****     int correction = desired_count-diff_count;
 1784              		.loc 1 521 0 is_stmt 1
 1785 002e 7A68     		ldr	r2, [r7, #4]
 1786 0030 7B69     		ldr	r3, [r7, #20]
 1787 0032 D31A     		subs	r3, r2, r3
 1788 0034 3B61     		str	r3, [r7, #16]
 522:.\main.c      ****     
 523:.\main.c      ****     // Apply the speed correction to the appropriate wheel          
 524:.\main.c      ****     if (isLeftWheel) changeLeftWheelSpeed(correction);
 1789              		.loc 1 524 0
 1790 0036 3B68     		ldr	r3, [r7]
 1791 0038 002B     		cmp	r3, #0
 1792 003a 03D0     		beq	.L85
 1793              		.loc 1 524 0 is_stmt 0 discriminator 1
 1794 003c 3869     		ldr	r0, [r7, #16]
 1795 003e FFF7FEFF 		bl	changeLeftWheelSpeed
 1796 0042 02E0     		b	.L86
 1797              	.L85:
 525:.\main.c      ****     else changeRightWheelSpeed(correction);
 1798              		.loc 1 525 0 is_stmt 1
 1799 0044 3869     		ldr	r0, [r7, #16]
 1800 0046 FFF7FEFF 		bl	changeRightWheelSpeed
 1801              	.L86:
 526:.\main.c      ****     
 527:.\main.c      ****     return;
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 43


 1802              		.loc 1 527 0 discriminator 3
 1803 004a 00BF     		nop
 1804              	.L81:
 528:.\main.c      **** }
 1805              		.loc 1 528 0
 1806 004c 1837     		adds	r7, r7, #24
 1807              		.cfi_def_cfa_offset 8
 1808 004e BD46     		mov	sp, r7
 1809              		.cfi_def_cfa_register 13
 1810              		@ sp needed
 1811 0050 80BD     		pop	{r7, pc}
 1812              		.cfi_endproc
 1813              	.LFE76:
 1814              		.size	correctSpeed, .-correctSpeed
 1815 0052 00BF     		.section	.text.setWheelDirection,"ax",%progbits
 1816              		.align	2
 1817              		.global	setWheelDirection
 1818              		.thumb
 1819              		.thumb_func
 1820              		.type	setWheelDirection, %function
 1821              	setWheelDirection:
 1822              	.LFB77:
 529:.\main.c      **** 
 530:.\main.c      **** void setWheelDirection(int leftIsForward, int rightIsForward){
 1823              		.loc 1 530 0
 1824              		.cfi_startproc
 1825              		@ args = 0, pretend = 0, frame = 8
 1826              		@ frame_needed = 1, uses_anonymous_args = 0
 1827 0000 80B5     		push	{r7, lr}
 1828              		.cfi_def_cfa_offset 8
 1829              		.cfi_offset 7, -8
 1830              		.cfi_offset 14, -4
 1831 0002 82B0     		sub	sp, sp, #8
 1832              		.cfi_def_cfa_offset 16
 1833 0004 00AF     		add	r7, sp, #0
 1834              		.cfi_def_cfa_register 7
 1835 0006 7860     		str	r0, [r7, #4]
 1836 0008 3960     		str	r1, [r7]
 531:.\main.c      ****     INV1_Write(!leftIsForward);
 1837              		.loc 1 531 0
 1838 000a 7B68     		ldr	r3, [r7, #4]
 1839 000c 002B     		cmp	r3, #0
 1840 000e 0CBF     		ite	eq
 1841 0010 0123     		moveq	r3, #1
 1842 0012 0023     		movne	r3, #0
 1843 0014 DBB2     		uxtb	r3, r3
 1844 0016 1846     		mov	r0, r3
 1845 0018 FFF7FEFF 		bl	INV1_Write
 532:.\main.c      ****     INV2_Write(rightIsForward);
 1846              		.loc 1 532 0
 1847 001c 3B68     		ldr	r3, [r7]
 1848 001e DBB2     		uxtb	r3, r3
 1849 0020 1846     		mov	r0, r3
 1850 0022 FFF7FEFF 		bl	INV2_Write
 533:.\main.c      **** }
 1851              		.loc 1 533 0
 1852 0026 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 44


 1853              		.cfi_def_cfa_offset 8
 1854 0028 BD46     		mov	sp, r7
 1855              		.cfi_def_cfa_register 13
 1856              		@ sp needed
 1857 002a 80BD     		pop	{r7, pc}
 1858              		.cfi_endproc
 1859              	.LFE77:
 1860              		.size	setWheelDirection, .-setWheelDirection
 1861              		.section	.text.turnLeft,"ax",%progbits
 1862              		.align	2
 1863              		.global	turnLeft
 1864              		.thumb
 1865              		.thumb_func
 1866              		.type	turnLeft, %function
 1867              	turnLeft:
 1868              	.LFB78:
 534:.\main.c      **** 
 535:.\main.c      **** void turnLeft() {
 1869              		.loc 1 535 0
 1870              		.cfi_startproc
 1871              		@ args = 0, pretend = 0, frame = 0
 1872              		@ frame_needed = 1, uses_anonymous_args = 0
 1873 0000 80B5     		push	{r7, lr}
 1874              		.cfi_def_cfa_offset 8
 1875              		.cfi_offset 7, -8
 1876              		.cfi_offset 14, -4
 1877 0002 00AF     		add	r7, sp, #0
 1878              		.cfi_def_cfa_register 7
 536:.\main.c      ****     PWM_1_WriteCompare(0);
 1879              		.loc 1 536 0
 1880 0004 0020     		movs	r0, #0
 1881 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 537:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 1882              		.loc 1 537 0
 1883 000a 4FF4E170 		mov	r0, #450
 1884 000e FFF7FEFF 		bl	PWM_2_WriteCompare
 538:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 1885              		.loc 1 538 0
 1886 0012 08E0     		b	.L89
 1887              	.L90:
 539:.\main.c      ****         if (adc_flag) {
 1888              		.loc 1 539 0
 1889 0014 084B     		ldr	r3, .L91
 1890 0016 1B68     		ldr	r3, [r3]
 1891 0018 002B     		cmp	r3, #0
 1892 001a 04D0     		beq	.L89
 540:.\main.c      ****             updateSensorValues();
 1893              		.loc 1 540 0
 1894 001c FFF7FEFF 		bl	updateSensorValues
 541:.\main.c      ****             adc_flag = FALSE;
 1895              		.loc 1 541 0
 1896 0020 054B     		ldr	r3, .L91
 1897 0022 0022     		movs	r2, #0
 1898 0024 1A60     		str	r2, [r3]
 1899              	.L89:
 538:.\main.c      ****         if (adc_flag) {
 1900              		.loc 1 538 0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 45


 1901 0026 054B     		ldr	r3, .L91+4
 1902 0028 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1903 002a 002B     		cmp	r3, #0
 1904 002c F2D0     		beq	.L90
 542:.\main.c      ****         }
 543:.\main.c      ****     }
 544:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 1905              		.loc 1 544 0
 1906 002e 4FF4E170 		mov	r0, #450
 1907 0032 FFF7FEFF 		bl	PWM_1_WriteCompare
 545:.\main.c      **** }
 1908              		.loc 1 545 0
 1909 0036 80BD     		pop	{r7, pc}
 1910              	.L92:
 1911              		.align	2
 1912              	.L91:
 1913 0038 00000000 		.word	adc_flag
 1914 003c 00000000 		.word	sensor_readings
 1915              		.cfi_endproc
 1916              	.LFE78:
 1917              		.size	turnLeft, .-turnLeft
 1918              		.section	.text.turnRight,"ax",%progbits
 1919              		.align	2
 1920              		.global	turnRight
 1921              		.thumb
 1922              		.thumb_func
 1923              		.type	turnRight, %function
 1924              	turnRight:
 1925              	.LFB79:
 546:.\main.c      **** 
 547:.\main.c      **** void turnRight() {
 1926              		.loc 1 547 0
 1927              		.cfi_startproc
 1928              		@ args = 0, pretend = 0, frame = 0
 1929              		@ frame_needed = 1, uses_anonymous_args = 0
 1930 0000 80B5     		push	{r7, lr}
 1931              		.cfi_def_cfa_offset 8
 1932              		.cfi_offset 7, -8
 1933              		.cfi_offset 14, -4
 1934 0002 00AF     		add	r7, sp, #0
 1935              		.cfi_def_cfa_register 7
 548:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 1936              		.loc 1 548 0
 1937 0004 4FF4E170 		mov	r0, #450
 1938 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
 549:.\main.c      ****     PWM_2_WriteCompare(0);
 1939              		.loc 1 549 0
 1940 000c 0020     		movs	r0, #0
 1941 000e FFF7FEFF 		bl	PWM_2_WriteCompare
 550:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 1942              		.loc 1 550 0
 1943 0012 08E0     		b	.L94
 1944              	.L95:
 551:.\main.c      ****         if (adc_flag) {
 1945              		.loc 1 551 0
 1946 0014 084B     		ldr	r3, .L96
 1947 0016 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 46


 1948 0018 002B     		cmp	r3, #0
 1949 001a 04D0     		beq	.L94
 552:.\main.c      ****             updateSensorValues();
 1950              		.loc 1 552 0
 1951 001c FFF7FEFF 		bl	updateSensorValues
 553:.\main.c      ****             adc_flag = FALSE;
 1952              		.loc 1 553 0
 1953 0020 054B     		ldr	r3, .L96
 1954 0022 0022     		movs	r2, #0
 1955 0024 1A60     		str	r2, [r3]
 1956              	.L94:
 550:.\main.c      ****         if (adc_flag) {
 1957              		.loc 1 550 0
 1958 0026 054B     		ldr	r3, .L96+4
 1959 0028 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1960 002a 002B     		cmp	r3, #0
 1961 002c F2D0     		beq	.L95
 554:.\main.c      ****         }
 555:.\main.c      ****     }
 556:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 1962              		.loc 1 556 0
 1963 002e 4FF4E170 		mov	r0, #450
 1964 0032 FFF7FEFF 		bl	PWM_2_WriteCompare
 557:.\main.c      **** }
 1965              		.loc 1 557 0
 1966 0036 80BD     		pop	{r7, pc}
 1967              	.L97:
 1968              		.align	2
 1969              	.L96:
 1970 0038 00000000 		.word	adc_flag
 1971 003c 00000000 		.word	sensor_readings
 1972              		.cfi_endproc
 1973              	.LFE79:
 1974              		.size	turnRight, .-turnRight
 1975              		.section	.text.usbPutString,"ax",%progbits
 1976              		.align	2
 1977              		.global	usbPutString
 1978              		.thumb
 1979              		.thumb_func
 1980              		.type	usbPutString, %function
 1981              	usbPutString:
 1982              	.LFB80:
 558:.\main.c      **** 
 559:.\main.c      **** //* ========================================
 560:.\main.c      **** void usbPutString(char *s) {
 1983              		.loc 1 560 0
 1984              		.cfi_startproc
 1985              		@ args = 0, pretend = 0, frame = 8
 1986              		@ frame_needed = 1, uses_anonymous_args = 0
 1987              		@ link register save eliminated.
 1988 0000 80B4     		push	{r7}
 1989              		.cfi_def_cfa_offset 4
 1990              		.cfi_offset 7, -4
 1991 0002 83B0     		sub	sp, sp, #12
 1992              		.cfi_def_cfa_offset 16
 1993 0004 00AF     		add	r7, sp, #0
 1994              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 47


 1995 0006 7860     		str	r0, [r7, #4]
 561:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
 562:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 563:.\main.c      **** //  length to 62 char (63rd char is a '!')
 564:.\main.c      ****     
 565:.\main.c      **** #ifdef PUTTY
 566:.\main.c      ****     while (USBUART_CDCIsReady() == 0){ };
 567:.\main.c      ****     USBUART_PutData((uint8 *)s, strlen(s));
 568:.\main.c      **** #endif
 569:.\main.c      ****     (void)s;
 570:.\main.c      ****     return;
 1996              		.loc 1 570 0
 1997 0008 00BF     		nop
 571:.\main.c      **** }
 1998              		.loc 1 571 0
 1999 000a 0C37     		adds	r7, r7, #12
 2000              		.cfi_def_cfa_offset 4
 2001 000c BD46     		mov	sp, r7
 2002              		.cfi_def_cfa_register 13
 2003              		@ sp needed
 2004 000e 5DF8047B 		ldr	r7, [sp], #4
 2005              		.cfi_restore 7
 2006              		.cfi_def_cfa_offset 0
 2007 0012 7047     		bx	lr
 2008              		.cfi_endproc
 2009              	.LFE80:
 2010              		.size	usbPutString, .-usbPutString
 2011              		.text
 2012              	.Letext0:
 2013              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 2014              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 2015              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2016              		.file 5 ".\\vars.h"
 2017              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 2018              		.section	.debug_info,"",%progbits
 2019              	.Ldebug_info0:
 2020 0000 9F070000 		.4byte	0x79f
 2021 0004 0400     		.2byte	0x4
 2022 0006 00000000 		.4byte	.Ldebug_abbrev0
 2023 000a 04       		.byte	0x4
 2024 000b 01       		.uleb128 0x1
 2025 000c 2E020000 		.4byte	.LASF106
 2026 0010 01       		.byte	0x1
 2027 0011 2E000000 		.4byte	.LASF107
 2028 0015 C1000000 		.4byte	.LASF108
 2029 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2030 001d 00000000 		.4byte	0
 2031 0021 00000000 		.4byte	.Ldebug_line0
 2032 0025 02       		.uleb128 0x2
 2033 0026 01       		.byte	0x1
 2034 0027 06       		.byte	0x6
 2035 0028 3B030000 		.4byte	.LASF0
 2036 002c 02       		.uleb128 0x2
 2037 002d 01       		.byte	0x1
 2038 002e 08       		.byte	0x8
 2039 002f 0F030000 		.4byte	.LASF1
 2040 0033 02       		.uleb128 0x2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 48


 2041 0034 02       		.byte	0x2
 2042 0035 05       		.byte	0x5
 2043 0036 4B010000 		.4byte	.LASF2
 2044 003a 02       		.uleb128 0x2
 2045 003b 02       		.byte	0x2
 2046 003c 07       		.byte	0x7
 2047 003d D2030000 		.4byte	.LASF3
 2048 0041 03       		.uleb128 0x3
 2049 0042 23050000 		.4byte	.LASF11
 2050 0046 02       		.byte	0x2
 2051 0047 3F       		.byte	0x3f
 2052 0048 4C000000 		.4byte	0x4c
 2053 004c 02       		.uleb128 0x2
 2054 004d 04       		.byte	0x4
 2055 004e 05       		.byte	0x5
 2056 004f 06040000 		.4byte	.LASF4
 2057 0053 02       		.uleb128 0x2
 2058 0054 04       		.byte	0x4
 2059 0055 07       		.byte	0x7
 2060 0056 A5030000 		.4byte	.LASF5
 2061 005a 02       		.uleb128 0x2
 2062 005b 08       		.byte	0x8
 2063 005c 05       		.byte	0x5
 2064 005d C8010000 		.4byte	.LASF6
 2065 0061 02       		.uleb128 0x2
 2066 0062 08       		.byte	0x8
 2067 0063 07       		.byte	0x7
 2068 0064 55030000 		.4byte	.LASF7
 2069 0068 04       		.uleb128 0x4
 2070 0069 04       		.byte	0x4
 2071 006a 05       		.byte	0x5
 2072 006b 696E7400 		.ascii	"int\000"
 2073 006f 02       		.uleb128 0x2
 2074 0070 04       		.byte	0x4
 2075 0071 07       		.byte	0x7
 2076 0072 72030000 		.4byte	.LASF8
 2077 0076 02       		.uleb128 0x2
 2078 0077 04       		.byte	0x4
 2079 0078 07       		.byte	0x7
 2080 0079 78000000 		.4byte	.LASF9
 2081 007d 05       		.uleb128 0x5
 2082 007e 04       		.byte	0x4
 2083 007f 83000000 		.4byte	0x83
 2084 0083 02       		.uleb128 0x2
 2085 0084 01       		.byte	0x1
 2086 0085 08       		.byte	0x8
 2087 0086 F8030000 		.4byte	.LASF10
 2088 008a 03       		.uleb128 0x3
 2089 008b 28040000 		.4byte	.LASF12
 2090 008f 03       		.byte	0x3
 2091 0090 2C       		.byte	0x2c
 2092 0091 41000000 		.4byte	0x41
 2093 0095 06       		.uleb128 0x6
 2094 0096 86010000 		.4byte	.LASF13
 2095 009a 04       		.byte	0x4
 2096 009b 9201     		.2byte	0x192
 2097 009d 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 49


 2098 00a1 06       		.uleb128 0x6
 2099 00a2 73010000 		.4byte	.LASF14
 2100 00a6 04       		.byte	0x4
 2101 00a7 9301     		.2byte	0x193
 2102 00a9 3A000000 		.4byte	0x3a
 2103 00ad 06       		.uleb128 0x6
 2104 00ae E3010000 		.4byte	.LASF15
 2105 00b2 04       		.byte	0x4
 2106 00b3 9501     		.2byte	0x195
 2107 00b5 25000000 		.4byte	0x25
 2108 00b9 06       		.uleb128 0x6
 2109 00ba 80010000 		.4byte	.LASF16
 2110 00be 04       		.byte	0x4
 2111 00bf 9601     		.2byte	0x196
 2112 00c1 33000000 		.4byte	0x33
 2113 00c5 06       		.uleb128 0x6
 2114 00c6 E1040000 		.4byte	.LASF17
 2115 00ca 04       		.byte	0x4
 2116 00cb 9701     		.2byte	0x197
 2117 00cd 4C000000 		.4byte	0x4c
 2118 00d1 02       		.uleb128 0x2
 2119 00d2 04       		.byte	0x4
 2120 00d3 04       		.byte	0x4
 2121 00d4 C2010000 		.4byte	.LASF18
 2122 00d8 02       		.uleb128 0x2
 2123 00d9 08       		.byte	0x8
 2124 00da 04       		.byte	0x4
 2125 00db E7040000 		.4byte	.LASF19
 2126 00df 07       		.uleb128 0x7
 2127 00e0 E5030000 		.4byte	.LASF109
 2128 00e4 20       		.byte	0x20
 2129 00e5 05       		.byte	0x5
 2130 00e6 29       		.byte	0x29
 2131 00e7 B8010000 		.4byte	0x1b8
 2132 00eb 08       		.uleb128 0x8
 2133 00ec E5050000 		.4byte	.LASF20
 2134 00f0 05       		.byte	0x5
 2135 00f1 2A       		.byte	0x2a
 2136 00f2 AD000000 		.4byte	0xad
 2137 00f6 00       		.byte	0
 2138 00f7 08       		.uleb128 0x8
 2139 00f8 7A010000 		.4byte	.LASF21
 2140 00fc 05       		.byte	0x5
 2141 00fd 2B       		.byte	0x2b
 2142 00fe 95000000 		.4byte	0x95
 2143 0102 01       		.byte	0x1
 2144 0103 08       		.uleb128 0x8
 2145 0104 0F040000 		.4byte	.LASF22
 2146 0108 05       		.byte	0x5
 2147 0109 2C       		.byte	0x2c
 2148 010a B9000000 		.4byte	0xb9
 2149 010e 02       		.byte	0x2
 2150 010f 08       		.uleb128 0x8
 2151 0110 C3050000 		.4byte	.LASF23
 2152 0114 05       		.byte	0x5
 2153 0115 2D       		.byte	0x2d
 2154 0116 B9000000 		.4byte	0xb9
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 50


 2155 011a 04       		.byte	0x4
 2156 011b 08       		.uleb128 0x8
 2157 011c BC020000 		.4byte	.LASF24
 2158 0120 05       		.byte	0x5
 2159 0121 2E       		.byte	0x2e
 2160 0122 B9000000 		.4byte	0xb9
 2161 0126 06       		.byte	0x6
 2162 0127 08       		.uleb128 0x8
 2163 0128 B6040000 		.4byte	.LASF25
 2164 012c 05       		.byte	0x5
 2165 012d 2F       		.byte	0x2f
 2166 012e B9000000 		.4byte	0xb9
 2167 0132 08       		.byte	0x8
 2168 0133 08       		.uleb128 0x8
 2169 0134 52050000 		.4byte	.LASF26
 2170 0138 05       		.byte	0x5
 2171 0139 30       		.byte	0x30
 2172 013a B9000000 		.4byte	0xb9
 2173 013e 0A       		.byte	0xa
 2174 013f 08       		.uleb128 0x8
 2175 0140 1D030000 		.4byte	.LASF27
 2176 0144 05       		.byte	0x5
 2177 0145 31       		.byte	0x31
 2178 0146 B9000000 		.4byte	0xb9
 2179 014a 0C       		.byte	0xc
 2180 014b 08       		.uleb128 0x8
 2181 014c 12020000 		.4byte	.LASF28
 2182 0150 05       		.byte	0x5
 2183 0151 32       		.byte	0x32
 2184 0152 B9000000 		.4byte	0xb9
 2185 0156 0E       		.byte	0xe
 2186 0157 08       		.uleb128 0x8
 2187 0158 CA030000 		.4byte	.LASF29
 2188 015c 05       		.byte	0x5
 2189 015d 33       		.byte	0x33
 2190 015e B9000000 		.4byte	0xb9
 2191 0162 10       		.byte	0x10
 2192 0163 08       		.uleb128 0x8
 2193 0164 F3020000 		.4byte	.LASF30
 2194 0168 05       		.byte	0x5
 2195 0169 34       		.byte	0x34
 2196 016a B9000000 		.4byte	0xb9
 2197 016e 12       		.byte	0x12
 2198 016f 08       		.uleb128 0x8
 2199 0170 5A040000 		.4byte	.LASF31
 2200 0174 05       		.byte	0x5
 2201 0175 35       		.byte	0x35
 2202 0176 B9000000 		.4byte	0xb9
 2203 017a 14       		.byte	0x14
 2204 017b 08       		.uleb128 0x8
 2205 017c 8C010000 		.4byte	.LASF32
 2206 0180 05       		.byte	0x5
 2207 0181 36       		.byte	0x36
 2208 0182 B9000000 		.4byte	0xb9
 2209 0186 16       		.byte	0x16
 2210 0187 08       		.uleb128 0x8
 2211 0188 58000000 		.4byte	.LASF33
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 51


 2212 018c 05       		.byte	0x5
 2213 018d 37       		.byte	0x37
 2214 018e B9000000 		.4byte	0xb9
 2215 0192 18       		.byte	0x18
 2216 0193 08       		.uleb128 0x8
 2217 0194 0A020000 		.4byte	.LASF34
 2218 0198 05       		.byte	0x5
 2219 0199 38       		.byte	0x38
 2220 019a B9000000 		.4byte	0xb9
 2221 019e 1A       		.byte	0x1a
 2222 019f 08       		.uleb128 0x8
 2223 01a0 C1030000 		.4byte	.LASF35
 2224 01a4 05       		.byte	0x5
 2225 01a5 39       		.byte	0x39
 2226 01a6 B9000000 		.4byte	0xb9
 2227 01aa 1C       		.byte	0x1c
 2228 01ab 08       		.uleb128 0x8
 2229 01ac 40040000 		.4byte	.LASF36
 2230 01b0 05       		.byte	0x5
 2231 01b1 3A       		.byte	0x3a
 2232 01b2 B9000000 		.4byte	0xb9
 2233 01b6 1E       		.byte	0x1e
 2234 01b7 00       		.byte	0
 2235 01b8 09       		.uleb128 0x9
 2236 01b9 2F030000 		.4byte	.LASF37
 2237 01bd 01       		.byte	0x1
 2238 01be 5B       		.byte	0x5b
 2239 01bf 00000000 		.4byte	.LFB63
 2240 01c3 30000000 		.4byte	.LFE63-.LFB63
 2241 01c7 01       		.uleb128 0x1
 2242 01c8 9C       		.byte	0x9c
 2243 01c9 0A       		.uleb128 0xa
 2244 01ca 0B000000 		.4byte	.LASF38
 2245 01ce 01       		.byte	0x1
 2246 01cf 62       		.byte	0x62
 2247 01d0 00000000 		.4byte	.LFB64
 2248 01d4 18000000 		.4byte	.LFE64-.LFB64
 2249 01d8 01       		.uleb128 0x1
 2250 01d9 9C       		.byte	0x9c
 2251 01da 0B       		.uleb128 0xb
 2252 01db A1000000 		.4byte	.LASF45
 2253 01df 01       		.byte	0x1
 2254 01e0 77       		.byte	0x77
 2255 01e1 68000000 		.4byte	0x68
 2256 01e5 00000000 		.4byte	.LFB65
 2257 01e9 D8010000 		.4byte	.LFE65-.LFB65
 2258 01ed 01       		.uleb128 0x1
 2259 01ee 9C       		.byte	0x9c
 2260 01ef 44020000 		.4byte	0x244
 2261 01f3 0C       		.uleb128 0xc
 2262 01f4 BE040000 		.4byte	.LASF39
 2263 01f8 01       		.byte	0x1
 2264 01f9 9C       		.byte	0x9c
 2265 01fa 68000000 		.4byte	0x68
 2266 01fe 02       		.uleb128 0x2
 2267 01ff 91       		.byte	0x91
 2268 0200 6C       		.sleb128 -20
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 52


 2269 0201 0C       		.uleb128 0xc
 2270 0202 D0040000 		.4byte	.LASF40
 2271 0206 01       		.byte	0x1
 2272 0207 9D       		.byte	0x9d
 2273 0208 68000000 		.4byte	0x68
 2274 020c 02       		.uleb128 0x2
 2275 020d 91       		.byte	0x91
 2276 020e 68       		.sleb128 -24
 2277 020f 0C       		.uleb128 0xc
 2278 0210 3D050000 		.4byte	.LASF41
 2279 0214 01       		.byte	0x1
 2280 0215 9F       		.byte	0x9f
 2281 0216 44020000 		.4byte	0x244
 2282 021a 02       		.uleb128 0x2
 2283 021b 91       		.byte	0x91
 2284 021c 48       		.sleb128 -56
 2285 021d 0C       		.uleb128 0xc
 2286 021e 6F050000 		.4byte	.LASF42
 2287 0222 01       		.byte	0x1
 2288 0223 A5       		.byte	0xa5
 2289 0224 68000000 		.4byte	0x68
 2290 0228 02       		.uleb128 0x2
 2291 0229 91       		.byte	0x91
 2292 022a 74       		.sleb128 -12
 2293 022b 0D       		.uleb128 0xd
 2294 022c 6E010000 		.4byte	.LBB2
 2295 0230 24000000 		.4byte	.LBE2-.LBB2
 2296 0234 0C       		.uleb128 0xc
 2297 0235 60000000 		.4byte	.LASF43
 2298 0239 01       		.byte	0x1
 2299 023a B3       		.byte	0xb3
 2300 023b 68000000 		.4byte	0x68
 2301 023f 02       		.uleb128 0x2
 2302 0240 91       		.byte	0x91
 2303 0241 70       		.sleb128 -16
 2304 0242 00       		.byte	0
 2305 0243 00       		.byte	0
 2306 0244 0E       		.uleb128 0xe
 2307 0245 83000000 		.4byte	0x83
 2308 0249 54020000 		.4byte	0x254
 2309 024d 0F       		.uleb128 0xf
 2310 024e 76000000 		.4byte	0x76
 2311 0252 1F       		.byte	0x1f
 2312 0253 00       		.byte	0
 2313 0254 10       		.uleb128 0x10
 2314 0255 69040000 		.4byte	.LASF61
 2315 0259 01       		.byte	0x1
 2316 025a D9       		.byte	0xd9
 2317 025b C5000000 		.4byte	0xc5
 2318 025f 00000000 		.4byte	.LFB66
 2319 0263 24000000 		.4byte	.LFE66-.LFB66
 2320 0267 01       		.uleb128 0x1
 2321 0268 9C       		.byte	0x9c
 2322 0269 7A020000 		.4byte	0x27a
 2323 026d 11       		.uleb128 0x11
 2324 026e 6E00     		.ascii	"n\000"
 2325 0270 01       		.byte	0x1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 53


 2326 0271 D9       		.byte	0xd9
 2327 0272 B9000000 		.4byte	0xb9
 2328 0276 02       		.uleb128 0x2
 2329 0277 91       		.byte	0x91
 2330 0278 76       		.sleb128 -10
 2331 0279 00       		.byte	0
 2332 027a 12       		.uleb128 0x12
 2333 027b E8010000 		.4byte	.LASF110
 2334 027f 01       		.byte	0x1
 2335 0280 DD       		.byte	0xdd
 2336 0281 00000000 		.4byte	.LFB67
 2337 0285 B4000000 		.4byte	.LFE67-.LFB67
 2338 0289 01       		.uleb128 0x1
 2339 028a 9C       		.byte	0x9c
 2340 028b B4020000 		.4byte	0x2b4
 2341 028f 13       		.uleb128 0x13
 2342 0290 6900     		.ascii	"i\000"
 2343 0292 01       		.byte	0x1
 2344 0293 DF       		.byte	0xdf
 2345 0294 68000000 		.4byte	0x68
 2346 0298 02       		.uleb128 0x2
 2347 0299 91       		.byte	0x91
 2348 029a 74       		.sleb128 -12
 2349 029b 0D       		.uleb128 0xd
 2350 029c 0C000000 		.4byte	.LBB3
 2351 02a0 26000000 		.4byte	.LBE3-.LBB3
 2352 02a4 0C       		.uleb128 0xc
 2353 02a5 AE040000 		.4byte	.LASF44
 2354 02a9 01       		.byte	0x1
 2355 02aa E1       		.byte	0xe1
 2356 02ab 68000000 		.4byte	0x68
 2357 02af 02       		.uleb128 0x2
 2358 02b0 91       		.byte	0x91
 2359 02b1 70       		.sleb128 -16
 2360 02b2 00       		.byte	0
 2361 02b3 00       		.byte	0
 2362 02b4 14       		.uleb128 0x14
 2363 02b5 37000000 		.4byte	.LASF46
 2364 02b9 01       		.byte	0x1
 2365 02ba F5       		.byte	0xf5
 2366 02bb 00000000 		.4byte	.LFB68
 2367 02bf B8010000 		.4byte	.LFE68-.LFB68
 2368 02c3 01       		.uleb128 0x1
 2369 02c4 9C       		.byte	0x9c
 2370 02c5 10030000 		.4byte	0x310
 2371 02c9 15       		.uleb128 0x15
 2372 02ca A6000000 		.4byte	.LASF47
 2373 02ce 01       		.byte	0x1
 2374 02cf F5       		.byte	0xf5
 2375 02d0 68000000 		.4byte	0x68
 2376 02d4 02       		.uleb128 0x2
 2377 02d5 91       		.byte	0x91
 2378 02d6 6C       		.sleb128 -20
 2379 02d7 15       		.uleb128 0x15
 2380 02d8 BE040000 		.4byte	.LASF39
 2381 02dc 01       		.byte	0x1
 2382 02dd F5       		.byte	0xf5
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 54


 2383 02de 10030000 		.4byte	0x310
 2384 02e2 02       		.uleb128 0x2
 2385 02e3 91       		.byte	0x91
 2386 02e4 68       		.sleb128 -24
 2387 02e5 15       		.uleb128 0x15
 2388 02e6 D0040000 		.4byte	.LASF40
 2389 02ea 01       		.byte	0x1
 2390 02eb F5       		.byte	0xf5
 2391 02ec 10030000 		.4byte	0x310
 2392 02f0 02       		.uleb128 0x2
 2393 02f1 91       		.byte	0x91
 2394 02f2 64       		.sleb128 -28
 2395 02f3 0C       		.uleb128 0xc
 2396 02f4 EF030000 		.4byte	.LASF48
 2397 02f8 01       		.byte	0x1
 2398 02f9 FC       		.byte	0xfc
 2399 02fa D1000000 		.4byte	0xd1
 2400 02fe 02       		.uleb128 0x2
 2401 02ff 91       		.byte	0x91
 2402 0300 74       		.sleb128 -12
 2403 0301 0C       		.uleb128 0xc
 2404 0302 88040000 		.4byte	.LASF49
 2405 0306 01       		.byte	0x1
 2406 0307 FD       		.byte	0xfd
 2407 0308 68000000 		.4byte	0x68
 2408 030c 02       		.uleb128 0x2
 2409 030d 91       		.byte	0x91
 2410 030e 70       		.sleb128 -16
 2411 030f 00       		.byte	0
 2412 0310 05       		.uleb128 0x5
 2413 0311 04       		.byte	0x4
 2414 0312 68000000 		.4byte	0x68
 2415 0316 16       		.uleb128 0x16
 2416 0317 96030000 		.4byte	.LASF50
 2417 031b 01       		.byte	0x1
 2418 031c 4D01     		.2byte	0x14d
 2419 031e 00000000 		.4byte	.LFB69
 2420 0322 B0000000 		.4byte	.LFE69-.LFB69
 2421 0326 01       		.uleb128 0x1
 2422 0327 9C       		.byte	0x9c
 2423 0328 5A030000 		.4byte	0x35a
 2424 032c 17       		.uleb128 0x17
 2425 032d 07030000 		.4byte	.LASF51
 2426 0331 01       		.byte	0x1
 2427 0332 4D01     		.2byte	0x14d
 2428 0334 68000000 		.4byte	0x68
 2429 0338 02       		.uleb128 0x2
 2430 0339 91       		.byte	0x91
 2431 033a 6C       		.sleb128 -20
 2432 033b 18       		.uleb128 0x18
 2433 033c 55010000 		.4byte	.LASF52
 2434 0340 01       		.byte	0x1
 2435 0341 4E01     		.2byte	0x14e
 2436 0343 D1000000 		.4byte	0xd1
 2437 0347 02       		.uleb128 0x2
 2438 0348 91       		.byte	0x91
 2439 0349 70       		.sleb128 -16
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 55


 2440 034a 18       		.uleb128 0x18
 2441 034b 30040000 		.4byte	.LASF53
 2442 034f 01       		.byte	0x1
 2443 0350 4F01     		.2byte	0x14f
 2444 0352 D1000000 		.4byte	0xd1
 2445 0356 02       		.uleb128 0x2
 2446 0357 91       		.byte	0x91
 2447 0358 74       		.sleb128 -12
 2448 0359 00       		.byte	0
 2449 035a 19       		.uleb128 0x19
 2450 035b 1A040000 		.4byte	.LASF54
 2451 035f 01       		.byte	0x1
 2452 0360 6A01     		.2byte	0x16a
 2453 0362 00000000 		.4byte	.LFB70
 2454 0366 8C000000 		.4byte	.LFE70-.LFB70
 2455 036a 01       		.uleb128 0x1
 2456 036b 9C       		.byte	0x9c
 2457 036c 19       		.uleb128 0x19
 2458 036d F8050000 		.4byte	.LASF55
 2459 0371 01       		.byte	0x1
 2460 0372 8801     		.2byte	0x188
 2461 0374 00000000 		.4byte	.LFB71
 2462 0378 8C000000 		.4byte	.LFE71-.LFB71
 2463 037c 01       		.uleb128 0x1
 2464 037d 9C       		.byte	0x9c
 2465 037e 16       		.uleb128 0x16
 2466 037f 63040000 		.4byte	.LASF56
 2467 0383 01       		.byte	0x1
 2468 0384 A701     		.2byte	0x1a7
 2469 0386 00000000 		.4byte	.LFB72
 2470 038a 6C010000 		.4byte	.LFE72-.LFB72
 2471 038e 01       		.uleb128 0x1
 2472 038f 9C       		.byte	0x9c
 2473 0390 C2030000 		.4byte	0x3c2
 2474 0394 17       		.uleb128 0x17
 2475 0395 D0040000 		.4byte	.LASF40
 2476 0399 01       		.byte	0x1
 2477 039a A701     		.2byte	0x1a7
 2478 039c 10030000 		.4byte	0x310
 2479 03a0 02       		.uleb128 0x2
 2480 03a1 91       		.byte	0x91
 2481 03a2 6C       		.sleb128 -20
 2482 03a3 17       		.uleb128 0x17
 2483 03a4 BE040000 		.4byte	.LASF39
 2484 03a8 01       		.byte	0x1
 2485 03a9 A701     		.2byte	0x1a7
 2486 03ab 10030000 		.4byte	0x310
 2487 03af 02       		.uleb128 0x2
 2488 03b0 91       		.byte	0x91
 2489 03b1 68       		.sleb128 -24
 2490 03b2 18       		.uleb128 0x18
 2491 03b3 EF030000 		.4byte	.LASF48
 2492 03b7 01       		.byte	0x1
 2493 03b8 AC01     		.2byte	0x1ac
 2494 03ba D1000000 		.4byte	0xd1
 2495 03be 02       		.uleb128 0x2
 2496 03bf 91       		.byte	0x91
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 56


 2497 03c0 74       		.sleb128 -12
 2498 03c1 00       		.byte	0
 2499 03c2 16       		.uleb128 0x16
 2500 03c3 99040000 		.4byte	.LASF57
 2501 03c7 01       		.byte	0x1
 2502 03c8 EA01     		.2byte	0x1ea
 2503 03ca 00000000 		.4byte	.LFB73
 2504 03ce 2A000000 		.4byte	.LFE73-.LFB73
 2505 03d2 01       		.uleb128 0x1
 2506 03d3 9C       		.byte	0x9c
 2507 03d4 F7030000 		.4byte	0x3f7
 2508 03d8 17       		.uleb128 0x17
 2509 03d9 CE050000 		.4byte	.LASF58
 2510 03dd 01       		.byte	0x1
 2511 03de EA01     		.2byte	0x1ea
 2512 03e0 68000000 		.4byte	0x68
 2513 03e4 02       		.uleb128 0x2
 2514 03e5 91       		.byte	0x91
 2515 03e6 6C       		.sleb128 -20
 2516 03e7 18       		.uleb128 0x18
 2517 03e8 48050000 		.4byte	.LASF59
 2518 03ec 01       		.byte	0x1
 2519 03ed EB01     		.2byte	0x1eb
 2520 03ef 68000000 		.4byte	0x68
 2521 03f3 02       		.uleb128 0x2
 2522 03f4 91       		.byte	0x91
 2523 03f5 74       		.sleb128 -12
 2524 03f6 00       		.byte	0
 2525 03f7 16       		.uleb128 0x16
 2526 03f8 81000000 		.4byte	.LASF60
 2527 03fc 01       		.byte	0x1
 2528 03fd EF01     		.2byte	0x1ef
 2529 03ff 00000000 		.4byte	.LFB74
 2530 0403 2A000000 		.4byte	.LFE74-.LFB74
 2531 0407 01       		.uleb128 0x1
 2532 0408 9C       		.byte	0x9c
 2533 0409 2C040000 		.4byte	0x42c
 2534 040d 17       		.uleb128 0x17
 2535 040e CE050000 		.4byte	.LASF58
 2536 0412 01       		.byte	0x1
 2537 0413 EF01     		.2byte	0x1ef
 2538 0415 68000000 		.4byte	0x68
 2539 0419 02       		.uleb128 0x2
 2540 041a 91       		.byte	0x91
 2541 041b 6C       		.sleb128 -20
 2542 041c 18       		.uleb128 0x18
 2543 041d 48050000 		.4byte	.LASF59
 2544 0421 01       		.byte	0x1
 2545 0422 F001     		.2byte	0x1f0
 2546 0424 68000000 		.4byte	0x68
 2547 0428 02       		.uleb128 0x2
 2548 0429 91       		.byte	0x91
 2549 042a 74       		.sleb128 -12
 2550 042b 00       		.byte	0
 2551 042c 1A       		.uleb128 0x1a
 2552 042d 89050000 		.4byte	.LASF62
 2553 0431 01       		.byte	0x1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 57


 2554 0432 F401     		.2byte	0x1f4
 2555 0434 D1000000 		.4byte	0xd1
 2556 0438 00000000 		.4byte	.LFB75
 2557 043c CC000000 		.4byte	.LFE75-.LFB75
 2558 0440 01       		.uleb128 0x1
 2559 0441 9C       		.byte	0x9c
 2560 0442 83040000 		.4byte	0x483
 2561 0446 17       		.uleb128 0x17
 2562 0447 FB020000 		.4byte	.LASF63
 2563 044b 01       		.byte	0x1
 2564 044c F401     		.2byte	0x1f4
 2565 044e 68000000 		.4byte	0x68
 2566 0452 02       		.uleb128 0x2
 2567 0453 91       		.byte	0x91
 2568 0454 6C       		.sleb128 -20
 2569 0455 17       		.uleb128 0x17
 2570 0456 99010000 		.4byte	.LASF64
 2571 045a 01       		.byte	0x1
 2572 045b F401     		.2byte	0x1f4
 2573 045d 68000000 		.4byte	0x68
 2574 0461 02       		.uleb128 0x2
 2575 0462 91       		.byte	0x91
 2576 0463 68       		.sleb128 -24
 2577 0464 18       		.uleb128 0x18
 2578 0465 7F030000 		.4byte	.LASF65
 2579 0469 01       		.byte	0x1
 2580 046a F501     		.2byte	0x1f5
 2581 046c D1000000 		.4byte	0xd1
 2582 0470 02       		.uleb128 0x2
 2583 0471 91       		.byte	0x91
 2584 0472 74       		.sleb128 -12
 2585 0473 18       		.uleb128 0x18
 2586 0474 1A000000 		.4byte	.LASF66
 2587 0478 01       		.byte	0x1
 2588 0479 F601     		.2byte	0x1f6
 2589 047b D1000000 		.4byte	0xd1
 2590 047f 02       		.uleb128 0x2
 2591 0480 91       		.byte	0x91
 2592 0481 70       		.sleb128 -16
 2593 0482 00       		.byte	0
 2594 0483 16       		.uleb128 0x16
 2595 0484 A5010000 		.4byte	.LASF67
 2596 0488 01       		.byte	0x1
 2597 0489 FC01     		.2byte	0x1fc
 2598 048b 00000000 		.4byte	.LFB76
 2599 048f 52000000 		.4byte	.LFE76-.LFB76
 2600 0493 01       		.uleb128 0x1
 2601 0494 9C       		.byte	0x9c
 2602 0495 F4040000 		.4byte	0x4f4
 2603 0499 17       		.uleb128 0x17
 2604 049a B7030000 		.4byte	.LASF68
 2605 049e 01       		.byte	0x1
 2606 049f FC01     		.2byte	0x1fc
 2607 04a1 68000000 		.4byte	0x68
 2608 04a5 02       		.uleb128 0x2
 2609 04a6 91       		.byte	0x91
 2610 04a7 6C       		.sleb128 -20
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 58


 2611 04a8 17       		.uleb128 0x17
 2612 04a9 11050000 		.4byte	.LASF69
 2613 04ad 01       		.byte	0x1
 2614 04ae FC01     		.2byte	0x1fc
 2615 04b0 68000000 		.4byte	0x68
 2616 04b4 02       		.uleb128 0x2
 2617 04b5 91       		.byte	0x91
 2618 04b6 68       		.sleb128 -24
 2619 04b7 17       		.uleb128 0x17
 2620 04b8 47030000 		.4byte	.LASF70
 2621 04bc 01       		.byte	0x1
 2622 04bd FC01     		.2byte	0x1fc
 2623 04bf 68000000 		.4byte	0x68
 2624 04c3 02       		.uleb128 0x2
 2625 04c4 91       		.byte	0x91
 2626 04c5 64       		.sleb128 -28
 2627 04c6 17       		.uleb128 0x17
 2628 04c7 B5000000 		.4byte	.LASF71
 2629 04cb 01       		.byte	0x1
 2630 04cc FC01     		.2byte	0x1fc
 2631 04ce 68000000 		.4byte	0x68
 2632 04d2 02       		.uleb128 0x2
 2633 04d3 91       		.byte	0x91
 2634 04d4 60       		.sleb128 -32
 2635 04d5 18       		.uleb128 0x18
 2636 04d6 EE040000 		.4byte	.LASF72
 2637 04da 01       		.byte	0x1
 2638 04db 0102     		.2byte	0x201
 2639 04dd 68000000 		.4byte	0x68
 2640 04e1 02       		.uleb128 0x2
 2641 04e2 91       		.byte	0x91
 2642 04e3 74       		.sleb128 -12
 2643 04e4 18       		.uleb128 0x18
 2644 04e5 00000000 		.4byte	.LASF73
 2645 04e9 01       		.byte	0x1
 2646 04ea 0902     		.2byte	0x209
 2647 04ec 68000000 		.4byte	0x68
 2648 04f0 02       		.uleb128 0x2
 2649 04f1 91       		.byte	0x91
 2650 04f2 70       		.sleb128 -16
 2651 04f3 00       		.byte	0
 2652 04f4 16       		.uleb128 0x16
 2653 04f5 95050000 		.4byte	.LASF74
 2654 04f9 01       		.byte	0x1
 2655 04fa 1202     		.2byte	0x212
 2656 04fc 00000000 		.4byte	.LFB77
 2657 0500 2C000000 		.4byte	.LFE77-.LFB77
 2658 0504 01       		.uleb128 0x1
 2659 0505 9C       		.byte	0x9c
 2660 0506 29050000 		.4byte	0x529
 2661 050a 17       		.uleb128 0x17
 2662 050b EA050000 		.4byte	.LASF75
 2663 050f 01       		.byte	0x1
 2664 0510 1202     		.2byte	0x212
 2665 0512 68000000 		.4byte	0x68
 2666 0516 02       		.uleb128 0x2
 2667 0517 91       		.byte	0x91
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 59


 2668 0518 74       		.sleb128 -12
 2669 0519 17       		.uleb128 0x17
 2670 051a 1F020000 		.4byte	.LASF76
 2671 051e 01       		.byte	0x1
 2672 051f 1202     		.2byte	0x212
 2673 0521 68000000 		.4byte	0x68
 2674 0525 02       		.uleb128 0x2
 2675 0526 91       		.byte	0x91
 2676 0527 70       		.sleb128 -16
 2677 0528 00       		.byte	0
 2678 0529 19       		.uleb128 0x19
 2679 052a 26030000 		.4byte	.LASF77
 2680 052e 01       		.byte	0x1
 2681 052f 1702     		.2byte	0x217
 2682 0531 00000000 		.4byte	.LFB78
 2683 0535 40000000 		.4byte	.LFE78-.LFB78
 2684 0539 01       		.uleb128 0x1
 2685 053a 9C       		.byte	0x9c
 2686 053b 19       		.uleb128 0x19
 2687 053c 5A050000 		.4byte	.LASF78
 2688 0540 01       		.byte	0x1
 2689 0541 2302     		.2byte	0x223
 2690 0543 00000000 		.4byte	.LFB79
 2691 0547 40000000 		.4byte	.LFE79-.LFB79
 2692 054b 01       		.uleb128 0x1
 2693 054c 9C       		.byte	0x9c
 2694 054d 1B       		.uleb128 0x1b
 2695 054e D6010000 		.4byte	.LASF79
 2696 0552 01       		.byte	0x1
 2697 0553 3002     		.2byte	0x230
 2698 0555 00000000 		.4byte	.LFB80
 2699 0559 14000000 		.4byte	.LFE80-.LFB80
 2700 055d 01       		.uleb128 0x1
 2701 055e 9C       		.byte	0x9c
 2702 055f 71050000 		.4byte	0x571
 2703 0563 1C       		.uleb128 0x1c
 2704 0564 7300     		.ascii	"s\000"
 2705 0566 01       		.byte	0x1
 2706 0567 3002     		.2byte	0x230
 2707 0569 7D000000 		.4byte	0x7d
 2708 056d 02       		.uleb128 0x2
 2709 056e 91       		.byte	0x91
 2710 056f 74       		.sleb128 -12
 2711 0570 00       		.byte	0
 2712 0571 1D       		.uleb128 0x1d
 2713 0572 66010000 		.4byte	.LASF80
 2714 0576 06       		.byte	0x6
 2715 0577 9606     		.2byte	0x696
 2716 0579 7D050000 		.4byte	0x57d
 2717 057d 1E       		.uleb128 0x1e
 2718 057e 8A000000 		.4byte	0x8a
 2719 0582 1F       		.uleb128 0x1f
 2720 0583 747300   		.ascii	"ts\000"
 2721 0586 05       		.byte	0x5
 2722 0587 10       		.byte	0x10
 2723 0588 95000000 		.4byte	0x95
 2724 058c 05       		.uleb128 0x5
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 60


 2725 058d 03       		.byte	0x3
 2726 058e 00000000 		.4byte	ts
 2727 0592 20       		.uleb128 0x20
 2728 0593 13000000 		.4byte	.LASF81
 2729 0597 05       		.byte	0x5
 2730 0598 11       		.byte	0x11
 2731 0599 A1000000 		.4byte	0xa1
 2732 059d 05       		.uleb128 0x5
 2733 059e 03       		.byte	0x3
 2734 059f 00000000 		.4byte	ts_enc
 2735 05a3 20       		.uleb128 0x20
 2736 05a4 7F050000 		.4byte	.LASF82
 2737 05a8 05       		.byte	0x5
 2738 05a9 12       		.byte	0x12
 2739 05aa A1000000 		.4byte	0xa1
 2740 05ae 05       		.uleb128 0x5
 2741 05af 03       		.byte	0x3
 2742 05b0 00000000 		.4byte	ts_update
 2743 05b4 20       		.uleb128 0x20
 2744 05b5 08050000 		.4byte	.LASF83
 2745 05b9 05       		.byte	0x5
 2746 05ba 13       		.byte	0x13
 2747 05bb A1000000 		.4byte	0xa1
 2748 05bf 05       		.uleb128 0x5
 2749 05c0 03       		.byte	0x3
 2750 05c1 00000000 		.4byte	ts_speed
 2751 05c5 20       		.uleb128 0x20
 2752 05c6 64050000 		.4byte	.LASF84
 2753 05ca 05       		.byte	0x5
 2754 05cb 14       		.byte	0x14
 2755 05cc A1000000 		.4byte	0xa1
 2756 05d0 05       		.uleb128 0x5
 2757 05d1 03       		.byte	0x3
 2758 05d2 00000000 		.4byte	ts_display
 2759 05d6 20       		.uleb128 0x20
 2760 05d7 17050000 		.4byte	.LASF85
 2761 05db 05       		.byte	0x5
 2762 05dc 16       		.byte	0x16
 2763 05dd 95000000 		.4byte	0x95
 2764 05e1 05       		.uleb128 0x5
 2765 05e2 03       		.byte	0x3
 2766 05e3 00000000 		.4byte	flag_ts_enc
 2767 05e7 20       		.uleb128 0x20
 2768 05e8 FB010000 		.4byte	.LASF86
 2769 05ec 05       		.byte	0x5
 2770 05ed 17       		.byte	0x17
 2771 05ee 95000000 		.4byte	0x95
 2772 05f2 05       		.uleb128 0x5
 2773 05f3 03       		.byte	0x3
 2774 05f4 00000000 		.4byte	flag_ts_update
 2775 05f8 20       		.uleb128 0x20
 2776 05f9 4A000000 		.4byte	.LASF87
 2777 05fd 05       		.byte	0x5
 2778 05fe 18       		.byte	0x18
 2779 05ff 95000000 		.4byte	0x95
 2780 0603 05       		.uleb128 0x5
 2781 0604 03       		.byte	0x3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 61


 2782 0605 00000000 		.4byte	flag_ts_speed
 2783 0609 20       		.uleb128 0x20
 2784 060a CE020000 		.4byte	.LASF88
 2785 060e 05       		.byte	0x5
 2786 060f 19       		.byte	0x19
 2787 0610 95000000 		.4byte	0x95
 2788 0614 05       		.uleb128 0x5
 2789 0615 03       		.byte	0x3
 2790 0616 00000000 		.4byte	flag_ts_display
 2791 061a 20       		.uleb128 0x20
 2792 061b DE020000 		.4byte	.LASF89
 2793 061f 05       		.byte	0x5
 2794 0620 1C       		.byte	0x1c
 2795 0621 95000000 		.4byte	0x95
 2796 0625 05       		.uleb128 0x5
 2797 0626 03       		.byte	0x3
 2798 0627 00000000 		.4byte	flag_rx
 2799 062b 20       		.uleb128 0x20
 2800 062c 22000000 		.4byte	.LASF90
 2801 0630 05       		.byte	0x5
 2802 0631 1D       		.byte	0x1d
 2803 0632 95000000 		.4byte	0x95
 2804 0636 05       		.uleb128 0x5
 2805 0637 03       		.byte	0x3
 2806 0638 00000000 		.4byte	flag_packet
 2807 063c 20       		.uleb128 0x20
 2808 063d 87030000 		.4byte	.LASF91
 2809 0641 05       		.byte	0x5
 2810 0642 1E       		.byte	0x1e
 2811 0643 95000000 		.4byte	0x95
 2812 0647 05       		.uleb128 0x5
 2813 0648 03       		.byte	0x3
 2814 0649 00000000 		.4byte	flag_KB_string
 2815 064d 20       		.uleb128 0x20
 2816 064e F9040000 		.4byte	.LASF92
 2817 0652 05       		.byte	0x5
 2818 0653 20       		.byte	0x20
 2819 0654 95000000 		.4byte	0x95
 2820 0658 05       		.uleb128 0x5
 2821 0659 03       		.byte	0x3
 2822 065a 00000000 		.4byte	dataready_flag
 2823 065e 20       		.uleb128 0x20
 2824 065f A7050000 		.4byte	.LASF93
 2825 0663 05       		.byte	0x5
 2826 0664 22       		.byte	0x22
 2827 0665 95000000 		.4byte	0x95
 2828 0669 05       		.uleb128 0x5
 2829 066a 03       		.byte	0x3
 2830 066b 00000000 		.4byte	flag_rf_transmission_active
 2831 066f 0E       		.uleb128 0xe
 2832 0670 83000000 		.4byte	0x83
 2833 0674 7F060000 		.4byte	0x67f
 2834 0678 0F       		.uleb128 0xf
 2835 0679 76000000 		.4byte	0x76
 2836 067d 3F       		.byte	0x3f
 2837 067e 00       		.byte	0
 2838 067f 20       		.uleb128 0x20
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 62


 2839 0680 7A040000 		.4byte	.LASF94
 2840 0684 05       		.byte	0x5
 2841 0685 25       		.byte	0x25
 2842 0686 6F060000 		.4byte	0x66f
 2843 068a 05       		.uleb128 0x5
 2844 068b 03       		.byte	0x3
 2845 068c 00000000 		.4byte	displaystring
 2846 0690 20       		.uleb128 0x20
 2847 0691 B2010000 		.4byte	.LASF95
 2848 0695 05       		.byte	0x5
 2849 0696 26       		.byte	0x26
 2850 0697 6F060000 		.4byte	0x66f
 2851 069b 05       		.uleb128 0x5
 2852 069c 03       		.byte	0x3
 2853 069d 00000000 		.4byte	line
 2854 06a1 20       		.uleb128 0x20
 2855 06a2 6C030000 		.4byte	.LASF96
 2856 06a6 05       		.byte	0x5
 2857 06a7 26       		.byte	0x26
 2858 06a8 6F060000 		.4byte	0x66f
 2859 06ac 05       		.uleb128 0x5
 2860 06ad 03       		.byte	0x3
 2861 06ae 00000000 		.4byte	entry
 2862 06b2 0E       		.uleb128 0xe
 2863 06b3 95000000 		.4byte	0x95
 2864 06b7 C2060000 		.4byte	0x6c2
 2865 06bb 0F       		.uleb128 0xf
 2866 06bc 76000000 		.4byte	0x76
 2867 06c0 3F       		.byte	0x3f
 2868 06c1 00       		.byte	0
 2869 06c2 20       		.uleb128 0x20
 2870 06c3 97000000 		.4byte	.LASF97
 2871 06c7 05       		.byte	0x5
 2872 06c8 27       		.byte	0x27
 2873 06c9 B2060000 		.4byte	0x6b2
 2874 06cd 05       		.uleb128 0x5
 2875 06ce 03       		.byte	0x3
 2876 06cf 00000000 		.4byte	usbBuffer
 2877 06d3 20       		.uleb128 0x20
 2878 06d4 6B000000 		.4byte	.LASF98
 2879 06d8 05       		.byte	0x5
 2880 06d9 3C       		.byte	0x3c
 2881 06da DF000000 		.4byte	0xdf
 2882 06de 05       		.uleb128 0x5
 2883 06df 03       		.byte	0x3
 2884 06e0 00000000 		.4byte	system_state
 2885 06e4 20       		.uleb128 0x20
 2886 06e5 FD030000 		.4byte	.LASF99
 2887 06e9 01       		.byte	0x1
 2888 06ea 50       		.byte	0x50
 2889 06eb F5060000 		.4byte	0x6f5
 2890 06ef 05       		.uleb128 0x5
 2891 06f0 03       		.byte	0x3
 2892 06f1 00000000 		.4byte	adc_flag
 2893 06f5 1E       		.uleb128 0x1e
 2894 06f6 68000000 		.4byte	0x68
 2895 06fa 0E       		.uleb128 0xe
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 63


 2896 06fb AD000000 		.4byte	0xad
 2897 06ff 0A070000 		.4byte	0x70a
 2898 0703 0F       		.uleb128 0xf
 2899 0704 76000000 		.4byte	0x76
 2900 0708 05       		.byte	0x5
 2901 0709 00       		.byte	0
 2902 070a 20       		.uleb128 0x20
 2903 070b D5050000 		.4byte	.LASF100
 2904 070f 01       		.byte	0x1
 2905 0710 51       		.byte	0x51
 2906 0711 FA060000 		.4byte	0x6fa
 2907 0715 05       		.uleb128 0x5
 2908 0716 03       		.byte	0x3
 2909 0717 00000000 		.4byte	sensor_readings
 2910 071b 0E       		.uleb128 0xe
 2911 071c 68000000 		.4byte	0x68
 2912 0720 2B070000 		.4byte	0x72b
 2913 0724 0F       		.uleb128 0xf
 2914 0725 76000000 		.4byte	0x76
 2915 0729 05       		.byte	0x5
 2916 072a 00       		.byte	0
 2917 072b 20       		.uleb128 0x20
 2918 072c E6020000 		.4byte	.LASF101
 2919 0730 01       		.byte	0x1
 2920 0731 52       		.byte	0x52
 2921 0732 1B070000 		.4byte	0x71b
 2922 0736 05       		.uleb128 0x5
 2923 0737 03       		.byte	0x3
 2924 0738 00000000 		.4byte	adc_readings
 2925 073c 20       		.uleb128 0x20
 2926 073d 4D040000 		.4byte	.LASF102
 2927 0741 01       		.byte	0x1
 2928 0742 53       		.byte	0x53
 2929 0743 68000000 		.4byte	0x68
 2930 0747 05       		.uleb128 0x5
 2931 0748 03       		.byte	0x3
 2932 0749 00000000 		.4byte	sample_count
 2933 074d 20       		.uleb128 0x20
 2934 074e B7010000 		.4byte	.LASF103
 2935 0752 01       		.byte	0x1
 2936 0753 55       		.byte	0x55
 2937 0754 F5060000 		.4byte	0x6f5
 2938 0758 05       		.uleb128 0x5
 2939 0759 03       		.byte	0x3
 2940 075a 00000000 		.4byte	timer_flag
 2941 075e 20       		.uleb128 0x20
 2942 075f 2D050000 		.4byte	.LASF104
 2943 0763 01       		.byte	0x1
 2944 0764 56       		.byte	0x56
 2945 0765 F5060000 		.4byte	0x6f5
 2946 0769 05       		.uleb128 0x5
 2947 076a 03       		.byte	0x3
 2948 076b 00000000 		.4byte	countM1
 2949 076f 20       		.uleb128 0x20
 2950 0770 35050000 		.4byte	.LASF105
 2951 0774 01       		.byte	0x1
 2952 0775 57       		.byte	0x57
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 64


 2953 0776 F5060000 		.4byte	0x6f5
 2954 077a 05       		.uleb128 0x5
 2955 077b 03       		.byte	0x3
 2956 077c 00000000 		.4byte	countM2
 2957 0780 20       		.uleb128 0x20
 2958 0781 FB020000 		.4byte	.LASF63
 2959 0785 01       		.byte	0x1
 2960 0786 58       		.byte	0x58
 2961 0787 68000000 		.4byte	0x68
 2962 078b 05       		.uleb128 0x5
 2963 078c 03       		.byte	0x3
 2964 078d 00000000 		.4byte	prevCountM1
 2965 0791 20       		.uleb128 0x20
 2966 0792 99010000 		.4byte	.LASF64
 2967 0796 01       		.byte	0x1
 2968 0797 59       		.byte	0x59
 2969 0798 68000000 		.4byte	0x68
 2970 079c 05       		.uleb128 0x5
 2971 079d 03       		.byte	0x3
 2972 079e 00000000 		.4byte	prevCountM2
 2973 07a2 00       		.byte	0
 2974              		.section	.debug_abbrev,"",%progbits
 2975              	.Ldebug_abbrev0:
 2976 0000 01       		.uleb128 0x1
 2977 0001 11       		.uleb128 0x11
 2978 0002 01       		.byte	0x1
 2979 0003 25       		.uleb128 0x25
 2980 0004 0E       		.uleb128 0xe
 2981 0005 13       		.uleb128 0x13
 2982 0006 0B       		.uleb128 0xb
 2983 0007 03       		.uleb128 0x3
 2984 0008 0E       		.uleb128 0xe
 2985 0009 1B       		.uleb128 0x1b
 2986 000a 0E       		.uleb128 0xe
 2987 000b 55       		.uleb128 0x55
 2988 000c 17       		.uleb128 0x17
 2989 000d 11       		.uleb128 0x11
 2990 000e 01       		.uleb128 0x1
 2991 000f 10       		.uleb128 0x10
 2992 0010 17       		.uleb128 0x17
 2993 0011 00       		.byte	0
 2994 0012 00       		.byte	0
 2995 0013 02       		.uleb128 0x2
 2996 0014 24       		.uleb128 0x24
 2997 0015 00       		.byte	0
 2998 0016 0B       		.uleb128 0xb
 2999 0017 0B       		.uleb128 0xb
 3000 0018 3E       		.uleb128 0x3e
 3001 0019 0B       		.uleb128 0xb
 3002 001a 03       		.uleb128 0x3
 3003 001b 0E       		.uleb128 0xe
 3004 001c 00       		.byte	0
 3005 001d 00       		.byte	0
 3006 001e 03       		.uleb128 0x3
 3007 001f 16       		.uleb128 0x16
 3008 0020 00       		.byte	0
 3009 0021 03       		.uleb128 0x3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 65


 3010 0022 0E       		.uleb128 0xe
 3011 0023 3A       		.uleb128 0x3a
 3012 0024 0B       		.uleb128 0xb
 3013 0025 3B       		.uleb128 0x3b
 3014 0026 0B       		.uleb128 0xb
 3015 0027 49       		.uleb128 0x49
 3016 0028 13       		.uleb128 0x13
 3017 0029 00       		.byte	0
 3018 002a 00       		.byte	0
 3019 002b 04       		.uleb128 0x4
 3020 002c 24       		.uleb128 0x24
 3021 002d 00       		.byte	0
 3022 002e 0B       		.uleb128 0xb
 3023 002f 0B       		.uleb128 0xb
 3024 0030 3E       		.uleb128 0x3e
 3025 0031 0B       		.uleb128 0xb
 3026 0032 03       		.uleb128 0x3
 3027 0033 08       		.uleb128 0x8
 3028 0034 00       		.byte	0
 3029 0035 00       		.byte	0
 3030 0036 05       		.uleb128 0x5
 3031 0037 0F       		.uleb128 0xf
 3032 0038 00       		.byte	0
 3033 0039 0B       		.uleb128 0xb
 3034 003a 0B       		.uleb128 0xb
 3035 003b 49       		.uleb128 0x49
 3036 003c 13       		.uleb128 0x13
 3037 003d 00       		.byte	0
 3038 003e 00       		.byte	0
 3039 003f 06       		.uleb128 0x6
 3040 0040 16       		.uleb128 0x16
 3041 0041 00       		.byte	0
 3042 0042 03       		.uleb128 0x3
 3043 0043 0E       		.uleb128 0xe
 3044 0044 3A       		.uleb128 0x3a
 3045 0045 0B       		.uleb128 0xb
 3046 0046 3B       		.uleb128 0x3b
 3047 0047 05       		.uleb128 0x5
 3048 0048 49       		.uleb128 0x49
 3049 0049 13       		.uleb128 0x13
 3050 004a 00       		.byte	0
 3051 004b 00       		.byte	0
 3052 004c 07       		.uleb128 0x7
 3053 004d 13       		.uleb128 0x13
 3054 004e 01       		.byte	0x1
 3055 004f 03       		.uleb128 0x3
 3056 0050 0E       		.uleb128 0xe
 3057 0051 0B       		.uleb128 0xb
 3058 0052 0B       		.uleb128 0xb
 3059 0053 3A       		.uleb128 0x3a
 3060 0054 0B       		.uleb128 0xb
 3061 0055 3B       		.uleb128 0x3b
 3062 0056 0B       		.uleb128 0xb
 3063 0057 01       		.uleb128 0x1
 3064 0058 13       		.uleb128 0x13
 3065 0059 00       		.byte	0
 3066 005a 00       		.byte	0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 66


 3067 005b 08       		.uleb128 0x8
 3068 005c 0D       		.uleb128 0xd
 3069 005d 00       		.byte	0
 3070 005e 03       		.uleb128 0x3
 3071 005f 0E       		.uleb128 0xe
 3072 0060 3A       		.uleb128 0x3a
 3073 0061 0B       		.uleb128 0xb
 3074 0062 3B       		.uleb128 0x3b
 3075 0063 0B       		.uleb128 0xb
 3076 0064 49       		.uleb128 0x49
 3077 0065 13       		.uleb128 0x13
 3078 0066 38       		.uleb128 0x38
 3079 0067 0B       		.uleb128 0xb
 3080 0068 00       		.byte	0
 3081 0069 00       		.byte	0
 3082 006a 09       		.uleb128 0x9
 3083 006b 2E       		.uleb128 0x2e
 3084 006c 00       		.byte	0
 3085 006d 3F       		.uleb128 0x3f
 3086 006e 19       		.uleb128 0x19
 3087 006f 03       		.uleb128 0x3
 3088 0070 0E       		.uleb128 0xe
 3089 0071 3A       		.uleb128 0x3a
 3090 0072 0B       		.uleb128 0xb
 3091 0073 3B       		.uleb128 0x3b
 3092 0074 0B       		.uleb128 0xb
 3093 0075 27       		.uleb128 0x27
 3094 0076 19       		.uleb128 0x19
 3095 0077 11       		.uleb128 0x11
 3096 0078 01       		.uleb128 0x1
 3097 0079 12       		.uleb128 0x12
 3098 007a 06       		.uleb128 0x6
 3099 007b 40       		.uleb128 0x40
 3100 007c 18       		.uleb128 0x18
 3101 007d 9642     		.uleb128 0x2116
 3102 007f 19       		.uleb128 0x19
 3103 0080 00       		.byte	0
 3104 0081 00       		.byte	0
 3105 0082 0A       		.uleb128 0xa
 3106 0083 2E       		.uleb128 0x2e
 3107 0084 00       		.byte	0
 3108 0085 3F       		.uleb128 0x3f
 3109 0086 19       		.uleb128 0x19
 3110 0087 03       		.uleb128 0x3
 3111 0088 0E       		.uleb128 0xe
 3112 0089 3A       		.uleb128 0x3a
 3113 008a 0B       		.uleb128 0xb
 3114 008b 3B       		.uleb128 0x3b
 3115 008c 0B       		.uleb128 0xb
 3116 008d 27       		.uleb128 0x27
 3117 008e 19       		.uleb128 0x19
 3118 008f 11       		.uleb128 0x11
 3119 0090 01       		.uleb128 0x1
 3120 0091 12       		.uleb128 0x12
 3121 0092 06       		.uleb128 0x6
 3122 0093 40       		.uleb128 0x40
 3123 0094 18       		.uleb128 0x18
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 67


 3124 0095 9742     		.uleb128 0x2117
 3125 0097 19       		.uleb128 0x19
 3126 0098 00       		.byte	0
 3127 0099 00       		.byte	0
 3128 009a 0B       		.uleb128 0xb
 3129 009b 2E       		.uleb128 0x2e
 3130 009c 01       		.byte	0x1
 3131 009d 3F       		.uleb128 0x3f
 3132 009e 19       		.uleb128 0x19
 3133 009f 03       		.uleb128 0x3
 3134 00a0 0E       		.uleb128 0xe
 3135 00a1 3A       		.uleb128 0x3a
 3136 00a2 0B       		.uleb128 0xb
 3137 00a3 3B       		.uleb128 0x3b
 3138 00a4 0B       		.uleb128 0xb
 3139 00a5 49       		.uleb128 0x49
 3140 00a6 13       		.uleb128 0x13
 3141 00a7 11       		.uleb128 0x11
 3142 00a8 01       		.uleb128 0x1
 3143 00a9 12       		.uleb128 0x12
 3144 00aa 06       		.uleb128 0x6
 3145 00ab 40       		.uleb128 0x40
 3146 00ac 18       		.uleb128 0x18
 3147 00ad 9642     		.uleb128 0x2116
 3148 00af 19       		.uleb128 0x19
 3149 00b0 01       		.uleb128 0x1
 3150 00b1 13       		.uleb128 0x13
 3151 00b2 00       		.byte	0
 3152 00b3 00       		.byte	0
 3153 00b4 0C       		.uleb128 0xc
 3154 00b5 34       		.uleb128 0x34
 3155 00b6 00       		.byte	0
 3156 00b7 03       		.uleb128 0x3
 3157 00b8 0E       		.uleb128 0xe
 3158 00b9 3A       		.uleb128 0x3a
 3159 00ba 0B       		.uleb128 0xb
 3160 00bb 3B       		.uleb128 0x3b
 3161 00bc 0B       		.uleb128 0xb
 3162 00bd 49       		.uleb128 0x49
 3163 00be 13       		.uleb128 0x13
 3164 00bf 02       		.uleb128 0x2
 3165 00c0 18       		.uleb128 0x18
 3166 00c1 00       		.byte	0
 3167 00c2 00       		.byte	0
 3168 00c3 0D       		.uleb128 0xd
 3169 00c4 0B       		.uleb128 0xb
 3170 00c5 01       		.byte	0x1
 3171 00c6 11       		.uleb128 0x11
 3172 00c7 01       		.uleb128 0x1
 3173 00c8 12       		.uleb128 0x12
 3174 00c9 06       		.uleb128 0x6
 3175 00ca 00       		.byte	0
 3176 00cb 00       		.byte	0
 3177 00cc 0E       		.uleb128 0xe
 3178 00cd 01       		.uleb128 0x1
 3179 00ce 01       		.byte	0x1
 3180 00cf 49       		.uleb128 0x49
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 68


 3181 00d0 13       		.uleb128 0x13
 3182 00d1 01       		.uleb128 0x1
 3183 00d2 13       		.uleb128 0x13
 3184 00d3 00       		.byte	0
 3185 00d4 00       		.byte	0
 3186 00d5 0F       		.uleb128 0xf
 3187 00d6 21       		.uleb128 0x21
 3188 00d7 00       		.byte	0
 3189 00d8 49       		.uleb128 0x49
 3190 00d9 13       		.uleb128 0x13
 3191 00da 2F       		.uleb128 0x2f
 3192 00db 0B       		.uleb128 0xb
 3193 00dc 00       		.byte	0
 3194 00dd 00       		.byte	0
 3195 00de 10       		.uleb128 0x10
 3196 00df 2E       		.uleb128 0x2e
 3197 00e0 01       		.byte	0x1
 3198 00e1 3F       		.uleb128 0x3f
 3199 00e2 19       		.uleb128 0x19
 3200 00e3 03       		.uleb128 0x3
 3201 00e4 0E       		.uleb128 0xe
 3202 00e5 3A       		.uleb128 0x3a
 3203 00e6 0B       		.uleb128 0xb
 3204 00e7 3B       		.uleb128 0x3b
 3205 00e8 0B       		.uleb128 0xb
 3206 00e9 27       		.uleb128 0x27
 3207 00ea 19       		.uleb128 0x19
 3208 00eb 49       		.uleb128 0x49
 3209 00ec 13       		.uleb128 0x13
 3210 00ed 11       		.uleb128 0x11
 3211 00ee 01       		.uleb128 0x1
 3212 00ef 12       		.uleb128 0x12
 3213 00f0 06       		.uleb128 0x6
 3214 00f1 40       		.uleb128 0x40
 3215 00f2 18       		.uleb128 0x18
 3216 00f3 9642     		.uleb128 0x2116
 3217 00f5 19       		.uleb128 0x19
 3218 00f6 01       		.uleb128 0x1
 3219 00f7 13       		.uleb128 0x13
 3220 00f8 00       		.byte	0
 3221 00f9 00       		.byte	0
 3222 00fa 11       		.uleb128 0x11
 3223 00fb 05       		.uleb128 0x5
 3224 00fc 00       		.byte	0
 3225 00fd 03       		.uleb128 0x3
 3226 00fe 08       		.uleb128 0x8
 3227 00ff 3A       		.uleb128 0x3a
 3228 0100 0B       		.uleb128 0xb
 3229 0101 3B       		.uleb128 0x3b
 3230 0102 0B       		.uleb128 0xb
 3231 0103 49       		.uleb128 0x49
 3232 0104 13       		.uleb128 0x13
 3233 0105 02       		.uleb128 0x2
 3234 0106 18       		.uleb128 0x18
 3235 0107 00       		.byte	0
 3236 0108 00       		.byte	0
 3237 0109 12       		.uleb128 0x12
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 69


 3238 010a 2E       		.uleb128 0x2e
 3239 010b 01       		.byte	0x1
 3240 010c 3F       		.uleb128 0x3f
 3241 010d 19       		.uleb128 0x19
 3242 010e 03       		.uleb128 0x3
 3243 010f 0E       		.uleb128 0xe
 3244 0110 3A       		.uleb128 0x3a
 3245 0111 0B       		.uleb128 0xb
 3246 0112 3B       		.uleb128 0x3b
 3247 0113 0B       		.uleb128 0xb
 3248 0114 11       		.uleb128 0x11
 3249 0115 01       		.uleb128 0x1
 3250 0116 12       		.uleb128 0x12
 3251 0117 06       		.uleb128 0x6
 3252 0118 40       		.uleb128 0x40
 3253 0119 18       		.uleb128 0x18
 3254 011a 9642     		.uleb128 0x2116
 3255 011c 19       		.uleb128 0x19
 3256 011d 01       		.uleb128 0x1
 3257 011e 13       		.uleb128 0x13
 3258 011f 00       		.byte	0
 3259 0120 00       		.byte	0
 3260 0121 13       		.uleb128 0x13
 3261 0122 34       		.uleb128 0x34
 3262 0123 00       		.byte	0
 3263 0124 03       		.uleb128 0x3
 3264 0125 08       		.uleb128 0x8
 3265 0126 3A       		.uleb128 0x3a
 3266 0127 0B       		.uleb128 0xb
 3267 0128 3B       		.uleb128 0x3b
 3268 0129 0B       		.uleb128 0xb
 3269 012a 49       		.uleb128 0x49
 3270 012b 13       		.uleb128 0x13
 3271 012c 02       		.uleb128 0x2
 3272 012d 18       		.uleb128 0x18
 3273 012e 00       		.byte	0
 3274 012f 00       		.byte	0
 3275 0130 14       		.uleb128 0x14
 3276 0131 2E       		.uleb128 0x2e
 3277 0132 01       		.byte	0x1
 3278 0133 3F       		.uleb128 0x3f
 3279 0134 19       		.uleb128 0x19
 3280 0135 03       		.uleb128 0x3
 3281 0136 0E       		.uleb128 0xe
 3282 0137 3A       		.uleb128 0x3a
 3283 0138 0B       		.uleb128 0xb
 3284 0139 3B       		.uleb128 0x3b
 3285 013a 0B       		.uleb128 0xb
 3286 013b 27       		.uleb128 0x27
 3287 013c 19       		.uleb128 0x19
 3288 013d 11       		.uleb128 0x11
 3289 013e 01       		.uleb128 0x1
 3290 013f 12       		.uleb128 0x12
 3291 0140 06       		.uleb128 0x6
 3292 0141 40       		.uleb128 0x40
 3293 0142 18       		.uleb128 0x18
 3294 0143 9642     		.uleb128 0x2116
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 70


 3295 0145 19       		.uleb128 0x19
 3296 0146 01       		.uleb128 0x1
 3297 0147 13       		.uleb128 0x13
 3298 0148 00       		.byte	0
 3299 0149 00       		.byte	0
 3300 014a 15       		.uleb128 0x15
 3301 014b 05       		.uleb128 0x5
 3302 014c 00       		.byte	0
 3303 014d 03       		.uleb128 0x3
 3304 014e 0E       		.uleb128 0xe
 3305 014f 3A       		.uleb128 0x3a
 3306 0150 0B       		.uleb128 0xb
 3307 0151 3B       		.uleb128 0x3b
 3308 0152 0B       		.uleb128 0xb
 3309 0153 49       		.uleb128 0x49
 3310 0154 13       		.uleb128 0x13
 3311 0155 02       		.uleb128 0x2
 3312 0156 18       		.uleb128 0x18
 3313 0157 00       		.byte	0
 3314 0158 00       		.byte	0
 3315 0159 16       		.uleb128 0x16
 3316 015a 2E       		.uleb128 0x2e
 3317 015b 01       		.byte	0x1
 3318 015c 3F       		.uleb128 0x3f
 3319 015d 19       		.uleb128 0x19
 3320 015e 03       		.uleb128 0x3
 3321 015f 0E       		.uleb128 0xe
 3322 0160 3A       		.uleb128 0x3a
 3323 0161 0B       		.uleb128 0xb
 3324 0162 3B       		.uleb128 0x3b
 3325 0163 05       		.uleb128 0x5
 3326 0164 27       		.uleb128 0x27
 3327 0165 19       		.uleb128 0x19
 3328 0166 11       		.uleb128 0x11
 3329 0167 01       		.uleb128 0x1
 3330 0168 12       		.uleb128 0x12
 3331 0169 06       		.uleb128 0x6
 3332 016a 40       		.uleb128 0x40
 3333 016b 18       		.uleb128 0x18
 3334 016c 9642     		.uleb128 0x2116
 3335 016e 19       		.uleb128 0x19
 3336 016f 01       		.uleb128 0x1
 3337 0170 13       		.uleb128 0x13
 3338 0171 00       		.byte	0
 3339 0172 00       		.byte	0
 3340 0173 17       		.uleb128 0x17
 3341 0174 05       		.uleb128 0x5
 3342 0175 00       		.byte	0
 3343 0176 03       		.uleb128 0x3
 3344 0177 0E       		.uleb128 0xe
 3345 0178 3A       		.uleb128 0x3a
 3346 0179 0B       		.uleb128 0xb
 3347 017a 3B       		.uleb128 0x3b
 3348 017b 05       		.uleb128 0x5
 3349 017c 49       		.uleb128 0x49
 3350 017d 13       		.uleb128 0x13
 3351 017e 02       		.uleb128 0x2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 71


 3352 017f 18       		.uleb128 0x18
 3353 0180 00       		.byte	0
 3354 0181 00       		.byte	0
 3355 0182 18       		.uleb128 0x18
 3356 0183 34       		.uleb128 0x34
 3357 0184 00       		.byte	0
 3358 0185 03       		.uleb128 0x3
 3359 0186 0E       		.uleb128 0xe
 3360 0187 3A       		.uleb128 0x3a
 3361 0188 0B       		.uleb128 0xb
 3362 0189 3B       		.uleb128 0x3b
 3363 018a 05       		.uleb128 0x5
 3364 018b 49       		.uleb128 0x49
 3365 018c 13       		.uleb128 0x13
 3366 018d 02       		.uleb128 0x2
 3367 018e 18       		.uleb128 0x18
 3368 018f 00       		.byte	0
 3369 0190 00       		.byte	0
 3370 0191 19       		.uleb128 0x19
 3371 0192 2E       		.uleb128 0x2e
 3372 0193 00       		.byte	0
 3373 0194 3F       		.uleb128 0x3f
 3374 0195 19       		.uleb128 0x19
 3375 0196 03       		.uleb128 0x3
 3376 0197 0E       		.uleb128 0xe
 3377 0198 3A       		.uleb128 0x3a
 3378 0199 0B       		.uleb128 0xb
 3379 019a 3B       		.uleb128 0x3b
 3380 019b 05       		.uleb128 0x5
 3381 019c 11       		.uleb128 0x11
 3382 019d 01       		.uleb128 0x1
 3383 019e 12       		.uleb128 0x12
 3384 019f 06       		.uleb128 0x6
 3385 01a0 40       		.uleb128 0x40
 3386 01a1 18       		.uleb128 0x18
 3387 01a2 9642     		.uleb128 0x2116
 3388 01a4 19       		.uleb128 0x19
 3389 01a5 00       		.byte	0
 3390 01a6 00       		.byte	0
 3391 01a7 1A       		.uleb128 0x1a
 3392 01a8 2E       		.uleb128 0x2e
 3393 01a9 01       		.byte	0x1
 3394 01aa 3F       		.uleb128 0x3f
 3395 01ab 19       		.uleb128 0x19
 3396 01ac 03       		.uleb128 0x3
 3397 01ad 0E       		.uleb128 0xe
 3398 01ae 3A       		.uleb128 0x3a
 3399 01af 0B       		.uleb128 0xb
 3400 01b0 3B       		.uleb128 0x3b
 3401 01b1 05       		.uleb128 0x5
 3402 01b2 27       		.uleb128 0x27
 3403 01b3 19       		.uleb128 0x19
 3404 01b4 49       		.uleb128 0x49
 3405 01b5 13       		.uleb128 0x13
 3406 01b6 11       		.uleb128 0x11
 3407 01b7 01       		.uleb128 0x1
 3408 01b8 12       		.uleb128 0x12
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 72


 3409 01b9 06       		.uleb128 0x6
 3410 01ba 40       		.uleb128 0x40
 3411 01bb 18       		.uleb128 0x18
 3412 01bc 9642     		.uleb128 0x2116
 3413 01be 19       		.uleb128 0x19
 3414 01bf 01       		.uleb128 0x1
 3415 01c0 13       		.uleb128 0x13
 3416 01c1 00       		.byte	0
 3417 01c2 00       		.byte	0
 3418 01c3 1B       		.uleb128 0x1b
 3419 01c4 2E       		.uleb128 0x2e
 3420 01c5 01       		.byte	0x1
 3421 01c6 3F       		.uleb128 0x3f
 3422 01c7 19       		.uleb128 0x19
 3423 01c8 03       		.uleb128 0x3
 3424 01c9 0E       		.uleb128 0xe
 3425 01ca 3A       		.uleb128 0x3a
 3426 01cb 0B       		.uleb128 0xb
 3427 01cc 3B       		.uleb128 0x3b
 3428 01cd 05       		.uleb128 0x5
 3429 01ce 27       		.uleb128 0x27
 3430 01cf 19       		.uleb128 0x19
 3431 01d0 11       		.uleb128 0x11
 3432 01d1 01       		.uleb128 0x1
 3433 01d2 12       		.uleb128 0x12
 3434 01d3 06       		.uleb128 0x6
 3435 01d4 40       		.uleb128 0x40
 3436 01d5 18       		.uleb128 0x18
 3437 01d6 9742     		.uleb128 0x2117
 3438 01d8 19       		.uleb128 0x19
 3439 01d9 01       		.uleb128 0x1
 3440 01da 13       		.uleb128 0x13
 3441 01db 00       		.byte	0
 3442 01dc 00       		.byte	0
 3443 01dd 1C       		.uleb128 0x1c
 3444 01de 05       		.uleb128 0x5
 3445 01df 00       		.byte	0
 3446 01e0 03       		.uleb128 0x3
 3447 01e1 08       		.uleb128 0x8
 3448 01e2 3A       		.uleb128 0x3a
 3449 01e3 0B       		.uleb128 0xb
 3450 01e4 3B       		.uleb128 0x3b
 3451 01e5 05       		.uleb128 0x5
 3452 01e6 49       		.uleb128 0x49
 3453 01e7 13       		.uleb128 0x13
 3454 01e8 02       		.uleb128 0x2
 3455 01e9 18       		.uleb128 0x18
 3456 01ea 00       		.byte	0
 3457 01eb 00       		.byte	0
 3458 01ec 1D       		.uleb128 0x1d
 3459 01ed 34       		.uleb128 0x34
 3460 01ee 00       		.byte	0
 3461 01ef 03       		.uleb128 0x3
 3462 01f0 0E       		.uleb128 0xe
 3463 01f1 3A       		.uleb128 0x3a
 3464 01f2 0B       		.uleb128 0xb
 3465 01f3 3B       		.uleb128 0x3b
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 73


 3466 01f4 05       		.uleb128 0x5
 3467 01f5 49       		.uleb128 0x49
 3468 01f6 13       		.uleb128 0x13
 3469 01f7 3F       		.uleb128 0x3f
 3470 01f8 19       		.uleb128 0x19
 3471 01f9 3C       		.uleb128 0x3c
 3472 01fa 19       		.uleb128 0x19
 3473 01fb 00       		.byte	0
 3474 01fc 00       		.byte	0
 3475 01fd 1E       		.uleb128 0x1e
 3476 01fe 35       		.uleb128 0x35
 3477 01ff 00       		.byte	0
 3478 0200 49       		.uleb128 0x49
 3479 0201 13       		.uleb128 0x13
 3480 0202 00       		.byte	0
 3481 0203 00       		.byte	0
 3482 0204 1F       		.uleb128 0x1f
 3483 0205 34       		.uleb128 0x34
 3484 0206 00       		.byte	0
 3485 0207 03       		.uleb128 0x3
 3486 0208 08       		.uleb128 0x8
 3487 0209 3A       		.uleb128 0x3a
 3488 020a 0B       		.uleb128 0xb
 3489 020b 3B       		.uleb128 0x3b
 3490 020c 0B       		.uleb128 0xb
 3491 020d 49       		.uleb128 0x49
 3492 020e 13       		.uleb128 0x13
 3493 020f 3F       		.uleb128 0x3f
 3494 0210 19       		.uleb128 0x19
 3495 0211 02       		.uleb128 0x2
 3496 0212 18       		.uleb128 0x18
 3497 0213 00       		.byte	0
 3498 0214 00       		.byte	0
 3499 0215 20       		.uleb128 0x20
 3500 0216 34       		.uleb128 0x34
 3501 0217 00       		.byte	0
 3502 0218 03       		.uleb128 0x3
 3503 0219 0E       		.uleb128 0xe
 3504 021a 3A       		.uleb128 0x3a
 3505 021b 0B       		.uleb128 0xb
 3506 021c 3B       		.uleb128 0x3b
 3507 021d 0B       		.uleb128 0xb
 3508 021e 49       		.uleb128 0x49
 3509 021f 13       		.uleb128 0x13
 3510 0220 3F       		.uleb128 0x3f
 3511 0221 19       		.uleb128 0x19
 3512 0222 02       		.uleb128 0x2
 3513 0223 18       		.uleb128 0x18
 3514 0224 00       		.byte	0
 3515 0225 00       		.byte	0
 3516 0226 00       		.byte	0
 3517              		.section	.debug_aranges,"",%progbits
 3518 0000 A4000000 		.4byte	0xa4
 3519 0004 0200     		.2byte	0x2
 3520 0006 00000000 		.4byte	.Ldebug_info0
 3521 000a 04       		.byte	0x4
 3522 000b 00       		.byte	0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 74


 3523 000c 0000     		.2byte	0
 3524 000e 0000     		.2byte	0
 3525 0010 00000000 		.4byte	.LFB63
 3526 0014 30000000 		.4byte	.LFE63-.LFB63
 3527 0018 00000000 		.4byte	.LFB64
 3528 001c 18000000 		.4byte	.LFE64-.LFB64
 3529 0020 00000000 		.4byte	.LFB65
 3530 0024 D8010000 		.4byte	.LFE65-.LFB65
 3531 0028 00000000 		.4byte	.LFB66
 3532 002c 24000000 		.4byte	.LFE66-.LFB66
 3533 0030 00000000 		.4byte	.LFB67
 3534 0034 B4000000 		.4byte	.LFE67-.LFB67
 3535 0038 00000000 		.4byte	.LFB68
 3536 003c B8010000 		.4byte	.LFE68-.LFB68
 3537 0040 00000000 		.4byte	.LFB69
 3538 0044 B0000000 		.4byte	.LFE69-.LFB69
 3539 0048 00000000 		.4byte	.LFB70
 3540 004c 8C000000 		.4byte	.LFE70-.LFB70
 3541 0050 00000000 		.4byte	.LFB71
 3542 0054 8C000000 		.4byte	.LFE71-.LFB71
 3543 0058 00000000 		.4byte	.LFB72
 3544 005c 6C010000 		.4byte	.LFE72-.LFB72
 3545 0060 00000000 		.4byte	.LFB73
 3546 0064 2A000000 		.4byte	.LFE73-.LFB73
 3547 0068 00000000 		.4byte	.LFB74
 3548 006c 2A000000 		.4byte	.LFE74-.LFB74
 3549 0070 00000000 		.4byte	.LFB75
 3550 0074 CC000000 		.4byte	.LFE75-.LFB75
 3551 0078 00000000 		.4byte	.LFB76
 3552 007c 52000000 		.4byte	.LFE76-.LFB76
 3553 0080 00000000 		.4byte	.LFB77
 3554 0084 2C000000 		.4byte	.LFE77-.LFB77
 3555 0088 00000000 		.4byte	.LFB78
 3556 008c 40000000 		.4byte	.LFE78-.LFB78
 3557 0090 00000000 		.4byte	.LFB79
 3558 0094 40000000 		.4byte	.LFE79-.LFB79
 3559 0098 00000000 		.4byte	.LFB80
 3560 009c 14000000 		.4byte	.LFE80-.LFB80
 3561 00a0 00000000 		.4byte	0
 3562 00a4 00000000 		.4byte	0
 3563              		.section	.debug_ranges,"",%progbits
 3564              	.Ldebug_ranges0:
 3565 0000 00000000 		.4byte	.LFB63
 3566 0004 30000000 		.4byte	.LFE63
 3567 0008 00000000 		.4byte	.LFB64
 3568 000c 18000000 		.4byte	.LFE64
 3569 0010 00000000 		.4byte	.LFB65
 3570 0014 D8010000 		.4byte	.LFE65
 3571 0018 00000000 		.4byte	.LFB66
 3572 001c 24000000 		.4byte	.LFE66
 3573 0020 00000000 		.4byte	.LFB67
 3574 0024 B4000000 		.4byte	.LFE67
 3575 0028 00000000 		.4byte	.LFB68
 3576 002c B8010000 		.4byte	.LFE68
 3577 0030 00000000 		.4byte	.LFB69
 3578 0034 B0000000 		.4byte	.LFE69
 3579 0038 00000000 		.4byte	.LFB70
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 75


 3580 003c 8C000000 		.4byte	.LFE70
 3581 0040 00000000 		.4byte	.LFB71
 3582 0044 8C000000 		.4byte	.LFE71
 3583 0048 00000000 		.4byte	.LFB72
 3584 004c 6C010000 		.4byte	.LFE72
 3585 0050 00000000 		.4byte	.LFB73
 3586 0054 2A000000 		.4byte	.LFE73
 3587 0058 00000000 		.4byte	.LFB74
 3588 005c 2A000000 		.4byte	.LFE74
 3589 0060 00000000 		.4byte	.LFB75
 3590 0064 CC000000 		.4byte	.LFE75
 3591 0068 00000000 		.4byte	.LFB76
 3592 006c 52000000 		.4byte	.LFE76
 3593 0070 00000000 		.4byte	.LFB77
 3594 0074 2C000000 		.4byte	.LFE77
 3595 0078 00000000 		.4byte	.LFB78
 3596 007c 40000000 		.4byte	.LFE78
 3597 0080 00000000 		.4byte	.LFB79
 3598 0084 40000000 		.4byte	.LFE79
 3599 0088 00000000 		.4byte	.LFB80
 3600 008c 14000000 		.4byte	.LFE80
 3601 0090 00000000 		.4byte	0
 3602 0094 00000000 		.4byte	0
 3603              		.section	.debug_line,"",%progbits
 3604              	.Ldebug_line0:
 3605 0000 DB030000 		.section	.debug_str,"MS",%progbits,1
 3605      02005501 
 3605      00000201 
 3605      FB0E0D00 
 3605      01010101 
 3606              	.LASF73:
 3607 0000 636F7272 		.ascii	"correction\000"
 3607      65637469 
 3607      6F6E00
 3608              	.LASF38:
 3609 000b 4144435F 		.ascii	"ADC_ISR\000"
 3609      49535200 
 3610              	.LASF81:
 3611 0013 74735F65 		.ascii	"ts_enc\000"
 3611      6E6300
 3612              	.LASF66:
 3613 001a 6D325F64 		.ascii	"m2_dist\000"
 3613      69737400 
 3614              	.LASF90:
 3615 0022 666C6167 		.ascii	"flag_packet\000"
 3615      5F706163 
 3615      6B657400 
 3616              	.LASF107:
 3617 002e 2E5C6D61 		.ascii	".\\main.c\000"
 3617      696E2E63 
 3617      00
 3618              	.LASF46:
 3619 0037 676F5374 		.ascii	"goStraightForBlock\000"
 3619      72616967 
 3619      6874466F 
 3619      72426C6F 
 3619      636B00
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 76


 3620              	.LASF87:
 3621 004a 666C6167 		.ascii	"flag_ts_speed\000"
 3621      5F74735F 
 3621      73706565 
 3621      6400
 3622              	.LASF33:
 3623 0058 67325F78 		.ascii	"g2_xpos\000"
 3623      706F7300 
 3624              	.LASF43:
 3625 0060 6E756D5F 		.ascii	"num_coords\000"
 3625      636F6F72 
 3625      647300
 3626              	.LASF98:
 3627 006b 73797374 		.ascii	"system_state\000"
 3627      656D5F73 
 3627      74617465 
 3627      00
 3628              	.LASF9:
 3629 0078 73697A65 		.ascii	"sizetype\000"
 3629      74797065 
 3629      00
 3630              	.LASF60:
 3631 0081 6368616E 		.ascii	"changeRightWheelSpeed\000"
 3631      67655269 
 3631      67687457 
 3631      6865656C 
 3631      53706565 
 3632              	.LASF97:
 3633 0097 75736242 		.ascii	"usbBuffer\000"
 3633      75666665 
 3633      7200
 3634              	.LASF45:
 3635 00a1 6D61696E 		.ascii	"main\000"
 3635      00
 3636              	.LASF47:
 3637 00a6 64657369 		.ascii	"desired_blocks\000"
 3637      7265645F 
 3637      626C6F63 
 3637      6B7300
 3638              	.LASF71:
 3639 00b5 69734C65 		.ascii	"isLeftWheel\000"
 3639      66745768 
 3639      65656C00 
 3640              	.LASF108:
 3641 00c1 5C5C6669 		.ascii	"\\\\files.auckland.ac.nz\\myhome\\Desktop\\Flik\\CS"
 3641      6C65732E 
 3641      6175636B 
 3641      6C616E64 
 3641      2E61632E 
 3642 00ee 3330315F 		.ascii	"301_Class.cyprj.Archive01-20190825T234813Z-001\\CS3"
 3642      436C6173 
 3642      732E6379 
 3642      70726A2E 
 3642      41726368 
 3643 0120 30315F43 		.ascii	"01_Class.cyprj.Archive01\\CS301_Class.cydsn\000"
 3643      6C617373 
 3643      2E637970 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 77


 3643      726A2E41 
 3643      72636869 
 3644              	.LASF2:
 3645 014b 73686F72 		.ascii	"short int\000"
 3645      7420696E 
 3645      7400
 3646              	.LASF52:
 3647 0155 64697374 		.ascii	"distance_to_turn\000"
 3647      616E6365 
 3647      5F746F5F 
 3647      7475726E 
 3647      00
 3648              	.LASF80:
 3649 0166 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3649      52784275 
 3649      66666572 
 3649      00
 3650              	.LASF14:
 3651 0173 75696E74 		.ascii	"uint16\000"
 3651      313600
 3652              	.LASF21:
 3653 017a 696E6465 		.ascii	"index\000"
 3653      7800
 3654              	.LASF16:
 3655 0180 696E7431 		.ascii	"int16\000"
 3655      3600
 3656              	.LASF13:
 3657 0186 75696E74 		.ascii	"uint8\000"
 3657      3800
 3658              	.LASF32:
 3659 018c 67315F64 		.ascii	"g1_direction\000"
 3659      69726563 
 3659      74696F6E 
 3659      00
 3660              	.LASF64:
 3661 0199 70726576 		.ascii	"prevCountM2\000"
 3661      436F756E 
 3661      744D3200 
 3662              	.LASF67:
 3663 01a5 636F7272 		.ascii	"correctSpeed\000"
 3663      65637453 
 3663      70656564 
 3663      00
 3664              	.LASF95:
 3665 01b2 6C696E65 		.ascii	"line\000"
 3665      00
 3666              	.LASF103:
 3667 01b7 74696D65 		.ascii	"timer_flag\000"
 3667      725F666C 
 3667      616700
 3668              	.LASF18:
 3669 01c2 666C6F61 		.ascii	"float\000"
 3669      7400
 3670              	.LASF6:
 3671 01c8 6C6F6E67 		.ascii	"long long int\000"
 3671      206C6F6E 
 3671      6720696E 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 78


 3671      7400
 3672              	.LASF79:
 3673 01d6 75736250 		.ascii	"usbPutString\000"
 3673      75745374 
 3673      72696E67 
 3673      00
 3674              	.LASF15:
 3675 01e3 696E7438 		.ascii	"int8\000"
 3675      00
 3676              	.LASF110:
 3677 01e8 75706461 		.ascii	"updateSensorValues\000"
 3677      74655365 
 3677      6E736F72 
 3677      56616C75 
 3677      657300
 3678              	.LASF86:
 3679 01fb 666C6167 		.ascii	"flag_ts_update\000"
 3679      5F74735F 
 3679      75706461 
 3679      746500
 3680              	.LASF34:
 3681 020a 67325F79 		.ascii	"g2_ypos\000"
 3681      706F7300 
 3682              	.LASF28:
 3683 0212 67305F64 		.ascii	"g0_direction\000"
 3683      69726563 
 3683      74696F6E 
 3683      00
 3684              	.LASF76:
 3685 021f 72696768 		.ascii	"rightIsForward\000"
 3685      74497346 
 3685      6F727761 
 3685      726400
 3686              	.LASF106:
 3687 022e 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3687      4320342E 
 3687      392E3320 
 3687      32303135 
 3687      30333033 
 3688 0261 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3688      20726576 
 3688      6973696F 
 3688      6E203232 
 3688      31323230 
 3689 0294 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3689      66756E63 
 3689      74696F6E 
 3689      2D736563 
 3689      74696F6E 
 3690              	.LASF24:
 3691 02bc 726F626F 		.ascii	"robot_orientation\000"
 3691      745F6F72 
 3691      69656E74 
 3691      6174696F 
 3691      6E00
 3692              	.LASF88:
 3693 02ce 666C6167 		.ascii	"flag_ts_display\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 79


 3693      5F74735F 
 3693      64697370 
 3693      6C617900 
 3694              	.LASF89:
 3695 02de 666C6167 		.ascii	"flag_rx\000"
 3695      5F727800 
 3696              	.LASF101:
 3697 02e6 6164635F 		.ascii	"adc_readings\000"
 3697      72656164 
 3697      696E6773 
 3697      00
 3698              	.LASF30:
 3699 02f3 67315F79 		.ascii	"g1_ypos\000"
 3699      706F7300 
 3700              	.LASF63:
 3701 02fb 70726576 		.ascii	"prevCountM1\000"
 3701      436F756E 
 3701      744D3100 
 3702              	.LASF51:
 3703 0307 64656772 		.ascii	"degrees\000"
 3703      65657300 
 3704              	.LASF1:
 3705 030f 756E7369 		.ascii	"unsigned char\000"
 3705      676E6564 
 3705      20636861 
 3705      7200
 3706              	.LASF27:
 3707 031d 67305F73 		.ascii	"g0_speed\000"
 3707      70656564 
 3707      00
 3708              	.LASF77:
 3709 0326 7475726E 		.ascii	"turnLeft\000"
 3709      4C656674 
 3709      00
 3710              	.LASF37:
 3711 032f 454E434F 		.ascii	"ENCODER_ISR\000"
 3711      4445525F 
 3711      49535200 
 3712              	.LASF0:
 3713 033b 7369676E 		.ascii	"signed char\000"
 3713      65642063 
 3713      68617200 
 3714              	.LASF70:
 3715 0347 64657369 		.ascii	"desired_count\000"
 3715      7265645F 
 3715      636F756E 
 3715      7400
 3716              	.LASF7:
 3717 0355 6C6F6E67 		.ascii	"long long unsigned int\000"
 3717      206C6F6E 
 3717      6720756E 
 3717      7369676E 
 3717      65642069 
 3718              	.LASF96:
 3719 036c 656E7472 		.ascii	"entry\000"
 3719      7900
 3720              	.LASF8:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 80


 3721 0372 756E7369 		.ascii	"unsigned int\000"
 3721      676E6564 
 3721      20696E74 
 3721      00
 3722              	.LASF65:
 3723 037f 6D315F64 		.ascii	"m1_dist\000"
 3723      69737400 
 3724              	.LASF91:
 3725 0387 666C6167 		.ascii	"flag_KB_string\000"
 3725      5F4B425F 
 3725      73747269 
 3725      6E6700
 3726              	.LASF50:
 3727 0396 7475726E 		.ascii	"turnForDegrees\000"
 3727      466F7244 
 3727      65677265 
 3727      657300
 3728              	.LASF5:
 3729 03a5 6C6F6E67 		.ascii	"long unsigned int\000"
 3729      20756E73 
 3729      69676E65 
 3729      6420696E 
 3729      7400
 3730              	.LASF68:
 3731 03b7 70726576 		.ascii	"prevCount\000"
 3731      436F756E 
 3731      7400
 3732              	.LASF35:
 3733 03c1 67325F73 		.ascii	"g2_speed\000"
 3733      70656564 
 3733      00
 3734              	.LASF29:
 3735 03ca 67315F78 		.ascii	"g1_xpos\000"
 3735      706F7300 
 3736              	.LASF3:
 3737 03d2 73686F72 		.ascii	"short unsigned int\000"
 3737      7420756E 
 3737      7369676E 
 3737      65642069 
 3737      6E7400
 3738              	.LASF109:
 3739 03e5 64617461 		.ascii	"data_main\000"
 3739      5F6D6169 
 3739      6E00
 3740              	.LASF48:
 3741 03ef 64697374 		.ascii	"distance\000"
 3741      616E6365 
 3741      00
 3742              	.LASF10:
 3743 03f8 63686172 		.ascii	"char\000"
 3743      00
 3744              	.LASF99:
 3745 03fd 6164635F 		.ascii	"adc_flag\000"
 3745      666C6167 
 3745      00
 3746              	.LASF4:
 3747 0406 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 81


 3747      20696E74 
 3747      00
 3748              	.LASF22:
 3749 040f 726F626F 		.ascii	"robot_xpos\000"
 3749      745F7870 
 3749      6F7300
 3750              	.LASF54:
 3751 041a 73686172 		.ascii	"sharpTurnLeft\000"
 3751      70547572 
 3751      6E4C6566 
 3751      7400
 3752              	.LASF12:
 3753 0428 696E7433 		.ascii	"int32_t\000"
 3753      325F7400 
 3754              	.LASF53:
 3755 0430 64697374 		.ascii	"distance_turned\000"
 3755      616E6365 
 3755      5F747572 
 3755      6E656400 
 3756              	.LASF36:
 3757 0440 67325F64 		.ascii	"g2_direction\000"
 3757      69726563 
 3757      74696F6E 
 3757      00
 3758              	.LASF102:
 3759 044d 73616D70 		.ascii	"sample_count\000"
 3759      6C655F63 
 3759      6F756E74 
 3759      00
 3760              	.LASF31:
 3761 045a 67315F73 		.ascii	"g1_speed\000"
 3761      70656564 
 3761      00
 3762              	.LASF56:
 3763 0463 75547572 		.ascii	"uTurn\000"
 3763      6E00
 3764              	.LASF61:
 3765 0469 67657456 		.ascii	"getValForChannel\000"
 3765      616C466F 
 3765      72436861 
 3765      6E6E656C 
 3765      00
 3766              	.LASF94:
 3767 047a 64697370 		.ascii	"displaystring\000"
 3767      6C617973 
 3767      7472696E 
 3767      6700
 3768              	.LASF49:
 3769 0488 64657369 		.ascii	"desired_distance\000"
 3769      7265645F 
 3769      64697374 
 3769      616E6365 
 3769      00
 3770              	.LASF57:
 3771 0499 6368616E 		.ascii	"changeLeftWheelSpeed\000"
 3771      67654C65 
 3771      66745768 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 82


 3771      65656C53 
 3771      70656564 
 3772              	.LASF44:
 3773 04ae 72656164 		.ascii	"reading\000"
 3773      696E6700 
 3774              	.LASF25:
 3775 04b6 67305F78 		.ascii	"g0_xpos\000"
 3775      706F7300 
 3776              	.LASF39:
 3777 04be 72696768 		.ascii	"right_wheel_count\000"
 3777      745F7768 
 3777      65656C5F 
 3777      636F756E 
 3777      7400
 3778              	.LASF40:
 3779 04d0 6C656674 		.ascii	"left_wheel_count\000"
 3779      5F776865 
 3779      656C5F63 
 3779      6F756E74 
 3779      00
 3780              	.LASF17:
 3781 04e1 696E7433 		.ascii	"int32\000"
 3781      3200
 3782              	.LASF19:
 3783 04e7 646F7562 		.ascii	"double\000"
 3783      6C6500
 3784              	.LASF72:
 3785 04ee 64696666 		.ascii	"diff_count\000"
 3785      5F636F75 
 3785      6E7400
 3786              	.LASF92:
 3787 04f9 64617461 		.ascii	"dataready_flag\000"
 3787      72656164 
 3787      795F666C 
 3787      616700
 3788              	.LASF83:
 3789 0508 74735F73 		.ascii	"ts_speed\000"
 3789      70656564 
 3789      00
 3790              	.LASF69:
 3791 0511 636F756E 		.ascii	"count\000"
 3791      7400
 3792              	.LASF85:
 3793 0517 666C6167 		.ascii	"flag_ts_enc\000"
 3793      5F74735F 
 3793      656E6300 
 3794              	.LASF11:
 3795 0523 5F5F696E 		.ascii	"__int32_t\000"
 3795      7433325F 
 3795      7400
 3796              	.LASF104:
 3797 052d 636F756E 		.ascii	"countM1\000"
 3797      744D3100 
 3798              	.LASF105:
 3799 0535 636F756E 		.ascii	"countM2\000"
 3799      744D3200 
 3800              	.LASF41:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 83


 3801 053d 64697265 		.ascii	"directions\000"
 3801      6374696F 
 3801      6E7300
 3802              	.LASF59:
 3803 0548 6E65775F 		.ascii	"new_value\000"
 3803      76616C75 
 3803      6500
 3804              	.LASF26:
 3805 0552 67305F79 		.ascii	"g0_ypos\000"
 3805      706F7300 
 3806              	.LASF78:
 3807 055a 7475726E 		.ascii	"turnRight\000"
 3807      52696768 
 3807      7400
 3808              	.LASF84:
 3809 0564 74735F64 		.ascii	"ts_display\000"
 3809      6973706C 
 3809      617900
 3810              	.LASF42:
 3811 056f 64697265 		.ascii	"direction_index\000"
 3811      6374696F 
 3811      6E5F696E 
 3811      64657800 
 3812              	.LASF82:
 3813 057f 74735F75 		.ascii	"ts_update\000"
 3813      70646174 
 3813      6500
 3814              	.LASF62:
 3815 0589 67657444 		.ascii	"getDistance\000"
 3815      69737461 
 3815      6E636500 
 3816              	.LASF74:
 3817 0595 73657457 		.ascii	"setWheelDirection\000"
 3817      6865656C 
 3817      44697265 
 3817      6374696F 
 3817      6E00
 3818              	.LASF93:
 3819 05a7 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3819      5F72665F 
 3819      7472616E 
 3819      736D6973 
 3819      73696F6E 
 3820              	.LASF23:
 3821 05c3 726F626F 		.ascii	"robot_ypos\000"
 3821      745F7970 
 3821      6F7300
 3822              	.LASF58:
 3823 05ce 616D6F75 		.ascii	"amount\000"
 3823      6E7400
 3824              	.LASF100:
 3825 05d5 73656E73 		.ascii	"sensor_readings\000"
 3825      6F725F72 
 3825      65616469 
 3825      6E677300 
 3826              	.LASF20:
 3827 05e5 72737369 		.ascii	"rssi\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccg1G8eT.s 			page 84


 3827      00
 3828              	.LASF75:
 3829 05ea 6C656674 		.ascii	"leftIsForward\000"
 3829      4973466F 
 3829      72776172 
 3829      6400
 3830              	.LASF55:
 3831 05f8 73686172 		.ascii	"sharpTurnRight\000"
 3831      70547572 
 3831      6E526967 
 3831      687400
 3832              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
