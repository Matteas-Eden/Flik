ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ts
  19              		.bss
  20              		.type	ts, %object
  21              		.size	ts, 1
  22              	ts:
  23 0000 00       		.space	1
  24              		.global	ts_enc
  25 0001 00       		.align	1
  26              		.type	ts_enc, %object
  27              		.size	ts_enc, 2
  28              	ts_enc:
  29 0002 0000     		.space	2
  30              		.global	ts_update
  31              		.align	1
  32              		.type	ts_update, %object
  33              		.size	ts_update, 2
  34              	ts_update:
  35 0004 0000     		.space	2
  36              		.global	ts_speed
  37              		.align	1
  38              		.type	ts_speed, %object
  39              		.size	ts_speed, 2
  40              	ts_speed:
  41 0006 0000     		.space	2
  42              		.global	ts_display
  43              		.align	1
  44              		.type	ts_display, %object
  45              		.size	ts_display, 2
  46              	ts_display:
  47 0008 0000     		.space	2
  48              		.global	flag_ts_enc
  49              		.type	flag_ts_enc, %object
  50              		.size	flag_ts_enc, 1
  51              	flag_ts_enc:
  52 000a 00       		.space	1
  53              		.global	flag_ts_update
  54              		.type	flag_ts_update, %object
  55              		.size	flag_ts_update, 1
  56              	flag_ts_update:
  57 000b 00       		.space	1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 2


  58              		.global	flag_ts_speed
  59              		.type	flag_ts_speed, %object
  60              		.size	flag_ts_speed, 1
  61              	flag_ts_speed:
  62 000c 00       		.space	1
  63              		.global	flag_ts_display
  64              		.type	flag_ts_display, %object
  65              		.size	flag_ts_display, 1
  66              	flag_ts_display:
  67 000d 00       		.space	1
  68              		.global	flag_rx
  69              		.type	flag_rx, %object
  70              		.size	flag_rx, 1
  71              	flag_rx:
  72 000e 00       		.space	1
  73              		.global	flag_packet
  74              		.type	flag_packet, %object
  75              		.size	flag_packet, 1
  76              	flag_packet:
  77 000f 00       		.space	1
  78              		.global	flag_KB_string
  79              		.type	flag_KB_string, %object
  80              		.size	flag_KB_string, 1
  81              	flag_KB_string:
  82 0010 00       		.space	1
  83              		.global	dataready_flag
  84              		.type	dataready_flag, %object
  85              		.size	dataready_flag, 1
  86              	dataready_flag:
  87 0011 00       		.space	1
  88              		.global	flag_rf_transmission_active
  89              		.data
  90              		.type	flag_rf_transmission_active, %object
  91              		.size	flag_rf_transmission_active, 1
  92              	flag_rf_transmission_active:
  93 0000 0A       		.byte	10
  94              		.global	displaystring
  95 0001 000000   		.align	2
  96              		.type	displaystring, %object
  97              		.size	displaystring, 64
  98              	displaystring:
  99 0004 43533330 		.ascii	"CS301 2020\012\000"
  99      31203230 
  99      32300A00 
 100 0010 00000000 		.space	52
 100      00000000 
 100      00000000 
 100      00000000 
 100      00000000 
 101              		.comm	line,64,4
 102              		.comm	entry,64,4
 103              		.comm	usbBuffer,64,4
 104              		.comm	system_state,32,4
 105              		.global	map
 106              		.align	2
 107              		.type	map, %object
 108              		.size	map, 1140
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 3


 109              	map:
 110 0044 01000000 		.word	1
 111 0048 01000000 		.word	1
 112 004c 01000000 		.word	1
 113 0050 01000000 		.word	1
 114 0054 01000000 		.word	1
 115 0058 01000000 		.word	1
 116 005c 01000000 		.word	1
 117 0060 01000000 		.word	1
 118 0064 01000000 		.word	1
 119 0068 01000000 		.word	1
 120 006c 01000000 		.word	1
 121 0070 01000000 		.word	1
 122 0074 01000000 		.word	1
 123 0078 01000000 		.word	1
 124 007c 01000000 		.word	1
 125 0080 01000000 		.word	1
 126 0084 01000000 		.word	1
 127 0088 01000000 		.word	1
 128 008c 01000000 		.word	1
 129 0090 01000000 		.word	1
 130 0094 00000000 		.word	0
 131 0098 00000000 		.word	0
 132 009c 00000000 		.word	0
 133 00a0 00000000 		.word	0
 134 00a4 00000000 		.word	0
 135 00a8 01000000 		.word	1
 136 00ac 00000000 		.word	0
 137 00b0 01000000 		.word	1
 138 00b4 00000000 		.word	0
 139 00b8 00000000 		.word	0
 140 00bc 00000000 		.word	0
 141 00c0 00000000 		.word	0
 142 00c4 00000000 		.word	0
 143 00c8 00000000 		.word	0
 144 00cc 00000000 		.word	0
 145 00d0 00000000 		.word	0
 146 00d4 00000000 		.word	0
 147 00d8 01000000 		.word	1
 148 00dc 01000000 		.word	1
 149 00e0 01000000 		.word	1
 150 00e4 01000000 		.word	1
 151 00e8 01000000 		.word	1
 152 00ec 01000000 		.word	1
 153 00f0 00000000 		.word	0
 154 00f4 01000000 		.word	1
 155 00f8 00000000 		.word	0
 156 00fc 01000000 		.word	1
 157 0100 00000000 		.word	0
 158 0104 01000000 		.word	1
 159 0108 00000000 		.word	0
 160 010c 01000000 		.word	1
 161 0110 01000000 		.word	1
 162 0114 01000000 		.word	1
 163 0118 01000000 		.word	1
 164 011c 01000000 		.word	1
 165 0120 00000000 		.word	0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 4


 166 0124 01000000 		.word	1
 167 0128 01000000 		.word	1
 168 012c 00000000 		.word	0
 169 0130 00000000 		.word	0
 170 0134 00000000 		.word	0
 171 0138 01000000 		.word	1
 172 013c 00000000 		.word	0
 173 0140 01000000 		.word	1
 174 0144 00000000 		.word	0
 175 0148 00000000 		.word	0
 176 014c 00000000 		.word	0
 177 0150 01000000 		.word	1
 178 0154 00000000 		.word	0
 179 0158 00000000 		.word	0
 180 015c 00000000 		.word	0
 181 0160 00000000 		.word	0
 182 0164 00000000 		.word	0
 183 0168 01000000 		.word	1
 184 016c 00000000 		.word	0
 185 0170 01000000 		.word	1
 186 0174 01000000 		.word	1
 187 0178 00000000 		.word	0
 188 017c 01000000 		.word	1
 189 0180 00000000 		.word	0
 190 0184 01000000 		.word	1
 191 0188 00000000 		.word	0
 192 018c 01000000 		.word	1
 193 0190 00000000 		.word	0
 194 0194 01000000 		.word	1
 195 0198 01000000 		.word	1
 196 019c 01000000 		.word	1
 197 01a0 01000000 		.word	1
 198 01a4 01000000 		.word	1
 199 01a8 01000000 		.word	1
 200 01ac 01000000 		.word	1
 201 01b0 00000000 		.word	0
 202 01b4 01000000 		.word	1
 203 01b8 00000000 		.word	0
 204 01bc 01000000 		.word	1
 205 01c0 01000000 		.word	1
 206 01c4 00000000 		.word	0
 207 01c8 01000000 		.word	1
 208 01cc 00000000 		.word	0
 209 01d0 00000000 		.word	0
 210 01d4 00000000 		.word	0
 211 01d8 00000000 		.word	0
 212 01dc 00000000 		.word	0
 213 01e0 00000000 		.word	0
 214 01e4 00000000 		.word	0
 215 01e8 00000000 		.word	0
 216 01ec 00000000 		.word	0
 217 01f0 00000000 		.word	0
 218 01f4 00000000 		.word	0
 219 01f8 01000000 		.word	1
 220 01fc 00000000 		.word	0
 221 0200 01000000 		.word	1
 222 0204 00000000 		.word	0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 5


 223 0208 01000000 		.word	1
 224 020c 01000000 		.word	1
 225 0210 00000000 		.word	0
 226 0214 01000000 		.word	1
 227 0218 01000000 		.word	1
 228 021c 01000000 		.word	1
 229 0220 01000000 		.word	1
 230 0224 01000000 		.word	1
 231 0228 01000000 		.word	1
 232 022c 01000000 		.word	1
 233 0230 01000000 		.word	1
 234 0234 01000000 		.word	1
 235 0238 00000000 		.word	0
 236 023c 01000000 		.word	1
 237 0240 00000000 		.word	0
 238 0244 01000000 		.word	1
 239 0248 00000000 		.word	0
 240 024c 01000000 		.word	1
 241 0250 01000000 		.word	1
 242 0254 01000000 		.word	1
 243 0258 01000000 		.word	1
 244 025c 00000000 		.word	0
 245 0260 00000000 		.word	0
 246 0264 00000000 		.word	0
 247 0268 00000000 		.word	0
 248 026c 00000000 		.word	0
 249 0270 00000000 		.word	0
 250 0274 00000000 		.word	0
 251 0278 00000000 		.word	0
 252 027c 00000000 		.word	0
 253 0280 00000000 		.word	0
 254 0284 00000000 		.word	0
 255 0288 01000000 		.word	1
 256 028c 00000000 		.word	0
 257 0290 01000000 		.word	1
 258 0294 00000000 		.word	0
 259 0298 00000000 		.word	0
 260 029c 00000000 		.word	0
 261 02a0 01000000 		.word	1
 262 02a4 01000000 		.word	1
 263 02a8 01000000 		.word	1
 264 02ac 01000000 		.word	1
 265 02b0 01000000 		.word	1
 266 02b4 01000000 		.word	1
 267 02b8 01000000 		.word	1
 268 02bc 01000000 		.word	1
 269 02c0 00000000 		.word	0
 270 02c4 01000000 		.word	1
 271 02c8 01000000 		.word	1
 272 02cc 01000000 		.word	1
 273 02d0 01000000 		.word	1
 274 02d4 01000000 		.word	1
 275 02d8 00000000 		.word	0
 276 02dc 01000000 		.word	1
 277 02e0 01000000 		.word	1
 278 02e4 01000000 		.word	1
 279 02e8 00000000 		.word	0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 6


 280 02ec 01000000 		.word	1
 281 02f0 01000000 		.word	1
 282 02f4 00000000 		.word	0
 283 02f8 00000000 		.word	0
 284 02fc 00000000 		.word	0
 285 0300 00000000 		.word	0
 286 0304 00000000 		.word	0
 287 0308 00000000 		.word	0
 288 030c 00000000 		.word	0
 289 0310 00000000 		.word	0
 290 0314 00000000 		.word	0
 291 0318 00000000 		.word	0
 292 031c 00000000 		.word	0
 293 0320 01000000 		.word	1
 294 0324 00000000 		.word	0
 295 0328 00000000 		.word	0
 296 032c 00000000 		.word	0
 297 0330 01000000 		.word	1
 298 0334 00000000 		.word	0
 299 0338 01000000 		.word	1
 300 033c 01000000 		.word	1
 301 0340 00000000 		.word	0
 302 0344 01000000 		.word	1
 303 0348 01000000 		.word	1
 304 034c 01000000 		.word	1
 305 0350 01000000 		.word	1
 306 0354 01000000 		.word	1
 307 0358 00000000 		.word	0
 308 035c 01000000 		.word	1
 309 0360 01000000 		.word	1
 310 0364 01000000 		.word	1
 311 0368 00000000 		.word	0
 312 036c 01000000 		.word	1
 313 0370 00000000 		.word	0
 314 0374 01000000 		.word	1
 315 0378 00000000 		.word	0
 316 037c 01000000 		.word	1
 317 0380 00000000 		.word	0
 318 0384 01000000 		.word	1
 319 0388 01000000 		.word	1
 320 038c 00000000 		.word	0
 321 0390 00000000 		.word	0
 322 0394 00000000 		.word	0
 323 0398 00000000 		.word	0
 324 039c 00000000 		.word	0
 325 03a0 01000000 		.word	1
 326 03a4 00000000 		.word	0
 327 03a8 00000000 		.word	0
 328 03ac 00000000 		.word	0
 329 03b0 01000000 		.word	1
 330 03b4 00000000 		.word	0
 331 03b8 00000000 		.word	0
 332 03bc 00000000 		.word	0
 333 03c0 01000000 		.word	1
 334 03c4 00000000 		.word	0
 335 03c8 00000000 		.word	0
 336 03cc 00000000 		.word	0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 7


 337 03d0 01000000 		.word	1
 338 03d4 01000000 		.word	1
 339 03d8 00000000 		.word	0
 340 03dc 01000000 		.word	1
 341 03e0 01000000 		.word	1
 342 03e4 01000000 		.word	1
 343 03e8 00000000 		.word	0
 344 03ec 01000000 		.word	1
 345 03f0 01000000 		.word	1
 346 03f4 01000000 		.word	1
 347 03f8 00000000 		.word	0
 348 03fc 01000000 		.word	1
 349 0400 01000000 		.word	1
 350 0404 01000000 		.word	1
 351 0408 00000000 		.word	0
 352 040c 01000000 		.word	1
 353 0410 01000000 		.word	1
 354 0414 01000000 		.word	1
 355 0418 00000000 		.word	0
 356 041c 01000000 		.word	1
 357 0420 01000000 		.word	1
 358 0424 00000000 		.word	0
 359 0428 00000000 		.word	0
 360 042c 00000000 		.word	0
 361 0430 01000000 		.word	1
 362 0434 00000000 		.word	0
 363 0438 00000000 		.word	0
 364 043c 00000000 		.word	0
 365 0440 00000000 		.word	0
 366 0444 00000000 		.word	0
 367 0448 00000000 		.word	0
 368 044c 00000000 		.word	0
 369 0450 01000000 		.word	1
 370 0454 00000000 		.word	0
 371 0458 00000000 		.word	0
 372 045c 00000000 		.word	0
 373 0460 00000000 		.word	0
 374 0464 00000000 		.word	0
 375 0468 01000000 		.word	1
 376 046c 01000000 		.word	1
 377 0470 01000000 		.word	1
 378 0474 01000000 		.word	1
 379 0478 01000000 		.word	1
 380 047c 01000000 		.word	1
 381 0480 01000000 		.word	1
 382 0484 01000000 		.word	1
 383 0488 01000000 		.word	1
 384 048c 01000000 		.word	1
 385 0490 01000000 		.word	1
 386 0494 01000000 		.word	1
 387 0498 01000000 		.word	1
 388 049c 01000000 		.word	1
 389 04a0 01000000 		.word	1
 390 04a4 01000000 		.word	1
 391 04a8 01000000 		.word	1
 392 04ac 01000000 		.word	1
 393 04b0 01000000 		.word	1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 8


 394 04b4 01000000 		.word	1
 395              		.global	food_list
 396              		.align	2
 397              		.type	food_list, %object
 398              		.size	food_list, 48
 399              	food_list:
 400 04b8 04000000 		.word	4
 401 04bc 05000000 		.word	5
 402 04c0 07000000 		.word	7
 403 04c4 01000000 		.word	1
 404 04c8 0B000000 		.word	11
 405 04cc 05000000 		.word	5
 406 04d0 0A000000 		.word	10
 407 04d4 0B000000 		.word	11
 408 04d8 05000000 		.word	5
 409 04dc 08000000 		.word	8
 410 04e0 11000000 		.word	17
 411 04e4 02000000 		.word	2
 412              		.section	.text.blockAndWait,"ax",%progbits
 413              		.align	2
 414              		.global	blockAndWait
 415              		.thumb
 416              		.thumb_func
 417              		.type	blockAndWait, %function
 418              	blockAndWait:
 419              	.LFB63:
 420              		.file 1 ".\\BFS/helper.h"
   1:.\BFS/helper.h **** #ifndef HELPER_H
   2:.\BFS/helper.h **** #define HELPER_H
   3:.\BFS/helper.h **** #include <stdlib.h>
   4:.\BFS/helper.h **** #include <stdio.h>
   5:.\BFS/helper.h **** #include "point.h"
   6:.\BFS/helper.h **** #include "helper.h"
   7:.\BFS/helper.h **** 
   8:.\BFS/helper.h **** void blockAndWait(){
 421              		.loc 1 8 0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 8
 424              		@ frame_needed = 1, uses_anonymous_args = 0
 425 0000 80B5     		push	{r7, lr}
 426              		.cfi_def_cfa_offset 8
 427              		.cfi_offset 7, -8
 428              		.cfi_offset 14, -4
 429 0002 82B0     		sub	sp, sp, #8
 430              		.cfi_def_cfa_offset 16
 431 0004 00AF     		add	r7, sp, #0
 432              		.cfi_def_cfa_register 7
   9:.\BFS/helper.h ****     char c = getchar();
 433              		.loc 1 9 0
 434 0006 104B     		ldr	r3, .L4
 435 0008 1B68     		ldr	r3, [r3]
 436 000a 5B68     		ldr	r3, [r3, #4]
 437 000c 5A68     		ldr	r2, [r3, #4]
 438 000e 013A     		subs	r2, r2, #1
 439 0010 5A60     		str	r2, [r3, #4]
 440 0012 5B68     		ldr	r3, [r3, #4]
 441 0014 002B     		cmp	r3, #0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 9


 442 0016 0BDA     		bge	.L2
 443              		.loc 1 9 0 is_stmt 0 discriminator 1
 444 0018 0B4B     		ldr	r3, .L4
 445 001a 1A68     		ldr	r2, [r3]
 446 001c 0A4B     		ldr	r3, .L4
 447 001e 1B68     		ldr	r3, [r3]
 448 0020 5B68     		ldr	r3, [r3, #4]
 449 0022 1046     		mov	r0, r2
 450 0024 1946     		mov	r1, r3
 451 0026 FFF7FEFF 		bl	__srget_r
 452 002a 0346     		mov	r3, r0
 453 002c DBB2     		uxtb	r3, r3
 454 002e 06E0     		b	.L3
 455              	.L2:
 456              		.loc 1 9 0 discriminator 2
 457 0030 054B     		ldr	r3, .L4
 458 0032 1B68     		ldr	r3, [r3]
 459 0034 5A68     		ldr	r2, [r3, #4]
 460 0036 1368     		ldr	r3, [r2]
 461 0038 591C     		adds	r1, r3, #1
 462 003a 1160     		str	r1, [r2]
 463 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 464              	.L3:
 465              		.loc 1 9 0 discriminator 4
 466 003e FB71     		strb	r3, [r7, #7]
  10:.\BFS/helper.h **** }
 467              		.loc 1 10 0 is_stmt 1 discriminator 4
 468 0040 0837     		adds	r7, r7, #8
 469              		.cfi_def_cfa_offset 8
 470 0042 BD46     		mov	sp, r7
 471              		.cfi_def_cfa_register 13
 472              		@ sp needed
 473 0044 80BD     		pop	{r7, pc}
 474              	.L5:
 475 0046 00BF     		.align	2
 476              	.L4:
 477 0048 00000000 		.word	_impure_ptr
 478              		.cfi_endproc
 479              	.LFE63:
 480              		.size	blockAndWait, .-blockAndWait
 481              		.section	.text.max,"ax",%progbits
 482              		.align	2
 483              		.global	max
 484              		.thumb
 485              		.thumb_func
 486              		.type	max, %function
 487              	max:
 488              	.LFB64:
  11:.\BFS/helper.h **** 
  12:.\BFS/helper.h **** int max(int * arr, int size){
 489              		.loc 1 12 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 16
 492              		@ frame_needed = 1, uses_anonymous_args = 0
 493              		@ link register save eliminated.
 494 0000 80B4     		push	{r7}
 495              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 10


 496              		.cfi_offset 7, -4
 497 0002 85B0     		sub	sp, sp, #20
 498              		.cfi_def_cfa_offset 24
 499 0004 00AF     		add	r7, sp, #0
 500              		.cfi_def_cfa_register 7
 501 0006 7860     		str	r0, [r7, #4]
 502 0008 3960     		str	r1, [r7]
  13:.\BFS/helper.h ****     int max = 0;
 503              		.loc 1 13 0
 504 000a 0023     		movs	r3, #0
 505 000c FB60     		str	r3, [r7, #12]
  14:.\BFS/helper.h ****     int i;
  15:.\BFS/helper.h ****     for (i = 0; i < size; i++){
 506              		.loc 1 15 0
 507 000e 0023     		movs	r3, #0
 508 0010 BB60     		str	r3, [r7, #8]
 509 0012 10E0     		b	.L7
 510              	.L9:
  16:.\BFS/helper.h ****         if (arr[i] > max) max = arr[i];
 511              		.loc 1 16 0
 512 0014 BB68     		ldr	r3, [r7, #8]
 513 0016 9B00     		lsls	r3, r3, #2
 514 0018 7A68     		ldr	r2, [r7, #4]
 515 001a 1344     		add	r3, r3, r2
 516 001c 1A68     		ldr	r2, [r3]
 517 001e FB68     		ldr	r3, [r7, #12]
 518 0020 9A42     		cmp	r2, r3
 519 0022 05DD     		ble	.L8
 520              		.loc 1 16 0 is_stmt 0 discriminator 1
 521 0024 BB68     		ldr	r3, [r7, #8]
 522 0026 9B00     		lsls	r3, r3, #2
 523 0028 7A68     		ldr	r2, [r7, #4]
 524 002a 1344     		add	r3, r3, r2
 525 002c 1B68     		ldr	r3, [r3]
 526 002e FB60     		str	r3, [r7, #12]
 527              	.L8:
  15:.\BFS/helper.h ****         if (arr[i] > max) max = arr[i];
 528              		.loc 1 15 0 is_stmt 1 discriminator 2
 529 0030 BB68     		ldr	r3, [r7, #8]
 530 0032 0133     		adds	r3, r3, #1
 531 0034 BB60     		str	r3, [r7, #8]
 532              	.L7:
  15:.\BFS/helper.h ****         if (arr[i] > max) max = arr[i];
 533              		.loc 1 15 0 is_stmt 0 discriminator 1
 534 0036 BA68     		ldr	r2, [r7, #8]
 535 0038 3B68     		ldr	r3, [r7]
 536 003a 9A42     		cmp	r2, r3
 537 003c EADB     		blt	.L9
  17:.\BFS/helper.h ****     }
  18:.\BFS/helper.h ****     return max;
 538              		.loc 1 18 0 is_stmt 1
 539 003e FB68     		ldr	r3, [r7, #12]
  19:.\BFS/helper.h **** }
 540              		.loc 1 19 0
 541 0040 1846     		mov	r0, r3
 542 0042 1437     		adds	r7, r7, #20
 543              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 11


 544 0044 BD46     		mov	sp, r7
 545              		.cfi_def_cfa_register 13
 546              		@ sp needed
 547 0046 5DF8047B 		ldr	r7, [sp], #4
 548              		.cfi_restore 7
 549              		.cfi_def_cfa_offset 0
 550 004a 7047     		bx	lr
 551              		.cfi_endproc
 552              	.LFE64:
 553              		.size	max, .-max
 554              		.section	.text.reverseRoute,"ax",%progbits
 555              		.align	2
 556              		.global	reverseRoute
 557              		.thumb
 558              		.thumb_func
 559              		.type	reverseRoute, %function
 560              	reverseRoute:
 561              	.LFB65:
  20:.\BFS/helper.h **** 
  21:.\BFS/helper.h **** void reverseRoute(point * arr, int size){
 562              		.loc 1 21 0
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 16
 565              		@ frame_needed = 1, uses_anonymous_args = 0
 566              		@ link register save eliminated.
 567 0000 80B4     		push	{r7}
 568              		.cfi_def_cfa_offset 4
 569              		.cfi_offset 7, -4
 570 0002 85B0     		sub	sp, sp, #20
 571              		.cfi_def_cfa_offset 24
 572 0004 00AF     		add	r7, sp, #0
 573              		.cfi_def_cfa_register 7
 574 0006 7860     		str	r0, [r7, #4]
 575 0008 3960     		str	r1, [r7]
  22:.\BFS/helper.h ****     int i;
  23:.\BFS/helper.h ****     for (i = 0; i < size/2; i++){
 576              		.loc 1 23 0
 577 000a 0023     		movs	r3, #0
 578 000c FB60     		str	r3, [r7, #12]
 579 000e 11E0     		b	.L12
 580              	.L13:
  24:.\BFS/helper.h ****         arr[i] = arr[size-i];
 581              		.loc 1 24 0 discriminator 3
 582 0010 FB68     		ldr	r3, [r7, #12]
 583 0012 DB00     		lsls	r3, r3, #3
 584 0014 7A68     		ldr	r2, [r7, #4]
 585 0016 D118     		adds	r1, r2, r3
 586 0018 3A68     		ldr	r2, [r7]
 587 001a FB68     		ldr	r3, [r7, #12]
 588 001c D31A     		subs	r3, r2, r3
 589 001e DB00     		lsls	r3, r3, #3
 590 0020 7A68     		ldr	r2, [r7, #4]
 591 0022 1A44     		add	r2, r2, r3
 592 0024 0B46     		mov	r3, r1
 593 0026 92E80300 		ldmia	r2, {r0, r1}
 594 002a 83E80300 		stmia	r3, {r0, r1}
  23:.\BFS/helper.h ****         arr[i] = arr[size-i];
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 12


 595              		.loc 1 23 0 discriminator 3
 596 002e FB68     		ldr	r3, [r7, #12]
 597 0030 0133     		adds	r3, r3, #1
 598 0032 FB60     		str	r3, [r7, #12]
 599              	.L12:
  23:.\BFS/helper.h ****         arr[i] = arr[size-i];
 600              		.loc 1 23 0 is_stmt 0 discriminator 1
 601 0034 3B68     		ldr	r3, [r7]
 602 0036 DA0F     		lsrs	r2, r3, #31
 603 0038 1344     		add	r3, r3, r2
 604 003a 5B10     		asrs	r3, r3, #1
 605 003c 1A46     		mov	r2, r3
 606 003e FB68     		ldr	r3, [r7, #12]
 607 0040 9A42     		cmp	r2, r3
 608 0042 E5DC     		bgt	.L13
  25:.\BFS/helper.h ****     }
  26:.\BFS/helper.h **** }
 609              		.loc 1 26 0 is_stmt 1
 610 0044 1437     		adds	r7, r7, #20
 611              		.cfi_def_cfa_offset 4
 612 0046 BD46     		mov	sp, r7
 613              		.cfi_def_cfa_register 13
 614              		@ sp needed
 615 0048 5DF8047B 		ldr	r7, [sp], #4
 616              		.cfi_restore 7
 617              		.cfi_def_cfa_offset 0
 618 004c 7047     		bx	lr
 619              		.cfi_endproc
 620              	.LFE65:
 621              		.size	reverseRoute, .-reverseRoute
 622 004e 00BF     		.section	.text.isRouteEqual,"ax",%progbits
 623              		.align	2
 624              		.global	isRouteEqual
 625              		.thumb
 626              		.thumb_func
 627              		.type	isRouteEqual, %function
 628              	isRouteEqual:
 629              	.LFB66:
  27:.\BFS/helper.h **** 
  28:.\BFS/helper.h **** int isRouteEqual(point * arr1, point * arr2, int size){
 630              		.loc 1 28 0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 24
 633              		@ frame_needed = 1, uses_anonymous_args = 0
 634              		@ link register save eliminated.
 635 0000 80B4     		push	{r7}
 636              		.cfi_def_cfa_offset 4
 637              		.cfi_offset 7, -4
 638 0002 87B0     		sub	sp, sp, #28
 639              		.cfi_def_cfa_offset 32
 640 0004 00AF     		add	r7, sp, #0
 641              		.cfi_def_cfa_register 7
 642 0006 F860     		str	r0, [r7, #12]
 643 0008 B960     		str	r1, [r7, #8]
 644 000a 7A60     		str	r2, [r7, #4]
  29:.\BFS/helper.h ****     int i;
  30:.\BFS/helper.h ****     for (i = 0; i < size; i++){
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 13


 645              		.loc 1 30 0
 646 000c 0023     		movs	r3, #0
 647 000e 7B61     		str	r3, [r7, #20]
 648 0010 1CE0     		b	.L15
 649              	.L19:
  31:.\BFS/helper.h ****         if (arr1[i].x != arr2[i].x || arr1[i].y != arr2[i].y) return FALSE;
 650              		.loc 1 31 0
 651 0012 7B69     		ldr	r3, [r7, #20]
 652 0014 DB00     		lsls	r3, r3, #3
 653 0016 FA68     		ldr	r2, [r7, #12]
 654 0018 1344     		add	r3, r3, r2
 655 001a 1A68     		ldr	r2, [r3]
 656 001c 7B69     		ldr	r3, [r7, #20]
 657 001e DB00     		lsls	r3, r3, #3
 658 0020 B968     		ldr	r1, [r7, #8]
 659 0022 0B44     		add	r3, r3, r1
 660 0024 1B68     		ldr	r3, [r3]
 661 0026 9A42     		cmp	r2, r3
 662 0028 0BD1     		bne	.L16
 663              		.loc 1 31 0 is_stmt 0 discriminator 2
 664 002a 7B69     		ldr	r3, [r7, #20]
 665 002c DB00     		lsls	r3, r3, #3
 666 002e FA68     		ldr	r2, [r7, #12]
 667 0030 1344     		add	r3, r3, r2
 668 0032 5A68     		ldr	r2, [r3, #4]
 669 0034 7B69     		ldr	r3, [r7, #20]
 670 0036 DB00     		lsls	r3, r3, #3
 671 0038 B968     		ldr	r1, [r7, #8]
 672 003a 0B44     		add	r3, r3, r1
 673 003c 5B68     		ldr	r3, [r3, #4]
 674 003e 9A42     		cmp	r2, r3
 675 0040 01D0     		beq	.L17
 676              	.L16:
 677              		.loc 1 31 0 discriminator 3
 678 0042 0023     		movs	r3, #0
 679 0044 07E0     		b	.L18
 680              	.L17:
  30:.\BFS/helper.h ****         if (arr1[i].x != arr2[i].x || arr1[i].y != arr2[i].y) return FALSE;
 681              		.loc 1 30 0 is_stmt 1 discriminator 2
 682 0046 7B69     		ldr	r3, [r7, #20]
 683 0048 0133     		adds	r3, r3, #1
 684 004a 7B61     		str	r3, [r7, #20]
 685              	.L15:
  30:.\BFS/helper.h ****         if (arr1[i].x != arr2[i].x || arr1[i].y != arr2[i].y) return FALSE;
 686              		.loc 1 30 0 is_stmt 0 discriminator 1
 687 004c 7A69     		ldr	r2, [r7, #20]
 688 004e 7B68     		ldr	r3, [r7, #4]
 689 0050 9A42     		cmp	r2, r3
 690 0052 DEDB     		blt	.L19
  32:.\BFS/helper.h ****     }
  33:.\BFS/helper.h ****     return TRUE;
 691              		.loc 1 33 0 is_stmt 1
 692 0054 0123     		movs	r3, #1
 693              	.L18:
  34:.\BFS/helper.h **** }
 694              		.loc 1 34 0
 695 0056 1846     		mov	r0, r3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 14


 696 0058 1C37     		adds	r7, r7, #28
 697              		.cfi_def_cfa_offset 4
 698 005a BD46     		mov	sp, r7
 699              		.cfi_def_cfa_register 13
 700              		@ sp needed
 701 005c 5DF8047B 		ldr	r7, [sp], #4
 702              		.cfi_restore 7
 703              		.cfi_def_cfa_offset 0
 704 0060 7047     		bx	lr
 705              		.cfi_endproc
 706              	.LFE66:
 707              		.size	isRouteEqual, .-isRouteEqual
 708 0062 00BF     		.section	.text.appendArray,"ax",%progbits
 709              		.align	2
 710              		.global	appendArray
 711              		.thumb
 712              		.thumb_func
 713              		.type	appendArray, %function
 714              	appendArray:
 715              	.LFB67:
  35:.\BFS/helper.h **** 
  36:.\BFS/helper.h **** void appendArray(void *source, void *addition){
 716              		.loc 1 36 0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 8
 719              		@ frame_needed = 1, uses_anonymous_args = 0
 720              		@ link register save eliminated.
 721 0000 80B4     		push	{r7}
 722              		.cfi_def_cfa_offset 4
 723              		.cfi_offset 7, -4
 724 0002 83B0     		sub	sp, sp, #12
 725              		.cfi_def_cfa_offset 16
 726 0004 00AF     		add	r7, sp, #0
 727              		.cfi_def_cfa_register 7
 728 0006 7860     		str	r0, [r7, #4]
 729 0008 3960     		str	r1, [r7]
  37:.\BFS/helper.h ****     // TODO: Implement
  38:.\BFS/helper.h **** }
 730              		.loc 1 38 0
 731 000a 0C37     		adds	r7, r7, #12
 732              		.cfi_def_cfa_offset 4
 733 000c BD46     		mov	sp, r7
 734              		.cfi_def_cfa_register 13
 735              		@ sp needed
 736 000e 5DF8047B 		ldr	r7, [sp], #4
 737              		.cfi_restore 7
 738              		.cfi_def_cfa_offset 0
 739 0012 7047     		bx	lr
 740              		.cfi_endproc
 741              	.LFE67:
 742              		.size	appendArray, .-appendArray
 743              		.section	.text.len,"ax",%progbits
 744              		.align	2
 745              		.global	len
 746              		.thumb
 747              		.thumb_func
 748              		.type	len, %function
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 15


 749              	len:
 750              	.LFB68:
 751              		.file 2 ".\\BFS/map_addons.h"
   1:.\BFS/map_addons.h **** #ifndef MAP_ADDONS_H
   2:.\BFS/map_addons.h **** #define MAP_ADDONS_H
   3:.\BFS/map_addons.h **** 
   4:.\BFS/map_addons.h **** // Dimensions of map and paths in map
   5:.\BFS/map_addons.h **** #define MAP_ROW 15
   6:.\BFS/map_addons.h **** #define MAP_COL 19
   7:.\BFS/map_addons.h **** #define MAX_PATH_LENGTH 140
   8:.\BFS/map_addons.h **** #define MAX_NUM_PATHS 10
   9:.\BFS/map_addons.h **** #define MAX_NODES 30
  10:.\BFS/map_addons.h **** #define MAX_STACK_SIZE 20
  11:.\BFS/map_addons.h **** #define MAX_EDGES 15
  12:.\BFS/map_addons.h **** 
  13:.\BFS/map_addons.h **** // Colours for printing
  14:.\BFS/map_addons.h **** #define RED "\033[0;31m"
  15:.\BFS/map_addons.h **** #define BLUE "\033[0;34m"
  16:.\BFS/map_addons.h **** #define BOLD_GREEN "\033[1;32m"
  17:.\BFS/map_addons.h **** #define BOLD_YELLOW "\033[1;33m"
  18:.\BFS/map_addons.h **** #define DEFAULT_COLOUR "\033[0m"
  19:.\BFS/map_addons.h **** 
  20:.\BFS/map_addons.h **** // Labels for vertices on the map
  21:.\BFS/map_addons.h **** #define UNVISITED 0
  22:.\BFS/map_addons.h **** #define WALL 1
  23:.\BFS/map_addons.h **** #define VISITED 2
  24:.\BFS/map_addons.h **** #define FINAL_PATH 3
  25:.\BFS/map_addons.h **** #define START_OR_END 4
  26:.\BFS/map_addons.h **** #define EMPTY_VAL -1
  27:.\BFS/map_addons.h **** 
  28:.\BFS/map_addons.h **** // Command Macros
  29:.\BFS/map_addons.h **** #define LEFT_TURN -1
  30:.\BFS/map_addons.h **** #define RIGHT_TURN -2
  31:.\BFS/map_addons.h **** #define U_TURN -3
  32:.\BFS/map_addons.h **** 
  33:.\BFS/map_addons.h **** // Parameters for creating the command list
  34:.\BFS/map_addons.h **** #define MAX_COMMAND_LENGTH 50
  35:.\BFS/map_addons.h **** #define EMPTY_COMMAND 0
  36:.\BFS/map_addons.h **** #define CMD_NULL -1
  37:.\BFS/map_addons.h **** #define CMD_RIGHT 0
  38:.\BFS/map_addons.h **** #define CMD_DOWN 1
  39:.\BFS/map_addons.h **** #define CMD_LEFT 2
  40:.\BFS/map_addons.h **** #define CMD_UP 3
  41:.\BFS/map_addons.h **** #define START_FACING CMD_LEFT //-------------------Change Orientation here-------------------------
  42:.\BFS/map_addons.h **** 
  43:.\BFS/map_addons.h **** // Values that decide turning behaviour
  44:.\BFS/map_addons.h **** #define GO_STRAIGHT 0
  45:.\BFS/map_addons.h **** #define TURN_LEFT_1 -1
  46:.\BFS/map_addons.h **** #define TURN_LEFT_2 3
  47:.\BFS/map_addons.h **** #define TURN_RIGHT_1 1
  48:.\BFS/map_addons.h **** #define TURN_RIGHT_2 -3
  49:.\BFS/map_addons.h **** 
  50:.\BFS/map_addons.h **** // Includes
  51:.\BFS/map_addons.h **** #include <stdio.h>
  52:.\BFS/map_addons.h **** #include "helper.h"
  53:.\BFS/map_addons.h **** #include "point.h"
  54:.\BFS/map_addons.h **** #include "line_map.h"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 16


  55:.\BFS/map_addons.h **** #include "defines.h"
  56:.\BFS/map_addons.h **** 
  57:.\BFS/map_addons.h **** /* Get the length of a path*/
  58:.\BFS/map_addons.h **** int len(point * path){
 752              		.loc 2 58 0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 16
 755              		@ frame_needed = 1, uses_anonymous_args = 0
 756              		@ link register save eliminated.
 757 0000 80B4     		push	{r7}
 758              		.cfi_def_cfa_offset 4
 759              		.cfi_offset 7, -4
 760 0002 85B0     		sub	sp, sp, #20
 761              		.cfi_def_cfa_offset 24
 762 0004 00AF     		add	r7, sp, #0
 763              		.cfi_def_cfa_register 7
 764 0006 7860     		str	r0, [r7, #4]
  59:.\BFS/map_addons.h ****     int len = 0;
 765              		.loc 2 59 0
 766 0008 0023     		movs	r3, #0
 767 000a FB60     		str	r3, [r7, #12]
  60:.\BFS/map_addons.h ****     int i;
  61:.\BFS/map_addons.h ****     for (i = 0; i < MAX_PATH_LENGTH; i++){
 768              		.loc 2 61 0
 769 000c 0023     		movs	r3, #0
 770 000e BB60     		str	r3, [r7, #8]
 771 0010 16E0     		b	.L22
 772              	.L25:
  62:.\BFS/map_addons.h ****         if (path[i].x == EMPTY_VAL && path[i].y == EMPTY_VAL) break;
 773              		.loc 2 62 0
 774 0012 BB68     		ldr	r3, [r7, #8]
 775 0014 DB00     		lsls	r3, r3, #3
 776 0016 7A68     		ldr	r2, [r7, #4]
 777 0018 1344     		add	r3, r3, r2
 778 001a 1B68     		ldr	r3, [r3]
 779 001c B3F1FF3F 		cmp	r3, #-1
 780 0020 08D1     		bne	.L23
 781              		.loc 2 62 0 is_stmt 0 discriminator 1
 782 0022 BB68     		ldr	r3, [r7, #8]
 783 0024 DB00     		lsls	r3, r3, #3
 784 0026 7A68     		ldr	r2, [r7, #4]
 785 0028 1344     		add	r3, r3, r2
 786 002a 5B68     		ldr	r3, [r3, #4]
 787 002c B3F1FF3F 		cmp	r3, #-1
 788 0030 00D1     		bne	.L23
 789              		.loc 2 62 0
 790 0032 08E0     		b	.L24
 791              	.L23:
  63:.\BFS/map_addons.h ****         len++;
 792              		.loc 2 63 0 is_stmt 1 discriminator 2
 793 0034 FB68     		ldr	r3, [r7, #12]
 794 0036 0133     		adds	r3, r3, #1
 795 0038 FB60     		str	r3, [r7, #12]
  61:.\BFS/map_addons.h ****         if (path[i].x == EMPTY_VAL && path[i].y == EMPTY_VAL) break;
 796              		.loc 2 61 0 discriminator 2
 797 003a BB68     		ldr	r3, [r7, #8]
 798 003c 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 17


 799 003e BB60     		str	r3, [r7, #8]
 800              	.L22:
  61:.\BFS/map_addons.h ****         if (path[i].x == EMPTY_VAL && path[i].y == EMPTY_VAL) break;
 801              		.loc 2 61 0 is_stmt 0 discriminator 1
 802 0040 BB68     		ldr	r3, [r7, #8]
 803 0042 8B2B     		cmp	r3, #139
 804 0044 E5DD     		ble	.L25
 805              	.L24:
  64:.\BFS/map_addons.h ****     }
  65:.\BFS/map_addons.h ****     return len;
 806              		.loc 2 65 0 is_stmt 1
 807 0046 FB68     		ldr	r3, [r7, #12]
  66:.\BFS/map_addons.h **** }
 808              		.loc 2 66 0
 809 0048 1846     		mov	r0, r3
 810 004a 1437     		adds	r7, r7, #20
 811              		.cfi_def_cfa_offset 4
 812 004c BD46     		mov	sp, r7
 813              		.cfi_def_cfa_register 13
 814              		@ sp needed
 815 004e 5DF8047B 		ldr	r7, [sp], #4
 816              		.cfi_restore 7
 817              		.cfi_def_cfa_offset 0
 818 0052 7047     		bx	lr
 819              		.cfi_endproc
 820              	.LFE68:
 821              		.size	len, .-len
 822              		.section	.text.isEmpty,"ax",%progbits
 823              		.align	2
 824              		.global	isEmpty
 825              		.thumb
 826              		.thumb_func
 827              		.type	isEmpty, %function
 828              	isEmpty:
 829              	.LFB69:
  67:.\BFS/map_addons.h **** 
  68:.\BFS/map_addons.h **** /* Check if a path is empty i.e. full of EMPTY_VAL */
  69:.\BFS/map_addons.h **** int isEmpty(point * path, int size){
 830              		.loc 2 69 0
 831              		.cfi_startproc
 832              		@ args = 0, pretend = 0, frame = 16
 833              		@ frame_needed = 1, uses_anonymous_args = 0
 834              		@ link register save eliminated.
 835 0000 80B4     		push	{r7}
 836              		.cfi_def_cfa_offset 4
 837              		.cfi_offset 7, -4
 838 0002 85B0     		sub	sp, sp, #20
 839              		.cfi_def_cfa_offset 24
 840 0004 00AF     		add	r7, sp, #0
 841              		.cfi_def_cfa_register 7
 842 0006 7860     		str	r0, [r7, #4]
 843 0008 3960     		str	r1, [r7]
  70:.\BFS/map_addons.h ****     int i;
  71:.\BFS/map_addons.h ****     for (i = 0;i<size;i++){
 844              		.loc 2 71 0
 845 000a 0023     		movs	r3, #0
 846 000c FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 18


 847 000e 14E0     		b	.L28
 848              	.L31:
  72:.\BFS/map_addons.h ****         if (path[i].x != EMPTY_VAL && path[i].y != EMPTY_VAL) return FALSE;
 849              		.loc 2 72 0
 850 0010 FB68     		ldr	r3, [r7, #12]
 851 0012 DB00     		lsls	r3, r3, #3
 852 0014 7A68     		ldr	r2, [r7, #4]
 853 0016 1344     		add	r3, r3, r2
 854 0018 1B68     		ldr	r3, [r3]
 855 001a B3F1FF3F 		cmp	r3, #-1
 856 001e 09D0     		beq	.L29
 857              		.loc 2 72 0 is_stmt 0 discriminator 1
 858 0020 FB68     		ldr	r3, [r7, #12]
 859 0022 DB00     		lsls	r3, r3, #3
 860 0024 7A68     		ldr	r2, [r7, #4]
 861 0026 1344     		add	r3, r3, r2
 862 0028 5B68     		ldr	r3, [r3, #4]
 863 002a B3F1FF3F 		cmp	r3, #-1
 864 002e 01D0     		beq	.L29
 865              		.loc 2 72 0 discriminator 2
 866 0030 0023     		movs	r3, #0
 867 0032 07E0     		b	.L30
 868              	.L29:
  71:.\BFS/map_addons.h ****         if (path[i].x != EMPTY_VAL && path[i].y != EMPTY_VAL) return FALSE;
 869              		.loc 2 71 0 is_stmt 1 discriminator 2
 870 0034 FB68     		ldr	r3, [r7, #12]
 871 0036 0133     		adds	r3, r3, #1
 872 0038 FB60     		str	r3, [r7, #12]
 873              	.L28:
  71:.\BFS/map_addons.h ****         if (path[i].x != EMPTY_VAL && path[i].y != EMPTY_VAL) return FALSE;
 874              		.loc 2 71 0 is_stmt 0 discriminator 1
 875 003a FA68     		ldr	r2, [r7, #12]
 876 003c 3B68     		ldr	r3, [r7]
 877 003e 9A42     		cmp	r2, r3
 878 0040 E6DB     		blt	.L31
  73:.\BFS/map_addons.h ****     }
  74:.\BFS/map_addons.h ****     return TRUE;
 879              		.loc 2 74 0 is_stmt 1
 880 0042 0123     		movs	r3, #1
 881              	.L30:
  75:.\BFS/map_addons.h **** }
 882              		.loc 2 75 0
 883 0044 1846     		mov	r0, r3
 884 0046 1437     		adds	r7, r7, #20
 885              		.cfi_def_cfa_offset 4
 886 0048 BD46     		mov	sp, r7
 887              		.cfi_def_cfa_register 13
 888              		@ sp needed
 889 004a 5DF8047B 		ldr	r7, [sp], #4
 890              		.cfi_restore 7
 891              		.cfi_def_cfa_offset 0
 892 004e 7047     		bx	lr
 893              		.cfi_endproc
 894              	.LFE69:
 895              		.size	isEmpty, .-isEmpty
 896              		.section	.text.isPointOnPath,"ax",%progbits
 897              		.align	2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 19


 898              		.global	isPointOnPath
 899              		.thumb
 900              		.thumb_func
 901              		.type	isPointOnPath, %function
 902              	isPointOnPath:
 903              	.LFB70:
  76:.\BFS/map_addons.h **** 
  77:.\BFS/map_addons.h **** int isPointOnPath(point p, point * path, int size){
 904              		.loc 2 77 0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 24
 907              		@ frame_needed = 1, uses_anonymous_args = 0
 908              		@ link register save eliminated.
 909 0000 90B4     		push	{r4, r7}
 910              		.cfi_def_cfa_offset 8
 911              		.cfi_offset 4, -8
 912              		.cfi_offset 7, -4
 913 0002 86B0     		sub	sp, sp, #24
 914              		.cfi_def_cfa_offset 32
 915 0004 00AF     		add	r7, sp, #0
 916              		.cfi_def_cfa_register 7
 917 0006 07F10804 		add	r4, r7, #8
 918 000a 84E80300 		stmia	r4, {r0, r1}
 919 000e 7A60     		str	r2, [r7, #4]
 920 0010 3B60     		str	r3, [r7]
  78:.\BFS/map_addons.h ****     int i;
  79:.\BFS/map_addons.h ****     for (i = 0; i < size; i++){
 921              		.loc 2 79 0
 922 0012 0023     		movs	r3, #0
 923 0014 7B61     		str	r3, [r7, #20]
 924 0016 14E0     		b	.L33
 925              	.L36:
  80:.\BFS/map_addons.h ****         if (path[i].x == p.x && path[i].y == p.y) return TRUE;   
 926              		.loc 2 80 0
 927 0018 7B69     		ldr	r3, [r7, #20]
 928 001a DB00     		lsls	r3, r3, #3
 929 001c 7A68     		ldr	r2, [r7, #4]
 930 001e 1344     		add	r3, r3, r2
 931 0020 1A68     		ldr	r2, [r3]
 932 0022 BB68     		ldr	r3, [r7, #8]
 933 0024 9A42     		cmp	r2, r3
 934 0026 09D1     		bne	.L34
 935              		.loc 2 80 0 is_stmt 0 discriminator 1
 936 0028 7B69     		ldr	r3, [r7, #20]
 937 002a DB00     		lsls	r3, r3, #3
 938 002c 7A68     		ldr	r2, [r7, #4]
 939 002e 1344     		add	r3, r3, r2
 940 0030 5A68     		ldr	r2, [r3, #4]
 941 0032 FB68     		ldr	r3, [r7, #12]
 942 0034 9A42     		cmp	r2, r3
 943 0036 01D1     		bne	.L34
 944              		.loc 2 80 0 discriminator 2
 945 0038 0123     		movs	r3, #1
 946 003a 07E0     		b	.L35
 947              	.L34:
  79:.\BFS/map_addons.h ****         if (path[i].x == p.x && path[i].y == p.y) return TRUE;   
 948              		.loc 2 79 0 is_stmt 1 discriminator 2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 20


 949 003c 7B69     		ldr	r3, [r7, #20]
 950 003e 0133     		adds	r3, r3, #1
 951 0040 7B61     		str	r3, [r7, #20]
 952              	.L33:
  79:.\BFS/map_addons.h ****         if (path[i].x == p.x && path[i].y == p.y) return TRUE;   
 953              		.loc 2 79 0 is_stmt 0 discriminator 1
 954 0042 7A69     		ldr	r2, [r7, #20]
 955 0044 3B68     		ldr	r3, [r7]
 956 0046 9A42     		cmp	r2, r3
 957 0048 E6DB     		blt	.L36
  81:.\BFS/map_addons.h ****     }
  82:.\BFS/map_addons.h ****     return FALSE;
 958              		.loc 2 82 0 is_stmt 1
 959 004a 0023     		movs	r3, #0
 960              	.L35:
  83:.\BFS/map_addons.h **** }
 961              		.loc 2 83 0
 962 004c 1846     		mov	r0, r3
 963 004e 1837     		adds	r7, r7, #24
 964              		.cfi_def_cfa_offset 8
 965 0050 BD46     		mov	sp, r7
 966              		.cfi_def_cfa_register 13
 967              		@ sp needed
 968 0052 90BC     		pop	{r4, r7}
 969              		.cfi_restore 7
 970              		.cfi_restore 4
 971              		.cfi_def_cfa_offset 0
 972 0054 7047     		bx	lr
 973              		.cfi_endproc
 974              	.LFE70:
 975              		.size	isPointOnPath, .-isPointOnPath
 976 0056 00BF     		.section	.rodata
 977              		.align	2
 978              	.LC0:
 979 0000 2825642C 		.ascii	"(%d, %d)\000"
 979      20256429 
 979      00
 980 0009 000000   		.align	2
 981              	.LC1:
 982 000c 00       		.ascii	"\000"
 983              		.section	.text.printPath,"ax",%progbits
 984              		.align	2
 985              		.global	printPath
 986              		.thumb
 987              		.thumb_func
 988              		.type	printPath, %function
 989              	printPath:
 990              	.LFB71:
  84:.\BFS/map_addons.h **** 
  85:.\BFS/map_addons.h **** /* Print a path */
  86:.\BFS/map_addons.h **** void printPath(point * path){
 991              		.loc 2 86 0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 16
 994              		@ frame_needed = 1, uses_anonymous_args = 0
 995 0000 80B5     		push	{r7, lr}
 996              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 21


 997              		.cfi_offset 7, -8
 998              		.cfi_offset 14, -4
 999 0002 84B0     		sub	sp, sp, #16
 1000              		.cfi_def_cfa_offset 24
 1001 0004 00AF     		add	r7, sp, #0
 1002              		.cfi_def_cfa_register 7
 1003 0006 7860     		str	r0, [r7, #4]
  87:.\BFS/map_addons.h ****     int i;
  88:.\BFS/map_addons.h ****     for (i = 0; i < MAX_PATH_LENGTH; i++){
 1004              		.loc 2 88 0
 1005 0008 0023     		movs	r3, #0
 1006 000a FB60     		str	r3, [r7, #12]
 1007 000c 25E0     		b	.L38
 1008              	.L43:
  89:.\BFS/map_addons.h ****         if (path[i].x == EMPTY_VAL && path[i].y == EMPTY_VAL){
 1009              		.loc 2 89 0
 1010 000e FB68     		ldr	r3, [r7, #12]
 1011 0010 DB00     		lsls	r3, r3, #3
 1012 0012 7A68     		ldr	r2, [r7, #4]
 1013 0014 1344     		add	r3, r3, r2
 1014 0016 1B68     		ldr	r3, [r3]
 1015 0018 B3F1FF3F 		cmp	r3, #-1
 1016 001c 0CD1     		bne	.L39
 1017              		.loc 2 89 0 is_stmt 0 discriminator 1
 1018 001e FB68     		ldr	r3, [r7, #12]
 1019 0020 DB00     		lsls	r3, r3, #3
 1020 0022 7A68     		ldr	r2, [r7, #4]
 1021 0024 1344     		add	r3, r3, r2
 1022 0026 5B68     		ldr	r3, [r3, #4]
 1023 0028 B3F1FF3F 		cmp	r3, #-1
 1024 002c 04D1     		bne	.L39
  90:.\BFS/map_addons.h ****             if (i > 0) break;
 1025              		.loc 2 90 0 is_stmt 1
 1026 002e FB68     		ldr	r3, [r7, #12]
 1027 0030 002B     		cmp	r3, #0
 1028 0032 00DD     		ble	.L40
 1029 0034 14E0     		b	.L41
 1030              	.L40:
  91:.\BFS/map_addons.h ****             return;
 1031              		.loc 2 91 0
 1032 0036 16E0     		b	.L37
 1033              	.L39:
  92:.\BFS/map_addons.h ****         }
  93:.\BFS/map_addons.h ****         printf("(%d, %d)",path[i].x,path[i].y);
 1034              		.loc 2 93 0 discriminator 2
 1035 0038 FB68     		ldr	r3, [r7, #12]
 1036 003a DB00     		lsls	r3, r3, #3
 1037 003c 7A68     		ldr	r2, [r7, #4]
 1038 003e 1344     		add	r3, r3, r2
 1039 0040 1968     		ldr	r1, [r3]
 1040 0042 FB68     		ldr	r3, [r7, #12]
 1041 0044 DB00     		lsls	r3, r3, #3
 1042 0046 7A68     		ldr	r2, [r7, #4]
 1043 0048 1344     		add	r3, r3, r2
 1044 004a 5B68     		ldr	r3, [r3, #4]
 1045 004c 0748     		ldr	r0, .L44
 1046 004e 1A46     		mov	r2, r3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 22


 1047 0050 FFF7FEFF 		bl	printf
  88:.\BFS/map_addons.h ****         if (path[i].x == EMPTY_VAL && path[i].y == EMPTY_VAL){
 1048              		.loc 2 88 0 discriminator 2
 1049 0054 FB68     		ldr	r3, [r7, #12]
 1050 0056 0133     		adds	r3, r3, #1
 1051 0058 FB60     		str	r3, [r7, #12]
 1052              	.L38:
  88:.\BFS/map_addons.h ****         if (path[i].x == EMPTY_VAL && path[i].y == EMPTY_VAL){
 1053              		.loc 2 88 0 is_stmt 0 discriminator 1
 1054 005a FB68     		ldr	r3, [r7, #12]
 1055 005c 8B2B     		cmp	r3, #139
 1056 005e D6DD     		ble	.L43
 1057              	.L41:
  94:.\BFS/map_addons.h ****     }
  95:.\BFS/map_addons.h ****     puts("");
 1058              		.loc 2 95 0 is_stmt 1
 1059 0060 0348     		ldr	r0, .L44+4
 1060 0062 FFF7FEFF 		bl	puts
 1061              	.L37:
  96:.\BFS/map_addons.h **** }
 1062              		.loc 2 96 0
 1063 0066 1037     		adds	r7, r7, #16
 1064              		.cfi_def_cfa_offset 8
 1065 0068 BD46     		mov	sp, r7
 1066              		.cfi_def_cfa_register 13
 1067              		@ sp needed
 1068 006a 80BD     		pop	{r7, pc}
 1069              	.L45:
 1070              		.align	2
 1071              	.L44:
 1072 006c 00000000 		.word	.LC0
 1073 0070 0C000000 		.word	.LC1
 1074              		.cfi_endproc
 1075              	.LFE71:
 1076              		.size	printPath, .-printPath
 1077              		.section	.rodata
 1078 000d 000000   		.align	2
 1079              	.LC2:
 1080 0010 436F6D6D 		.ascii	"Commands: (\000"
 1080      616E6473 
 1080      3A202800 
 1081              		.align	2
 1082              	.LC3:
 1083 001c 256400   		.ascii	"%d\000"
 1084 001f 00       		.align	2
 1085              	.LC4:
 1086 0020 2900     		.ascii	")\000"
 1087              		.section	.text.printCommands,"ax",%progbits
 1088              		.align	2
 1089              		.global	printCommands
 1090              		.thumb
 1091              		.thumb_func
 1092              		.type	printCommands, %function
 1093              	printCommands:
 1094              	.LFB72:
  97:.\BFS/map_addons.h **** 
  98:.\BFS/map_addons.h **** /* Prints the commands */
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 23


  99:.\BFS/map_addons.h **** void printCommands(int *commands){
 1095              		.loc 2 99 0
 1096              		.cfi_startproc
 1097              		@ args = 0, pretend = 0, frame = 16
 1098              		@ frame_needed = 1, uses_anonymous_args = 0
 1099 0000 80B5     		push	{r7, lr}
 1100              		.cfi_def_cfa_offset 8
 1101              		.cfi_offset 7, -8
 1102              		.cfi_offset 14, -4
 1103 0002 84B0     		sub	sp, sp, #16
 1104              		.cfi_def_cfa_offset 24
 1105 0004 00AF     		add	r7, sp, #0
 1106              		.cfi_def_cfa_register 7
 1107 0006 7860     		str	r0, [r7, #4]
 100:.\BFS/map_addons.h ****     fputs("Commands: (",stdout);
 1108              		.loc 2 100 0
 1109 0008 254B     		ldr	r3, .L59
 1110 000a 1B68     		ldr	r3, [r3]
 1111 000c 9B68     		ldr	r3, [r3, #8]
 1112 000e 2548     		ldr	r0, .L59+4
 1113 0010 0121     		movs	r1, #1
 1114 0012 0B22     		movs	r2, #11
 1115 0014 FFF7FEFF 		bl	fwrite
 101:.\BFS/map_addons.h ****     int i;
 102:.\BFS/map_addons.h ****     for (i = 0; i < MAX_COMMAND_LENGTH; i++){
 1116              		.loc 2 102 0
 1117 0018 0023     		movs	r3, #0
 1118 001a FB60     		str	r3, [r7, #12]
 1119 001c 36E0     		b	.L47
 1120              	.L57:
 103:.\BFS/map_addons.h ****         if (commands[i] == EMPTY_COMMAND){
 1121              		.loc 2 103 0
 1122 001e FB68     		ldr	r3, [r7, #12]
 1123 0020 9B00     		lsls	r3, r3, #2
 1124 0022 7A68     		ldr	r2, [r7, #4]
 1125 0024 1344     		add	r3, r3, r2
 1126 0026 1B68     		ldr	r3, [r3]
 1127 0028 002B     		cmp	r3, #0
 1128 002a 04D1     		bne	.L48
 104:.\BFS/map_addons.h ****             if (i > 0) break;
 1129              		.loc 2 104 0
 1130 002c FB68     		ldr	r3, [r7, #12]
 1131 002e 002B     		cmp	r3, #0
 1132 0030 00DD     		ble	.L49
 1133 0032 2EE0     		b	.L50
 1134              	.L49:
 105:.\BFS/map_addons.h ****             return;
 1135              		.loc 2 105 0
 1136 0034 30E0     		b	.L46
 1137              	.L48:
 106:.\BFS/map_addons.h ****         }
 107:.\BFS/map_addons.h ****         switch(commands[i]){
 1138              		.loc 2 107 0
 1139 0036 FB68     		ldr	r3, [r7, #12]
 1140 0038 9B00     		lsls	r3, r3, #2
 1141 003a 7A68     		ldr	r2, [r7, #4]
 1142 003c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 24


 1143 003e 1B68     		ldr	r3, [r3]
 1144 0040 13F1020F 		cmn	r3, #2
 1145 0044 06D0     		beq	.L53
 1146 0046 B3F1FF3F 		cmp	r3, #-1
 1147 004a 07D1     		bne	.L58
 108:.\BFS/map_addons.h ****             case LEFT_TURN:
 109:.\BFS/map_addons.h ****                 printf("L");
 1148              		.loc 2 109 0
 1149 004c 4C20     		movs	r0, #76
 1150 004e FFF7FEFF 		bl	putchar
 110:.\BFS/map_addons.h ****                 break;
 1151              		.loc 2 110 0
 1152 0052 0DE0     		b	.L55
 1153              	.L53:
 111:.\BFS/map_addons.h ****             case RIGHT_TURN:
 112:.\BFS/map_addons.h ****                 printf("R");
 1154              		.loc 2 112 0
 1155 0054 5220     		movs	r0, #82
 1156 0056 FFF7FEFF 		bl	putchar
 113:.\BFS/map_addons.h ****                 break;
 1157              		.loc 2 113 0
 1158 005a 09E0     		b	.L55
 1159              	.L58:
 114:.\BFS/map_addons.h ****             default:
 115:.\BFS/map_addons.h ****                 printf("%d", commands[i]);
 1160              		.loc 2 115 0
 1161 005c FB68     		ldr	r3, [r7, #12]
 1162 005e 9B00     		lsls	r3, r3, #2
 1163 0060 7A68     		ldr	r2, [r7, #4]
 1164 0062 1344     		add	r3, r3, r2
 1165 0064 1B68     		ldr	r3, [r3]
 1166 0066 1048     		ldr	r0, .L59+8
 1167 0068 1946     		mov	r1, r3
 1168 006a FFF7FEFF 		bl	printf
 116:.\BFS/map_addons.h ****                 break;
 1169              		.loc 2 116 0
 1170 006e 00BF     		nop
 1171              	.L55:
 117:.\BFS/map_addons.h ****         };
 118:.\BFS/map_addons.h ****         if (commands[i+1] != EMPTY_COMMAND) printf(",");
 1172              		.loc 2 118 0
 1173 0070 FB68     		ldr	r3, [r7, #12]
 1174 0072 0133     		adds	r3, r3, #1
 1175 0074 9B00     		lsls	r3, r3, #2
 1176 0076 7A68     		ldr	r2, [r7, #4]
 1177 0078 1344     		add	r3, r3, r2
 1178 007a 1B68     		ldr	r3, [r3]
 1179 007c 002B     		cmp	r3, #0
 1180 007e 02D0     		beq	.L56
 1181              		.loc 2 118 0 is_stmt 0 discriminator 1
 1182 0080 2C20     		movs	r0, #44
 1183 0082 FFF7FEFF 		bl	putchar
 1184              	.L56:
 102:.\BFS/map_addons.h ****         if (commands[i] == EMPTY_COMMAND){
 1185              		.loc 2 102 0 is_stmt 1 discriminator 2
 1186 0086 FB68     		ldr	r3, [r7, #12]
 1187 0088 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 25


 1188 008a FB60     		str	r3, [r7, #12]
 1189              	.L47:
 102:.\BFS/map_addons.h ****         if (commands[i] == EMPTY_COMMAND){
 1190              		.loc 2 102 0 is_stmt 0 discriminator 1
 1191 008c FB68     		ldr	r3, [r7, #12]
 1192 008e 312B     		cmp	r3, #49
 1193 0090 C5DD     		ble	.L57
 1194              	.L50:
 119:.\BFS/map_addons.h ****     }
 120:.\BFS/map_addons.h ****     puts(")");
 1195              		.loc 2 120 0 is_stmt 1
 1196 0092 0648     		ldr	r0, .L59+12
 1197 0094 FFF7FEFF 		bl	puts
 1198              	.L46:
 121:.\BFS/map_addons.h **** }
 1199              		.loc 2 121 0
 1200 0098 1037     		adds	r7, r7, #16
 1201              		.cfi_def_cfa_offset 8
 1202 009a BD46     		mov	sp, r7
 1203              		.cfi_def_cfa_register 13
 1204              		@ sp needed
 1205 009c 80BD     		pop	{r7, pc}
 1206              	.L60:
 1207 009e 00BF     		.align	2
 1208              	.L59:
 1209 00a0 00000000 		.word	_impure_ptr
 1210 00a4 10000000 		.word	.LC2
 1211 00a8 1C000000 		.word	.LC3
 1212 00ac 20000000 		.word	.LC4
 1213              		.cfi_endproc
 1214              	.LFE72:
 1215              		.size	printCommands, .-printCommands
 1216              		.section	.rodata
 1217 0022 0000     		.align	2
 1218              	.LC5:
 1219 0024 2F2F2F2F 		.ascii	"////////////////BEGIN MAP////////////////\000"
 1219      2F2F2F2F 
 1219      2F2F2F2F 
 1219      2F2F2F2F 
 1219      42454749 
 1220 004e 0000     		.align	2
 1221              	.LC6:
 1222 0050 25642000 		.ascii	"%d \000"
 1223              		.align	2
 1224              	.LC7:
 1225 0054 1B5B303B 		.ascii	"\033[0;31m%d\033[0m \000"
 1225      33316D25 
 1225      641B5B30 
 1225      6D2000
 1226 0063 00       		.align	2
 1227              	.LC8:
 1228 0064 1B5B303B 		.ascii	"\033[0;34m%d\033[0m \000"
 1228      33346D25 
 1228      641B5B30 
 1228      6D2000
 1229 0073 00       		.align	2
 1230              	.LC9:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 26


 1231 0074 1B5B313B 		.ascii	"\033[1;32m%d\033[0m \000"
 1231      33326D25 
 1231      641B5B30 
 1231      6D2000
 1232 0083 00       		.align	2
 1233              	.LC10:
 1234 0084 1B5B313B 		.ascii	"\033[1;33m%d\033[0m \000"
 1234      33336D25 
 1234      641B5B30 
 1234      6D2000
 1235 0093 00       		.align	2
 1236              	.LC11:
 1237 0094 2F2F2F2F 		.ascii	"/////////////////END MAP/////////////////\000"
 1237      2F2F2F2F 
 1237      2F2F2F2F 
 1237      2F2F2F2F 
 1237      2F454E44 
 1238              		.section	.text.printMap,"ax",%progbits
 1239              		.align	2
 1240              		.global	printMap
 1241              		.thumb
 1242              		.thumb_func
 1243              		.type	printMap, %function
 1244              	printMap:
 1245              	.LFB73:
 122:.\BFS/map_addons.h **** 
 123:.\BFS/map_addons.h **** /* Now in colour! :O */
 124:.\BFS/map_addons.h **** void printMap(int map[MAP_ROW][MAP_COL]){
 1246              		.loc 2 124 0
 1247              		.cfi_startproc
 1248              		@ args = 0, pretend = 0, frame = 16
 1249              		@ frame_needed = 1, uses_anonymous_args = 0
 1250 0000 80B5     		push	{r7, lr}
 1251              		.cfi_def_cfa_offset 8
 1252              		.cfi_offset 7, -8
 1253              		.cfi_offset 14, -4
 1254 0002 84B0     		sub	sp, sp, #16
 1255              		.cfi_def_cfa_offset 24
 1256 0004 00AF     		add	r7, sp, #0
 1257              		.cfi_def_cfa_register 7
 1258 0006 7860     		str	r0, [r7, #4]
 125:.\BFS/map_addons.h **** 
 126:.\BFS/map_addons.h ****     printf("////////////////BEGIN MAP////////////////\n");
 1259              		.loc 2 126 0
 1260 0008 3E48     		ldr	r0, .L75
 1261 000a FFF7FEFF 		bl	puts
 127:.\BFS/map_addons.h **** 
 128:.\BFS/map_addons.h ****     int m;
 129:.\BFS/map_addons.h ****     int n;
 130:.\BFS/map_addons.h ****     for (m = 0; m < MAP_ROW; m++){
 1262              		.loc 2 130 0
 1263 000e 0023     		movs	r3, #0
 1264 0010 FB60     		str	r3, [r7, #12]
 1265 0012 6EE0     		b	.L62
 1266              	.L73:
 131:.\BFS/map_addons.h ****         for (n=0; n < MAP_COL; n++){
 1267              		.loc 2 131 0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 27


 1268 0014 0023     		movs	r3, #0
 1269 0016 BB60     		str	r3, [r7, #8]
 1270 0018 62E0     		b	.L63
 1271              	.L72:
 132:.\BFS/map_addons.h ****             switch (map[m][n]){
 1272              		.loc 2 132 0
 1273 001a FB68     		ldr	r3, [r7, #12]
 1274 001c 4C22     		movs	r2, #76
 1275 001e 02FB03F3 		mul	r3, r2, r3
 1276 0022 7A68     		ldr	r2, [r7, #4]
 1277 0024 1344     		add	r3, r3, r2
 1278 0026 BA68     		ldr	r2, [r7, #8]
 1279 0028 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1280 002c 042B     		cmp	r3, #4
 1281 002e 53D8     		bhi	.L74
 1282 0030 01A2     		adr	r2, .L66
 1283 0032 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1284 0036 00BF     		.p2align 2
 1285              	.L66:
 1286 0038 4D000000 		.word	.L65+1
 1287 003c 69000000 		.word	.L67+1
 1288 0040 85000000 		.word	.L68+1
 1289 0044 A1000000 		.word	.L69+1
 1290 0048 BD000000 		.word	.L70+1
 1291              		.p2align 1
 1292              	.L65:
 133:.\BFS/map_addons.h ****                 case UNVISITED:
 134:.\BFS/map_addons.h ****                     printf("%d ", map[m][n]);
 1293              		.loc 2 134 0
 1294 004c FB68     		ldr	r3, [r7, #12]
 1295 004e 4C22     		movs	r2, #76
 1296 0050 02FB03F3 		mul	r3, r2, r3
 1297 0054 7A68     		ldr	r2, [r7, #4]
 1298 0056 1344     		add	r3, r3, r2
 1299 0058 BA68     		ldr	r2, [r7, #8]
 1300 005a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1301 005e 2A48     		ldr	r0, .L75+4
 1302 0060 1946     		mov	r1, r3
 1303 0062 FFF7FEFF 		bl	printf
 135:.\BFS/map_addons.h ****                     break;
 1304              		.loc 2 135 0
 1305 0066 38E0     		b	.L71
 1306              	.L67:
 136:.\BFS/map_addons.h ****                 case WALL:
 137:.\BFS/map_addons.h ****                     // Prints red
 138:.\BFS/map_addons.h ****                     printf(RED "%d" DEFAULT_COLOUR " ", map[m][n]);
 1307              		.loc 2 138 0
 1308 0068 FB68     		ldr	r3, [r7, #12]
 1309 006a 4C22     		movs	r2, #76
 1310 006c 02FB03F3 		mul	r3, r2, r3
 1311 0070 7A68     		ldr	r2, [r7, #4]
 1312 0072 1344     		add	r3, r3, r2
 1313 0074 BA68     		ldr	r2, [r7, #8]
 1314 0076 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1315 007a 2448     		ldr	r0, .L75+8
 1316 007c 1946     		mov	r1, r3
 1317 007e FFF7FEFF 		bl	printf
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 28


 139:.\BFS/map_addons.h ****                     break;
 1318              		.loc 2 139 0
 1319 0082 2AE0     		b	.L71
 1320              	.L68:
 140:.\BFS/map_addons.h ****                 case VISITED:
 141:.\BFS/map_addons.h ****                     // Prints blue
 142:.\BFS/map_addons.h ****                     printf(BLUE "%d" DEFAULT_COLOUR " ", map[m][n]);
 1321              		.loc 2 142 0
 1322 0084 FB68     		ldr	r3, [r7, #12]
 1323 0086 4C22     		movs	r2, #76
 1324 0088 02FB03F3 		mul	r3, r2, r3
 1325 008c 7A68     		ldr	r2, [r7, #4]
 1326 008e 1344     		add	r3, r3, r2
 1327 0090 BA68     		ldr	r2, [r7, #8]
 1328 0092 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1329 0096 1E48     		ldr	r0, .L75+12
 1330 0098 1946     		mov	r1, r3
 1331 009a FFF7FEFF 		bl	printf
 143:.\BFS/map_addons.h ****                     break;
 1332              		.loc 2 143 0
 1333 009e 1CE0     		b	.L71
 1334              	.L69:
 144:.\BFS/map_addons.h ****                 case FINAL_PATH:
 145:.\BFS/map_addons.h ****                     // Prints bold green
 146:.\BFS/map_addons.h ****                     printf(BOLD_GREEN "%d" DEFAULT_COLOUR " ", map[m][n]);
 1335              		.loc 2 146 0
 1336 00a0 FB68     		ldr	r3, [r7, #12]
 1337 00a2 4C22     		movs	r2, #76
 1338 00a4 02FB03F3 		mul	r3, r2, r3
 1339 00a8 7A68     		ldr	r2, [r7, #4]
 1340 00aa 1344     		add	r3, r3, r2
 1341 00ac BA68     		ldr	r2, [r7, #8]
 1342 00ae 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1343 00b2 1848     		ldr	r0, .L75+16
 1344 00b4 1946     		mov	r1, r3
 1345 00b6 FFF7FEFF 		bl	printf
 147:.\BFS/map_addons.h ****                     break;
 1346              		.loc 2 147 0
 1347 00ba 0EE0     		b	.L71
 1348              	.L70:
 148:.\BFS/map_addons.h ****                 case START_OR_END:
 149:.\BFS/map_addons.h ****                     // Prints bold yellow
 150:.\BFS/map_addons.h ****                     printf(BOLD_YELLOW "%d" DEFAULT_COLOUR " ", map[m][n]);
 1349              		.loc 2 150 0
 1350 00bc FB68     		ldr	r3, [r7, #12]
 1351 00be 4C22     		movs	r2, #76
 1352 00c0 02FB03F3 		mul	r3, r2, r3
 1353 00c4 7A68     		ldr	r2, [r7, #4]
 1354 00c6 1344     		add	r3, r3, r2
 1355 00c8 BA68     		ldr	r2, [r7, #8]
 1356 00ca 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1357 00ce 1248     		ldr	r0, .L75+20
 1358 00d0 1946     		mov	r1, r3
 1359 00d2 FFF7FEFF 		bl	printf
 151:.\BFS/map_addons.h ****                     break;
 1360              		.loc 2 151 0
 1361 00d6 00E0     		b	.L71
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 29


 1362              	.L74:
 152:.\BFS/map_addons.h ****                 default:
 153:.\BFS/map_addons.h ****                     break;
 1363              		.loc 2 153 0
 1364 00d8 00BF     		nop
 1365              	.L71:
 131:.\BFS/map_addons.h ****             switch (map[m][n]){
 1366              		.loc 2 131 0 discriminator 2
 1367 00da BB68     		ldr	r3, [r7, #8]
 1368 00dc 0133     		adds	r3, r3, #1
 1369 00de BB60     		str	r3, [r7, #8]
 1370              	.L63:
 131:.\BFS/map_addons.h ****             switch (map[m][n]){
 1371              		.loc 2 131 0 is_stmt 0 discriminator 1
 1372 00e0 BB68     		ldr	r3, [r7, #8]
 1373 00e2 122B     		cmp	r3, #18
 1374 00e4 99DD     		ble	.L72
 154:.\BFS/map_addons.h ****             }
 155:.\BFS/map_addons.h ****         }
 156:.\BFS/map_addons.h ****         printf("\n");
 1375              		.loc 2 156 0 is_stmt 1 discriminator 2
 1376 00e6 0A20     		movs	r0, #10
 1377 00e8 FFF7FEFF 		bl	putchar
 130:.\BFS/map_addons.h ****         for (n=0; n < MAP_COL; n++){
 1378              		.loc 2 130 0 discriminator 2
 1379 00ec FB68     		ldr	r3, [r7, #12]
 1380 00ee 0133     		adds	r3, r3, #1
 1381 00f0 FB60     		str	r3, [r7, #12]
 1382              	.L62:
 130:.\BFS/map_addons.h ****         for (n=0; n < MAP_COL; n++){
 1383              		.loc 2 130 0 is_stmt 0 discriminator 1
 1384 00f2 FB68     		ldr	r3, [r7, #12]
 1385 00f4 0E2B     		cmp	r3, #14
 1386 00f6 8DDD     		ble	.L73
 157:.\BFS/map_addons.h ****     }
 158:.\BFS/map_addons.h **** 
 159:.\BFS/map_addons.h ****     printf("/////////////////END MAP/////////////////\n");
 1387              		.loc 2 159 0 is_stmt 1
 1388 00f8 0848     		ldr	r0, .L75+24
 1389 00fa FFF7FEFF 		bl	puts
 160:.\BFS/map_addons.h **** 
 161:.\BFS/map_addons.h **** }
 1390              		.loc 2 161 0
 1391 00fe 1037     		adds	r7, r7, #16
 1392              		.cfi_def_cfa_offset 8
 1393 0100 BD46     		mov	sp, r7
 1394              		.cfi_def_cfa_register 13
 1395              		@ sp needed
 1396 0102 80BD     		pop	{r7, pc}
 1397              	.L76:
 1398              		.align	2
 1399              	.L75:
 1400 0104 24000000 		.word	.LC5
 1401 0108 50000000 		.word	.LC6
 1402 010c 54000000 		.word	.LC7
 1403 0110 64000000 		.word	.LC8
 1404 0114 74000000 		.word	.LC9
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 30


 1405 0118 84000000 		.word	.LC10
 1406 011c 94000000 		.word	.LC11
 1407              		.cfi_endproc
 1408              	.LFE73:
 1409              		.size	printMap, .-printMap
 1410              		.section	.text.updateMapWithPath,"ax",%progbits
 1411              		.align	2
 1412              		.global	updateMapWithPath
 1413              		.thumb
 1414              		.thumb_func
 1415              		.type	updateMapWithPath, %function
 1416              	updateMapWithPath:
 1417              	.LFB74:
 162:.\BFS/map_addons.h **** 
 163:.\BFS/map_addons.h **** /* Modify the map with the final path */
 164:.\BFS/map_addons.h **** void updateMapWithPath(int map[MAP_ROW][MAP_COL], point * path, int path_length){
 1418              		.loc 2 164 0
 1419              		.cfi_startproc
 1420              		@ args = 0, pretend = 0, frame = 24
 1421              		@ frame_needed = 1, uses_anonymous_args = 0
 1422              		@ link register save eliminated.
 1423 0000 80B4     		push	{r7}
 1424              		.cfi_def_cfa_offset 4
 1425              		.cfi_offset 7, -4
 1426 0002 87B0     		sub	sp, sp, #28
 1427              		.cfi_def_cfa_offset 32
 1428 0004 00AF     		add	r7, sp, #0
 1429              		.cfi_def_cfa_register 7
 1430 0006 F860     		str	r0, [r7, #12]
 1431 0008 B960     		str	r1, [r7, #8]
 1432 000a 7A60     		str	r2, [r7, #4]
 165:.\BFS/map_addons.h **** 
 166:.\BFS/map_addons.h ****     // Set starting position
 167:.\BFS/map_addons.h ****     map[path[0].y][path[0].x] = 4;
 1433              		.loc 2 167 0
 1434 000c BB68     		ldr	r3, [r7, #8]
 1435 000e 5B68     		ldr	r3, [r3, #4]
 1436 0010 1A46     		mov	r2, r3
 1437 0012 4C23     		movs	r3, #76
 1438 0014 03FB02F3 		mul	r3, r3, r2
 1439 0018 FA68     		ldr	r2, [r7, #12]
 1440 001a 1344     		add	r3, r3, r2
 1441 001c BA68     		ldr	r2, [r7, #8]
 1442 001e 1268     		ldr	r2, [r2]
 1443 0020 0421     		movs	r1, #4
 1444 0022 43F82210 		str	r1, [r3, r2, lsl #2]
 168:.\BFS/map_addons.h **** 
 169:.\BFS/map_addons.h ****     // Fill up path
 170:.\BFS/map_addons.h ****     int i;
 171:.\BFS/map_addons.h ****     for (i = 1; i < path_length-1; i++){
 1445              		.loc 2 171 0
 1446 0026 0123     		movs	r3, #1
 1447 0028 7B61     		str	r3, [r7, #20]
 1448 002a 15E0     		b	.L78
 1449              	.L79:
 172:.\BFS/map_addons.h ****         map[path[i].y][path[i].x] = 3;
 1450              		.loc 2 172 0 discriminator 3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 31


 1451 002c 7B69     		ldr	r3, [r7, #20]
 1452 002e DB00     		lsls	r3, r3, #3
 1453 0030 BA68     		ldr	r2, [r7, #8]
 1454 0032 1344     		add	r3, r3, r2
 1455 0034 5B68     		ldr	r3, [r3, #4]
 1456 0036 1A46     		mov	r2, r3
 1457 0038 4C23     		movs	r3, #76
 1458 003a 03FB02F3 		mul	r3, r3, r2
 1459 003e FA68     		ldr	r2, [r7, #12]
 1460 0040 1344     		add	r3, r3, r2
 1461 0042 7A69     		ldr	r2, [r7, #20]
 1462 0044 D200     		lsls	r2, r2, #3
 1463 0046 B968     		ldr	r1, [r7, #8]
 1464 0048 0A44     		add	r2, r2, r1
 1465 004a 1268     		ldr	r2, [r2]
 1466 004c 0321     		movs	r1, #3
 1467 004e 43F82210 		str	r1, [r3, r2, lsl #2]
 171:.\BFS/map_addons.h ****         map[path[i].y][path[i].x] = 3;
 1468              		.loc 2 171 0 discriminator 3
 1469 0052 7B69     		ldr	r3, [r7, #20]
 1470 0054 0133     		adds	r3, r3, #1
 1471 0056 7B61     		str	r3, [r7, #20]
 1472              	.L78:
 171:.\BFS/map_addons.h ****         map[path[i].y][path[i].x] = 3;
 1473              		.loc 2 171 0 is_stmt 0 discriminator 1
 1474 0058 7B68     		ldr	r3, [r7, #4]
 1475 005a 5A1E     		subs	r2, r3, #1
 1476 005c 7B69     		ldr	r3, [r7, #20]
 1477 005e 9A42     		cmp	r2, r3
 1478 0060 E4DC     		bgt	.L79
 173:.\BFS/map_addons.h ****     }
 174:.\BFS/map_addons.h **** 
 175:.\BFS/map_addons.h ****     // Set ending position
 176:.\BFS/map_addons.h ****     map[path[path_length-1].y][path[path_length-1].x] = 4;
 1479              		.loc 2 176 0 is_stmt 1
 1480 0062 7B68     		ldr	r3, [r7, #4]
 1481 0064 03F10053 		add	r3, r3, #536870912
 1482 0068 013B     		subs	r3, r3, #1
 1483 006a DB00     		lsls	r3, r3, #3
 1484 006c BA68     		ldr	r2, [r7, #8]
 1485 006e 1344     		add	r3, r3, r2
 1486 0070 5B68     		ldr	r3, [r3, #4]
 1487 0072 1A46     		mov	r2, r3
 1488 0074 4C23     		movs	r3, #76
 1489 0076 03FB02F3 		mul	r3, r3, r2
 1490 007a FA68     		ldr	r2, [r7, #12]
 1491 007c 1A44     		add	r2, r2, r3
 1492 007e 7B68     		ldr	r3, [r7, #4]
 1493 0080 03F10053 		add	r3, r3, #536870912
 1494 0084 013B     		subs	r3, r3, #1
 1495 0086 DB00     		lsls	r3, r3, #3
 1496 0088 B968     		ldr	r1, [r7, #8]
 1497 008a 0B44     		add	r3, r3, r1
 1498 008c 1B68     		ldr	r3, [r3]
 1499 008e 0421     		movs	r1, #4
 1500 0090 42F82310 		str	r1, [r2, r3, lsl #2]
 177:.\BFS/map_addons.h **** }
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 32


 1501              		.loc 2 177 0
 1502 0094 1C37     		adds	r7, r7, #28
 1503              		.cfi_def_cfa_offset 4
 1504 0096 BD46     		mov	sp, r7
 1505              		.cfi_def_cfa_register 13
 1506              		@ sp needed
 1507 0098 5DF8047B 		ldr	r7, [sp], #4
 1508              		.cfi_restore 7
 1509              		.cfi_def_cfa_offset 0
 1510 009c 7047     		bx	lr
 1511              		.cfi_endproc
 1512              	.LFE74:
 1513              		.size	updateMapWithPath, .-updateMapWithPath
 1514 009e 00BF     		.section	.text.getMapValAtPoint,"ax",%progbits
 1515              		.align	2
 1516              		.global	getMapValAtPoint
 1517              		.thumb
 1518              		.thumb_func
 1519              		.type	getMapValAtPoint, %function
 1520              	getMapValAtPoint:
 1521              	.LFB75:
 178:.\BFS/map_addons.h **** 
 179:.\BFS/map_addons.h **** /* Retrieve the vertex at a specific point on the map */
 180:.\BFS/map_addons.h **** int getMapValAtPoint(point p){
 1522              		.loc 2 180 0
 1523              		.cfi_startproc
 1524              		@ args = 0, pretend = 0, frame = 8
 1525              		@ frame_needed = 1, uses_anonymous_args = 0
 1526              		@ link register save eliminated.
 1527 0000 80B4     		push	{r7}
 1528              		.cfi_def_cfa_offset 4
 1529              		.cfi_offset 7, -4
 1530 0002 83B0     		sub	sp, sp, #12
 1531              		.cfi_def_cfa_offset 16
 1532 0004 00AF     		add	r7, sp, #0
 1533              		.cfi_def_cfa_register 7
 1534 0006 3B46     		mov	r3, r7
 1535 0008 83E80300 		stmia	r3, {r0, r1}
 181:.\BFS/map_addons.h ****     if (p.x < 0 || p.x >= MAP_COL) return EMPTY_VAL;
 1536              		.loc 2 181 0
 1537 000c 3B68     		ldr	r3, [r7]
 1538 000e 002B     		cmp	r3, #0
 1539 0010 02DB     		blt	.L81
 1540              		.loc 2 181 0 is_stmt 0 discriminator 2
 1541 0012 3B68     		ldr	r3, [r7]
 1542 0014 122B     		cmp	r3, #18
 1543 0016 02DD     		ble	.L82
 1544              	.L81:
 1545              		.loc 2 181 0 discriminator 3
 1546 0018 4FF0FF33 		mov	r3, #-1
 1547 001c 13E0     		b	.L83
 1548              	.L82:
 182:.\BFS/map_addons.h ****     if (p.y < 0 || p.y >= MAP_ROW) return EMPTY_VAL;
 1549              		.loc 2 182 0 is_stmt 1
 1550 001e 7B68     		ldr	r3, [r7, #4]
 1551 0020 002B     		cmp	r3, #0
 1552 0022 02DB     		blt	.L84
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 33


 1553              		.loc 2 182 0 is_stmt 0 discriminator 2
 1554 0024 7B68     		ldr	r3, [r7, #4]
 1555 0026 0E2B     		cmp	r3, #14
 1556 0028 02DD     		ble	.L85
 1557              	.L84:
 1558              		.loc 2 182 0 discriminator 3
 1559 002a 4FF0FF33 		mov	r3, #-1
 1560 002e 0AE0     		b	.L83
 1561              	.L85:
 183:.\BFS/map_addons.h ****     return map[p.y][p.x];
 1562              		.loc 2 183 0 is_stmt 1
 1563 0030 7A68     		ldr	r2, [r7, #4]
 1564 0032 3968     		ldr	r1, [r7]
 1565 0034 0748     		ldr	r0, .L86
 1566 0036 1346     		mov	r3, r2
 1567 0038 DB00     		lsls	r3, r3, #3
 1568 003a 1344     		add	r3, r3, r2
 1569 003c 5B00     		lsls	r3, r3, #1
 1570 003e 1344     		add	r3, r3, r2
 1571 0040 0B44     		add	r3, r3, r1
 1572 0042 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1573              	.L83:
 184:.\BFS/map_addons.h **** }
 1574              		.loc 2 184 0
 1575 0046 1846     		mov	r0, r3
 1576 0048 0C37     		adds	r7, r7, #12
 1577              		.cfi_def_cfa_offset 4
 1578 004a BD46     		mov	sp, r7
 1579              		.cfi_def_cfa_register 13
 1580              		@ sp needed
 1581 004c 5DF8047B 		ldr	r7, [sp], #4
 1582              		.cfi_restore 7
 1583              		.cfi_def_cfa_offset 0
 1584 0050 7047     		bx	lr
 1585              	.L87:
 1586 0052 00BF     		.align	2
 1587              	.L86:
 1588 0054 00000000 		.word	map
 1589              		.cfi_endproc
 1590              	.LFE75:
 1591              		.size	getMapValAtPoint, .-getMapValAtPoint
 1592              		.section	.text.markPointAsVisited,"ax",%progbits
 1593              		.align	2
 1594              		.global	markPointAsVisited
 1595              		.thumb
 1596              		.thumb_func
 1597              		.type	markPointAsVisited, %function
 1598              	markPointAsVisited:
 1599              	.LFB76:
 185:.\BFS/map_addons.h **** 
 186:.\BFS/map_addons.h **** /* Mark a point on the map as visited */
 187:.\BFS/map_addons.h **** void markPointAsVisited(point p){ map[p.y][p.x] = VISITED; }
 1600              		.loc 2 187 0
 1601              		.cfi_startproc
 1602              		@ args = 0, pretend = 0, frame = 8
 1603              		@ frame_needed = 1, uses_anonymous_args = 0
 1604              		@ link register save eliminated.
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 34


 1605 0000 80B4     		push	{r7}
 1606              		.cfi_def_cfa_offset 4
 1607              		.cfi_offset 7, -4
 1608 0002 83B0     		sub	sp, sp, #12
 1609              		.cfi_def_cfa_offset 16
 1610 0004 00AF     		add	r7, sp, #0
 1611              		.cfi_def_cfa_register 7
 1612 0006 3B46     		mov	r3, r7
 1613 0008 83E80300 		stmia	r3, {r0, r1}
 1614              		.loc 2 187 0
 1615 000c 7A68     		ldr	r2, [r7, #4]
 1616 000e 3968     		ldr	r1, [r7]
 1617 0010 0748     		ldr	r0, .L89
 1618 0012 1346     		mov	r3, r2
 1619 0014 DB00     		lsls	r3, r3, #3
 1620 0016 1344     		add	r3, r3, r2
 1621 0018 5B00     		lsls	r3, r3, #1
 1622 001a 1344     		add	r3, r3, r2
 1623 001c 0B44     		add	r3, r3, r1
 1624 001e 0222     		movs	r2, #2
 1625 0020 40F82320 		str	r2, [r0, r3, lsl #2]
 1626 0024 0C37     		adds	r7, r7, #12
 1627              		.cfi_def_cfa_offset 4
 1628 0026 BD46     		mov	sp, r7
 1629              		.cfi_def_cfa_register 13
 1630              		@ sp needed
 1631 0028 5DF8047B 		ldr	r7, [sp], #4
 1632              		.cfi_restore 7
 1633              		.cfi_def_cfa_offset 0
 1634 002c 7047     		bx	lr
 1635              	.L90:
 1636 002e 00BF     		.align	2
 1637              	.L89:
 1638 0030 00000000 		.word	map
 1639              		.cfi_endproc
 1640              	.LFE76:
 1641              		.size	markPointAsVisited, .-markPointAsVisited
 1642              		.section	.text.convertCoordinatesToCommands,"ax",%progbits
 1643              		.align	2
 1644              		.global	convertCoordinatesToCommands
 1645              		.thumb
 1646              		.thumb_func
 1647              		.type	convertCoordinatesToCommands, %function
 1648              	convertCoordinatesToCommands:
 1649              	.LFB77:
 188:.\BFS/map_addons.h **** 
 189:.\BFS/map_addons.h **** /* Interpret coordinates of the final path and convert to commands for robot */
 190:.\BFS/map_addons.h **** void convertCoordinatesToCommands(point *concurrent_path, int *commands){
 1650              		.loc 2 190 0
 1651              		.cfi_startproc
 1652              		@ args = 0, pretend = 0, frame = 56
 1653              		@ frame_needed = 1, uses_anonymous_args = 0
 1654 0000 80B5     		push	{r7, lr}
 1655              		.cfi_def_cfa_offset 8
 1656              		.cfi_offset 7, -8
 1657              		.cfi_offset 14, -4
 1658 0002 8EB0     		sub	sp, sp, #56
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 35


 1659              		.cfi_def_cfa_offset 64
 1660 0004 00AF     		add	r7, sp, #0
 1661              		.cfi_def_cfa_register 7
 1662 0006 7860     		str	r0, [r7, #4]
 1663 0008 3960     		str	r1, [r7]
 191:.\BFS/map_addons.h **** 
 192:.\BFS/map_addons.h ****     int straight_count = -1;
 1664              		.loc 2 192 0
 1665 000a 4FF0FF33 		mov	r3, #-1
 1666 000e 7B63     		str	r3, [r7, #52]
 193:.\BFS/map_addons.h ****     point current, next;
 194:.\BFS/map_addons.h ****     int current_orientation = START_FACING;
 1667              		.loc 2 194 0
 1668 0010 0223     		movs	r3, #2
 1669 0012 3B63     		str	r3, [r7, #48]
 195:.\BFS/map_addons.h ****     int next_orientation = CMD_NULL;
 1670              		.loc 2 195 0
 1671 0014 4FF0FF33 		mov	r3, #-1
 1672 0018 FB62     		str	r3, [r7, #44]
 196:.\BFS/map_addons.h **** 
 197:.\BFS/map_addons.h ****     int cmd_length = 0;
 1673              		.loc 2 197 0
 1674 001a 0023     		movs	r3, #0
 1675 001c BB62     		str	r3, [r7, #40]
 198:.\BFS/map_addons.h ****     int path_length = len(concurrent_path);
 1676              		.loc 2 198 0
 1677 001e 7868     		ldr	r0, [r7, #4]
 1678 0020 FFF7FEFF 		bl	len
 1679 0024 3862     		str	r0, [r7, #32]
 199:.\BFS/map_addons.h **** 
 200:.\BFS/map_addons.h ****     int i;
 201:.\BFS/map_addons.h ****     for (i = 0; i < path_length - 1; i++){
 1680              		.loc 2 201 0
 1681 0026 0023     		movs	r3, #0
 1682 0028 7B62     		str	r3, [r7, #36]
 1683 002a 7DE0     		b	.L92
 1684              	.L108:
 1685              	.LBB2:
 202:.\BFS/map_addons.h **** 
 203:.\BFS/map_addons.h ****         current = concurrent_path[i];
 1686              		.loc 2 203 0
 1687 002c 7B6A     		ldr	r3, [r7, #36]
 1688 002e DB00     		lsls	r3, r3, #3
 1689 0030 7A68     		ldr	r2, [r7, #4]
 1690 0032 1A44     		add	r2, r2, r3
 1691 0034 07F11403 		add	r3, r7, #20
 1692 0038 92E80300 		ldmia	r2, {r0, r1}
 1693 003c 83E80300 		stmia	r3, {r0, r1}
 204:.\BFS/map_addons.h ****         next = concurrent_path[i+1];
 1694              		.loc 2 204 0
 1695 0040 7B6A     		ldr	r3, [r7, #36]
 1696 0042 0133     		adds	r3, r3, #1
 1697 0044 DB00     		lsls	r3, r3, #3
 1698 0046 7A68     		ldr	r2, [r7, #4]
 1699 0048 1A44     		add	r2, r2, r3
 1700 004a 07F10C03 		add	r3, r7, #12
 1701 004e 92E80300 		ldmia	r2, {r0, r1}
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 36


 1702 0052 83E80300 		stmia	r3, {r0, r1}
 205:.\BFS/map_addons.h **** 
 206:.\BFS/map_addons.h ****         // Since the robot only moves one coord at a time, one of the following branches must evalu
 207:.\BFS/map_addons.h ****         if (current.x == next.x){
 1703              		.loc 2 207 0
 1704 0056 7A69     		ldr	r2, [r7, #20]
 1705 0058 FB68     		ldr	r3, [r7, #12]
 1706 005a 9A42     		cmp	r2, r3
 1707 005c 08D1     		bne	.L93
 208:.\BFS/map_addons.h ****             next_orientation = (current.y > next.y) ? CMD_UP:CMD_DOWN;
 1708              		.loc 2 208 0
 1709 005e BA69     		ldr	r2, [r7, #24]
 1710 0060 3B69     		ldr	r3, [r7, #16]
 1711 0062 9A42     		cmp	r2, r3
 1712 0064 01DD     		ble	.L94
 1713              		.loc 2 208 0 is_stmt 0 discriminator 1
 1714 0066 0323     		movs	r3, #3
 1715 0068 00E0     		b	.L95
 1716              	.L94:
 1717              		.loc 2 208 0 discriminator 2
 1718 006a 0123     		movs	r3, #1
 1719              	.L95:
 1720              		.loc 2 208 0 discriminator 4
 1721 006c FB62     		str	r3, [r7, #44]
 1722 006e 0BE0     		b	.L96
 1723              	.L93:
 209:.\BFS/map_addons.h ****         }
 210:.\BFS/map_addons.h ****         else if (current.y == next.y){
 1724              		.loc 2 210 0 is_stmt 1
 1725 0070 BA69     		ldr	r2, [r7, #24]
 1726 0072 3B69     		ldr	r3, [r7, #16]
 1727 0074 9A42     		cmp	r2, r3
 1728 0076 07D1     		bne	.L96
 211:.\BFS/map_addons.h ****             next_orientation = (current.x > next.x) ? CMD_LEFT:CMD_RIGHT;
 1729              		.loc 2 211 0
 1730 0078 7A69     		ldr	r2, [r7, #20]
 1731 007a FB68     		ldr	r3, [r7, #12]
 1732 007c 9A42     		cmp	r2, r3
 1733 007e 01DD     		ble	.L97
 1734              		.loc 2 211 0 is_stmt 0 discriminator 1
 1735 0080 0223     		movs	r3, #2
 1736 0082 00E0     		b	.L98
 1737              	.L97:
 1738              		.loc 2 211 0 discriminator 2
 1739 0084 0023     		movs	r3, #0
 1740              	.L98:
 1741              		.loc 2 211 0 discriminator 4
 1742 0086 FB62     		str	r3, [r7, #44]
 1743              	.L96:
 212:.\BFS/map_addons.h ****         }
 213:.\BFS/map_addons.h **** 
 214:.\BFS/map_addons.h ****         // Evaluate change (or lack of change) in orientation based on diff
 215:.\BFS/map_addons.h ****         int diffMod4 = (next_orientation - current_orientation) % 4;
 1744              		.loc 2 215 0 is_stmt 1
 1745 0088 FA6A     		ldr	r2, [r7, #44]
 1746 008a 3B6B     		ldr	r3, [r7, #48]
 1747 008c D21A     		subs	r2, r2, r3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 37


 1748 008e 2E4B     		ldr	r3, .L109
 1749 0090 1340     		ands	r3, r3, r2
 1750 0092 002B     		cmp	r3, #0
 1751 0094 03DA     		bge	.L99
 1752 0096 013B     		subs	r3, r3, #1
 1753 0098 63F00303 		orn	r3, r3, #3
 1754 009c 0133     		adds	r3, r3, #1
 1755              	.L99:
 1756 009e FB61     		str	r3, [r7, #28]
 216:.\BFS/map_addons.h **** 
 217:.\BFS/map_addons.h ****         // Every iteration of the loop, the robot moves one square
 218:.\BFS/map_addons.h ****         straight_count++;
 1757              		.loc 2 218 0
 1758 00a0 7B6B     		ldr	r3, [r7, #52]
 1759 00a2 0133     		adds	r3, r3, #1
 1760 00a4 7B63     		str	r3, [r7, #52]
 219:.\BFS/map_addons.h **** 
 220:.\BFS/map_addons.h ****         // If the robot doesn't need to turn, just skip to the next iteration of the loop (i.e. nex
 221:.\BFS/map_addons.h ****         if (diffMod4 == GO_STRAIGHT){
 1761              		.loc 2 221 0
 1762 00a6 FB69     		ldr	r3, [r7, #28]
 1763 00a8 002B     		cmp	r3, #0
 1764 00aa 00D1     		bne	.L100
 222:.\BFS/map_addons.h ****             continue;
 1765              		.loc 2 222 0
 1766 00ac 39E0     		b	.L101
 1767              	.L100:
 223:.\BFS/map_addons.h ****         }
 224:.\BFS/map_addons.h **** 
 225:.\BFS/map_addons.h ****         // At this point, the robot must turn, so need to print the count value up until now
 226:.\BFS/map_addons.h ****         if (straight_count) commands[cmd_length++] = straight_count;
 1768              		.loc 2 226 0
 1769 00ae 7B6B     		ldr	r3, [r7, #52]
 1770 00b0 002B     		cmp	r3, #0
 1771 00b2 07D0     		beq	.L102
 1772              		.loc 2 226 0 is_stmt 0 discriminator 1
 1773 00b4 BB6A     		ldr	r3, [r7, #40]
 1774 00b6 5A1C     		adds	r2, r3, #1
 1775 00b8 BA62     		str	r2, [r7, #40]
 1776 00ba 9B00     		lsls	r3, r3, #2
 1777 00bc 3A68     		ldr	r2, [r7]
 1778 00be 1344     		add	r3, r3, r2
 1779 00c0 7A6B     		ldr	r2, [r7, #52]
 1780 00c2 1A60     		str	r2, [r3]
 1781              	.L102:
 227:.\BFS/map_addons.h **** 
 228:.\BFS/map_addons.h ****         // A turn has been encountered, add it the commands
 229:.\BFS/map_addons.h ****         if (diffMod4 == TURN_LEFT_1 || diffMod4 == TURN_LEFT_2) { commands[cmd_length++] = LEFT_TUR
 1782              		.loc 2 229 0 is_stmt 1
 1783 00c4 FB69     		ldr	r3, [r7, #28]
 1784 00c6 B3F1FF3F 		cmp	r3, #-1
 1785 00ca 02D0     		beq	.L103
 1786              		.loc 2 229 0 is_stmt 0 discriminator 2
 1787 00cc FB69     		ldr	r3, [r7, #28]
 1788 00ce 032B     		cmp	r3, #3
 1789 00d0 09D1     		bne	.L104
 1790              	.L103:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 38


 1791              		.loc 2 229 0 discriminator 3
 1792 00d2 BB6A     		ldr	r3, [r7, #40]
 1793 00d4 5A1C     		adds	r2, r3, #1
 1794 00d6 BA62     		str	r2, [r7, #40]
 1795 00d8 9B00     		lsls	r3, r3, #2
 1796 00da 3A68     		ldr	r2, [r7]
 1797 00dc 1344     		add	r3, r3, r2
 1798 00de 4FF0FF32 		mov	r2, #-1
 1799 00e2 1A60     		str	r2, [r3]
 1800 00e4 19E0     		b	.L105
 1801              	.L104:
 230:.\BFS/map_addons.h ****         else if (diffMod4 == TURN_RIGHT_1 || diffMod4 == TURN_RIGHT_2) { commands[cmd_length++] = R
 1802              		.loc 2 230 0 is_stmt 1
 1803 00e6 FB69     		ldr	r3, [r7, #28]
 1804 00e8 012B     		cmp	r3, #1
 1805 00ea 03D0     		beq	.L106
 1806              		.loc 2 230 0 is_stmt 0 discriminator 2
 1807 00ec FB69     		ldr	r3, [r7, #28]
 1808 00ee 13F1030F 		cmn	r3, #3
 1809 00f2 09D1     		bne	.L107
 1810              	.L106:
 1811              		.loc 2 230 0 discriminator 3
 1812 00f4 BB6A     		ldr	r3, [r7, #40]
 1813 00f6 5A1C     		adds	r2, r3, #1
 1814 00f8 BA62     		str	r2, [r7, #40]
 1815 00fa 9B00     		lsls	r3, r3, #2
 1816 00fc 3A68     		ldr	r2, [r7]
 1817 00fe 1344     		add	r3, r3, r2
 1818 0100 6FF00102 		mvn	r2, #1
 1819 0104 1A60     		str	r2, [r3]
 1820 0106 08E0     		b	.L105
 1821              	.L107:
 231:.\BFS/map_addons.h ****         else { commands[cmd_length++] = U_TURN; }
 1822              		.loc 2 231 0 is_stmt 1
 1823 0108 BB6A     		ldr	r3, [r7, #40]
 1824 010a 5A1C     		adds	r2, r3, #1
 1825 010c BA62     		str	r2, [r7, #40]
 1826 010e 9B00     		lsls	r3, r3, #2
 1827 0110 3A68     		ldr	r2, [r7]
 1828 0112 1344     		add	r3, r3, r2
 1829 0114 6FF00202 		mvn	r2, #2
 1830 0118 1A60     		str	r2, [r3]
 1831              	.L105:
 232:.\BFS/map_addons.h **** 
 233:.\BFS/map_addons.h ****         // Reset the count
 234:.\BFS/map_addons.h ****         straight_count = 0;
 1832              		.loc 2 234 0
 1833 011a 0023     		movs	r3, #0
 1834 011c 7B63     		str	r3, [r7, #52]
 235:.\BFS/map_addons.h **** 
 236:.\BFS/map_addons.h ****         // Update orientation
 237:.\BFS/map_addons.h ****         current_orientation = next_orientation;
 1835              		.loc 2 237 0
 1836 011e FB6A     		ldr	r3, [r7, #44]
 1837 0120 3B63     		str	r3, [r7, #48]
 1838              	.L101:
 1839              	.LBE2:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 39


 201:.\BFS/map_addons.h **** 
 1840              		.loc 2 201 0 discriminator 2
 1841 0122 7B6A     		ldr	r3, [r7, #36]
 1842 0124 0133     		adds	r3, r3, #1
 1843 0126 7B62     		str	r3, [r7, #36]
 1844              	.L92:
 201:.\BFS/map_addons.h **** 
 1845              		.loc 2 201 0 is_stmt 0 discriminator 1
 1846 0128 3B6A     		ldr	r3, [r7, #32]
 1847 012a 5A1E     		subs	r2, r3, #1
 1848 012c 7B6A     		ldr	r3, [r7, #36]
 1849 012e 9A42     		cmp	r2, r3
 1850 0130 3FF77CAF 		bgt	.L108
 238:.\BFS/map_addons.h **** 
 239:.\BFS/map_addons.h ****     }
 240:.\BFS/map_addons.h **** 
 241:.\BFS/map_addons.h ****     commands[cmd_length] = straight_count+1;
 1851              		.loc 2 241 0 is_stmt 1
 1852 0134 BB6A     		ldr	r3, [r7, #40]
 1853 0136 9B00     		lsls	r3, r3, #2
 1854 0138 3A68     		ldr	r2, [r7]
 1855 013a 1344     		add	r3, r3, r2
 1856 013c 7A6B     		ldr	r2, [r7, #52]
 1857 013e 0132     		adds	r2, r2, #1
 1858 0140 1A60     		str	r2, [r3]
 242:.\BFS/map_addons.h **** 
 243:.\BFS/map_addons.h **** }
 1859              		.loc 2 243 0
 1860 0142 3837     		adds	r7, r7, #56
 1861              		.cfi_def_cfa_offset 8
 1862 0144 BD46     		mov	sp, r7
 1863              		.cfi_def_cfa_register 13
 1864              		@ sp needed
 1865 0146 80BD     		pop	{r7, pc}
 1866              	.L110:
 1867              		.align	2
 1868              	.L109:
 1869 0148 03000080 		.word	-2147483645
 1870              		.cfi_endproc
 1871              	.LFE77:
 1872              		.size	convertCoordinatesToCommands, .-convertCoordinatesToCommands
 1873              		.section	.text.getNumOfSurroundingPoints,"ax",%progbits
 1874              		.align	2
 1875              		.global	getNumOfSurroundingPoints
 1876              		.thumb
 1877              		.thumb_func
 1878              		.type	getNumOfSurroundingPoints, %function
 1879              	getNumOfSurroundingPoints:
 1880              	.LFB78:
 244:.\BFS/map_addons.h **** 
 245:.\BFS/map_addons.h **** /* Get the number of valid points surrounding a given point on the map */
 246:.\BFS/map_addons.h **** int getNumOfSurroundingPoints(point p){
 1881              		.loc 2 246 0
 1882              		.cfi_startproc
 1883              		@ args = 0, pretend = 0, frame = 32
 1884              		@ frame_needed = 1, uses_anonymous_args = 0
 1885 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 40


 1886              		.cfi_def_cfa_offset 8
 1887              		.cfi_offset 7, -8
 1888              		.cfi_offset 14, -4
 1889 0002 88B0     		sub	sp, sp, #32
 1890              		.cfi_def_cfa_offset 40
 1891 0004 00AF     		add	r7, sp, #0
 1892              		.cfi_def_cfa_register 7
 1893 0006 3B46     		mov	r3, r7
 1894 0008 83E80300 		stmia	r3, {r0, r1}
 247:.\BFS/map_addons.h ****     int num, mapval;
 248:.\BFS/map_addons.h ****     int i;
 249:.\BFS/map_addons.h ****     int j;
 250:.\BFS/map_addons.h ****     for (i = p.x-1; i < p.x+2; i++){
 1895              		.loc 2 250 0
 1896 000c 3B68     		ldr	r3, [r7]
 1897 000e 013B     		subs	r3, r3, #1
 1898 0010 BB61     		str	r3, [r7, #24]
 1899 0012 2BE0     		b	.L112
 1900              	.L118:
 251:.\BFS/map_addons.h ****         for (j = p.y-1; j < p.y+2; j++){
 1901              		.loc 2 251 0
 1902 0014 7B68     		ldr	r3, [r7, #4]
 1903 0016 013B     		subs	r3, r3, #1
 1904 0018 7B61     		str	r3, [r7, #20]
 1905 001a 1FE0     		b	.L113
 1906              	.L117:
 252:.\BFS/map_addons.h ****             if (i == p.x && j == p.y) continue;
 1907              		.loc 2 252 0
 1908 001c 3A68     		ldr	r2, [r7]
 1909 001e BB69     		ldr	r3, [r7, #24]
 1910 0020 9A42     		cmp	r2, r3
 1911 0022 04D1     		bne	.L114
 1912              		.loc 2 252 0 is_stmt 0 discriminator 1
 1913 0024 7A68     		ldr	r2, [r7, #4]
 1914 0026 7B69     		ldr	r3, [r7, #20]
 1915 0028 9A42     		cmp	r2, r3
 1916 002a 00D1     		bne	.L114
 1917              		.loc 2 252 0 discriminator 2
 1918 002c 13E0     		b	.L115
 1919              	.L114:
 253:.\BFS/map_addons.h ****             mapval = getMapValAtPoint((point){.x=i,.y=j});
 1920              		.loc 2 253 0 is_stmt 1
 1921 002e BB69     		ldr	r3, [r7, #24]
 1922 0030 BB60     		str	r3, [r7, #8]
 1923 0032 7B69     		ldr	r3, [r7, #20]
 1924 0034 FB60     		str	r3, [r7, #12]
 1925 0036 07F10803 		add	r3, r7, #8
 1926 003a 93E80300 		ldmia	r3, {r0, r1}
 1927 003e FFF7FEFF 		bl	getMapValAtPoint
 1928 0042 3861     		str	r0, [r7, #16]
 254:.\BFS/map_addons.h ****             if (mapval == UNVISITED || mapval == 3 /* different to FINAL_PATH */) 
 1929              		.loc 2 254 0
 1930 0044 3B69     		ldr	r3, [r7, #16]
 1931 0046 002B     		cmp	r3, #0
 1932 0048 02D0     		beq	.L116
 1933              		.loc 2 254 0 is_stmt 0 discriminator 1
 1934 004a 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 41


 1935 004c 032B     		cmp	r3, #3
 1936 004e 02D1     		bne	.L115
 1937              	.L116:
 255:.\BFS/map_addons.h ****                 num++;
 1938              		.loc 2 255 0 is_stmt 1
 1939 0050 FB69     		ldr	r3, [r7, #28]
 1940 0052 0133     		adds	r3, r3, #1
 1941 0054 FB61     		str	r3, [r7, #28]
 1942              	.L115:
 251:.\BFS/map_addons.h ****             if (i == p.x && j == p.y) continue;
 1943              		.loc 2 251 0 discriminator 2
 1944 0056 7B69     		ldr	r3, [r7, #20]
 1945 0058 0133     		adds	r3, r3, #1
 1946 005a 7B61     		str	r3, [r7, #20]
 1947              	.L113:
 251:.\BFS/map_addons.h ****             if (i == p.x && j == p.y) continue;
 1948              		.loc 2 251 0 is_stmt 0 discriminator 1
 1949 005c 7B68     		ldr	r3, [r7, #4]
 1950 005e 9A1C     		adds	r2, r3, #2
 1951 0060 7B69     		ldr	r3, [r7, #20]
 1952 0062 9A42     		cmp	r2, r3
 1953 0064 DADC     		bgt	.L117
 250:.\BFS/map_addons.h ****         for (j = p.y-1; j < p.y+2; j++){
 1954              		.loc 2 250 0 is_stmt 1 discriminator 2
 1955 0066 BB69     		ldr	r3, [r7, #24]
 1956 0068 0133     		adds	r3, r3, #1
 1957 006a BB61     		str	r3, [r7, #24]
 1958              	.L112:
 250:.\BFS/map_addons.h ****         for (j = p.y-1; j < p.y+2; j++){
 1959              		.loc 2 250 0 is_stmt 0 discriminator 1
 1960 006c 3B68     		ldr	r3, [r7]
 1961 006e 9A1C     		adds	r2, r3, #2
 1962 0070 BB69     		ldr	r3, [r7, #24]
 1963 0072 9A42     		cmp	r2, r3
 1964 0074 CEDC     		bgt	.L118
 256:.\BFS/map_addons.h ****         }
 257:.\BFS/map_addons.h ****     }
 258:.\BFS/map_addons.h **** 
 259:.\BFS/map_addons.h ****     return num;
 1965              		.loc 2 259 0 is_stmt 1
 1966 0076 FB69     		ldr	r3, [r7, #28]
 260:.\BFS/map_addons.h **** }
 1967              		.loc 2 260 0
 1968 0078 1846     		mov	r0, r3
 1969 007a 2037     		adds	r7, r7, #32
 1970              		.cfi_def_cfa_offset 8
 1971 007c BD46     		mov	sp, r7
 1972              		.cfi_def_cfa_register 13
 1973              		@ sp needed
 1974 007e 80BD     		pop	{r7, pc}
 1975              		.cfi_endproc
 1976              	.LFE78:
 1977              		.size	getNumOfSurroundingPoints, .-getNumOfSurroundingPoints
 1978              		.section	.text.checkPath,"ax",%progbits
 1979              		.align	2
 1980              		.global	checkPath
 1981              		.thumb
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 42


 1982              		.thumb_func
 1983              		.type	checkPath, %function
 1984              	checkPath:
 1985              	.LFB79:
 1986              		.file 3 ".\\BFS/bfs.h"
   1:.\BFS/bfs.h   **** #ifndef BFS_H
   2:.\BFS/bfs.h   **** #define BFS_H
   3:.\BFS/bfs.h   **** 
   4:.\BFS/bfs.h   **** #include <stdlib.h>
   5:.\BFS/bfs.h   **** #include <string.h>
   6:.\BFS/bfs.h   **** #include "line_map.h"
   7:.\BFS/bfs.h   **** #include "map_addons.h"
   8:.\BFS/bfs.h   **** #include "point.h"
   9:.\BFS/bfs.h   **** #include "helper.h"
  10:.\BFS/bfs.h   **** 
  11:.\BFS/bfs.h   **** /* Verify a valid path and store it */
  12:.\BFS/bfs.h   **** void checkPath(point new_paths[MAX_NUM_PATHS][MAX_PATH_LENGTH], int * cnt,
  13:.\BFS/bfs.h   ****     point * concurrent_path, int length, point p){
 1987              		.loc 3 13 0
 1988              		.cfi_startproc
 1989              		@ args = 8, pretend = 0, frame = 24
 1990              		@ frame_needed = 1, uses_anonymous_args = 0
 1991 0000 80B5     		push	{r7, lr}
 1992              		.cfi_def_cfa_offset 8
 1993              		.cfi_offset 7, -8
 1994              		.cfi_offset 14, -4
 1995 0002 86B0     		sub	sp, sp, #24
 1996              		.cfi_def_cfa_offset 32
 1997 0004 00AF     		add	r7, sp, #0
 1998              		.cfi_def_cfa_register 7
 1999 0006 F860     		str	r0, [r7, #12]
 2000 0008 B960     		str	r1, [r7, #8]
 2001 000a 7A60     		str	r2, [r7, #4]
 2002 000c 3B60     		str	r3, [r7]
  14:.\BFS/bfs.h   **** 
  15:.\BFS/bfs.h   ****     int mapval = getMapValAtPoint(p);
 2003              		.loc 3 15 0
 2004 000e 07F12003 		add	r3, r7, #32
 2005 0012 93E80300 		ldmia	r3, {r0, r1}
 2006 0016 FFF7FEFF 		bl	getMapValAtPoint
 2007 001a 7861     		str	r0, [r7, #20]
  16:.\BFS/bfs.h   ****     
  17:.\BFS/bfs.h   ****     if (mapval == 0){
 2008              		.loc 3 17 0
 2009 001c 7B69     		ldr	r3, [r7, #20]
 2010 001e 002B     		cmp	r3, #0
 2011 0020 21D1     		bne	.L120
  18:.\BFS/bfs.h   ****         markPointAsVisited(p);
 2012              		.loc 3 18 0
 2013 0022 07F12003 		add	r3, r7, #32
 2014 0026 93E80300 		ldmia	r3, {r0, r1}
 2015 002a FFF7FEFF 		bl	markPointAsVisited
  19:.\BFS/bfs.h   ****         concurrent_path[length] = p;
 2016              		.loc 3 19 0
 2017 002e 3B68     		ldr	r3, [r7]
 2018 0030 DB00     		lsls	r3, r3, #3
 2019 0032 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 43


 2020 0034 1344     		add	r3, r3, r2
 2021 0036 07F12002 		add	r2, r7, #32
 2022 003a 92E80300 		ldmia	r2, {r0, r1}
 2023 003e 83E80300 		stmia	r3, {r0, r1}
  20:.\BFS/bfs.h   ****         memcpy(new_paths[(*cnt)++],concurrent_path,MAX_PATH_LENGTH*sizeof(point));
 2024              		.loc 3 20 0
 2025 0042 BB68     		ldr	r3, [r7, #8]
 2026 0044 1B68     		ldr	r3, [r3]
 2027 0046 591C     		adds	r1, r3, #1
 2028 0048 BA68     		ldr	r2, [r7, #8]
 2029 004a 1160     		str	r1, [r2]
 2030 004c 1A46     		mov	r2, r3
 2031 004e 4FF48C63 		mov	r3, #1120
 2032 0052 03FB02F3 		mul	r3, r3, r2
 2033 0056 FA68     		ldr	r2, [r7, #12]
 2034 0058 1344     		add	r3, r3, r2
 2035 005a 1846     		mov	r0, r3
 2036 005c 7968     		ldr	r1, [r7, #4]
 2037 005e 4FF48C62 		mov	r2, #1120
 2038 0062 FFF7FEFF 		bl	memcpy
 2039              	.L120:
  21:.\BFS/bfs.h   ****     }
  22:.\BFS/bfs.h   **** }
 2040              		.loc 3 22 0
 2041 0066 1837     		adds	r7, r7, #24
 2042              		.cfi_def_cfa_offset 8
 2043 0068 BD46     		mov	sp, r7
 2044              		.cfi_def_cfa_register 13
 2045              		@ sp needed
 2046 006a 80BD     		pop	{r7, pc}
 2047              		.cfi_endproc
 2048              	.LFE79:
 2049              		.size	checkPath, .-checkPath
 2050              		.section	.text.BFS,"ax",%progbits
 2051              		.align	2
 2052              		.global	BFS
 2053              		.thumb
 2054              		.thumb_func
 2055              		.type	BFS, %function
 2056              	BFS:
 2057              	.LFB80:
  23:.\BFS/bfs.h   **** 
  24:.\BFS/bfs.h   **** /* Breadth First Search */
  25:.\BFS/bfs.h   **** void BFS(point start, point finish, point * concurrent_path){
 2058              		.loc 3 25 0
 2059              		.cfi_startproc
 2060              		@ args = 4, pretend = 0, frame = 22472
 2061              		@ frame_needed = 1, uses_anonymous_args = 0
 2062 0000 90B5     		push	{r4, r7, lr}
 2063              		.cfi_def_cfa_offset 12
 2064              		.cfi_offset 4, -12
 2065              		.cfi_offset 7, -8
 2066              		.cfi_offset 14, -4
 2067 0002 ADF5AF4D 		sub	sp, sp, #22400
 2068              		.cfi_def_cfa_offset 22412
 2069 0006 95B0     		sub	sp, sp, #84
 2070              		.cfi_def_cfa_offset 22496
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 44


 2071 0008 02AF     		add	r7, sp, #8
 2072              		.cfi_def_cfa 7, 22488
 2073 000a 07F14804 		add	r4, r7, #72
 2074 000e 403C     		subs	r4, r4, #64
 2075 0010 84E80300 		stmia	r4, {r0, r1}
 2076 0014 07F14801 		add	r1, r7, #72
 2077 0018 4839     		subs	r1, r1, #72
 2078 001a 81E80C00 		stmia	r1, {r2, r3}
  26:.\BFS/bfs.h   **** 
  27:.\BFS/bfs.h   ****     point paths[MAX_NUM_PATHS][MAX_PATH_LENGTH];
  28:.\BFS/bfs.h   ****     point new_paths[MAX_NUM_PATHS][MAX_PATH_LENGTH];
  29:.\BFS/bfs.h   **** 
  30:.\BFS/bfs.h   ****     // Initialise all paths as empty
  31:.\BFS/bfs.h   ****     memset(concurrent_path,EMPTY_VAL,MAX_PATH_LENGTH*sizeof(point));
 2079              		.loc 3 31 0
 2080 001e 07F5AF43 		add	r3, r7, #22400
 2081 0022 03F15803 		add	r3, r3, #88
 2082 0026 1868     		ldr	r0, [r3]
 2083 0028 4FF0FF31 		mov	r1, #-1
 2084 002c 4FF48C62 		mov	r2, #1120
 2085 0030 FFF7FEFF 		bl	memset
  32:.\BFS/bfs.h   ****     int i;
  33:.\BFS/bfs.h   ****     for (i = 0; i < MAX_NUM_PATHS; i++){
 2086              		.loc 3 33 0
 2087 0034 0023     		movs	r3, #0
 2088 0036 07F5AF42 		add	r2, r7, #22400
 2089 003a 02F14402 		add	r2, r2, #68
 2090 003e 1360     		str	r3, [r2]
 2091 0040 34E0     		b	.L123
 2092              	.L124:
  34:.\BFS/bfs.h   ****         memset(paths[i],EMPTY_VAL,MAX_PATH_LENGTH*sizeof(point));
 2093              		.loc 3 34 0 discriminator 3
 2094 0042 07F53053 		add	r3, r7, #11264
 2095 0046 03F10803 		add	r3, r3, #8
 2096 004a 2C3B     		subs	r3, r3, #44
 2097 004c 07F5AF42 		add	r2, r7, #22400
 2098 0050 02F14402 		add	r2, r2, #68
 2099 0054 1268     		ldr	r2, [r2]
 2100 0056 4FF48C61 		mov	r1, #1120
 2101 005a 01FB02F2 		mul	r2, r1, r2
 2102 005e 1344     		add	r3, r3, r2
 2103 0060 1846     		mov	r0, r3
 2104 0062 4FF0FF31 		mov	r1, #-1
 2105 0066 4FF48C62 		mov	r2, #1120
 2106 006a FFF7FEFF 		bl	memset
  35:.\BFS/bfs.h   ****         memset(new_paths[i],EMPTY_VAL,MAX_PATH_LENGTH*sizeof(point));
 2107              		.loc 3 35 0 discriminator 3
 2108 006e 07F14803 		add	r3, r7, #72
 2109 0072 2C3B     		subs	r3, r3, #44
 2110 0074 07F5AF42 		add	r2, r7, #22400
 2111 0078 02F14402 		add	r2, r2, #68
 2112 007c 1268     		ldr	r2, [r2]
 2113 007e 4FF48C61 		mov	r1, #1120
 2114 0082 01FB02F2 		mul	r2, r1, r2
 2115 0086 1344     		add	r3, r3, r2
 2116 0088 1846     		mov	r0, r3
 2117 008a 4FF0FF31 		mov	r1, #-1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 45


 2118 008e 4FF48C62 		mov	r2, #1120
 2119 0092 FFF7FEFF 		bl	memset
  33:.\BFS/bfs.h   ****         memset(paths[i],EMPTY_VAL,MAX_PATH_LENGTH*sizeof(point));
 2120              		.loc 3 33 0 discriminator 3
 2121 0096 07F5AF43 		add	r3, r7, #22400
 2122 009a 03F14403 		add	r3, r3, #68
 2123 009e 1B68     		ldr	r3, [r3]
 2124 00a0 0133     		adds	r3, r3, #1
 2125 00a2 07F5AF42 		add	r2, r7, #22400
 2126 00a6 02F14402 		add	r2, r2, #68
 2127 00aa 1360     		str	r3, [r2]
 2128              	.L123:
  33:.\BFS/bfs.h   ****         memset(paths[i],EMPTY_VAL,MAX_PATH_LENGTH*sizeof(point));
 2129              		.loc 3 33 0 is_stmt 0 discriminator 1
 2130 00ac 07F5AF43 		add	r3, r7, #22400
 2131 00b0 03F14403 		add	r3, r3, #68
 2132 00b4 1B68     		ldr	r3, [r3]
 2133 00b6 092B     		cmp	r3, #9
 2134 00b8 C3DD     		ble	.L124
  36:.\BFS/bfs.h   ****     }
  37:.\BFS/bfs.h   **** 
  38:.\BFS/bfs.h   ****     // Setup initial starting point
  39:.\BFS/bfs.h   ****     paths[0][0] = start;
 2135              		.loc 3 39 0 is_stmt 1
 2136 00ba 07F53052 		add	r2, r7, #11264
 2137 00be 02F10802 		add	r2, r2, #8
 2138 00c2 2C3A     		subs	r2, r2, #44
 2139 00c4 07F14803 		add	r3, r7, #72
 2140 00c8 403B     		subs	r3, r3, #64
 2141 00ca 93E80300 		ldmia	r3, {r0, r1}
 2142 00ce 82E80300 		stmia	r2, {r0, r1}
  40:.\BFS/bfs.h   ****     markPointAsVisited(start);
 2143              		.loc 3 40 0
 2144 00d2 07F14803 		add	r3, r7, #72
 2145 00d6 403B     		subs	r3, r3, #64
 2146 00d8 93E80300 		ldmia	r3, {r0, r1}
 2147 00dc FFF7FEFF 		bl	markPointAsVisited
  41:.\BFS/bfs.h   ****     int length = 1; // relates to concurrent_path
 2148              		.loc 3 41 0
 2149 00e0 0123     		movs	r3, #1
 2150 00e2 07F5AF42 		add	r2, r7, #22400
 2151 00e6 02F14002 		add	r2, r2, #64
 2152 00ea 1360     		str	r3, [r2]
  42:.\BFS/bfs.h   ****     int cnt = 0;
 2153              		.loc 3 42 0
 2154 00ec 07F14803 		add	r3, r7, #72
 2155 00f0 303B     		subs	r3, r3, #48
 2156 00f2 0022     		movs	r2, #0
 2157 00f4 1A60     		str	r2, [r3]
 2158              	.L133:
 2159              	.LBB3:
  43:.\BFS/bfs.h   **** 
  44:.\BFS/bfs.h   ****     while (TRUE){
  45:.\BFS/bfs.h   ****         cnt = 0;
 2160              		.loc 3 45 0
 2161 00f6 07F14803 		add	r3, r7, #72
 2162 00fa 303B     		subs	r3, r3, #48
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 46


 2163 00fc 0022     		movs	r2, #0
 2164 00fe 1A60     		str	r2, [r3]
  46:.\BFS/bfs.h   ****         int i;
  47:.\BFS/bfs.h   ****         for (i = 0; i < MAX_NUM_PATHS; i++){
 2165              		.loc 3 47 0
 2166 0100 0023     		movs	r3, #0
 2167 0102 07F5AF42 		add	r2, r7, #22400
 2168 0106 02F13C02 		add	r2, r2, #60
 2169 010a 1360     		str	r3, [r2]
 2170 010c 37E1     		b	.L125
 2171              	.L130:
 2172              	.LBB4:
  48:.\BFS/bfs.h   **** 
  49:.\BFS/bfs.h   ****             // Skip empty paths
  50:.\BFS/bfs.h   ****             if (isEmpty(paths[i],MAX_PATH_LENGTH)) continue;
 2173              		.loc 3 50 0
 2174 010e 07F53053 		add	r3, r7, #11264
 2175 0112 03F10803 		add	r3, r3, #8
 2176 0116 2C3B     		subs	r3, r3, #44
 2177 0118 07F5AF42 		add	r2, r7, #22400
 2178 011c 02F13C02 		add	r2, r2, #60
 2179 0120 1268     		ldr	r2, [r2]
 2180 0122 4FF48C61 		mov	r1, #1120
 2181 0126 01FB02F2 		mul	r2, r1, r2
 2182 012a 1344     		add	r3, r3, r2
 2183 012c 1846     		mov	r0, r3
 2184 012e 8C21     		movs	r1, #140
 2185 0130 FFF7FEFF 		bl	isEmpty
 2186 0134 0346     		mov	r3, r0
 2187 0136 002B     		cmp	r3, #0
 2188 0138 40F01681 		bne	.L127
  51:.\BFS/bfs.h   **** 
  52:.\BFS/bfs.h   ****             // Set the concurrent_path equal to path
  53:.\BFS/bfs.h   ****             memcpy(concurrent_path,paths[i],MAX_PATH_LENGTH*sizeof(point));
 2189              		.loc 3 53 0
 2190 013c 07F53053 		add	r3, r7, #11264
 2191 0140 03F10803 		add	r3, r3, #8
 2192 0144 2C3B     		subs	r3, r3, #44
 2193 0146 07F5AF42 		add	r2, r7, #22400
 2194 014a 02F13C02 		add	r2, r2, #60
 2195 014e 1268     		ldr	r2, [r2]
 2196 0150 4FF48C61 		mov	r1, #1120
 2197 0154 01FB02F2 		mul	r2, r1, r2
 2198 0158 1344     		add	r3, r3, r2
 2199 015a 07F5AF42 		add	r2, r7, #22400
 2200 015e 02F15802 		add	r2, r2, #88
 2201 0162 1068     		ldr	r0, [r2]
 2202 0164 1946     		mov	r1, r3
 2203 0166 4FF48C62 		mov	r2, #1120
 2204 016a FFF7FEFF 		bl	memcpy
  54:.\BFS/bfs.h   **** 
  55:.\BFS/bfs.h   ****             // Clear path
  56:.\BFS/bfs.h   ****             //clearArray(paths[i],MAX_PATH_LENGTH);
  57:.\BFS/bfs.h   ****             memset(paths[i],EMPTY_VAL,MAX_PATH_LENGTH*sizeof(point));
 2205              		.loc 3 57 0
 2206 016e 07F53053 		add	r3, r7, #11264
 2207 0172 03F10803 		add	r3, r3, #8
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 47


 2208 0176 2C3B     		subs	r3, r3, #44
 2209 0178 07F5AF42 		add	r2, r7, #22400
 2210 017c 02F13C02 		add	r2, r2, #60
 2211 0180 1268     		ldr	r2, [r2]
 2212 0182 4FF48C61 		mov	r1, #1120
 2213 0186 01FB02F2 		mul	r2, r1, r2
 2214 018a 1344     		add	r3, r3, r2
 2215 018c 1846     		mov	r0, r3
 2216 018e 4FF0FF31 		mov	r1, #-1
 2217 0192 4FF48C62 		mov	r2, #1120
 2218 0196 FFF7FEFF 		bl	memset
  58:.\BFS/bfs.h   **** 
  59:.\BFS/bfs.h   ****             point p = concurrent_path[length-1];
 2219              		.loc 3 59 0
 2220 019a 07F5AF43 		add	r3, r7, #22400
 2221 019e 03F14003 		add	r3, r3, #64
 2222 01a2 1B68     		ldr	r3, [r3]
 2223 01a4 03F10053 		add	r3, r3, #536870912
 2224 01a8 013B     		subs	r3, r3, #1
 2225 01aa DB00     		lsls	r3, r3, #3
 2226 01ac 07F5AF42 		add	r2, r7, #22400
 2227 01b0 02F15802 		add	r2, r2, #88
 2228 01b4 1268     		ldr	r2, [r2]
 2229 01b6 1A44     		add	r2, r2, r3
 2230 01b8 07F14803 		add	r3, r7, #72
 2231 01bc 383B     		subs	r3, r3, #56
 2232 01be 92E80300 		ldmia	r2, {r0, r1}
 2233 01c2 83E80300 		stmia	r3, {r0, r1}
  60:.\BFS/bfs.h   ****             
  61:.\BFS/bfs.h   ****             // Path has been found
  62:.\BFS/bfs.h   ****             if (p.x == finish.x && p.y == finish.y) {
 2234              		.loc 3 62 0
 2235 01c6 07F14803 		add	r3, r7, #72
 2236 01ca 383B     		subs	r3, r3, #56
 2237 01cc 1A68     		ldr	r2, [r3]
 2238 01ce 07F14803 		add	r3, r7, #72
 2239 01d2 483B     		subs	r3, r3, #72
 2240 01d4 1B68     		ldr	r3, [r3]
 2241 01d6 9A42     		cmp	r2, r3
 2242 01d8 0AD1     		bne	.L128
 2243              		.loc 3 62 0 is_stmt 0 discriminator 1
 2244 01da 07F14803 		add	r3, r7, #72
 2245 01de 383B     		subs	r3, r3, #56
 2246 01e0 5A68     		ldr	r2, [r3, #4]
 2247 01e2 07F14803 		add	r3, r7, #72
 2248 01e6 483B     		subs	r3, r3, #72
 2249 01e8 5B68     		ldr	r3, [r3, #4]
 2250 01ea 9A42     		cmp	r2, r3
 2251 01ec 00F02D81 		beq	.L134
 2252              	.L128:
  63:.\BFS/bfs.h   ****                 return;
  64:.\BFS/bfs.h   ****             }
  65:.\BFS/bfs.h   **** 
  66:.\BFS/bfs.h   ****             // Check above
  67:.\BFS/bfs.h   ****             checkPath(new_paths,&cnt,concurrent_path,length,(point){.x=p.x,.y=p.y-1});
 2253              		.loc 3 67 0 is_stmt 1
 2254 01f0 07F14803 		add	r3, r7, #72
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 48


 2255 01f4 383B     		subs	r3, r3, #56
 2256 01f6 1B68     		ldr	r3, [r3]
 2257 01f8 07F5AF42 		add	r2, r7, #22400
 2258 01fc 02F11C02 		add	r2, r2, #28
 2259 0200 1360     		str	r3, [r2]
 2260 0202 07F14803 		add	r3, r7, #72
 2261 0206 383B     		subs	r3, r3, #56
 2262 0208 5B68     		ldr	r3, [r3, #4]
 2263 020a 013B     		subs	r3, r3, #1
 2264 020c 07F5AF42 		add	r2, r7, #22400
 2265 0210 02F12002 		add	r2, r2, #32
 2266 0214 1360     		str	r3, [r2]
 2267 0216 07F14802 		add	r2, r7, #72
 2268 021a 2C3A     		subs	r2, r2, #44
 2269 021c 07F14803 		add	r3, r7, #72
 2270 0220 303B     		subs	r3, r3, #48
 2271 0222 6C46     		mov	r4, sp
 2272 0224 07F5AF41 		add	r1, r7, #22400
 2273 0228 01F11C01 		add	r1, r1, #28
 2274 022c 03C9     		ldmia	r1, {r0, r1}
 2275 022e 84E80300 		stmia	r4, {r0, r1}
 2276 0232 1046     		mov	r0, r2
 2277 0234 1946     		mov	r1, r3
 2278 0236 07F5AF43 		add	r3, r7, #22400
 2279 023a 03F15803 		add	r3, r3, #88
 2280 023e 1A68     		ldr	r2, [r3]
 2281 0240 07F5AF43 		add	r3, r7, #22400
 2282 0244 03F14003 		add	r3, r3, #64
 2283 0248 1B68     		ldr	r3, [r3]
 2284 024a FFF7FEFF 		bl	checkPath
  68:.\BFS/bfs.h   ****             // Check below
  69:.\BFS/bfs.h   ****             checkPath(new_paths,&cnt,concurrent_path,length,(point){.x=p.x,.y=p.y+1});
 2285              		.loc 3 69 0
 2286 024e 07F14803 		add	r3, r7, #72
 2287 0252 383B     		subs	r3, r3, #56
 2288 0254 1B68     		ldr	r3, [r3]
 2289 0256 07F5AF42 		add	r2, r7, #22400
 2290 025a 02F12402 		add	r2, r2, #36
 2291 025e 1360     		str	r3, [r2]
 2292 0260 07F14803 		add	r3, r7, #72
 2293 0264 383B     		subs	r3, r3, #56
 2294 0266 5B68     		ldr	r3, [r3, #4]
 2295 0268 0133     		adds	r3, r3, #1
 2296 026a 07F5AF42 		add	r2, r7, #22400
 2297 026e 02F12802 		add	r2, r2, #40
 2298 0272 1360     		str	r3, [r2]
 2299 0274 07F14802 		add	r2, r7, #72
 2300 0278 2C3A     		subs	r2, r2, #44
 2301 027a 07F14803 		add	r3, r7, #72
 2302 027e 303B     		subs	r3, r3, #48
 2303 0280 6C46     		mov	r4, sp
 2304 0282 07F5AF41 		add	r1, r7, #22400
 2305 0286 01F12401 		add	r1, r1, #36
 2306 028a 03C9     		ldmia	r1, {r0, r1}
 2307 028c 84E80300 		stmia	r4, {r0, r1}
 2308 0290 1046     		mov	r0, r2
 2309 0292 1946     		mov	r1, r3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 49


 2310 0294 07F5AF43 		add	r3, r7, #22400
 2311 0298 03F15803 		add	r3, r3, #88
 2312 029c 1A68     		ldr	r2, [r3]
 2313 029e 07F5AF43 		add	r3, r7, #22400
 2314 02a2 03F14003 		add	r3, r3, #64
 2315 02a6 1B68     		ldr	r3, [r3]
 2316 02a8 FFF7FEFF 		bl	checkPath
  70:.\BFS/bfs.h   ****             // Check left
  71:.\BFS/bfs.h   ****             checkPath(new_paths,&cnt,concurrent_path,length,(point){.x=p.x-1,.y=p.y});
 2317              		.loc 3 71 0
 2318 02ac 07F14803 		add	r3, r7, #72
 2319 02b0 383B     		subs	r3, r3, #56
 2320 02b2 1B68     		ldr	r3, [r3]
 2321 02b4 013B     		subs	r3, r3, #1
 2322 02b6 07F5AF42 		add	r2, r7, #22400
 2323 02ba 02F12C02 		add	r2, r2, #44
 2324 02be 1360     		str	r3, [r2]
 2325 02c0 07F14803 		add	r3, r7, #72
 2326 02c4 383B     		subs	r3, r3, #56
 2327 02c6 5B68     		ldr	r3, [r3, #4]
 2328 02c8 07F5AF42 		add	r2, r7, #22400
 2329 02cc 02F13002 		add	r2, r2, #48
 2330 02d0 1360     		str	r3, [r2]
 2331 02d2 07F14802 		add	r2, r7, #72
 2332 02d6 2C3A     		subs	r2, r2, #44
 2333 02d8 07F14803 		add	r3, r7, #72
 2334 02dc 303B     		subs	r3, r3, #48
 2335 02de 6C46     		mov	r4, sp
 2336 02e0 07F5AF41 		add	r1, r7, #22400
 2337 02e4 01F12C01 		add	r1, r1, #44
 2338 02e8 03C9     		ldmia	r1, {r0, r1}
 2339 02ea 84E80300 		stmia	r4, {r0, r1}
 2340 02ee 1046     		mov	r0, r2
 2341 02f0 1946     		mov	r1, r3
 2342 02f2 07F5AF43 		add	r3, r7, #22400
 2343 02f6 03F15803 		add	r3, r3, #88
 2344 02fa 1A68     		ldr	r2, [r3]
 2345 02fc 07F5AF43 		add	r3, r7, #22400
 2346 0300 03F14003 		add	r3, r3, #64
 2347 0304 1B68     		ldr	r3, [r3]
 2348 0306 FFF7FEFF 		bl	checkPath
  72:.\BFS/bfs.h   ****             // Check right
  73:.\BFS/bfs.h   ****             checkPath(new_paths,&cnt,concurrent_path,length,(point){.x=p.x+1,.y=p.y});
 2349              		.loc 3 73 0
 2350 030a 07F14803 		add	r3, r7, #72
 2351 030e 383B     		subs	r3, r3, #56
 2352 0310 1B68     		ldr	r3, [r3]
 2353 0312 0133     		adds	r3, r3, #1
 2354 0314 07F5AF42 		add	r2, r7, #22400
 2355 0318 02F13402 		add	r2, r2, #52
 2356 031c 1360     		str	r3, [r2]
 2357 031e 07F14803 		add	r3, r7, #72
 2358 0322 383B     		subs	r3, r3, #56
 2359 0324 5B68     		ldr	r3, [r3, #4]
 2360 0326 07F5AF42 		add	r2, r7, #22400
 2361 032a 02F13802 		add	r2, r2, #56
 2362 032e 1360     		str	r3, [r2]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 50


 2363 0330 07F14802 		add	r2, r7, #72
 2364 0334 2C3A     		subs	r2, r2, #44
 2365 0336 07F14803 		add	r3, r7, #72
 2366 033a 303B     		subs	r3, r3, #48
 2367 033c 6C46     		mov	r4, sp
 2368 033e 07F5AF41 		add	r1, r7, #22400
 2369 0342 01F13401 		add	r1, r1, #52
 2370 0346 03C9     		ldmia	r1, {r0, r1}
 2371 0348 84E80300 		stmia	r4, {r0, r1}
 2372 034c 1046     		mov	r0, r2
 2373 034e 1946     		mov	r1, r3
 2374 0350 07F5AF43 		add	r3, r7, #22400
 2375 0354 03F15803 		add	r3, r3, #88
 2376 0358 1A68     		ldr	r2, [r3]
 2377 035a 07F5AF43 		add	r3, r7, #22400
 2378 035e 03F14003 		add	r3, r3, #64
 2379 0362 1B68     		ldr	r3, [r3]
 2380 0364 FFF7FEFF 		bl	checkPath
 2381              	.L127:
 2382              	.LBE4:
  47:.\BFS/bfs.h   **** 
 2383              		.loc 3 47 0 discriminator 2
 2384 0368 07F5AF43 		add	r3, r7, #22400
 2385 036c 03F13C03 		add	r3, r3, #60
 2386 0370 1B68     		ldr	r3, [r3]
 2387 0372 0133     		adds	r3, r3, #1
 2388 0374 07F5AF42 		add	r2, r7, #22400
 2389 0378 02F13C02 		add	r2, r2, #60
 2390 037c 1360     		str	r3, [r2]
 2391              	.L125:
  47:.\BFS/bfs.h   **** 
 2392              		.loc 3 47 0 is_stmt 0 discriminator 1
 2393 037e 07F5AF43 		add	r3, r7, #22400
 2394 0382 03F13C03 		add	r3, r3, #60
 2395 0386 1B68     		ldr	r3, [r3]
 2396 0388 092B     		cmp	r3, #9
 2397 038a 7FF7C0AE 		ble	.L130
  74:.\BFS/bfs.h   **** 
  75:.\BFS/bfs.h   ****         }
  76:.\BFS/bfs.h   **** 
  77:.\BFS/bfs.h   ****         // Take new paths and put them into paths
  78:.\BFS/bfs.h   ****         for (i = 0; i < MAX_NUM_PATHS; i++){
 2398              		.loc 3 78 0 is_stmt 1
 2399 038e 0023     		movs	r3, #0
 2400 0390 07F5AF42 		add	r2, r7, #22400
 2401 0394 02F13C02 		add	r2, r2, #60
 2402 0398 1360     		str	r3, [r2]
 2403 039a 43E0     		b	.L131
 2404              	.L132:
  79:.\BFS/bfs.h   ****             memcpy(paths[i],new_paths[i],MAX_PATH_LENGTH*sizeof(point)); // Copy new_paths to paths
 2405              		.loc 3 79 0 discriminator 3
 2406 039c 07F53053 		add	r3, r7, #11264
 2407 03a0 03F10803 		add	r3, r3, #8
 2408 03a4 2C3B     		subs	r3, r3, #44
 2409 03a6 07F5AF42 		add	r2, r7, #22400
 2410 03aa 02F13C02 		add	r2, r2, #60
 2411 03ae 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 51


 2412 03b0 4FF48C61 		mov	r1, #1120
 2413 03b4 01FB02F2 		mul	r2, r1, r2
 2414 03b8 9818     		adds	r0, r3, r2
 2415 03ba 07F14803 		add	r3, r7, #72
 2416 03be 2C3B     		subs	r3, r3, #44
 2417 03c0 07F5AF42 		add	r2, r7, #22400
 2418 03c4 02F13C02 		add	r2, r2, #60
 2419 03c8 1268     		ldr	r2, [r2]
 2420 03ca 4FF48C61 		mov	r1, #1120
 2421 03ce 01FB02F2 		mul	r2, r1, r2
 2422 03d2 1344     		add	r3, r3, r2
 2423 03d4 0146     		mov	r1, r0
 2424 03d6 1A46     		mov	r2, r3
 2425 03d8 4FF48C63 		mov	r3, #1120
 2426 03dc 0846     		mov	r0, r1
 2427 03de 1146     		mov	r1, r2
 2428 03e0 1A46     		mov	r2, r3
 2429 03e2 FFF7FEFF 		bl	memcpy
  80:.\BFS/bfs.h   ****             memset(new_paths[i],EMPTY_VAL,MAX_PATH_LENGTH*sizeof(point)); // Empty new_paths
 2430              		.loc 3 80 0 discriminator 3
 2431 03e6 07F14803 		add	r3, r7, #72
 2432 03ea 2C3B     		subs	r3, r3, #44
 2433 03ec 07F5AF42 		add	r2, r7, #22400
 2434 03f0 02F13C02 		add	r2, r2, #60
 2435 03f4 1268     		ldr	r2, [r2]
 2436 03f6 4FF48C61 		mov	r1, #1120
 2437 03fa 01FB02F2 		mul	r2, r1, r2
 2438 03fe 1344     		add	r3, r3, r2
 2439 0400 1846     		mov	r0, r3
 2440 0402 4FF0FF31 		mov	r1, #-1
 2441 0406 4FF48C62 		mov	r2, #1120
 2442 040a FFF7FEFF 		bl	memset
  78:.\BFS/bfs.h   ****             memcpy(paths[i],new_paths[i],MAX_PATH_LENGTH*sizeof(point)); // Copy new_paths to paths
 2443              		.loc 3 78 0 discriminator 3
 2444 040e 07F5AF43 		add	r3, r7, #22400
 2445 0412 03F13C03 		add	r3, r3, #60
 2446 0416 1B68     		ldr	r3, [r3]
 2447 0418 0133     		adds	r3, r3, #1
 2448 041a 07F5AF42 		add	r2, r7, #22400
 2449 041e 02F13C02 		add	r2, r2, #60
 2450 0422 1360     		str	r3, [r2]
 2451              	.L131:
  78:.\BFS/bfs.h   ****             memcpy(paths[i],new_paths[i],MAX_PATH_LENGTH*sizeof(point)); // Copy new_paths to paths
 2452              		.loc 3 78 0 is_stmt 0 discriminator 1
 2453 0424 07F5AF43 		add	r3, r7, #22400
 2454 0428 03F13C03 		add	r3, r3, #60
 2455 042c 1B68     		ldr	r3, [r3]
 2456 042e 092B     		cmp	r3, #9
 2457 0430 B4DD     		ble	.L132
  81:.\BFS/bfs.h   ****         }
  82:.\BFS/bfs.h   **** 
  83:.\BFS/bfs.h   ****         length++;
 2458              		.loc 3 83 0 is_stmt 1
 2459 0432 07F5AF43 		add	r3, r7, #22400
 2460 0436 03F14003 		add	r3, r3, #64
 2461 043a 1B68     		ldr	r3, [r3]
 2462 043c 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 52


 2463 043e 07F5AF42 		add	r2, r7, #22400
 2464 0442 02F14002 		add	r2, r2, #64
 2465 0446 1360     		str	r3, [r2]
 2466              	.LBE3:
  84:.\BFS/bfs.h   **** 
  85:.\BFS/bfs.h   ****     }
 2467              		.loc 3 85 0
 2468 0448 55E6     		b	.L133
 2469              	.L134:
  86:.\BFS/bfs.h   **** 
  87:.\BFS/bfs.h   **** }
 2470              		.loc 3 87 0
 2471 044a 07F5AF47 		add	r7, r7, #22400
 2472 044e 4C37     		adds	r7, r7, #76
 2473              		.cfi_def_cfa_offset 12
 2474 0450 BD46     		mov	sp, r7
 2475              		.cfi_def_cfa_register 13
 2476              		@ sp needed
 2477 0452 90BD     		pop	{r4, r7, pc}
 2478              		.cfi_endproc
 2479              	.LFE80:
 2480              		.size	BFS, .-BFS
 2481              		.global	adc_flag
 2482              		.bss
 2483 0012 0000     		.align	2
 2484              		.type	adc_flag, %object
 2485              		.size	adc_flag, 4
 2486              	adc_flag:
 2487 0014 00000000 		.space	4
 2488              		.global	sensor_readings
 2489              		.align	2
 2490              		.type	sensor_readings, %object
 2491              		.size	sensor_readings, 6
 2492              	sensor_readings:
 2493 0018 00000000 		.space	6
 2493      0000
 2494              		.global	adc_readings
 2495 001e 0000     		.align	2
 2496              		.type	adc_readings, %object
 2497              		.size	adc_readings, 24
 2498              	adc_readings:
 2499 0020 00000000 		.space	24
 2499      00000000 
 2499      00000000 
 2499      00000000 
 2499      00000000 
 2500              		.global	sample_count
 2501              		.align	2
 2502              		.type	sample_count, %object
 2503              		.size	sample_count, 4
 2504              	sample_count:
 2505 0038 00000000 		.space	4
 2506              		.global	timer_flag
 2507              		.align	2
 2508              		.type	timer_flag, %object
 2509              		.size	timer_flag, 4
 2510              	timer_flag:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 53


 2511 003c 00000000 		.space	4
 2512              		.global	countM1
 2513              		.align	2
 2514              		.type	countM1, %object
 2515              		.size	countM1, 4
 2516              	countM1:
 2517 0040 00000000 		.space	4
 2518              		.global	countM2
 2519              		.align	2
 2520              		.type	countM2, %object
 2521              		.size	countM2, 4
 2522              	countM2:
 2523 0044 00000000 		.space	4
 2524              		.global	prevCountM1
 2525              		.align	2
 2526              		.type	prevCountM1, %object
 2527              		.size	prevCountM1, 4
 2528              	prevCountM1:
 2529 0048 00000000 		.space	4
 2530              		.global	prevCountM2
 2531              		.align	2
 2532              		.type	prevCountM2, %object
 2533              		.size	prevCountM2, 4
 2534              	prevCountM2:
 2535 004c 00000000 		.space	4
 2536              		.section	.text.ENCODER_ISR,"ax",%progbits
 2537              		.align	2
 2538              		.global	ENCODER_ISR
 2539              		.thumb
 2540              		.thumb_func
 2541              		.type	ENCODER_ISR, %function
 2542              	ENCODER_ISR:
 2543              	.LFB81:
 2544              		.file 4 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  * 2019 COMPSYS 
   3:.\main.c      ****  * 302 GROUP 2
   4:.\main.c      ****  * FLIK
   5:.\main.c      **** */
   6:.\main.c      **** // ================== INCLUDE ======================
   7:.\main.c      **** #include <stdio.h>
   8:.\main.c      **** #include <string.h>
   9:.\main.c      **** #include <stdlib.h>
  10:.\main.c      **** #include <project.h>
  11:.\main.c      **** 
  12:.\main.c      **** #include "defines.h"
  13:.\main.c      **** #include "vars.h"
  14:.\main.c      **** #include "BFS/bfs.h"
  15:.\main.c      **** // =================== MACROS =====================
  16:.\main.c      **** // SENSOR MAPPINGS
  17:.\main.c      **** #define TOP_LEFT_SENSOR 0
  18:.\main.c      **** #define TOP_MID_SENSOR 1
  19:.\main.c      **** #define TOP_RIGHT_SENSOR 2
  20:.\main.c      **** #define BOTTOM_LEFT_SENSOR 3
  21:.\main.c      **** #define BOTTOM_MID_SENSOR 4
  22:.\main.c      **** #define BOTTOM_RIGHT_SENSOR 5
  23:.\main.c      **** 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 54


  24:.\main.c      **** // LIGHT SENSORS
  25:.\main.c      **** #define NUM_SENSORS 6
  26:.\main.c      **** #define LIGHT_LEVEL 300
  27:.\main.c      **** 
  28:.\main.c      **** // ADC
  29:.\main.c      **** #define ADC_READINGS_SIZE 200
  30:.\main.c      **** 
  31:.\main.c      **** // Speed calculations
  32:.\main.c      **** #define LINEAR_DISTANCE_PER_REV 20.42035225
  33:.\main.c      **** #define TICKS_PER_REV 228
  34:.\main.c      **** #define TIMER_PERIOD 0.03
  35:.\main.c      **** 
  36:.\main.c      **** // Speed control
  37:.\main.c      **** #define DESIRED_COUNT 8
  38:.\main.c      **** #define TURN_SPEED 450
  39:.\main.c      **** 
  40:.\main.c      **** // Distances
  41:.\main.c      **** #define GRID_SIZE 12
  42:.\main.c      **** #define HALF_ROBOT_LENGTH 8
  43:.\main.c      **** #define SMALL_FORWARD_DISTANCE 8
  44:.\main.c      **** 
  45:.\main.c      **** // Line following macros - require calibration
  46:.\main.c      **** #define ADJUST_SPEED_LARGE 3
  47:.\main.c      **** #define ADJUST_SPEED_SMALL 1
  48:.\main.c      **** #define MAX_SPEED 9
  49:.\main.c      **** #define MIN_SPEED 4
  50:.\main.c      **** #define SLOW_DOWN_SPEED 1
  51:.\main.c      **** 
  52:.\main.c      **** // algorithms
  53:.\main.c      **** #define BFS_ROUTE_SIZE 68
  54:.\main.c      **** #define DISTANCE_THRESHOLD 20
  55:.\main.c      **** 
  56:.\main.c      **** // Debug flag - uncomment when debugging
  57:.\main.c      **** //#define PUTTY
  58:.\main.c      **** //* ================= FUNCTIONS =======================
  59:.\main.c      **** void usbPutString(char *s);
  60:.\main.c      **** 
  61:.\main.c      **** // sensors
  62:.\main.c      **** int32 getValForChannel(int16 n);
  63:.\main.c      **** void updateSensorValues();
  64:.\main.c      **** 
  65:.\main.c      **** // general
  66:.\main.c      **** void changeRightWheelSpeed(int amount);
  67:.\main.c      **** void changeLeftWheelSpeed(int amount);
  68:.\main.c      **** void invertWheels();
  69:.\main.c      **** void startWheels();
  70:.\main.c      **** void stopWheels();
  71:.\main.c      **** void setWheelDirection(int isLeftForward, int isRightForward);
  72:.\main.c      **** void correctSpeed(int prevCount, int count, int desired_count, int isLeftWheel);
  73:.\main.c      **** float getDistance(int prevCountM1, int prevCountM2);
  74:.\main.c      **** 
  75:.\main.c      **** // straight
  76:.\main.c      **** void turnRight();
  77:.\main.c      **** void turnLeft();
  78:.\main.c      **** void goStraightForBlock(int desired_blocks, int *right_speed_count, int *left_wheel_count);
  79:.\main.c      **** 
  80:.\main.c      **** // turning
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 55


  81:.\main.c      **** void turnForDegrees(int degrees);
  82:.\main.c      **** void sharpTurnRight();
  83:.\main.c      **** void sharpTurnLeft();
  84:.\main.c      **** void uTurn(int *left_wheel_count, int *right_wheel_count);
  85:.\main.c      **** 
  86:.\main.c      **** // debugging
  87:.\main.c      **** void printCommandsUSB(int *commands);
  88:.\main.c      **** void printSingleCommandUSB(int command);
  89:.\main.c      **** //* ================= GLOBAL VARIABLES =======================
  90:.\main.c      **** // ADC
  91:.\main.c      **** volatile int adc_flag = FALSE;
  92:.\main.c      **** int8 sensor_readings[NUM_SENSORS] = { 0 };
  93:.\main.c      **** int adc_readings[NUM_SENSORS] = { 0 };
  94:.\main.c      **** int sample_count = 0;
  95:.\main.c      **** // Encoder
  96:.\main.c      **** volatile int timer_flag = FALSE;
  97:.\main.c      **** volatile int countM1 = 0;
  98:.\main.c      **** volatile int countM2 = 0;
  99:.\main.c      **** int prevCountM1 = 0;
 100:.\main.c      **** int prevCountM2 = 0;
 101:.\main.c      **** //* ================== ISR ======================
 102:.\main.c      **** CY_ISR(ENCODER_ISR) {
 2545              		.loc 4 102 0
 2546              		.cfi_startproc
 2547              		@ args = 0, pretend = 0, frame = 0
 2548              		@ frame_needed = 1, uses_anonymous_args = 0
 2549 0000 80B5     		push	{r7, lr}
 2550              		.cfi_def_cfa_offset 8
 2551              		.cfi_offset 7, -8
 2552              		.cfi_offset 14, -4
 2553 0002 00AF     		add	r7, sp, #0
 2554              		.cfi_def_cfa_register 7
 103:.\main.c      ****     countM1 = QuadDec_M1_GetCounter();
 2555              		.loc 4 103 0
 2556 0004 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 2557 0008 0346     		mov	r3, r0
 2558 000a 1A46     		mov	r2, r3
 2559 000c 054B     		ldr	r3, .L136
 2560 000e 1A60     		str	r2, [r3]
 104:.\main.c      ****     countM2 = QuadDec_M2_GetCounter();
 2561              		.loc 4 104 0
 2562 0010 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 2563 0014 0346     		mov	r3, r0
 2564 0016 1A46     		mov	r2, r3
 2565 0018 034B     		ldr	r3, .L136+4
 2566 001a 1A60     		str	r2, [r3]
 105:.\main.c      ****     timer_flag = TRUE;
 2567              		.loc 4 105 0
 2568 001c 034B     		ldr	r3, .L136+8
 2569 001e 0122     		movs	r2, #1
 2570 0020 1A60     		str	r2, [r3]
 106:.\main.c      **** }
 2571              		.loc 4 106 0
 2572 0022 80BD     		pop	{r7, pc}
 2573              	.L137:
 2574              		.align	2
 2575              	.L136:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 56


 2576 0024 00000000 		.word	countM1
 2577 0028 00000000 		.word	countM2
 2578 002c 00000000 		.word	timer_flag
 2579              		.cfi_endproc
 2580              	.LFE81:
 2581              		.size	ENCODER_ISR, .-ENCODER_ISR
 2582              		.section	.text.ADC_ISR,"ax",%progbits
 2583              		.align	2
 2584              		.global	ADC_ISR
 2585              		.thumb
 2586              		.thumb_func
 2587              		.type	ADC_ISR, %function
 2588              	ADC_ISR:
 2589              	.LFB82:
 107:.\main.c      **** 
 108:.\main.c      **** /* ### Retrieve and Store Measurements ### */
 109:.\main.c      **** CY_ISR(ADC_ISR) {
 2590              		.loc 4 109 0
 2591              		.cfi_startproc
 2592              		@ args = 0, pretend = 0, frame = 0
 2593              		@ frame_needed = 1, uses_anonymous_args = 0
 2594              		@ link register save eliminated.
 2595 0000 80B4     		push	{r7}
 2596              		.cfi_def_cfa_offset 4
 2597              		.cfi_offset 7, -4
 2598 0002 00AF     		add	r7, sp, #0
 2599              		.cfi_def_cfa_register 7
 110:.\main.c      ****     adc_flag = TRUE;
 2600              		.loc 4 110 0
 2601 0004 034B     		ldr	r3, .L139
 2602 0006 0122     		movs	r2, #1
 2603 0008 1A60     		str	r2, [r3]
 111:.\main.c      **** }
 2604              		.loc 4 111 0
 2605 000a BD46     		mov	sp, r7
 2606              		.cfi_def_cfa_register 13
 2607              		@ sp needed
 2608 000c 5DF8047B 		ldr	r7, [sp], #4
 2609              		.cfi_restore 7
 2610              		.cfi_def_cfa_offset 0
 2611 0010 7047     		bx	lr
 2612              	.L140:
 2613 0012 00BF     		.align	2
 2614              	.L139:
 2615 0014 00000000 		.word	adc_flag
 2616              		.cfi_endproc
 2617              	.LFE82:
 2618              		.size	ADC_ISR, .-ADC_ISR
 2619              		.section	.rodata
 2620 00be 0000     		.align	2
 2621              	.LC12:
 2622 00c0 23232054 		.ascii	"## Testing Algorithm ##\015\012\000"
 2622      65737469 
 2622      6E672041 
 2622      6C676F72 
 2622      6974686D 
 2623 00da 0000     		.align	2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 57


 2624              	.LC13:
 2625 00dc 53686172 		.ascii	"Sharp turn right\015\012\000"
 2625      70207475 
 2625      726E2072 
 2625      69676874 
 2625      0D0A00
 2626 00ef 00       		.align	2
 2627              	.LC14:
 2628 00f0 53686172 		.ascii	"Sharp turn left\015\012\000"
 2628      70207475 
 2628      726E206C 
 2628      6566740D 
 2628      0A00
 2629 0102 0000     		.align	2
 2630              	.LC15:
 2631 0104 55207475 		.ascii	"U turn\015\012\000"
 2631      726E0D0A 
 2631      00
 2632 010d 000000   		.align	2
 2633              	.LC16:
 2634 0110 53747261 		.ascii	"Straight\015\012\000"
 2634      69676874 
 2634      0D0A00
 2635              		.section	.text.main,"ax",%progbits
 2636              		.align	2
 2637              		.global	main
 2638              		.thumb
 2639              		.thumb_func
 2640              		.type	main, %function
 2641              	main:
 2642              	.LFB83:
 112:.\main.c      **** 
 113:.\main.c      **** /** ## Notes
 114:.\main.c      ****     
 115:.\main.c      ****     Ratio of linear distance to quad decoder ticks
 116:.\main.c      ****     One revolution gives a linear distance (in cm)
 117:.\main.c      ****     Each revolution is 57 ticks (228 for 4x mode)
 118:.\main.c      ****     Centimetres per tick = linear distance / countM(1|2)
 119:.\main.c      ****     
 120:.\main.c      ****     Decoder use a 4x count, so each revolution gives 4 counts
 121:.\main.c      ****     Sampling rate is determined by our 100ms timer (might be a little slow)
 122:.\main.c      ****     
 123:.\main.c      ****     ## Algorithm Control Flow
 124:.\main.c      ****     - Get ADC value for each channel
 125:.\main.c      ****     - Get decoder val for M1 & M2
 126:.\main.c      ****     - Use these values to drive the movement of the robot
 127:.\main.c      ****     
 128:.\main.c      **** */
 129:.\main.c      **** 
 130:.\main.c      **** int main()
 131:.\main.c      **** {
 2643              		.loc 4 131 0
 2644              		.cfi_startproc
 2645              		@ args = 0, pretend = 0, frame = 136
 2646              		@ frame_needed = 1, uses_anonymous_args = 0
 2647 0000 80B5     		push	{r7, lr}
 2648              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 58


 2649              		.cfi_offset 7, -8
 2650              		.cfi_offset 14, -4
 2651 0002 A2B0     		sub	sp, sp, #136
 2652              		.cfi_def_cfa_offset 144
 2653 0004 00AF     		add	r7, sp, #0
 2654              		.cfi_def_cfa_register 7
 132:.\main.c      ****     // Change these for pathing
 133:.\main.c      **** //    point start = {.x=3, .y=13};//17,5; 1,1; 3,13
 134:.\main.c      **** //    point destination = {.x = 11, .y = 13};//3,13; 17,13;11,13
 135:.\main.c      **** //    point route[BFS_ROUTE_SIZE];        //facing up; right; 
 136:.\main.c      **** //
 137:.\main.c      **** //    int i;
 138:.\main.c      **** //    for (i = 0; i < BFS_ROUTE_SIZE; i++) {
 139:.\main.c      **** //        route[i] = (point){.x=-1, .y=-1};
 140:.\main.c      **** //    }
 141:.\main.c      **** //
 142:.\main.c      **** //    BFS(start, destination, route);
 143:.\main.c      **** //
 144:.\main.c      **** //    int directions[MAX_COMMAND_LENGTH];
 145:.\main.c      **** //    convertCoordinatesToCommands(route, directions);
 146:.\main.c      ****     
 147:.\main.c      ****     // delay
 148:.\main.c      ****     CyDelay(2000);
 2655              		.loc 4 148 0
 2656 0006 4FF4FA60 		mov	r0, #2000
 2657 000a FFF7FEFF 		bl	CyDelay
 149:.\main.c      ****     
 150:.\main.c      ****     // --------------------------------
 151:.\main.c      ****     // ----- INITIALIZATIONS ----------
 152:.\main.c      ****     // ================================
 153:.\main.c      ****     CYGlobalIntEnable;
 2658              		.loc 4 153 0
 2659              	@ 153 ".\main.c" 1
 2660 000e 62B6     		CPSIE   i
 2661              	@ 0 "" 2
 154:.\main.c      ****     
 155:.\main.c      ****     // ------------ USB SETUP ------------    
 156:.\main.c      ****     #ifdef USE_USB    
 157:.\main.c      ****         USBUART_Start(0, USBUART_5V_OPERATION);
 2662              		.loc 4 157 0
 2663              		.thumb
 2664 0010 0020     		movs	r0, #0
 2665 0012 0121     		movs	r1, #1
 2666 0014 FFF7FEFF 		bl	USBUART_Start
 158:.\main.c      ****     #endif
 159:.\main.c      ****     
 160:.\main.c      ****     // PWMs
 161:.\main.c      ****     PWM_1_Start();
 2667              		.loc 4 161 0
 2668 0018 FFF7FEFF 		bl	PWM_1_Start
 162:.\main.c      ****     PWM_2_Start();
 2669              		.loc 4 162 0
 2670 001c FFF7FEFF 		bl	PWM_2_Start
 163:.\main.c      ****     
 164:.\main.c      ****     // Timer for encoder
 165:.\main.c      ****     Timer_TS_Start();
 2671              		.loc 4 165 0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 59


 2672 0020 FFF7FEFF 		bl	Timer_TS_Start
 166:.\main.c      ****     isr_TS_Start(); // Timer interrupts need to be started independently
 2673              		.loc 4 166 0
 2674 0024 FFF7FEFF 		bl	isr_TS_Start
 167:.\main.c      ****     isr_TS_StartEx(ENCODER_ISR);
 2675              		.loc 4 167 0
 2676 0028 8848     		ldr	r0, .L151
 2677 002a FFF7FEFF 		bl	isr_TS_StartEx
 168:.\main.c      ****     
 169:.\main.c      ****     // Quad Decoders
 170:.\main.c      ****     QuadDec_M1_Start();
 2678              		.loc 4 170 0
 2679 002e FFF7FEFF 		bl	QuadDec_M1_Start
 171:.\main.c      ****     QuadDec_M2_Start();
 2680              		.loc 4 171 0
 2681 0032 FFF7FEFF 		bl	QuadDec_M2_Start
 172:.\main.c      ****     
 173:.\main.c      ****     // ADC
 174:.\main.c      ****     ADC_Start(); // Start ADC
 2682              		.loc 4 174 0
 2683 0036 FFF7FEFF 		bl	ADC_Start
 175:.\main.c      ****     ADC_IRQ_Enable(); // Enable ADC interrupts
 2684              		.loc 4 175 0
 2685 003a FFF7FEFF 		bl	ADC_IRQ_Enable
 176:.\main.c      ****     ADC_StartConvert(); // Start conversions
 2686              		.loc 4 176 0
 2687 003e FFF7FEFF 		bl	ADC_StartConvert
 177:.\main.c      ****     isr_eoc_StartEx(ADC_ISR); // link interrupt for ADC
 2688              		.loc 4 177 0
 2689 0042 8348     		ldr	r0, .L151+4
 2690 0044 FFF7FEFF 		bl	isr_eoc_StartEx
 178:.\main.c      ****     
 179:.\main.c      ****     // To make sure wheels rotate in the same direction i.e. forward
 180:.\main.c      ****     INV2_Write(1);
 2691              		.loc 4 180 0
 2692 0048 0120     		movs	r0, #1
 2693 004a FFF7FEFF 		bl	INV2_Write
 181:.\main.c      ****     
 182:.\main.c      ****     int right_wheel_count = DESIRED_COUNT;
 2694              		.loc 4 182 0
 2695 004e 0823     		movs	r3, #8
 2696 0050 FB67     		str	r3, [r7, #124]
 183:.\main.c      ****     int left_wheel_count = DESIRED_COUNT;
 2697              		.loc 4 183 0
 2698 0052 0823     		movs	r3, #8
 2699 0054 BB67     		str	r3, [r7, #120]
 184:.\main.c      ****     
 185:.\main.c      ****     int direction_index = 0;
 2700              		.loc 4 185 0
 2701 0056 0023     		movs	r3, #0
 2702 0058 C7F88430 		str	r3, [r7, #132]
 186:.\main.c      ****     int directions[30] = {2, RIGHT_TURN, 2, RIGHT_TURN, 4, RIGHT_TURN,2, LEFT_TURN, 4, LEFT_TURN, 2
 2703              		.loc 4 186 0
 2704 005c 3B46     		mov	r3, r7
 2705 005e 7822     		movs	r2, #120
 2706 0060 1846     		mov	r0, r3
 2707 0062 0021     		movs	r1, #0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 60


 2708 0064 FFF7FEFF 		bl	memset
 2709 0068 0223     		movs	r3, #2
 2710 006a 3B60     		str	r3, [r7]
 2711 006c 6FF00103 		mvn	r3, #1
 2712 0070 7B60     		str	r3, [r7, #4]
 2713 0072 0223     		movs	r3, #2
 2714 0074 BB60     		str	r3, [r7, #8]
 2715 0076 6FF00103 		mvn	r3, #1
 2716 007a FB60     		str	r3, [r7, #12]
 2717 007c 0423     		movs	r3, #4
 2718 007e 3B61     		str	r3, [r7, #16]
 2719 0080 6FF00103 		mvn	r3, #1
 2720 0084 7B61     		str	r3, [r7, #20]
 2721 0086 0223     		movs	r3, #2
 2722 0088 BB61     		str	r3, [r7, #24]
 2723 008a 4FF0FF33 		mov	r3, #-1
 2724 008e FB61     		str	r3, [r7, #28]
 2725 0090 0423     		movs	r3, #4
 2726 0092 3B62     		str	r3, [r7, #32]
 2727 0094 4FF0FF33 		mov	r3, #-1
 2728 0098 7B62     		str	r3, [r7, #36]
 2729 009a 0223     		movs	r3, #2
 2730 009c BB62     		str	r3, [r7, #40]
 2731 009e 4FF0FF33 		mov	r3, #-1
 2732 00a2 FB62     		str	r3, [r7, #44]
 2733 00a4 0223     		movs	r3, #2
 2734 00a6 3B63     		str	r3, [r7, #48]
 2735 00a8 6FF00103 		mvn	r3, #1
 2736 00ac 7B63     		str	r3, [r7, #52]
 2737 00ae 0423     		movs	r3, #4
 2738 00b0 BB63     		str	r3, [r7, #56]
 2739 00b2 6FF00203 		mvn	r3, #2
 2740 00b6 FB63     		str	r3, [r7, #60]
 2741 00b8 0223     		movs	r3, #2
 2742 00ba 3B64     		str	r3, [r7, #64]
 2743 00bc 4FF0FF33 		mov	r3, #-1
 2744 00c0 7B64     		str	r3, [r7, #68]
 2745 00c2 0423     		movs	r3, #4
 2746 00c4 BB64     		str	r3, [r7, #72]
 2747 00c6 6FF00103 		mvn	r3, #1
 2748 00ca FB64     		str	r3, [r7, #76]
 2749 00cc 0223     		movs	r3, #2
 2750 00ce 3B65     		str	r3, [r7, #80]
 2751 00d0 4FF0FF33 		mov	r3, #-1
 2752 00d4 7B65     		str	r3, [r7, #84]
 2753 00d6 0223     		movs	r3, #2
 2754 00d8 BB65     		str	r3, [r7, #88]
 2755 00da 6FF00103 		mvn	r3, #1
 2756 00de FB65     		str	r3, [r7, #92]
 2757 00e0 0223     		movs	r3, #2
 2758 00e2 3B66     		str	r3, [r7, #96]
 2759 00e4 4FF0FF33 		mov	r3, #-1
 2760 00e8 7B66     		str	r3, [r7, #100]
 2761 00ea 0423     		movs	r3, #4
 2762 00ec BB66     		str	r3, [r7, #104]
 187:.\main.c      ****     //int directions[2] = {RIGHT_TURN, EMPTY_COMMAND};
 188:.\main.c      ****     
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 61


 189:.\main.c      ****     usbPutString("## Testing Algorithm ##\r\n");
 2763              		.loc 4 189 0
 2764 00ee 5948     		ldr	r0, .L151+8
 2765 00f0 FFF7FEFF 		bl	usbPutString
 190:.\main.c      ****     printCommandsUSB(directions);
 2766              		.loc 4 190 0
 2767 00f4 3B46     		mov	r3, r7
 2768 00f6 1846     		mov	r0, r3
 2769 00f8 FFF7FEFF 		bl	printCommandsUSB
 191:.\main.c      ****         
 192:.\main.c      ****     while (directions[direction_index] != 0) {
 2770              		.loc 4 192 0
 2771 00fc 88E0     		b	.L142
 2772              	.L149:
 193:.\main.c      ****         startWheels();
 2773              		.loc 4 193 0
 2774 00fe FFF7FEFF 		bl	startWheels
 194:.\main.c      ****         
 195:.\main.c      ****         if (directions[direction_index] > DISTANCE_THRESHOLD) break;
 2775              		.loc 4 195 0
 2776 0102 D7F88430 		ldr	r3, [r7, #132]
 2777 0106 9B00     		lsls	r3, r3, #2
 2778 0108 07F18802 		add	r2, r7, #136
 2779 010c 1344     		add	r3, r3, r2
 2780 010e 53F8883C 		ldr	r3, [r3, #-136]
 2781 0112 142B     		cmp	r3, #20
 2782 0114 00DD     		ble	.L143
 2783 0116 86E0     		b	.L144
 2784              	.L143:
 196:.\main.c      ****         
 197:.\main.c      ****         if (directions[direction_index] == RIGHT_TURN) {
 2785              		.loc 4 197 0
 2786 0118 D7F88430 		ldr	r3, [r7, #132]
 2787 011c 9B00     		lsls	r3, r3, #2
 2788 011e 07F18802 		add	r2, r7, #136
 2789 0122 1344     		add	r3, r3, r2
 2790 0124 53F8883C 		ldr	r3, [r3, #-136]
 2791 0128 13F1020F 		cmn	r3, #2
 2792 012c 0BD1     		bne	.L145
 198:.\main.c      ****             usbPutString("Sharp turn right\r\n");
 2793              		.loc 4 198 0
 2794 012e 4A48     		ldr	r0, .L151+12
 2795 0130 FFF7FEFF 		bl	usbPutString
 199:.\main.c      ****             sharpTurnRight(&right_wheel_count, &left_wheel_count);
 2796              		.loc 4 199 0
 2797 0134 07F17C02 		add	r2, r7, #124
 2798 0138 07F17803 		add	r3, r7, #120
 2799 013c 1046     		mov	r0, r2
 2800 013e 1946     		mov	r1, r3
 2801 0140 FFF7FEFF 		bl	sharpTurnRight
 2802 0144 4EE0     		b	.L146
 2803              	.L145:
 200:.\main.c      ****         } else if (directions[direction_index] == LEFT_TURN) {
 2804              		.loc 4 200 0
 2805 0146 D7F88430 		ldr	r3, [r7, #132]
 2806 014a 9B00     		lsls	r3, r3, #2
 2807 014c 07F18802 		add	r2, r7, #136
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 62


 2808 0150 1344     		add	r3, r3, r2
 2809 0152 53F8883C 		ldr	r3, [r3, #-136]
 2810 0156 B3F1FF3F 		cmp	r3, #-1
 2811 015a 0BD1     		bne	.L147
 201:.\main.c      ****             usbPutString("Sharp turn left\r\n");
 2812              		.loc 4 201 0
 2813 015c 3F48     		ldr	r0, .L151+16
 2814 015e FFF7FEFF 		bl	usbPutString
 202:.\main.c      ****             sharpTurnLeft(&right_wheel_count, &left_wheel_count);
 2815              		.loc 4 202 0
 2816 0162 07F17C02 		add	r2, r7, #124
 2817 0166 07F17803 		add	r3, r7, #120
 2818 016a 1046     		mov	r0, r2
 2819 016c 1946     		mov	r1, r3
 2820 016e FFF7FEFF 		bl	sharpTurnLeft
 2821 0172 37E0     		b	.L146
 2822              	.L147:
 203:.\main.c      ****         } else if (directions[direction_index] == U_TURN) {
 2823              		.loc 4 203 0
 2824 0174 D7F88430 		ldr	r3, [r7, #132]
 2825 0178 9B00     		lsls	r3, r3, #2
 2826 017a 07F18802 		add	r2, r7, #136
 2827 017e 1344     		add	r3, r3, r2
 2828 0180 53F8883C 		ldr	r3, [r3, #-136]
 2829 0184 13F1030F 		cmn	r3, #3
 2830 0188 0BD1     		bne	.L148
 204:.\main.c      ****             usbPutString("U turn\r\n");
 2831              		.loc 4 204 0
 2832 018a 3548     		ldr	r0, .L151+20
 2833 018c FFF7FEFF 		bl	usbPutString
 205:.\main.c      ****             uTurn(&right_wheel_count, &left_wheel_count);
 2834              		.loc 4 205 0
 2835 0190 07F17C02 		add	r2, r7, #124
 2836 0194 07F17803 		add	r3, r7, #120
 2837 0198 1046     		mov	r0, r2
 2838 019a 1946     		mov	r1, r3
 2839 019c FFF7FEFF 		bl	uTurn
 2840 01a0 20E0     		b	.L146
 2841              	.L148:
 206:.\main.c      ****         } else if (directions[direction_index] <= DISTANCE_THRESHOLD){
 2842              		.loc 4 206 0
 2843 01a2 D7F88430 		ldr	r3, [r7, #132]
 2844 01a6 9B00     		lsls	r3, r3, #2
 2845 01a8 07F18802 		add	r2, r7, #136
 2846 01ac 1344     		add	r3, r3, r2
 2847 01ae 53F8883C 		ldr	r3, [r3, #-136]
 2848 01b2 142B     		cmp	r3, #20
 2849 01b4 16DC     		bgt	.L146
 2850              	.LBB5:
 207:.\main.c      ****             usbPutString("Straight\r\n");
 2851              		.loc 4 207 0
 2852 01b6 2B48     		ldr	r0, .L151+24
 2853 01b8 FFF7FEFF 		bl	usbPutString
 208:.\main.c      ****             // Change this for int array
 209:.\main.c      ****             //int num_coords = directions[direction_index] - '0';
 210:.\main.c      ****             int num_coords = directions[direction_index];
 2854              		.loc 4 210 0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 63


 2855 01bc D7F88430 		ldr	r3, [r7, #132]
 2856 01c0 9B00     		lsls	r3, r3, #2
 2857 01c2 07F18802 		add	r2, r7, #136
 2858 01c6 1344     		add	r3, r3, r2
 2859 01c8 53F8883C 		ldr	r3, [r3, #-136]
 2860 01cc C7F88030 		str	r3, [r7, #128]
 211:.\main.c      ****             goStraightForBlock(num_coords, &right_wheel_count, &left_wheel_count);
 2861              		.loc 4 211 0
 2862 01d0 07F17C02 		add	r2, r7, #124
 2863 01d4 07F17803 		add	r3, r7, #120
 2864 01d8 D7F88000 		ldr	r0, [r7, #128]
 2865 01dc 1146     		mov	r1, r2
 2866 01de 1A46     		mov	r2, r3
 2867 01e0 FFF7FEFF 		bl	goStraightForBlock
 2868              	.L146:
 2869              	.LBE5:
 212:.\main.c      ****         }
 213:.\main.c      ****         stopWheels();
 2870              		.loc 4 213 0
 2871 01e4 FFF7FEFF 		bl	stopWheels
 214:.\main.c      ****         printSingleCommandUSB(directions[direction_index]);
 2872              		.loc 4 214 0
 2873 01e8 D7F88430 		ldr	r3, [r7, #132]
 2874 01ec 9B00     		lsls	r3, r3, #2
 2875 01ee 07F18802 		add	r2, r7, #136
 2876 01f2 1344     		add	r3, r3, r2
 2877 01f4 53F8883C 		ldr	r3, [r3, #-136]
 2878 01f8 1846     		mov	r0, r3
 2879 01fa FFF7FEFF 		bl	printSingleCommandUSB
 215:.\main.c      ****         CyDelay(1000);
 2880              		.loc 4 215 0
 2881 01fe 4FF47A70 		mov	r0, #1000
 2882 0202 FFF7FEFF 		bl	CyDelay
 216:.\main.c      ****         
 217:.\main.c      **** //        int num_coords;
 218:.\main.c      **** //            
 219:.\main.c      **** //        switch(directions[direction_index]) {
 220:.\main.c      **** //            case 'R':
 221:.\main.c      **** //                sharpTurnRight(&right_wheel_count, &left_wheel_count);
 222:.\main.c      **** //                usbPutString("Sharp turn right\r\n");
 223:.\main.c      **** //                break;
 224:.\main.c      **** //            case 'L':
 225:.\main.c      **** //                sharpTurnLeft(&right_wheel_count, &left_wheel_count);
 226:.\main.c      **** //                usbPutString("Sharp turn left\r\n");
 227:.\main.c      **** //                break;
 228:.\main.c      **** //            case 'U':
 229:.\main.c      **** //                uTurn(&right_wheel_count, &left_wheel_count);
 230:.\main.c      **** //                usbPutString("U turn\r\n");
 231:.\main.c      **** //                break;
 232:.\main.c      **** //            default: 
 233:.\main.c      **** //                usbPutString("Straight\r\n");
 234:.\main.c      **** //                num_coords = directions[direction_index] - '0';
 235:.\main.c      **** //                goStraightForBlock(num_coords, &right_wheel_count, &left_wheel_count);
 236:.\main.c      **** //                break;
 237:.\main.c      **** //        }
 238:.\main.c      ****         direction_index++;
 2883              		.loc 4 238 0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 64


 2884 0206 D7F88430 		ldr	r3, [r7, #132]
 2885 020a 0133     		adds	r3, r3, #1
 2886 020c C7F88430 		str	r3, [r7, #132]
 2887              	.L142:
 192:.\main.c      ****         startWheels();
 2888              		.loc 4 192 0
 2889 0210 D7F88430 		ldr	r3, [r7, #132]
 2890 0214 9B00     		lsls	r3, r3, #2
 2891 0216 07F18802 		add	r2, r7, #136
 2892 021a 1344     		add	r3, r3, r2
 2893 021c 53F8883C 		ldr	r3, [r3, #-136]
 2894 0220 002B     		cmp	r3, #0
 2895 0222 7FF46CAF 		bne	.L149
 2896              	.L144:
 239:.\main.c      ****     }
 240:.\main.c      ****     
 241:.\main.c      ****     LED_Write(1);
 2897              		.loc 4 241 0
 2898 0226 0120     		movs	r0, #1
 2899 0228 FFF7FEFF 		bl	LED_Write
 242:.\main.c      ****     
 243:.\main.c      ****     PWM_1_WriteCompare(0);
 2900              		.loc 4 243 0
 2901 022c 0020     		movs	r0, #0
 2902 022e FFF7FEFF 		bl	PWM_1_WriteCompare
 244:.\main.c      ****     PWM_2_WriteCompare(0);
 2903              		.loc 4 244 0
 2904 0232 0020     		movs	r0, #0
 2905 0234 FFF7FEFF 		bl	PWM_2_WriteCompare
 245:.\main.c      ****     
 246:.\main.c      ****     // delay
 247:.\main.c      ****     CyDelay(20000);
 2906              		.loc 4 247 0
 2907 0238 44F62060 		movw	r0, #20000
 2908 023c FFF7FEFF 		bl	CyDelay
 248:.\main.c      ****     
 249:.\main.c      ****     return 0;
 2909              		.loc 4 249 0
 2910 0240 0023     		movs	r3, #0
 250:.\main.c      **** }
 2911              		.loc 4 250 0
 2912 0242 1846     		mov	r0, r3
 2913 0244 8837     		adds	r7, r7, #136
 2914              		.cfi_def_cfa_offset 8
 2915 0246 BD46     		mov	sp, r7
 2916              		.cfi_def_cfa_register 13
 2917              		@ sp needed
 2918 0248 80BD     		pop	{r7, pc}
 2919              	.L152:
 2920 024a 00BF     		.align	2
 2921              	.L151:
 2922 024c 00000000 		.word	ENCODER_ISR
 2923 0250 00000000 		.word	ADC_ISR
 2924 0254 C0000000 		.word	.LC12
 2925 0258 DC000000 		.word	.LC13
 2926 025c F0000000 		.word	.LC14
 2927 0260 04010000 		.word	.LC15
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 65


 2928 0264 10010000 		.word	.LC16
 2929              		.cfi_endproc
 2930              	.LFE83:
 2931              		.size	main, .-main
 2932              		.section	.text.getValForChannel,"ax",%progbits
 2933              		.align	2
 2934              		.global	getValForChannel
 2935              		.thumb
 2936              		.thumb_func
 2937              		.type	getValForChannel, %function
 2938              	getValForChannel:
 2939              	.LFB84:
 251:.\main.c      **** 
 252:.\main.c      **** // --------------------------------------------- ADC ------------------------------------------
 253:.\main.c      **** // Simple ADC conversion
 254:.\main.c      **** int32 getValForChannel(int16 n){
 2940              		.loc 4 254 0
 2941              		.cfi_startproc
 2942              		@ args = 0, pretend = 0, frame = 8
 2943              		@ frame_needed = 1, uses_anonymous_args = 0
 2944 0000 80B5     		push	{r7, lr}
 2945              		.cfi_def_cfa_offset 8
 2946              		.cfi_offset 7, -8
 2947              		.cfi_offset 14, -4
 2948 0002 82B0     		sub	sp, sp, #8
 2949              		.cfi_def_cfa_offset 16
 2950 0004 00AF     		add	r7, sp, #0
 2951              		.cfi_def_cfa_register 7
 2952 0006 0346     		mov	r3, r0
 2953 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 255:.\main.c      ****     return ADC_CountsTo_mVolts(ADC_GetResult16(n));
 2954              		.loc 4 255 0
 2955 000a FB88     		ldrh	r3, [r7, #6]
 2956 000c 1846     		mov	r0, r3
 2957 000e FFF7FEFF 		bl	ADC_GetResult16
 2958 0012 0346     		mov	r3, r0
 2959 0014 1846     		mov	r0, r3
 2960 0016 FFF7FEFF 		bl	ADC_CountsTo_mVolts
 2961 001a 0346     		mov	r3, r0
 256:.\main.c      **** }
 2962              		.loc 4 256 0
 2963 001c 1846     		mov	r0, r3
 2964 001e 0837     		adds	r7, r7, #8
 2965              		.cfi_def_cfa_offset 8
 2966 0020 BD46     		mov	sp, r7
 2967              		.cfi_def_cfa_register 13
 2968              		@ sp needed
 2969 0022 80BD     		pop	{r7, pc}
 2970              		.cfi_endproc
 2971              	.LFE84:
 2972              		.size	getValForChannel, .-getValForChannel
 2973              		.section	.rodata
 2974 011b 00       		.align	2
 2975              	.LC17:
 2976 011c 2000     		.ascii	" \000"
 2977 011e 0000     		.align	2
 2978              	.LC18:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 66


 2979 0120 0D0A00   		.ascii	"\015\012\000"
 2980              		.section	.text.updateSensorValues,"ax",%progbits
 2981              		.align	2
 2982              		.global	updateSensorValues
 2983              		.thumb
 2984              		.thumb_func
 2985              		.type	updateSensorValues, %function
 2986              	updateSensorValues:
 2987              	.LFB85:
 257:.\main.c      **** 
 258:.\main.c      **** void updateSensorValues(){
 2988              		.loc 4 258 0
 2989              		.cfi_startproc
 2990              		@ args = 0, pretend = 0, frame = 40
 2991              		@ frame_needed = 1, uses_anonymous_args = 0
 2992 0000 80B5     		push	{r7, lr}
 2993              		.cfi_def_cfa_offset 8
 2994              		.cfi_offset 7, -8
 2995              		.cfi_offset 14, -4
 2996 0002 8AB0     		sub	sp, sp, #40
 2997              		.cfi_def_cfa_offset 48
 2998 0004 00AF     		add	r7, sp, #0
 2999              		.cfi_def_cfa_register 7
 259:.\main.c      ****     // update each sensor with the maximum reading so far
 260:.\main.c      ****     int i;
 261:.\main.c      ****     for (i = 0; i < NUM_SENSORS; i++){
 3000              		.loc 4 261 0
 3001 0006 0023     		movs	r3, #0
 3002 0008 7B62     		str	r3, [r7, #36]
 3003 000a 15E0     		b	.L156
 3004              	.L158:
 3005              	.LBB6:
 262:.\main.c      ****         int reading = getValForChannel(i);
 3006              		.loc 4 262 0
 3007 000c 7B6A     		ldr	r3, [r7, #36]
 3008 000e 9BB2     		uxth	r3, r3
 3009 0010 1BB2     		sxth	r3, r3
 3010 0012 1846     		mov	r0, r3
 3011 0014 FFF7FEFF 		bl	getValForChannel
 3012 0018 3862     		str	r0, [r7, #32]
 263:.\main.c      ****         if (reading > adc_readings[i]) {
 3013              		.loc 4 263 0
 3014 001a 2D4A     		ldr	r2, .L163
 3015 001c 7B6A     		ldr	r3, [r7, #36]
 3016 001e 52F82320 		ldr	r2, [r2, r3, lsl #2]
 3017 0022 3B6A     		ldr	r3, [r7, #32]
 3018 0024 9A42     		cmp	r2, r3
 3019 0026 04DA     		bge	.L157
 264:.\main.c      ****             adc_readings[i] = reading;
 3020              		.loc 4 264 0
 3021 0028 2949     		ldr	r1, .L163
 3022 002a 7B6A     		ldr	r3, [r7, #36]
 3023 002c 3A6A     		ldr	r2, [r7, #32]
 3024 002e 41F82320 		str	r2, [r1, r3, lsl #2]
 3025              	.L157:
 3026              	.LBE6:
 261:.\main.c      ****         int reading = getValForChannel(i);
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 67


 3027              		.loc 4 261 0 discriminator 2
 3028 0032 7B6A     		ldr	r3, [r7, #36]
 3029 0034 0133     		adds	r3, r3, #1
 3030 0036 7B62     		str	r3, [r7, #36]
 3031              	.L156:
 261:.\main.c      ****         int reading = getValForChannel(i);
 3032              		.loc 4 261 0 is_stmt 0 discriminator 1
 3033 0038 7B6A     		ldr	r3, [r7, #36]
 3034 003a 052B     		cmp	r3, #5
 3035 003c E6DD     		ble	.L158
 265:.\main.c      ****         }
 266:.\main.c      ****     }
 267:.\main.c      **** 
 268:.\main.c      ****     char buff[32];
 269:.\main.c      ****     
 270:.\main.c      ****     sample_count++;
 3036              		.loc 4 270 0 is_stmt 1
 3037 003e 254B     		ldr	r3, .L163+4
 3038 0040 1B68     		ldr	r3, [r3]
 3039 0042 0133     		adds	r3, r3, #1
 3040 0044 234A     		ldr	r2, .L163+4
 3041 0046 1360     		str	r3, [r2]
 271:.\main.c      ****     if (sample_count == ADC_READINGS_SIZE){
 3042              		.loc 4 271 0
 3043 0048 224B     		ldr	r3, .L163+4
 3044 004a 1B68     		ldr	r3, [r3]
 3045 004c C82B     		cmp	r3, #200
 3046 004e 39D1     		bne	.L159
 272:.\main.c      ****         // Black = 1 (high voltage level)
 273:.\main.c      ****         for (i = 0; i < NUM_SENSORS; i++){
 3047              		.loc 4 273 0
 3048 0050 0023     		movs	r3, #0
 3049 0052 7B62     		str	r3, [r7, #36]
 3050 0054 29E0     		b	.L160
 3051              	.L161:
 274:.\main.c      ****             itoa(adc_readings[i], buff, 10);
 3052              		.loc 4 274 0 discriminator 3
 3053 0056 1E4A     		ldr	r2, .L163
 3054 0058 7B6A     		ldr	r3, [r7, #36]
 3055 005a 52F82320 		ldr	r2, [r2, r3, lsl #2]
 3056 005e 3B46     		mov	r3, r7
 3057 0060 1046     		mov	r0, r2
 3058 0062 1946     		mov	r1, r3
 3059 0064 0A22     		movs	r2, #10
 3060 0066 FFF7FEFF 		bl	itoa
 275:.\main.c      ****             usbPutString(buff);
 3061              		.loc 4 275 0 discriminator 3
 3062 006a 3B46     		mov	r3, r7
 3063 006c 1846     		mov	r0, r3
 3064 006e FFF7FEFF 		bl	usbPutString
 276:.\main.c      ****             usbPutString(" ");
 3065              		.loc 4 276 0 discriminator 3
 3066 0072 1948     		ldr	r0, .L163+8
 3067 0074 FFF7FEFF 		bl	usbPutString
 277:.\main.c      ****             sensor_readings[i] = !!(adc_readings[i] < LIGHT_LEVEL);
 3068              		.loc 4 277 0 discriminator 3
 3069 0078 154A     		ldr	r2, .L163
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 68


 3070 007a 7B6A     		ldr	r3, [r7, #36]
 3071 007c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3072 0080 40F22B12 		movw	r2, #299
 3073 0084 9342     		cmp	r3, r2
 3074 0086 D4BF     		ite	le
 3075 0088 0123     		movle	r3, #1
 3076 008a 0023     		movgt	r3, #0
 3077 008c DBB2     		uxtb	r3, r3
 3078 008e D9B2     		uxtb	r1, r3
 3079 0090 124A     		ldr	r2, .L163+12
 3080 0092 7B6A     		ldr	r3, [r7, #36]
 3081 0094 1344     		add	r3, r3, r2
 3082 0096 0A46     		mov	r2, r1
 3083 0098 1A70     		strb	r2, [r3]
 278:.\main.c      ****             adc_readings[i] = 0; // Reset max value from samples
 3084              		.loc 4 278 0 discriminator 3
 3085 009a 0D4A     		ldr	r2, .L163
 3086 009c 7B6A     		ldr	r3, [r7, #36]
 3087 009e 0021     		movs	r1, #0
 3088 00a0 42F82310 		str	r1, [r2, r3, lsl #2]
 273:.\main.c      ****             itoa(adc_readings[i], buff, 10);
 3089              		.loc 4 273 0 discriminator 3
 3090 00a4 7B6A     		ldr	r3, [r7, #36]
 3091 00a6 0133     		adds	r3, r3, #1
 3092 00a8 7B62     		str	r3, [r7, #36]
 3093              	.L160:
 273:.\main.c      ****             itoa(adc_readings[i], buff, 10);
 3094              		.loc 4 273 0 is_stmt 0 discriminator 1
 3095 00aa 7B6A     		ldr	r3, [r7, #36]
 3096 00ac 052B     		cmp	r3, #5
 3097 00ae D2DD     		ble	.L161
 279:.\main.c      ****         }
 280:.\main.c      ****         
 281:.\main.c      ****         usbPutString("\r\n");
 3098              		.loc 4 281 0 is_stmt 1
 3099 00b0 0B48     		ldr	r0, .L163+16
 3100 00b2 FFF7FEFF 		bl	usbPutString
 282:.\main.c      ****         
 283:.\main.c      ****         ADC_DEBUG_Write(1);
 3101              		.loc 4 283 0
 3102 00b6 0120     		movs	r0, #1
 3103 00b8 FFF7FEFF 		bl	ADC_DEBUG_Write
 284:.\main.c      ****         sample_count = 0;
 3104              		.loc 4 284 0
 3105 00bc 054B     		ldr	r3, .L163+4
 3106 00be 0022     		movs	r2, #0
 3107 00c0 1A60     		str	r2, [r3]
 3108 00c2 02E0     		b	.L155
 3109              	.L159:
 285:.\main.c      ****     }
 286:.\main.c      ****     else ADC_DEBUG_Write(0);
 3110              		.loc 4 286 0
 3111 00c4 0020     		movs	r0, #0
 3112 00c6 FFF7FEFF 		bl	ADC_DEBUG_Write
 3113              	.L155:
 287:.\main.c      ****     
 288:.\main.c      **** }
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 69


 3114              		.loc 4 288 0
 3115 00ca 2837     		adds	r7, r7, #40
 3116              		.cfi_def_cfa_offset 8
 3117 00cc BD46     		mov	sp, r7
 3118              		.cfi_def_cfa_register 13
 3119              		@ sp needed
 3120 00ce 80BD     		pop	{r7, pc}
 3121              	.L164:
 3122              		.align	2
 3123              	.L163:
 3124 00d0 00000000 		.word	adc_readings
 3125 00d4 00000000 		.word	sample_count
 3126 00d8 1C010000 		.word	.LC17
 3127 00dc 00000000 		.word	sensor_readings
 3128 00e0 20010000 		.word	.LC18
 3129              		.cfi_endproc
 3130              	.LFE85:
 3131              		.size	updateSensorValues, .-updateSensorValues
 3132              		.global	__aeabi_fadd
 3133              		.section	.rodata
 3134 0123 00       		.align	2
 3135              	.LC19:
 3136 0124 202D2074 		.ascii	" - turn right\015\012\000"
 3136      75726E20 
 3136      72696768 
 3136      740D0A00 
 3137              		.align	2
 3138              	.LC20:
 3139 0134 202D2074 		.ascii	" - turn left\015\012\000"
 3139      75726E20 
 3139      6C656674 
 3139      0D0A00
 3140              		.global	__aeabi_i2f
 3141              		.global	__aeabi_fcmpgt
 3142              		.section	.text.goStraightForBlock,"ax",%progbits
 3143              		.align	2
 3144              		.global	goStraightForBlock
 3145              		.thumb
 3146              		.thumb_func
 3147              		.type	goStraightForBlock, %function
 3148              	goStraightForBlock:
 3149              	.LFB86:
 289:.\main.c      **** 
 290:.\main.c      **** // --------------------------------------------- STRAIGHT -----------------------------------------
 291:.\main.c      **** void goStraightForBlock(int desired_blocks, int *right_wheel_count, int *left_wheel_count) {
 3150              		.loc 4 291 0
 3151              		.cfi_startproc
 3152              		@ args = 0, pretend = 0, frame = 24
 3153              		@ frame_needed = 1, uses_anonymous_args = 0
 3154 0000 80B5     		push	{r7, lr}
 3155              		.cfi_def_cfa_offset 8
 3156              		.cfi_offset 7, -8
 3157              		.cfi_offset 14, -4
 3158 0002 86B0     		sub	sp, sp, #24
 3159              		.cfi_def_cfa_offset 32
 3160 0004 00AF     		add	r7, sp, #0
 3161              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 70


 3162 0006 F860     		str	r0, [r7, #12]
 3163 0008 B960     		str	r1, [r7, #8]
 3164 000a 7A60     		str	r2, [r7, #4]
 292:.\main.c      **** //    usbPutString("\r\n");
 293:.\main.c      **** //    usbPutString(" - desired  ");
 294:.\main.c      ****     
 295:.\main.c      ****     *right_wheel_count = DESIRED_COUNT;//TODO: check if needed
 3165              		.loc 4 295 0
 3166 000c BB68     		ldr	r3, [r7, #8]
 3167 000e 0822     		movs	r2, #8
 3168 0010 1A60     		str	r2, [r3]
 296:.\main.c      ****     *left_wheel_count = DESIRED_COUNT;
 3169              		.loc 4 296 0
 3170 0012 7B68     		ldr	r3, [r7, #4]
 3171 0014 0822     		movs	r2, #8
 3172 0016 1A60     		str	r2, [r3]
 297:.\main.c      ****     
 298:.\main.c      ****     float distance = 0;
 3173              		.loc 4 298 0
 3174 0018 4FF00003 		mov	r3, #0
 3175 001c 7B61     		str	r3, [r7, #20]	@ float
 299:.\main.c      ****     int desired_distance = GRID_SIZE * desired_blocks - HALF_ROBOT_LENGTH;
 3176              		.loc 4 299 0
 3177 001e FA68     		ldr	r2, [r7, #12]
 3178 0020 1346     		mov	r3, r2
 3179 0022 5B00     		lsls	r3, r3, #1
 3180 0024 1344     		add	r3, r3, r2
 3181 0026 9B00     		lsls	r3, r3, #2
 3182 0028 083B     		subs	r3, r3, #8
 3183 002a 3B61     		str	r3, [r7, #16]
 300:.\main.c      ****     
 301:.\main.c      **** //    char buf[32];
 302:.\main.c      **** //    itoa(desired_distance, buf, 10);
 303:.\main.c      **** //    usbPutString(buf);
 304:.\main.c      **** //    usbPutString("\r\n - distance ");
 305:.\main.c      **** //    itoa(distance, buf, 10);
 306:.\main.c      **** //    usbPutString(buf);
 307:.\main.c      **** //    usbPutString("\r\n");
 308:.\main.c      **** //    usbPutString("\r\n");
 309:.\main.c      ****     
 310:.\main.c      ****     while (distance < desired_distance) {
 3184              		.loc 4 310 0
 3185 002c A3E0     		b	.L166
 3186              	.L177:
 311:.\main.c      ****         if (adc_flag) {
 3187              		.loc 4 311 0
 3188 002e 594B     		ldr	r3, .L178
 3189 0030 1B68     		ldr	r3, [r3]
 3190 0032 002B     		cmp	r3, #0
 3191 0034 04D0     		beq	.L167
 312:.\main.c      ****             updateSensorValues();
 3192              		.loc 4 312 0
 3193 0036 FFF7FEFF 		bl	updateSensorValues
 313:.\main.c      ****             adc_flag = FALSE;
 3194              		.loc 4 313 0
 3195 003a 564B     		ldr	r3, .L178
 3196 003c 0022     		movs	r2, #0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 71


 3197 003e 1A60     		str	r2, [r3]
 3198              	.L167:
 314:.\main.c      ****         }
 315:.\main.c      ****         
 316:.\main.c      ****          // New count values from encoder are ready
 317:.\main.c      ****         if (timer_flag){
 3199              		.loc 4 317 0
 3200 0040 554B     		ldr	r3, .L178+4
 3201 0042 1B68     		ldr	r3, [r3]
 3202 0044 002B     		cmp	r3, #0
 3203 0046 35D0     		beq	.L168
 318:.\main.c      ****             isr_TS_Disable();
 3204              		.loc 4 318 0
 3205 0048 FFF7FEFF 		bl	isr_TS_Disable
 319:.\main.c      ****             
 320:.\main.c      ****             // update distance
 321:.\main.c      ****             distance += getDistance(prevCountM1, prevCountM2);
 3206              		.loc 4 321 0
 3207 004c 534B     		ldr	r3, .L178+8
 3208 004e 1A68     		ldr	r2, [r3]
 3209 0050 534B     		ldr	r3, .L178+12
 3210 0052 1B68     		ldr	r3, [r3]
 3211 0054 1046     		mov	r0, r2
 3212 0056 1946     		mov	r1, r3
 3213 0058 FFF7FEFF 		bl	getDistance
 3214 005c 0346     		mov	r3, r0
 3215 005e 7869     		ldr	r0, [r7, #20]	@ float
 3216 0060 1946     		mov	r1, r3
 3217 0062 FFF7FEFF 		bl	__aeabi_fadd
 3218 0066 0346     		mov	r3, r0
 3219 0068 7B61     		str	r3, [r7, #20]	@ float
 322:.\main.c      ****             
 323:.\main.c      **** //            usbPutString("\r\n - desired - ");
 324:.\main.c      **** //            itoa(desired_distance, buf, 10);
 325:.\main.c      **** //            usbPutString(buf);
 326:.\main.c      **** //            usbPutString(" - distance - ");
 327:.\main.c      **** //            itoa(distance, buf, 10);
 328:.\main.c      **** //            usbPutString(buf);
 329:.\main.c      ****             
 330:.\main.c      ****             
 331:.\main.c      ****             // Correct speed
 332:.\main.c      ****             correctSpeed(prevCountM1,countM1,*left_wheel_count,TRUE);
 3220              		.loc 4 332 0
 3221 006a 4C4B     		ldr	r3, .L178+8
 3222 006c 1968     		ldr	r1, [r3]
 3223 006e 4D4B     		ldr	r3, .L178+16
 3224 0070 1A68     		ldr	r2, [r3]
 3225 0072 7B68     		ldr	r3, [r7, #4]
 3226 0074 1B68     		ldr	r3, [r3]
 3227 0076 0846     		mov	r0, r1
 3228 0078 1146     		mov	r1, r2
 3229 007a 1A46     		mov	r2, r3
 3230 007c 0123     		movs	r3, #1
 3231 007e FFF7FEFF 		bl	correctSpeed
 333:.\main.c      ****             correctSpeed(prevCountM2,countM2,*right_wheel_count,FALSE);
 3232              		.loc 4 333 0
 3233 0082 474B     		ldr	r3, .L178+12
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 72


 3234 0084 1968     		ldr	r1, [r3]
 3235 0086 484B     		ldr	r3, .L178+20
 3236 0088 1A68     		ldr	r2, [r3]
 3237 008a BB68     		ldr	r3, [r7, #8]
 3238 008c 1B68     		ldr	r3, [r3]
 3239 008e 0846     		mov	r0, r1
 3240 0090 1146     		mov	r1, r2
 3241 0092 1A46     		mov	r2, r3
 3242 0094 0023     		movs	r3, #0
 3243 0096 FFF7FEFF 		bl	correctSpeed
 334:.\main.c      ****             
 335:.\main.c      ****             // Update previous values
 336:.\main.c      ****             prevCountM1 = countM1;
 3244              		.loc 4 336 0
 3245 009a 424B     		ldr	r3, .L178+16
 3246 009c 1B68     		ldr	r3, [r3]
 3247 009e 3F4A     		ldr	r2, .L178+8
 3248 00a0 1360     		str	r3, [r2]
 337:.\main.c      ****             prevCountM2 = countM2;
 3249              		.loc 4 337 0
 3250 00a2 414B     		ldr	r3, .L178+20
 3251 00a4 1B68     		ldr	r3, [r3]
 3252 00a6 3E4A     		ldr	r2, .L178+12
 3253 00a8 1360     		str	r3, [r2]
 338:.\main.c      ****             
 339:.\main.c      ****             // Reset flag
 340:.\main.c      ****             timer_flag = FALSE;
 3254              		.loc 4 340 0
 3255 00aa 3B4B     		ldr	r3, .L178+4
 3256 00ac 0022     		movs	r2, #0
 3257 00ae 1A60     		str	r2, [r3]
 341:.\main.c      ****             isr_TS_Enable();
 3258              		.loc 4 341 0
 3259 00b0 FFF7FEFF 		bl	isr_TS_Enable
 3260              	.L168:
 342:.\main.c      ****         }
 343:.\main.c      ****         
 344:.\main.c      ****         // follow a line algorithm
 345:.\main.c      ****         if (sensor_readings[TOP_MID_SENSOR]) { // on line
 3261              		.loc 4 345 0
 3262 00b4 3D4B     		ldr	r3, .L178+24
 3263 00b6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3264 00b8 002B     		cmp	r3, #0
 3265 00ba 25D0     		beq	.L169
 346:.\main.c      ****             if (!sensor_readings[TOP_LEFT_SENSOR] && sensor_readings[TOP_RIGHT_SENSOR]) {// Deviate
 3266              		.loc 4 346 0
 3267 00bc 3B4B     		ldr	r3, .L178+24
 3268 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3269 00c0 002B     		cmp	r3, #0
 3270 00c2 0ED1     		bne	.L170
 3271              		.loc 4 346 0 is_stmt 0 discriminator 1
 3272 00c4 394B     		ldr	r3, .L178+24
 3273 00c6 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 3274 00c8 002B     		cmp	r3, #0
 3275 00ca 0AD0     		beq	.L170
 347:.\main.c      ****                 *right_wheel_count -= ADJUST_SPEED_SMALL;
 3276              		.loc 4 347 0 is_stmt 1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 73


 3277 00cc BB68     		ldr	r3, [r7, #8]
 3278 00ce 1B68     		ldr	r3, [r3]
 3279 00d0 5A1E     		subs	r2, r3, #1
 3280 00d2 BB68     		ldr	r3, [r7, #8]
 3281 00d4 1A60     		str	r2, [r3]
 348:.\main.c      ****                 *left_wheel_count += ADJUST_SPEED_SMALL;
 3282              		.loc 4 348 0
 3283 00d6 7B68     		ldr	r3, [r7, #4]
 3284 00d8 1B68     		ldr	r3, [r3]
 3285 00da 5A1C     		adds	r2, r3, #1
 3286 00dc 7B68     		ldr	r3, [r7, #4]
 3287 00de 1A60     		str	r2, [r3]
 3288 00e0 2DE0     		b	.L172
 3289              	.L170:
 349:.\main.c      ****             } else if (sensor_readings[TOP_LEFT_SENSOR] && !sensor_readings[TOP_RIGHT_SENSOR]) { //
 3290              		.loc 4 349 0
 3291 00e2 324B     		ldr	r3, .L178+24
 3292 00e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3293 00e6 002B     		cmp	r3, #0
 3294 00e8 29D0     		beq	.L172
 3295              		.loc 4 349 0 is_stmt 0 discriminator 1
 3296 00ea 304B     		ldr	r3, .L178+24
 3297 00ec 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 3298 00ee 002B     		cmp	r3, #0
 3299 00f0 25D1     		bne	.L172
 350:.\main.c      ****                 *right_wheel_count += ADJUST_SPEED_SMALL;
 3300              		.loc 4 350 0 is_stmt 1
 3301 00f2 BB68     		ldr	r3, [r7, #8]
 3302 00f4 1B68     		ldr	r3, [r3]
 3303 00f6 5A1C     		adds	r2, r3, #1
 3304 00f8 BB68     		ldr	r3, [r7, #8]
 3305 00fa 1A60     		str	r2, [r3]
 351:.\main.c      ****                 *left_wheel_count -= ADJUST_SPEED_SMALL;
 3306              		.loc 4 351 0
 3307 00fc 7B68     		ldr	r3, [r7, #4]
 3308 00fe 1B68     		ldr	r3, [r3]
 3309 0100 5A1E     		subs	r2, r3, #1
 3310 0102 7B68     		ldr	r3, [r7, #4]
 3311 0104 1A60     		str	r2, [r3]
 3312 0106 1AE0     		b	.L172
 3313              	.L169:
 352:.\main.c      ****             }
 353:.\main.c      ****         } else { // moved off
 354:.\main.c      ****             if (!sensor_readings[TOP_LEFT_SENSOR] && sensor_readings[TOP_RIGHT_SENSOR]) {// Deviate
 3314              		.loc 4 354 0
 3315 0108 284B     		ldr	r3, .L178+24
 3316 010a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3317 010c 002B     		cmp	r3, #0
 3318 010e 09D1     		bne	.L173
 3319              		.loc 4 354 0 is_stmt 0 discriminator 1
 3320 0110 264B     		ldr	r3, .L178+24
 3321 0112 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 3322 0114 002B     		cmp	r3, #0
 3323 0116 05D0     		beq	.L173
 355:.\main.c      ****                 usbPutString(" - turn right\r\n");
 3324              		.loc 4 355 0 is_stmt 1
 3325 0118 2548     		ldr	r0, .L178+28
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 74


 3326 011a FFF7FEFF 		bl	usbPutString
 356:.\main.c      ****                 turnRight();
 3327              		.loc 4 356 0
 3328 011e FFF7FEFF 		bl	turnRight
 3329 0122 0CE0     		b	.L172
 3330              	.L173:
 357:.\main.c      ****             } else if (sensor_readings[TOP_LEFT_SENSOR] && !sensor_readings[TOP_RIGHT_SENSOR]) {// 
 3331              		.loc 4 357 0
 3332 0124 214B     		ldr	r3, .L178+24
 3333 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3334 0128 002B     		cmp	r3, #0
 3335 012a 08D0     		beq	.L172
 3336              		.loc 4 357 0 is_stmt 0 discriminator 1
 3337 012c 1F4B     		ldr	r3, .L178+24
 3338 012e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 3339 0130 002B     		cmp	r3, #0
 3340 0132 04D1     		bne	.L172
 358:.\main.c      ****                 usbPutString(" - turn left\r\n");
 3341              		.loc 4 358 0 is_stmt 1
 3342 0134 1F48     		ldr	r0, .L178+32
 3343 0136 FFF7FEFF 		bl	usbPutString
 359:.\main.c      **** 				turnLeft();
 3344              		.loc 4 359 0
 3345 013a FFF7FEFF 		bl	turnLeft
 3346              	.L172:
 360:.\main.c      ****             }
 361:.\main.c      ****         }
 362:.\main.c      ****         
 363:.\main.c      ****         if (*right_wheel_count > MAX_SPEED) {
 3347              		.loc 4 363 0
 3348 013e BB68     		ldr	r3, [r7, #8]
 3349 0140 1B68     		ldr	r3, [r3]
 3350 0142 092B     		cmp	r3, #9
 3351 0144 02DD     		ble	.L174
 364:.\main.c      ****             *right_wheel_count = MAX_SPEED;
 3352              		.loc 4 364 0
 3353 0146 BB68     		ldr	r3, [r7, #8]
 3354 0148 0922     		movs	r2, #9
 3355 014a 1A60     		str	r2, [r3]
 3356              	.L174:
 365:.\main.c      ****         }
 366:.\main.c      ****         if (*left_wheel_count > MAX_SPEED) {
 3357              		.loc 4 366 0
 3358 014c 7B68     		ldr	r3, [r7, #4]
 3359 014e 1B68     		ldr	r3, [r3]
 3360 0150 092B     		cmp	r3, #9
 3361 0152 02DD     		ble	.L175
 367:.\main.c      ****             *left_wheel_count = MAX_SPEED;
 3362              		.loc 4 367 0
 3363 0154 7B68     		ldr	r3, [r7, #4]
 3364 0156 0922     		movs	r2, #9
 3365 0158 1A60     		str	r2, [r3]
 3366              	.L175:
 368:.\main.c      ****         }
 369:.\main.c      ****         if (*right_wheel_count < MIN_SPEED) {
 3367              		.loc 4 369 0
 3368 015a BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 75


 3369 015c 1B68     		ldr	r3, [r3]
 3370 015e 032B     		cmp	r3, #3
 3371 0160 02DC     		bgt	.L176
 370:.\main.c      ****             *right_wheel_count = MIN_SPEED;
 3372              		.loc 4 370 0
 3373 0162 BB68     		ldr	r3, [r7, #8]
 3374 0164 0422     		movs	r2, #4
 3375 0166 1A60     		str	r2, [r3]
 3376              	.L176:
 371:.\main.c      ****         }
 372:.\main.c      ****         if (*left_wheel_count < MIN_SPEED) {
 3377              		.loc 4 372 0
 3378 0168 7B68     		ldr	r3, [r7, #4]
 3379 016a 1B68     		ldr	r3, [r3]
 3380 016c 032B     		cmp	r3, #3
 3381 016e 02DC     		bgt	.L166
 373:.\main.c      ****             *left_wheel_count = MIN_SPEED;
 3382              		.loc 4 373 0
 3383 0170 7B68     		ldr	r3, [r7, #4]
 3384 0172 0422     		movs	r2, #4
 3385 0174 1A60     		str	r2, [r3]
 3386              	.L166:
 310:.\main.c      ****         if (adc_flag) {
 3387              		.loc 4 310 0
 3388 0176 3869     		ldr	r0, [r7, #16]
 3389 0178 FFF7FEFF 		bl	__aeabi_i2f
 3390 017c 0346     		mov	r3, r0
 3391 017e 1846     		mov	r0, r3
 3392 0180 7969     		ldr	r1, [r7, #20]	@ float
 3393 0182 FFF7FEFF 		bl	__aeabi_fcmpgt
 3394 0186 0346     		mov	r3, r0
 3395 0188 002B     		cmp	r3, #0
 3396 018a 7FF450AF 		bne	.L177
 374:.\main.c      ****         }
 375:.\main.c      ****     }
 376:.\main.c      **** }
 3397              		.loc 4 376 0
 3398 018e 1837     		adds	r7, r7, #24
 3399              		.cfi_def_cfa_offset 8
 3400 0190 BD46     		mov	sp, r7
 3401              		.cfi_def_cfa_register 13
 3402              		@ sp needed
 3403 0192 80BD     		pop	{r7, pc}
 3404              	.L179:
 3405              		.align	2
 3406              	.L178:
 3407 0194 00000000 		.word	adc_flag
 3408 0198 00000000 		.word	timer_flag
 3409 019c 00000000 		.word	prevCountM1
 3410 01a0 00000000 		.word	prevCountM2
 3411 01a4 00000000 		.word	countM1
 3412 01a8 00000000 		.word	countM2
 3413 01ac 00000000 		.word	sensor_readings
 3414 01b0 24010000 		.word	.LC19
 3415 01b4 34010000 		.word	.LC20
 3416              		.cfi_endproc
 3417              	.LFE86:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 76


 3418              		.size	goStraightForBlock, .-goStraightForBlock
 3419              		.section	.text.turnLeft,"ax",%progbits
 3420              		.align	2
 3421              		.global	turnLeft
 3422              		.thumb
 3423              		.thumb_func
 3424              		.type	turnLeft, %function
 3425              	turnLeft:
 3426              	.LFB87:
 377:.\main.c      **** 
 378:.\main.c      **** void turnLeft() {
 3427              		.loc 4 378 0
 3428              		.cfi_startproc
 3429              		@ args = 0, pretend = 0, frame = 8
 3430              		@ frame_needed = 1, uses_anonymous_args = 0
 3431 0000 80B5     		push	{r7, lr}
 3432              		.cfi_def_cfa_offset 8
 3433              		.cfi_offset 7, -8
 3434              		.cfi_offset 14, -4
 3435 0002 82B0     		sub	sp, sp, #8
 3436              		.cfi_def_cfa_offset 16
 3437 0004 00AF     		add	r7, sp, #0
 3438              		.cfi_def_cfa_register 7
 379:.\main.c      ****     isr_TS_Disable();
 3439              		.loc 4 379 0
 3440 0006 FFF7FEFF 		bl	isr_TS_Disable
 380:.\main.c      ****     int prevCountM1 = QuadDec_M1_GetCounter();
 3441              		.loc 4 380 0
 3442 000a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3443 000e 0346     		mov	r3, r0
 3444 0010 7B60     		str	r3, [r7, #4]
 381:.\main.c      ****     int prevCountM2 = QuadDec_M2_GetCounter();
 3445              		.loc 4 381 0
 3446 0012 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 3447 0016 0346     		mov	r3, r0
 3448 0018 3B60     		str	r3, [r7]
 382:.\main.c      ****     PWM_1_WriteCompare(0);
 3449              		.loc 4 382 0
 3450 001a 0020     		movs	r0, #0
 3451 001c FFF7FEFF 		bl	PWM_1_WriteCompare
 383:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 3452              		.loc 4 383 0
 3453 0020 4FF4E170 		mov	r0, #450
 3454 0024 FFF7FEFF 		bl	PWM_2_WriteCompare
 384:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 3455              		.loc 4 384 0
 3456 0028 08E0     		b	.L181
 3457              	.L182:
 385:.\main.c      ****         if (adc_flag) {
 3458              		.loc 4 385 0
 3459 002a 114B     		ldr	r3, .L183
 3460 002c 1B68     		ldr	r3, [r3]
 3461 002e 002B     		cmp	r3, #0
 3462 0030 04D0     		beq	.L181
 386:.\main.c      ****             updateSensorValues();
 3463              		.loc 4 386 0
 3464 0032 FFF7FEFF 		bl	updateSensorValues
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 77


 387:.\main.c      ****             adc_flag = FALSE;
 3465              		.loc 4 387 0
 3466 0036 0E4B     		ldr	r3, .L183
 3467 0038 0022     		movs	r2, #0
 3468 003a 1A60     		str	r2, [r3]
 3469              	.L181:
 384:.\main.c      ****         if (adc_flag) {
 3470              		.loc 4 384 0
 3471 003c 0D4B     		ldr	r3, .L183+4
 3472 003e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3473 0040 002B     		cmp	r3, #0
 3474 0042 F2D0     		beq	.L182
 388:.\main.c      ****         }
 389:.\main.c      ****     }
 390:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 3475              		.loc 4 390 0
 3476 0044 4FF4E170 		mov	r0, #450
 3477 0048 FFF7FEFF 		bl	PWM_1_WriteCompare
 391:.\main.c      ****     QuadDec_M1_SetCounter(prevCountM1);
 3478              		.loc 4 391 0
 3479 004c 7B68     		ldr	r3, [r7, #4]
 3480 004e 9BB2     		uxth	r3, r3
 3481 0050 1BB2     		sxth	r3, r3
 3482 0052 1846     		mov	r0, r3
 3483 0054 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 392:.\main.c      ****     QuadDec_M2_SetCounter(prevCountM2);
 3484              		.loc 4 392 0
 3485 0058 3B68     		ldr	r3, [r7]
 3486 005a 9BB2     		uxth	r3, r3
 3487 005c 1BB2     		sxth	r3, r3
 3488 005e 1846     		mov	r0, r3
 3489 0060 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 393:.\main.c      ****     isr_TS_Enable();
 3490              		.loc 4 393 0
 3491 0064 FFF7FEFF 		bl	isr_TS_Enable
 394:.\main.c      **** }
 3492              		.loc 4 394 0
 3493 0068 0837     		adds	r7, r7, #8
 3494              		.cfi_def_cfa_offset 8
 3495 006a BD46     		mov	sp, r7
 3496              		.cfi_def_cfa_register 13
 3497              		@ sp needed
 3498 006c 80BD     		pop	{r7, pc}
 3499              	.L184:
 3500 006e 00BF     		.align	2
 3501              	.L183:
 3502 0070 00000000 		.word	adc_flag
 3503 0074 00000000 		.word	sensor_readings
 3504              		.cfi_endproc
 3505              	.LFE87:
 3506              		.size	turnLeft, .-turnLeft
 3507              		.section	.text.turnRight,"ax",%progbits
 3508              		.align	2
 3509              		.global	turnRight
 3510              		.thumb
 3511              		.thumb_func
 3512              		.type	turnRight, %function
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 78


 3513              	turnRight:
 3514              	.LFB88:
 395:.\main.c      **** 
 396:.\main.c      **** void turnRight() {
 3515              		.loc 4 396 0
 3516              		.cfi_startproc
 3517              		@ args = 0, pretend = 0, frame = 8
 3518              		@ frame_needed = 1, uses_anonymous_args = 0
 3519 0000 80B5     		push	{r7, lr}
 3520              		.cfi_def_cfa_offset 8
 3521              		.cfi_offset 7, -8
 3522              		.cfi_offset 14, -4
 3523 0002 82B0     		sub	sp, sp, #8
 3524              		.cfi_def_cfa_offset 16
 3525 0004 00AF     		add	r7, sp, #0
 3526              		.cfi_def_cfa_register 7
 397:.\main.c      ****     isr_TS_Disable();
 3527              		.loc 4 397 0
 3528 0006 FFF7FEFF 		bl	isr_TS_Disable
 398:.\main.c      ****     int prevCountM1 = QuadDec_M1_GetCounter();
 3529              		.loc 4 398 0
 3530 000a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3531 000e 0346     		mov	r3, r0
 3532 0010 7B60     		str	r3, [r7, #4]
 399:.\main.c      ****     int prevCountM2 = QuadDec_M2_GetCounter();
 3533              		.loc 4 399 0
 3534 0012 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 3535 0016 0346     		mov	r3, r0
 3536 0018 3B60     		str	r3, [r7]
 400:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 3537              		.loc 4 400 0
 3538 001a 4FF4E170 		mov	r0, #450
 3539 001e FFF7FEFF 		bl	PWM_1_WriteCompare
 401:.\main.c      ****     PWM_2_WriteCompare(0);
 3540              		.loc 4 401 0
 3541 0022 0020     		movs	r0, #0
 3542 0024 FFF7FEFF 		bl	PWM_2_WriteCompare
 402:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 3543              		.loc 4 402 0
 3544 0028 08E0     		b	.L186
 3545              	.L187:
 403:.\main.c      ****         if (adc_flag) {
 3546              		.loc 4 403 0
 3547 002a 114B     		ldr	r3, .L188
 3548 002c 1B68     		ldr	r3, [r3]
 3549 002e 002B     		cmp	r3, #0
 3550 0030 04D0     		beq	.L186
 404:.\main.c      ****             updateSensorValues();
 3551              		.loc 4 404 0
 3552 0032 FFF7FEFF 		bl	updateSensorValues
 405:.\main.c      ****             adc_flag = FALSE;
 3553              		.loc 4 405 0
 3554 0036 0E4B     		ldr	r3, .L188
 3555 0038 0022     		movs	r2, #0
 3556 003a 1A60     		str	r2, [r3]
 3557              	.L186:
 402:.\main.c      ****         if (adc_flag) {
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 79


 3558              		.loc 4 402 0
 3559 003c 0D4B     		ldr	r3, .L188+4
 3560 003e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3561 0040 002B     		cmp	r3, #0
 3562 0042 F2D0     		beq	.L187
 406:.\main.c      ****         }
 407:.\main.c      ****     }
 408:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 3563              		.loc 4 408 0
 3564 0044 4FF4E170 		mov	r0, #450
 3565 0048 FFF7FEFF 		bl	PWM_2_WriteCompare
 409:.\main.c      ****     QuadDec_M1_SetCounter(prevCountM1);
 3566              		.loc 4 409 0
 3567 004c 7B68     		ldr	r3, [r7, #4]
 3568 004e 9BB2     		uxth	r3, r3
 3569 0050 1BB2     		sxth	r3, r3
 3570 0052 1846     		mov	r0, r3
 3571 0054 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 410:.\main.c      ****     QuadDec_M2_SetCounter(prevCountM2);
 3572              		.loc 4 410 0
 3573 0058 3B68     		ldr	r3, [r7]
 3574 005a 9BB2     		uxth	r3, r3
 3575 005c 1BB2     		sxth	r3, r3
 3576 005e 1846     		mov	r0, r3
 3577 0060 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 411:.\main.c      ****     isr_TS_Enable();
 3578              		.loc 4 411 0
 3579 0064 FFF7FEFF 		bl	isr_TS_Enable
 412:.\main.c      **** }
 3580              		.loc 4 412 0
 3581 0068 0837     		adds	r7, r7, #8
 3582              		.cfi_def_cfa_offset 8
 3583 006a BD46     		mov	sp, r7
 3584              		.cfi_def_cfa_register 13
 3585              		@ sp needed
 3586 006c 80BD     		pop	{r7, pc}
 3587              	.L189:
 3588 006e 00BF     		.align	2
 3589              	.L188:
 3590 0070 00000000 		.word	adc_flag
 3591 0074 00000000 		.word	sensor_readings
 3592              		.cfi_endproc
 3593              	.LFE88:
 3594              		.size	turnRight, .-turnRight
 3595              		.global	__aeabi_fcmplt
 3596              		.section	.text.turnForDegrees,"ax",%progbits
 3597              		.align	2
 3598              		.global	turnForDegrees
 3599              		.thumb
 3600              		.thumb_func
 3601              		.type	turnForDegrees, %function
 3602              	turnForDegrees:
 3603              	.LFB89:
 413:.\main.c      **** 
 414:.\main.c      **** // --------------------------------------------- TURNS ------------------------------------------
 415:.\main.c      **** void turnForDegrees(int degrees) {
 3604              		.loc 4 415 0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 80


 3605              		.cfi_startproc
 3606              		@ args = 0, pretend = 0, frame = 16
 3607              		@ frame_needed = 1, uses_anonymous_args = 0
 3608 0000 80B5     		push	{r7, lr}
 3609              		.cfi_def_cfa_offset 8
 3610              		.cfi_offset 7, -8
 3611              		.cfi_offset 14, -4
 3612 0002 84B0     		sub	sp, sp, #16
 3613              		.cfi_def_cfa_offset 24
 3614 0004 00AF     		add	r7, sp, #0
 3615              		.cfi_def_cfa_register 7
 3616 0006 7860     		str	r0, [r7, #4]
 416:.\main.c      ****     float distance_to_turn = degrees / 13;
 3617              		.loc 4 416 0
 3618 0008 7B68     		ldr	r3, [r7, #4]
 3619 000a 224A     		ldr	r2, .L194
 3620 000c 82FB0312 		smull	r1, r2, r2, r3
 3621 0010 9210     		asrs	r2, r2, #2
 3622 0012 DB17     		asrs	r3, r3, #31
 3623 0014 D31A     		subs	r3, r2, r3
 3624 0016 1846     		mov	r0, r3
 3625 0018 FFF7FEFF 		bl	__aeabi_i2f
 3626 001c 0346     		mov	r3, r0
 3627 001e BB60     		str	r3, [r7, #8]	@ float
 417:.\main.c      ****     float distance_turned = 0;
 3628              		.loc 4 417 0
 3629 0020 4FF00003 		mov	r3, #0
 3630 0024 FB60     		str	r3, [r7, #12]	@ float
 418:.\main.c      ****     
 419:.\main.c      ****     while (distance_turned < distance_to_turn) {
 3631              		.loc 4 419 0
 3632 0026 2AE0     		b	.L191
 3633              	.L193:
 420:.\main.c      ****         // update sensor values so they're not 'stuck' when we leave function
 421:.\main.c      ****         if (adc_flag) {
 3634              		.loc 4 421 0
 3635 0028 1B4B     		ldr	r3, .L194+4
 3636 002a 1B68     		ldr	r3, [r3]
 3637 002c 002B     		cmp	r3, #0
 3638 002e 04D0     		beq	.L192
 422:.\main.c      ****             updateSensorValues();
 3639              		.loc 4 422 0
 3640 0030 FFF7FEFF 		bl	updateSensorValues
 423:.\main.c      ****             adc_flag = FALSE;
 3641              		.loc 4 423 0
 3642 0034 184B     		ldr	r3, .L194+4
 3643 0036 0022     		movs	r2, #0
 3644 0038 1A60     		str	r2, [r3]
 3645              	.L192:
 424:.\main.c      ****         }
 425:.\main.c      ****         
 426:.\main.c      ****          // New count values from encoder are ready
 427:.\main.c      ****         if (timer_flag){
 3646              		.loc 4 427 0
 3647 003a 184B     		ldr	r3, .L194+8
 3648 003c 1B68     		ldr	r3, [r3]
 3649 003e 002B     		cmp	r3, #0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 81


 3650 0040 1DD0     		beq	.L191
 428:.\main.c      ****             isr_TS_Disable();
 3651              		.loc 4 428 0
 3652 0042 FFF7FEFF 		bl	isr_TS_Disable
 429:.\main.c      ****             
 430:.\main.c      ****             distance_turned += getDistance(prevCountM1, prevCountM2);
 3653              		.loc 4 430 0
 3654 0046 164B     		ldr	r3, .L194+12
 3655 0048 1A68     		ldr	r2, [r3]
 3656 004a 164B     		ldr	r3, .L194+16
 3657 004c 1B68     		ldr	r3, [r3]
 3658 004e 1046     		mov	r0, r2
 3659 0050 1946     		mov	r1, r3
 3660 0052 FFF7FEFF 		bl	getDistance
 3661 0056 0346     		mov	r3, r0
 3662 0058 F868     		ldr	r0, [r7, #12]	@ float
 3663 005a 1946     		mov	r1, r3
 3664 005c FFF7FEFF 		bl	__aeabi_fadd
 3665 0060 0346     		mov	r3, r0
 3666 0062 FB60     		str	r3, [r7, #12]	@ float
 431:.\main.c      ****             
 432:.\main.c      ****             // Update previous values
 433:.\main.c      ****             prevCountM1 = countM1;
 3667              		.loc 4 433 0
 3668 0064 104B     		ldr	r3, .L194+20
 3669 0066 1B68     		ldr	r3, [r3]
 3670 0068 0D4A     		ldr	r2, .L194+12
 3671 006a 1360     		str	r3, [r2]
 434:.\main.c      ****             prevCountM2 = countM2;
 3672              		.loc 4 434 0
 3673 006c 0F4B     		ldr	r3, .L194+24
 3674 006e 1B68     		ldr	r3, [r3]
 3675 0070 0C4A     		ldr	r2, .L194+16
 3676 0072 1360     		str	r3, [r2]
 435:.\main.c      ****             
 436:.\main.c      ****             // Reset flag
 437:.\main.c      ****             timer_flag = FALSE;
 3677              		.loc 4 437 0
 3678 0074 094B     		ldr	r3, .L194+8
 3679 0076 0022     		movs	r2, #0
 3680 0078 1A60     		str	r2, [r3]
 438:.\main.c      ****             
 439:.\main.c      ****             isr_TS_Enable();
 3681              		.loc 4 439 0
 3682 007a FFF7FEFF 		bl	isr_TS_Enable
 3683              	.L191:
 419:.\main.c      ****         // update sensor values so they're not 'stuck' when we leave function
 3684              		.loc 4 419 0
 3685 007e F868     		ldr	r0, [r7, #12]	@ float
 3686 0080 B968     		ldr	r1, [r7, #8]	@ float
 3687 0082 FFF7FEFF 		bl	__aeabi_fcmplt
 3688 0086 0346     		mov	r3, r0
 3689 0088 002B     		cmp	r3, #0
 3690 008a CDD1     		bne	.L193
 440:.\main.c      ****         }
 441:.\main.c      ****     }
 442:.\main.c      **** }
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 82


 3691              		.loc 4 442 0
 3692 008c 1037     		adds	r7, r7, #16
 3693              		.cfi_def_cfa_offset 8
 3694 008e BD46     		mov	sp, r7
 3695              		.cfi_def_cfa_register 13
 3696              		@ sp needed
 3697 0090 80BD     		pop	{r7, pc}
 3698              	.L195:
 3699 0092 00BF     		.align	2
 3700              	.L194:
 3701 0094 4FECC44E 		.word	1321528399
 3702 0098 00000000 		.word	adc_flag
 3703 009c 00000000 		.word	timer_flag
 3704 00a0 00000000 		.word	prevCountM1
 3705 00a4 00000000 		.word	prevCountM2
 3706 00a8 00000000 		.word	countM1
 3707 00ac 00000000 		.word	countM2
 3708              		.cfi_endproc
 3709              	.LFE89:
 3710              		.size	turnForDegrees, .-turnForDegrees
 3711              		.section	.rodata
 3712 0143 00       		.align	2
 3713              	.LC21:
 3714 0144 202D2066 		.ascii	" - forward\015\012\000"
 3714      6F727761 
 3714      72640D0A 
 3714      00
 3715 0151 000000   		.align	2
 3716              	.LC22:
 3717 0154 202D2074 		.ascii	" - turn 45\015\012\000"
 3717      75726E20 
 3717      34350D0A 
 3717      00
 3718 0161 000000   		.align	2
 3719              	.LC23:
 3720 0164 202D2066 		.ascii	" - finish turn\015\012\000"
 3720      696E6973 
 3720      68207475 
 3720      726E0D0A 
 3720      00
 3721              		.section	.text.sharpTurnLeft,"ax",%progbits
 3722              		.align	2
 3723              		.global	sharpTurnLeft
 3724              		.thumb
 3725              		.thumb_func
 3726              		.type	sharpTurnLeft, %function
 3727              	sharpTurnLeft:
 3728              	.LFB90:
 443:.\main.c      **** 
 444:.\main.c      **** void sharpTurnLeft() {
 3729              		.loc 4 444 0
 3730              		.cfi_startproc
 3731              		@ args = 0, pretend = 0, frame = 8
 3732              		@ frame_needed = 1, uses_anonymous_args = 0
 3733 0000 80B5     		push	{r7, lr}
 3734              		.cfi_def_cfa_offset 8
 3735              		.cfi_offset 7, -8
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 83


 3736              		.cfi_offset 14, -4
 3737 0002 82B0     		sub	sp, sp, #8
 3738              		.cfi_def_cfa_offset 16
 3739 0004 00AF     		add	r7, sp, #0
 3740              		.cfi_def_cfa_register 7
 445:.\main.c      ****     isr_TS_Disable();
 3741              		.loc 4 445 0
 3742 0006 FFF7FEFF 		bl	isr_TS_Disable
 446:.\main.c      ****     int prevCountM1 = QuadDec_M1_GetCounter();
 3743              		.loc 4 446 0
 3744 000a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3745 000e 0346     		mov	r3, r0
 3746 0010 7B60     		str	r3, [r7, #4]
 447:.\main.c      ****     int prevCountM2 = QuadDec_M2_GetCounter();
 3747              		.loc 4 447 0
 3748 0012 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 3749 0016 0346     		mov	r3, r0
 3750 0018 3B60     		str	r3, [r7]
 448:.\main.c      ****     usbPutString(" - forward\r\n");
 3751              		.loc 4 448 0
 3752 001a 2448     		ldr	r0, .L201
 3753 001c FFF7FEFF 		bl	usbPutString
 449:.\main.c      ****     // go until we reach the junction
 450:.\main.c      ****     while (!sensor_readings[BOTTOM_LEFT_SENSOR]) {
 3754              		.loc 4 450 0
 3755 0020 08E0     		b	.L197
 3756              	.L198:
 451:.\main.c      ****         if (adc_flag) {
 3757              		.loc 4 451 0
 3758 0022 234B     		ldr	r3, .L201+4
 3759 0024 1B68     		ldr	r3, [r3]
 3760 0026 002B     		cmp	r3, #0
 3761 0028 04D0     		beq	.L197
 452:.\main.c      ****             updateSensorValues();
 3762              		.loc 4 452 0
 3763 002a FFF7FEFF 		bl	updateSensorValues
 453:.\main.c      ****             adc_flag = FALSE;
 3764              		.loc 4 453 0
 3765 002e 204B     		ldr	r3, .L201+4
 3766 0030 0022     		movs	r2, #0
 3767 0032 1A60     		str	r2, [r3]
 3768              	.L197:
 450:.\main.c      ****         if (adc_flag) {
 3769              		.loc 4 450 0
 3770 0034 1F4B     		ldr	r3, .L201+8
 3771 0036 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 3772 0038 002B     		cmp	r3, #0
 3773 003a F2D0     		beq	.L198
 454:.\main.c      ****         }
 455:.\main.c      ****     }
 456:.\main.c      ****     
 457:.\main.c      ****     usbPutString(" - turn 45\r\n");
 3774              		.loc 4 457 0
 3775 003c 1E48     		ldr	r0, .L201+12
 3776 003e FFF7FEFF 		bl	usbPutString
 458:.\main.c      ****     
 459:.\main.c      ****     // make the turn
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 84


 460:.\main.c      ****     setWheelDirection(FALSE, TRUE);
 3777              		.loc 4 460 0
 3778 0042 0020     		movs	r0, #0
 3779 0044 0121     		movs	r1, #1
 3780 0046 FFF7FEFF 		bl	setWheelDirection
 461:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 3781              		.loc 4 461 0
 3782 004a 4FF4E170 		mov	r0, #450
 3783 004e FFF7FEFF 		bl	PWM_1_WriteCompare
 462:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 3784              		.loc 4 462 0
 3785 0052 4FF4E170 		mov	r0, #450
 3786 0056 FFF7FEFF 		bl	PWM_2_WriteCompare
 463:.\main.c      ****     QuadDec_M1_SetCounter(prevCountM1);
 3787              		.loc 4 463 0
 3788 005a 7B68     		ldr	r3, [r7, #4]
 3789 005c 9BB2     		uxth	r3, r3
 3790 005e 1BB2     		sxth	r3, r3
 3791 0060 1846     		mov	r0, r3
 3792 0062 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 464:.\main.c      ****     QuadDec_M2_SetCounter(prevCountM2);
 3793              		.loc 4 464 0
 3794 0066 3B68     		ldr	r3, [r7]
 3795 0068 9BB2     		uxth	r3, r3
 3796 006a 1BB2     		sxth	r3, r3
 3797 006c 1846     		mov	r0, r3
 3798 006e FFF7FEFF 		bl	QuadDec_M2_SetCounter
 465:.\main.c      ****     isr_TS_Enable();
 3799              		.loc 4 465 0
 3800 0072 FFF7FEFF 		bl	isr_TS_Enable
 466:.\main.c      ****     
 467:.\main.c      ****     turnForDegrees(55); // so that it doesn't stop if it's already on a line
 3801              		.loc 4 467 0
 3802 0076 3720     		movs	r0, #55
 3803 0078 FFF7FEFF 		bl	turnForDegrees
 468:.\main.c      ****     
 469:.\main.c      ****     usbPutString(" - finish turn\r\n");
 3804              		.loc 4 469 0
 3805 007c 0F48     		ldr	r0, .L201+16
 3806 007e FFF7FEFF 		bl	usbPutString
 470:.\main.c      ****     
 471:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 3807              		.loc 4 471 0
 3808 0082 08E0     		b	.L199
 3809              	.L200:
 472:.\main.c      ****         if (adc_flag) {
 3810              		.loc 4 472 0
 3811 0084 0A4B     		ldr	r3, .L201+4
 3812 0086 1B68     		ldr	r3, [r3]
 3813 0088 002B     		cmp	r3, #0
 3814 008a 04D0     		beq	.L199
 473:.\main.c      ****             updateSensorValues();
 3815              		.loc 4 473 0
 3816 008c FFF7FEFF 		bl	updateSensorValues
 474:.\main.c      ****             adc_flag = FALSE;
 3817              		.loc 4 474 0
 3818 0090 074B     		ldr	r3, .L201+4
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 85


 3819 0092 0022     		movs	r2, #0
 3820 0094 1A60     		str	r2, [r3]
 3821              	.L199:
 471:.\main.c      ****         if (adc_flag) {
 3822              		.loc 4 471 0
 3823 0096 074B     		ldr	r3, .L201+8
 3824 0098 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3825 009a 002B     		cmp	r3, #0
 3826 009c F2D0     		beq	.L200
 475:.\main.c      ****         }
 476:.\main.c      ****     }
 477:.\main.c      ****     setWheelDirection(TRUE, TRUE);
 3827              		.loc 4 477 0
 3828 009e 0120     		movs	r0, #1
 3829 00a0 0121     		movs	r1, #1
 3830 00a2 FFF7FEFF 		bl	setWheelDirection
 478:.\main.c      **** }
 3831              		.loc 4 478 0
 3832 00a6 0837     		adds	r7, r7, #8
 3833              		.cfi_def_cfa_offset 8
 3834 00a8 BD46     		mov	sp, r7
 3835              		.cfi_def_cfa_register 13
 3836              		@ sp needed
 3837 00aa 80BD     		pop	{r7, pc}
 3838              	.L202:
 3839              		.align	2
 3840              	.L201:
 3841 00ac 44010000 		.word	.LC21
 3842 00b0 00000000 		.word	adc_flag
 3843 00b4 00000000 		.word	sensor_readings
 3844 00b8 54010000 		.word	.LC22
 3845 00bc 64010000 		.word	.LC23
 3846              		.cfi_endproc
 3847              	.LFE90:
 3848              		.size	sharpTurnLeft, .-sharpTurnLeft
 3849              		.section	.rodata
 3850 0175 000000   		.align	2
 3851              	.LC24:
 3852 0178 2D2D2D2D 		.ascii	"---------------------------\015\012\000"
 3852      2D2D2D2D 
 3852      2D2D2D2D 
 3852      2D2D2D2D 
 3852      2D2D2D2D 
 3853 0196 0000     		.align	2
 3854              	.LC25:
 3855 0198 2D2D2D2D 		.ascii	"-------- forward -----------\015\012\000"
 3855      2D2D2D2D 
 3855      20666F72 
 3855      77617264 
 3855      202D2D2D 
 3856 01b7 00       		.align	2
 3857              	.LC26:
 3858 01b8 2D2D2D2D 		.ascii	"-------- turn 45 ----------\015\012\000"
 3858      2D2D2D2D 
 3858      20747572 
 3858      6E203435 
 3858      202D2D2D 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 86


 3859 01d6 0000     		.align	2
 3860              	.LC27:
 3861 01d8 2D2D2D2D 		.ascii	"-------- finish turn ------\015\012\000"
 3861      2D2D2D2D 
 3861      2066696E 
 3861      69736820 
 3861      7475726E 
 3862              		.section	.text.sharpTurnRight,"ax",%progbits
 3863              		.align	2
 3864              		.global	sharpTurnRight
 3865              		.thumb
 3866              		.thumb_func
 3867              		.type	sharpTurnRight, %function
 3868              	sharpTurnRight:
 3869              	.LFB91:
 479:.\main.c      **** 
 480:.\main.c      **** void sharpTurnRight() {
 3870              		.loc 4 480 0
 3871              		.cfi_startproc
 3872              		@ args = 0, pretend = 0, frame = 8
 3873              		@ frame_needed = 1, uses_anonymous_args = 0
 3874 0000 80B5     		push	{r7, lr}
 3875              		.cfi_def_cfa_offset 8
 3876              		.cfi_offset 7, -8
 3877              		.cfi_offset 14, -4
 3878 0002 82B0     		sub	sp, sp, #8
 3879              		.cfi_def_cfa_offset 16
 3880 0004 00AF     		add	r7, sp, #0
 3881              		.cfi_def_cfa_register 7
 481:.\main.c      ****     isr_TS_Disable();
 3882              		.loc 4 481 0
 3883 0006 FFF7FEFF 		bl	isr_TS_Disable
 482:.\main.c      ****     int prevCountM1 = QuadDec_M1_GetCounter();
 3884              		.loc 4 482 0
 3885 000a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 3886 000e 0346     		mov	r3, r0
 3887 0010 7B60     		str	r3, [r7, #4]
 483:.\main.c      ****     int prevCountM2 = QuadDec_M2_GetCounter();
 3888              		.loc 4 483 0
 3889 0012 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 3890 0016 0346     		mov	r3, r0
 3891 0018 3B60     		str	r3, [r7]
 484:.\main.c      ****     usbPutString("---------------------------\r\n");
 3892              		.loc 4 484 0
 3893 001a 2D48     		ldr	r0, .L208
 3894 001c FFF7FEFF 		bl	usbPutString
 485:.\main.c      ****     usbPutString("-------- forward -----------\r\n");
 3895              		.loc 4 485 0
 3896 0020 2C48     		ldr	r0, .L208+4
 3897 0022 FFF7FEFF 		bl	usbPutString
 486:.\main.c      ****     usbPutString("---------------------------\r\n");
 3898              		.loc 4 486 0
 3899 0026 2A48     		ldr	r0, .L208
 3900 0028 FFF7FEFF 		bl	usbPutString
 487:.\main.c      ****     
 488:.\main.c      ****     // go until we reach the junction
 489:.\main.c      ****     while (!sensor_readings[BOTTOM_RIGHT_SENSOR]) {
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 87


 3901              		.loc 4 489 0
 3902 002c 08E0     		b	.L204
 3903              	.L205:
 490:.\main.c      ****         if (adc_flag) {
 3904              		.loc 4 490 0
 3905 002e 2A4B     		ldr	r3, .L208+8
 3906 0030 1B68     		ldr	r3, [r3]
 3907 0032 002B     		cmp	r3, #0
 3908 0034 04D0     		beq	.L204
 491:.\main.c      ****             updateSensorValues();
 3909              		.loc 4 491 0
 3910 0036 FFF7FEFF 		bl	updateSensorValues
 492:.\main.c      ****             adc_flag = FALSE;
 3911              		.loc 4 492 0
 3912 003a 274B     		ldr	r3, .L208+8
 3913 003c 0022     		movs	r2, #0
 3914 003e 1A60     		str	r2, [r3]
 3915              	.L204:
 489:.\main.c      ****         if (adc_flag) {
 3916              		.loc 4 489 0
 3917 0040 264B     		ldr	r3, .L208+12
 3918 0042 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 3919 0044 002B     		cmp	r3, #0
 3920 0046 F2D0     		beq	.L205
 493:.\main.c      ****         }
 494:.\main.c      ****     }
 495:.\main.c      ****     
 496:.\main.c      ****     usbPutString("---------------------------\r\n");
 3921              		.loc 4 496 0
 3922 0048 2148     		ldr	r0, .L208
 3923 004a FFF7FEFF 		bl	usbPutString
 497:.\main.c      ****     usbPutString("-------- turn 45 ----------\r\n");
 3924              		.loc 4 497 0
 3925 004e 2448     		ldr	r0, .L208+16
 3926 0050 FFF7FEFF 		bl	usbPutString
 498:.\main.c      ****     usbPutString("---------------------------\r\n");
 3927              		.loc 4 498 0
 3928 0054 1E48     		ldr	r0, .L208
 3929 0056 FFF7FEFF 		bl	usbPutString
 499:.\main.c      **** //    stopWheels();
 500:.\main.c      **** //    CyDelay(1000);
 501:.\main.c      **** //    startWheels();
 502:.\main.c      ****     
 503:.\main.c      ****     // make the turn
 504:.\main.c      ****     setWheelDirection(TRUE, FALSE);
 3930              		.loc 4 504 0
 3931 005a 0120     		movs	r0, #1
 3932 005c 0021     		movs	r1, #0
 3933 005e FFF7FEFF 		bl	setWheelDirection
 505:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 3934              		.loc 4 505 0
 3935 0062 4FF4E170 		mov	r0, #450
 3936 0066 FFF7FEFF 		bl	PWM_1_WriteCompare
 506:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
 3937              		.loc 4 506 0
 3938 006a 4FF4E170 		mov	r0, #450
 3939 006e FFF7FEFF 		bl	PWM_2_WriteCompare
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 88


 507:.\main.c      ****     
 508:.\main.c      ****     QuadDec_M1_SetCounter(prevCountM1);
 3940              		.loc 4 508 0
 3941 0072 7B68     		ldr	r3, [r7, #4]
 3942 0074 9BB2     		uxth	r3, r3
 3943 0076 1BB2     		sxth	r3, r3
 3944 0078 1846     		mov	r0, r3
 3945 007a FFF7FEFF 		bl	QuadDec_M1_SetCounter
 509:.\main.c      ****     QuadDec_M2_SetCounter(prevCountM2);
 3946              		.loc 4 509 0
 3947 007e 3B68     		ldr	r3, [r7]
 3948 0080 9BB2     		uxth	r3, r3
 3949 0082 1BB2     		sxth	r3, r3
 3950 0084 1846     		mov	r0, r3
 3951 0086 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 510:.\main.c      ****     isr_TS_Enable();
 3952              		.loc 4 510 0
 3953 008a FFF7FEFF 		bl	isr_TS_Enable
 511:.\main.c      ****     
 512:.\main.c      ****     //45 may be too small.  Will try 55
 513:.\main.c      ****     turnForDegrees(55); // so that it doesn't stop if it's already on a line
 3954              		.loc 4 513 0
 3955 008e 3720     		movs	r0, #55
 3956 0090 FFF7FEFF 		bl	turnForDegrees
 514:.\main.c      ****     
 515:.\main.c      ****     usbPutString("---------------------------\r\n");
 3957              		.loc 4 515 0
 3958 0094 0E48     		ldr	r0, .L208
 3959 0096 FFF7FEFF 		bl	usbPutString
 516:.\main.c      ****     usbPutString("-------- finish turn ------\r\n");
 3960              		.loc 4 516 0
 3961 009a 1248     		ldr	r0, .L208+20
 3962 009c FFF7FEFF 		bl	usbPutString
 517:.\main.c      ****     usbPutString("---------------------------\r\n");
 3963              		.loc 4 517 0
 3964 00a0 0B48     		ldr	r0, .L208
 3965 00a2 FFF7FEFF 		bl	usbPutString
 518:.\main.c      **** //    stopWheels();
 519:.\main.c      **** //    CyDelay(1000);
 520:.\main.c      **** //    startWheels();
 521:.\main.c      ****     
 522:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 3966              		.loc 4 522 0
 3967 00a6 08E0     		b	.L206
 3968              	.L207:
 523:.\main.c      ****         if (adc_flag) {
 3969              		.loc 4 523 0
 3970 00a8 0B4B     		ldr	r3, .L208+8
 3971 00aa 1B68     		ldr	r3, [r3]
 3972 00ac 002B     		cmp	r3, #0
 3973 00ae 04D0     		beq	.L206
 524:.\main.c      ****             updateSensorValues();
 3974              		.loc 4 524 0
 3975 00b0 FFF7FEFF 		bl	updateSensorValues
 525:.\main.c      ****             adc_flag = FALSE;
 3976              		.loc 4 525 0
 3977 00b4 084B     		ldr	r3, .L208+8
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 89


 3978 00b6 0022     		movs	r2, #0
 3979 00b8 1A60     		str	r2, [r3]
 3980              	.L206:
 522:.\main.c      ****         if (adc_flag) {
 3981              		.loc 4 522 0
 3982 00ba 084B     		ldr	r3, .L208+12
 3983 00bc 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3984 00be 002B     		cmp	r3, #0
 3985 00c0 F2D0     		beq	.L207
 526:.\main.c      ****         }
 527:.\main.c      ****     }
 528:.\main.c      ****     setWheelDirection(TRUE, TRUE);
 3986              		.loc 4 528 0
 3987 00c2 0120     		movs	r0, #1
 3988 00c4 0121     		movs	r1, #1
 3989 00c6 FFF7FEFF 		bl	setWheelDirection
 529:.\main.c      **** }
 3990              		.loc 4 529 0
 3991 00ca 0837     		adds	r7, r7, #8
 3992              		.cfi_def_cfa_offset 8
 3993 00cc BD46     		mov	sp, r7
 3994              		.cfi_def_cfa_register 13
 3995              		@ sp needed
 3996 00ce 80BD     		pop	{r7, pc}
 3997              	.L209:
 3998              		.align	2
 3999              	.L208:
 4000 00d0 78010000 		.word	.LC24
 4001 00d4 98010000 		.word	.LC25
 4002 00d8 00000000 		.word	adc_flag
 4003 00dc 00000000 		.word	sensor_readings
 4004 00e0 B8010000 		.word	.LC26
 4005 00e4 D8010000 		.word	.LC27
 4006              		.cfi_endproc
 4007              	.LFE91:
 4008              		.size	sharpTurnRight, .-sharpTurnRight
 4009              		.section	.rodata
 4010 01f6 0000     		.align	2
 4011              	.LC28:
 4012 01f8 202D2066 		.ascii	" - forward slightly\015\012\000"
 4012      6F727761 
 4012      72642073 
 4012      6C696768 
 4012      746C790D 
 4013 020e 0000     		.align	2
 4014              	.LC29:
 4015 0210 202D2066 		.ascii	" - forward till junction\015\012\000"
 4015      6F727761 
 4015      72642074 
 4015      696C6C20 
 4015      6A756E63 
 4016 022b 00       		.align	2
 4017              	.LC30:
 4018 022c 202D2074 		.ascii	" - turn 135\015\012\000"
 4018      75726E20 
 4018      3133350D 
 4018      0A00
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 90


 4019              		.section	.text.uTurn,"ax",%progbits
 4020              		.align	2
 4021              		.global	uTurn
 4022              		.thumb
 4023              		.thumb_func
 4024              		.type	uTurn, %function
 4025              	uTurn:
 4026              	.LFB92:
 530:.\main.c      ****     
 531:.\main.c      **** void uTurn(int *left_wheel_count, int *right_wheel_count) {
 4027              		.loc 4 531 0
 4028              		.cfi_startproc
 4029              		@ args = 0, pretend = 0, frame = 24
 4030              		@ frame_needed = 1, uses_anonymous_args = 0
 4031 0000 80B5     		push	{r7, lr}
 4032              		.cfi_def_cfa_offset 8
 4033              		.cfi_offset 7, -8
 4034              		.cfi_offset 14, -4
 4035 0002 86B0     		sub	sp, sp, #24
 4036              		.cfi_def_cfa_offset 32
 4037 0004 00AF     		add	r7, sp, #0
 4038              		.cfi_def_cfa_register 7
 4039 0006 7860     		str	r0, [r7, #4]
 4040 0008 3960     		str	r1, [r7]
 532:.\main.c      ****     usbPutString("U turn\r\n");
 4041              		.loc 4 532 0
 4042 000a 5848     		ldr	r0, .L219
 4043 000c FFF7FEFF 		bl	usbPutString
 533:.\main.c      ****     
 534:.\main.c      ****     usbPutString(" - forward slightly\r\n");
 4044              		.loc 4 534 0
 4045 0010 5748     		ldr	r0, .L219+4
 4046 0012 FFF7FEFF 		bl	usbPutString
 535:.\main.c      ****     // go forward slightly
 536:.\main.c      ****     float distance = 0;
 4047              		.loc 4 536 0
 4048 0016 4FF00003 		mov	r3, #0
 4049 001a 7B61     		str	r3, [r7, #20]	@ float
 537:.\main.c      ****     while (distance < SMALL_FORWARD_DISTANCE) {
 4050              		.loc 4 537 0
 4051 001c 42E0     		b	.L211
 4052              	.L213:
 538:.\main.c      ****         
 539:.\main.c      ****         if (adc_flag) {
 4053              		.loc 4 539 0
 4054 001e 554B     		ldr	r3, .L219+8
 4055 0020 1B68     		ldr	r3, [r3]
 4056 0022 002B     		cmp	r3, #0
 4057 0024 04D0     		beq	.L212
 540:.\main.c      ****             updateSensorValues();
 4058              		.loc 4 540 0
 4059 0026 FFF7FEFF 		bl	updateSensorValues
 541:.\main.c      ****             adc_flag = FALSE;
 4060              		.loc 4 541 0
 4061 002a 524B     		ldr	r3, .L219+8
 4062 002c 0022     		movs	r2, #0
 4063 002e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 91


 4064              	.L212:
 542:.\main.c      ****         }
 543:.\main.c      ****         
 544:.\main.c      ****          // New count values from encoder are ready
 545:.\main.c      ****         if (timer_flag){
 4065              		.loc 4 545 0
 4066 0030 514B     		ldr	r3, .L219+12
 4067 0032 1B68     		ldr	r3, [r3]
 4068 0034 002B     		cmp	r3, #0
 4069 0036 35D0     		beq	.L211
 546:.\main.c      ****             isr_TS_Disable();
 4070              		.loc 4 546 0
 4071 0038 FFF7FEFF 		bl	isr_TS_Disable
 547:.\main.c      ****             
 548:.\main.c      ****             // update distance
 549:.\main.c      ****             distance += getDistance(prevCountM1, prevCountM2);
 4072              		.loc 4 549 0
 4073 003c 4F4B     		ldr	r3, .L219+16
 4074 003e 1A68     		ldr	r2, [r3]
 4075 0040 4F4B     		ldr	r3, .L219+20
 4076 0042 1B68     		ldr	r3, [r3]
 4077 0044 1046     		mov	r0, r2
 4078 0046 1946     		mov	r1, r3
 4079 0048 FFF7FEFF 		bl	getDistance
 4080 004c 0346     		mov	r3, r0
 4081 004e 7869     		ldr	r0, [r7, #20]	@ float
 4082 0050 1946     		mov	r1, r3
 4083 0052 FFF7FEFF 		bl	__aeabi_fadd
 4084 0056 0346     		mov	r3, r0
 4085 0058 7B61     		str	r3, [r7, #20]	@ float
 550:.\main.c      ****             
 551:.\main.c      ****             // Correct speed
 552:.\main.c      ****             correctSpeed(prevCountM1,countM1,*left_wheel_count,TRUE);
 4086              		.loc 4 552 0
 4087 005a 484B     		ldr	r3, .L219+16
 4088 005c 1968     		ldr	r1, [r3]
 4089 005e 494B     		ldr	r3, .L219+24
 4090 0060 1A68     		ldr	r2, [r3]
 4091 0062 7B68     		ldr	r3, [r7, #4]
 4092 0064 1B68     		ldr	r3, [r3]
 4093 0066 0846     		mov	r0, r1
 4094 0068 1146     		mov	r1, r2
 4095 006a 1A46     		mov	r2, r3
 4096 006c 0123     		movs	r3, #1
 4097 006e FFF7FEFF 		bl	correctSpeed
 553:.\main.c      ****             correctSpeed(prevCountM2,countM2,*right_wheel_count,FALSE);
 4098              		.loc 4 553 0
 4099 0072 434B     		ldr	r3, .L219+20
 4100 0074 1968     		ldr	r1, [r3]
 4101 0076 444B     		ldr	r3, .L219+28
 4102 0078 1A68     		ldr	r2, [r3]
 4103 007a 3B68     		ldr	r3, [r7]
 4104 007c 1B68     		ldr	r3, [r3]
 4105 007e 0846     		mov	r0, r1
 4106 0080 1146     		mov	r1, r2
 4107 0082 1A46     		mov	r2, r3
 4108 0084 0023     		movs	r3, #0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 92


 4109 0086 FFF7FEFF 		bl	correctSpeed
 554:.\main.c      ****             
 555:.\main.c      ****             // Update previous values
 556:.\main.c      ****             prevCountM1 = countM1;
 4110              		.loc 4 556 0
 4111 008a 3E4B     		ldr	r3, .L219+24
 4112 008c 1B68     		ldr	r3, [r3]
 4113 008e 3B4A     		ldr	r2, .L219+16
 4114 0090 1360     		str	r3, [r2]
 557:.\main.c      ****             prevCountM2 = countM2;
 4115              		.loc 4 557 0
 4116 0092 3D4B     		ldr	r3, .L219+28
 4117 0094 1B68     		ldr	r3, [r3]
 4118 0096 3A4A     		ldr	r2, .L219+20
 4119 0098 1360     		str	r3, [r2]
 558:.\main.c      ****             
 559:.\main.c      ****             // Reset flag
 560:.\main.c      ****             timer_flag = FALSE;
 4120              		.loc 4 560 0
 4121 009a 374B     		ldr	r3, .L219+12
 4122 009c 0022     		movs	r2, #0
 4123 009e 1A60     		str	r2, [r3]
 561:.\main.c      ****             
 562:.\main.c      ****             isr_TS_Enable();
 4124              		.loc 4 562 0
 4125 00a0 FFF7FEFF 		bl	isr_TS_Enable
 4126              	.L211:
 537:.\main.c      ****         
 4127              		.loc 4 537 0
 4128 00a4 7869     		ldr	r0, [r7, #20]	@ float
 4129 00a6 4FF08241 		mov	r1, #1090519040
 4130 00aa FFF7FEFF 		bl	__aeabi_fcmplt
 4131 00ae 0346     		mov	r3, r0
 4132 00b0 002B     		cmp	r3, #0
 4133 00b2 B4D1     		bne	.L213
 563:.\main.c      ****         }
 564:.\main.c      ****     }
 565:.\main.c      ****     
 566:.\main.c      ****     isr_TS_Disable();
 4134              		.loc 4 566 0
 4135 00b4 FFF7FEFF 		bl	isr_TS_Disable
 567:.\main.c      ****     int prevCountM1 = QuadDec_M1_GetCounter();
 4136              		.loc 4 567 0
 4137 00b8 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 4138 00bc 0346     		mov	r3, r0
 4139 00be 3B61     		str	r3, [r7, #16]
 568:.\main.c      ****     int prevCountM2 = QuadDec_M2_GetCounter();
 4140              		.loc 4 568 0
 4141 00c0 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 4142 00c4 0346     		mov	r3, r0
 4143 00c6 FB60     		str	r3, [r7, #12]
 569:.\main.c      ****     
 570:.\main.c      ****     usbPutString(" - forward till junction\r\n");
 4144              		.loc 4 570 0
 4145 00c8 3048     		ldr	r0, .L219+32
 4146 00ca FFF7FEFF 		bl	usbPutString
 571:.\main.c      ****     // go until we reach the junction
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 93


 572:.\main.c      ****     while (!sensor_readings[BOTTOM_RIGHT_SENSOR] && !sensor_readings[BOTTOM_LEFT_SENSOR] && sensor_
 4147              		.loc 4 572 0
 4148 00ce 08E0     		b	.L214
 4149              	.L216:
 573:.\main.c      ****         if (adc_flag) {
 4150              		.loc 4 573 0
 4151 00d0 284B     		ldr	r3, .L219+8
 4152 00d2 1B68     		ldr	r3, [r3]
 4153 00d4 002B     		cmp	r3, #0
 4154 00d6 04D0     		beq	.L214
 574:.\main.c      ****             updateSensorValues();
 4155              		.loc 4 574 0
 4156 00d8 FFF7FEFF 		bl	updateSensorValues
 575:.\main.c      ****             adc_flag = FALSE;
 4157              		.loc 4 575 0
 4158 00dc 254B     		ldr	r3, .L219+8
 4159 00de 0022     		movs	r2, #0
 4160 00e0 1A60     		str	r2, [r3]
 4161              	.L214:
 572:.\main.c      ****         if (adc_flag) {
 4162              		.loc 4 572 0
 4163 00e2 2B4B     		ldr	r3, .L219+36
 4164 00e4 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 4165 00e6 002B     		cmp	r3, #0
 4166 00e8 07D1     		bne	.L215
 572:.\main.c      ****         if (adc_flag) {
 4167              		.loc 4 572 0 is_stmt 0 discriminator 1
 4168 00ea 294B     		ldr	r3, .L219+36
 4169 00ec DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 4170 00ee 002B     		cmp	r3, #0
 4171 00f0 03D1     		bne	.L215
 572:.\main.c      ****         if (adc_flag) {
 4172              		.loc 4 572 0 discriminator 2
 4173 00f2 274B     		ldr	r3, .L219+36
 4174 00f4 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4175 00f6 002B     		cmp	r3, #0
 4176 00f8 EAD1     		bne	.L216
 4177              	.L215:
 576:.\main.c      ****         }
 577:.\main.c      ****     }
 578:.\main.c      ****     
 579:.\main.c      ****     usbPutString(" - turn 135\r\n");
 4178              		.loc 4 579 0 is_stmt 1
 4179 00fa 2648     		ldr	r0, .L219+40
 4180 00fc FFF7FEFF 		bl	usbPutString
 580:.\main.c      ****     
 581:.\main.c      ****     // make the turn
 582:.\main.c      ****     setWheelDirection(TRUE, FALSE);
 4181              		.loc 4 582 0
 4182 0100 0120     		movs	r0, #1
 4183 0102 0021     		movs	r1, #0
 4184 0104 FFF7FEFF 		bl	setWheelDirection
 583:.\main.c      ****     PWM_1_WriteCompare(TURN_SPEED);
 4185              		.loc 4 583 0
 4186 0108 4FF4E170 		mov	r0, #450
 4187 010c FFF7FEFF 		bl	PWM_1_WriteCompare
 584:.\main.c      ****     PWM_2_WriteCompare(TURN_SPEED);
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 94


 4188              		.loc 4 584 0
 4189 0110 4FF4E170 		mov	r0, #450
 4190 0114 FFF7FEFF 		bl	PWM_2_WriteCompare
 585:.\main.c      ****     
 586:.\main.c      ****     QuadDec_M1_SetCounter(prevCountM1);
 4191              		.loc 4 586 0
 4192 0118 3B69     		ldr	r3, [r7, #16]
 4193 011a 9BB2     		uxth	r3, r3
 4194 011c 1BB2     		sxth	r3, r3
 4195 011e 1846     		mov	r0, r3
 4196 0120 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 587:.\main.c      ****     QuadDec_M2_SetCounter(prevCountM2);
 4197              		.loc 4 587 0
 4198 0124 FB68     		ldr	r3, [r7, #12]
 4199 0126 9BB2     		uxth	r3, r3
 4200 0128 1BB2     		sxth	r3, r3
 4201 012a 1846     		mov	r0, r3
 4202 012c FFF7FEFF 		bl	QuadDec_M2_SetCounter
 588:.\main.c      ****     isr_TS_Enable();
 4203              		.loc 4 588 0
 4204 0130 FFF7FEFF 		bl	isr_TS_Enable
 589:.\main.c      ****     
 590:.\main.c      ****     
 591:.\main.c      ****     // the number 180 is roughly a 135 degree turn
 592:.\main.c      ****     turnForDegrees(180); // so that it doesn't stop if it's already on a line
 4205              		.loc 4 592 0
 4206 0134 B420     		movs	r0, #180
 4207 0136 FFF7FEFF 		bl	turnForDegrees
 593:.\main.c      ****     
 594:.\main.c      ****     usbPutString(" - finish turn\r\n");
 4208              		.loc 4 594 0
 4209 013a 1748     		ldr	r0, .L219+44
 4210 013c FFF7FEFF 		bl	usbPutString
 595:.\main.c      ****     
 596:.\main.c      ****     // finish turn
 597:.\main.c      ****     while (!sensor_readings[TOP_MID_SENSOR]) {
 4211              		.loc 4 597 0
 4212 0140 08E0     		b	.L217
 4213              	.L218:
 598:.\main.c      ****         if (adc_flag) {
 4214              		.loc 4 598 0
 4215 0142 0C4B     		ldr	r3, .L219+8
 4216 0144 1B68     		ldr	r3, [r3]
 4217 0146 002B     		cmp	r3, #0
 4218 0148 04D0     		beq	.L217
 599:.\main.c      ****             updateSensorValues();
 4219              		.loc 4 599 0
 4220 014a FFF7FEFF 		bl	updateSensorValues
 600:.\main.c      ****             adc_flag = FALSE;
 4221              		.loc 4 600 0
 4222 014e 094B     		ldr	r3, .L219+8
 4223 0150 0022     		movs	r2, #0
 4224 0152 1A60     		str	r2, [r3]
 4225              	.L217:
 597:.\main.c      ****         if (adc_flag) {
 4226              		.loc 4 597 0
 4227 0154 0E4B     		ldr	r3, .L219+36
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 95


 4228 0156 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 4229 0158 002B     		cmp	r3, #0
 4230 015a F2D0     		beq	.L218
 601:.\main.c      ****         }
 602:.\main.c      ****     }
 603:.\main.c      ****     setWheelDirection(TRUE, TRUE);
 4231              		.loc 4 603 0
 4232 015c 0120     		movs	r0, #1
 4233 015e 0121     		movs	r1, #1
 4234 0160 FFF7FEFF 		bl	setWheelDirection
 604:.\main.c      **** }
 4235              		.loc 4 604 0
 4236 0164 1837     		adds	r7, r7, #24
 4237              		.cfi_def_cfa_offset 8
 4238 0166 BD46     		mov	sp, r7
 4239              		.cfi_def_cfa_register 13
 4240              		@ sp needed
 4241 0168 80BD     		pop	{r7, pc}
 4242              	.L220:
 4243 016a 00BF     		.align	2
 4244              	.L219:
 4245 016c 04010000 		.word	.LC15
 4246 0170 F8010000 		.word	.LC28
 4247 0174 00000000 		.word	adc_flag
 4248 0178 00000000 		.word	timer_flag
 4249 017c 00000000 		.word	prevCountM1
 4250 0180 00000000 		.word	prevCountM2
 4251 0184 00000000 		.word	countM1
 4252 0188 00000000 		.word	countM2
 4253 018c 10020000 		.word	.LC29
 4254 0190 00000000 		.word	sensor_readings
 4255 0194 2C020000 		.word	.LC30
 4256 0198 64010000 		.word	.LC23
 4257              		.cfi_endproc
 4258              	.LFE92:
 4259              		.size	uTurn, .-uTurn
 4260              		.section	.text.changeLeftWheelSpeed,"ax",%progbits
 4261              		.align	2
 4262              		.global	changeLeftWheelSpeed
 4263              		.thumb
 4264              		.thumb_func
 4265              		.type	changeLeftWheelSpeed, %function
 4266              	changeLeftWheelSpeed:
 4267              	.LFB93:
 605:.\main.c      **** 
 606:.\main.c      **** // --------------------------------------------- HELPERS ------------------------------------------
 607:.\main.c      **** void changeLeftWheelSpeed(int amount) {
 4268              		.loc 4 607 0
 4269              		.cfi_startproc
 4270              		@ args = 0, pretend = 0, frame = 16
 4271              		@ frame_needed = 1, uses_anonymous_args = 0
 4272 0000 80B5     		push	{r7, lr}
 4273              		.cfi_def_cfa_offset 8
 4274              		.cfi_offset 7, -8
 4275              		.cfi_offset 14, -4
 4276 0002 84B0     		sub	sp, sp, #16
 4277              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 96


 4278 0004 00AF     		add	r7, sp, #0
 4279              		.cfi_def_cfa_register 7
 4280 0006 7860     		str	r0, [r7, #4]
 608:.\main.c      ****     int new_value = PWM_1_ReadCompare() + amount;
 4281              		.loc 4 608 0
 4282 0008 FFF7FEFF 		bl	PWM_1_ReadCompare
 4283 000c 0346     		mov	r3, r0
 4284 000e 1A46     		mov	r2, r3
 4285 0010 7B68     		ldr	r3, [r7, #4]
 4286 0012 1344     		add	r3, r3, r2
 4287 0014 FB60     		str	r3, [r7, #12]
 609:.\main.c      ****     PWM_1_WriteCompare((new_value > 0) ? new_value:0); // account for underflow
 4288              		.loc 4 609 0
 4289 0016 FB68     		ldr	r3, [r7, #12]
 4290 0018 23EAE373 		bic	r3, r3, r3, asr #31
 4291 001c 9BB2     		uxth	r3, r3
 4292 001e 1846     		mov	r0, r3
 4293 0020 FFF7FEFF 		bl	PWM_1_WriteCompare
 610:.\main.c      **** }
 4294              		.loc 4 610 0
 4295 0024 1037     		adds	r7, r7, #16
 4296              		.cfi_def_cfa_offset 8
 4297 0026 BD46     		mov	sp, r7
 4298              		.cfi_def_cfa_register 13
 4299              		@ sp needed
 4300 0028 80BD     		pop	{r7, pc}
 4301              		.cfi_endproc
 4302              	.LFE93:
 4303              		.size	changeLeftWheelSpeed, .-changeLeftWheelSpeed
 4304 002a 00BF     		.section	.text.changeRightWheelSpeed,"ax",%progbits
 4305              		.align	2
 4306              		.global	changeRightWheelSpeed
 4307              		.thumb
 4308              		.thumb_func
 4309              		.type	changeRightWheelSpeed, %function
 4310              	changeRightWheelSpeed:
 4311              	.LFB94:
 611:.\main.c      **** 
 612:.\main.c      **** void changeRightWheelSpeed(int amount){
 4312              		.loc 4 612 0
 4313              		.cfi_startproc
 4314              		@ args = 0, pretend = 0, frame = 16
 4315              		@ frame_needed = 1, uses_anonymous_args = 0
 4316 0000 80B5     		push	{r7, lr}
 4317              		.cfi_def_cfa_offset 8
 4318              		.cfi_offset 7, -8
 4319              		.cfi_offset 14, -4
 4320 0002 84B0     		sub	sp, sp, #16
 4321              		.cfi_def_cfa_offset 24
 4322 0004 00AF     		add	r7, sp, #0
 4323              		.cfi_def_cfa_register 7
 4324 0006 7860     		str	r0, [r7, #4]
 613:.\main.c      ****     int new_value = PWM_2_ReadCompare() + amount;
 4325              		.loc 4 613 0
 4326 0008 FFF7FEFF 		bl	PWM_2_ReadCompare
 4327 000c 0346     		mov	r3, r0
 4328 000e 1A46     		mov	r2, r3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 97


 4329 0010 7B68     		ldr	r3, [r7, #4]
 4330 0012 1344     		add	r3, r3, r2
 4331 0014 FB60     		str	r3, [r7, #12]
 614:.\main.c      ****     PWM_2_WriteCompare((new_value > 0) ? new_value:0); // account for underflow
 4332              		.loc 4 614 0
 4333 0016 FB68     		ldr	r3, [r7, #12]
 4334 0018 23EAE373 		bic	r3, r3, r3, asr #31
 4335 001c 9BB2     		uxth	r3, r3
 4336 001e 1846     		mov	r0, r3
 4337 0020 FFF7FEFF 		bl	PWM_2_WriteCompare
 615:.\main.c      **** }
 4338              		.loc 4 615 0
 4339 0024 1037     		adds	r7, r7, #16
 4340              		.cfi_def_cfa_offset 8
 4341 0026 BD46     		mov	sp, r7
 4342              		.cfi_def_cfa_register 13
 4343              		@ sp needed
 4344 0028 80BD     		pop	{r7, pc}
 4345              		.cfi_endproc
 4346              	.LFE94:
 4347              		.size	changeRightWheelSpeed, .-changeRightWheelSpeed
 4348 002a 00BF     		.section	.text.startWheels,"ax",%progbits
 4349              		.align	2
 4350              		.global	startWheels
 4351              		.thumb
 4352              		.thumb_func
 4353              		.type	startWheels, %function
 4354              	startWheels:
 4355              	.LFB95:
 616:.\main.c      **** 
 617:.\main.c      **** void startWheels() {
 4356              		.loc 4 617 0
 4357              		.cfi_startproc
 4358              		@ args = 0, pretend = 0, frame = 0
 4359              		@ frame_needed = 1, uses_anonymous_args = 0
 4360 0000 80B5     		push	{r7, lr}
 4361              		.cfi_def_cfa_offset 8
 4362              		.cfi_offset 7, -8
 4363              		.cfi_offset 14, -4
 4364 0002 00AF     		add	r7, sp, #0
 4365              		.cfi_def_cfa_register 7
 618:.\main.c      ****     PWM_1_WriteCompare(400);
 4366              		.loc 4 618 0
 4367 0004 4FF4C870 		mov	r0, #400
 4368 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
 619:.\main.c      ****     PWM_2_WriteCompare(400);
 4369              		.loc 4 619 0
 4370 000c 4FF4C870 		mov	r0, #400
 4371 0010 FFF7FEFF 		bl	PWM_2_WriteCompare
 620:.\main.c      **** }
 4372              		.loc 4 620 0
 4373 0014 80BD     		pop	{r7, pc}
 4374              		.cfi_endproc
 4375              	.LFE95:
 4376              		.size	startWheels, .-startWheels
 4377 0016 00BF     		.section	.text.stopWheels,"ax",%progbits
 4378              		.align	2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 98


 4379              		.global	stopWheels
 4380              		.thumb
 4381              		.thumb_func
 4382              		.type	stopWheels, %function
 4383              	stopWheels:
 4384              	.LFB96:
 621:.\main.c      **** 
 622:.\main.c      **** void stopWheels() {
 4385              		.loc 4 622 0
 4386              		.cfi_startproc
 4387              		@ args = 0, pretend = 0, frame = 0
 4388              		@ frame_needed = 1, uses_anonymous_args = 0
 4389 0000 80B5     		push	{r7, lr}
 4390              		.cfi_def_cfa_offset 8
 4391              		.cfi_offset 7, -8
 4392              		.cfi_offset 14, -4
 4393 0002 00AF     		add	r7, sp, #0
 4394              		.cfi_def_cfa_register 7
 623:.\main.c      ****     PWM_1_WriteCompare(0);
 4395              		.loc 4 623 0
 4396 0004 0020     		movs	r0, #0
 4397 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
 624:.\main.c      ****     PWM_2_WriteCompare(0);
 4398              		.loc 4 624 0
 4399 000a 0020     		movs	r0, #0
 4400 000c FFF7FEFF 		bl	PWM_2_WriteCompare
 625:.\main.c      **** }
 4401              		.loc 4 625 0
 4402 0010 80BD     		pop	{r7, pc}
 4403              		.cfi_endproc
 4404              	.LFE96:
 4405              		.size	stopWheels, .-stopWheels
 4406              		.global	__aeabi_fdiv
 4407              		.global	__aeabi_f2d
 4408              		.global	__aeabi_dmul
 4409              		.global	__aeabi_d2f
 4410 0012 00BF     		.section	.text.getDistance,"ax",%progbits
 4411              		.align	2
 4412              		.global	getDistance
 4413              		.thumb
 4414              		.thumb_func
 4415              		.type	getDistance, %function
 4416              	getDistance:
 4417              	.LFB97:
 626:.\main.c      **** 
 627:.\main.c      **** float getDistance(int prevCountM1, int prevCountM2) {
 4418              		.loc 4 627 0
 4419              		.cfi_startproc
 4420              		@ args = 0, pretend = 0, frame = 16
 4421              		@ frame_needed = 1, uses_anonymous_args = 0
 4422 0000 80B5     		push	{r7, lr}
 4423              		.cfi_def_cfa_offset 8
 4424              		.cfi_offset 7, -8
 4425              		.cfi_offset 14, -4
 4426 0002 84B0     		sub	sp, sp, #16
 4427              		.cfi_def_cfa_offset 24
 4428 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 99


 4429              		.cfi_def_cfa_register 7
 4430 0006 7860     		str	r0, [r7, #4]
 4431 0008 3960     		str	r1, [r7]
 628:.\main.c      ****     float m1_dist = ((float)abs(countM1 - prevCountM1) / TICKS_PER_REV) * LINEAR_DISTANCE_PER_REV;
 4432              		.loc 4 628 0
 4433 000a 2D4B     		ldr	r3, .L227+8
 4434 000c 1A68     		ldr	r2, [r3]
 4435 000e 7B68     		ldr	r3, [r7, #4]
 4436 0010 D31A     		subs	r3, r2, r3
 4437 0012 002B     		cmp	r3, #0
 4438 0014 B8BF     		it	lt
 4439 0016 5B42     		rsblt	r3, r3, #0
 4440 0018 1846     		mov	r0, r3
 4441 001a FFF7FEFF 		bl	__aeabi_i2f
 4442 001e 0346     		mov	r3, r0
 4443 0020 1846     		mov	r0, r3
 4444 0022 2849     		ldr	r1, .L227+12
 4445 0024 FFF7FEFF 		bl	__aeabi_fdiv
 4446 0028 0346     		mov	r3, r0
 4447 002a 1846     		mov	r0, r3
 4448 002c FFF7FEFF 		bl	__aeabi_f2d
 4449 0030 0246     		mov	r2, r0
 4450 0032 0B46     		mov	r3, r1
 4451 0034 1046     		mov	r0, r2
 4452 0036 1946     		mov	r1, r3
 4453 0038 1FA3     		adr	r3, .L227
 4454 003a D3E90023 		ldrd	r2, [r3]
 4455 003e FFF7FEFF 		bl	__aeabi_dmul
 4456 0042 0246     		mov	r2, r0
 4457 0044 0B46     		mov	r3, r1
 4458 0046 1046     		mov	r0, r2
 4459 0048 1946     		mov	r1, r3
 4460 004a FFF7FEFF 		bl	__aeabi_d2f
 4461 004e 0346     		mov	r3, r0
 4462 0050 FB60     		str	r3, [r7, #12]	@ float
 629:.\main.c      ****     float m2_dist = ((float)abs(countM2 - prevCountM2) / TICKS_PER_REV) * LINEAR_DISTANCE_PER_REV;
 4463              		.loc 4 629 0
 4464 0052 1D4B     		ldr	r3, .L227+16
 4465 0054 1A68     		ldr	r2, [r3]
 4466 0056 3B68     		ldr	r3, [r7]
 4467 0058 D31A     		subs	r3, r2, r3
 4468 005a 002B     		cmp	r3, #0
 4469 005c B8BF     		it	lt
 4470 005e 5B42     		rsblt	r3, r3, #0
 4471 0060 1846     		mov	r0, r3
 4472 0062 FFF7FEFF 		bl	__aeabi_i2f
 4473 0066 0346     		mov	r3, r0
 4474 0068 1846     		mov	r0, r3
 4475 006a 1649     		ldr	r1, .L227+12
 4476 006c FFF7FEFF 		bl	__aeabi_fdiv
 4477 0070 0346     		mov	r3, r0
 4478 0072 1846     		mov	r0, r3
 4479 0074 FFF7FEFF 		bl	__aeabi_f2d
 4480 0078 0246     		mov	r2, r0
 4481 007a 0B46     		mov	r3, r1
 4482 007c 1046     		mov	r0, r2
 4483 007e 1946     		mov	r1, r3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 100


 4484 0080 0DA3     		adr	r3, .L227
 4485 0082 D3E90023 		ldrd	r2, [r3]
 4486 0086 FFF7FEFF 		bl	__aeabi_dmul
 4487 008a 0246     		mov	r2, r0
 4488 008c 0B46     		mov	r3, r1
 4489 008e 1046     		mov	r0, r2
 4490 0090 1946     		mov	r1, r3
 4491 0092 FFF7FEFF 		bl	__aeabi_d2f
 4492 0096 0346     		mov	r3, r0
 4493 0098 BB60     		str	r3, [r7, #8]	@ float
 630:.\main.c      ****     return (m1_dist + m2_dist) / 2;
 4494              		.loc 4 630 0
 4495 009a F868     		ldr	r0, [r7, #12]	@ float
 4496 009c B968     		ldr	r1, [r7, #8]	@ float
 4497 009e FFF7FEFF 		bl	__aeabi_fadd
 4498 00a2 0346     		mov	r3, r0
 4499 00a4 1846     		mov	r0, r3
 4500 00a6 4FF08041 		mov	r1, #1073741824
 4501 00aa FFF7FEFF 		bl	__aeabi_fdiv
 4502 00ae 0346     		mov	r3, r0
 631:.\main.c      **** };
 4503              		.loc 4 631 0
 4504 00b0 1846     		mov	r0, r3
 4505 00b2 1037     		adds	r7, r7, #16
 4506              		.cfi_def_cfa_offset 8
 4507 00b4 BD46     		mov	sp, r7
 4508              		.cfi_def_cfa_register 13
 4509              		@ sp needed
 4510 00b6 80BD     		pop	{r7, pc}
 4511              	.L228:
 4512              		.align	3
 4513              	.L227:
 4514 00b8 CE8C7E34 		.word	880708814
 4515 00bc 9C6B3440 		.word	1077177244
 4516 00c0 00000000 		.word	countM1
 4517 00c4 00006443 		.word	1130627072
 4518 00c8 00000000 		.word	countM2
 4519              		.cfi_endproc
 4520              	.LFE97:
 4521              		.size	getDistance, .-getDistance
 4522 00cc AFF30080 		.section	.text.correctSpeed,"ax",%progbits
 4523              		.align	2
 4524              		.global	correctSpeed
 4525              		.thumb
 4526              		.thumb_func
 4527              		.type	correctSpeed, %function
 4528              	correctSpeed:
 4529              	.LFB98:
 632:.\main.c      **** 
 633:.\main.c      **** /* ## SPEED CONTROL ## 
 634:.\main.c      **** * Gets difference between counts, compares to difference we expect. Add correction to PWM.*/
 635:.\main.c      **** void correctSpeed(int prevCount, int count, int desired_count, int isLeftWheel){    
 4530              		.loc 4 635 0
 4531              		.cfi_startproc
 4532              		@ args = 0, pretend = 0, frame = 24
 4533              		@ frame_needed = 1, uses_anonymous_args = 0
 4534 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 101


 4535              		.cfi_def_cfa_offset 8
 4536              		.cfi_offset 7, -8
 4537              		.cfi_offset 14, -4
 4538 0002 86B0     		sub	sp, sp, #24
 4539              		.cfi_def_cfa_offset 32
 4540 0004 00AF     		add	r7, sp, #0
 4541              		.cfi_def_cfa_register 7
 4542 0006 F860     		str	r0, [r7, #12]
 4543 0008 B960     		str	r1, [r7, #8]
 4544 000a 7A60     		str	r2, [r7, #4]
 4545 000c 3B60     		str	r3, [r7]
 636:.\main.c      ****     // Account for overflow edge or other unknown error
 637:.\main.c      ****     if (prevCount > count) return;
 4546              		.loc 4 637 0
 4547 000e FA68     		ldr	r2, [r7, #12]
 4548 0010 BB68     		ldr	r3, [r7, #8]
 4549 0012 9A42     		cmp	r2, r3
 4550 0014 00DD     		ble	.L230
 4551 0016 19E0     		b	.L229
 4552              	.L230:
 638:.\main.c      ****     
 639:.\main.c      ****     // Account for when PSoc is powered but wheels aren't moving
 640:.\main.c      ****     int diff_count = abs(count - prevCount);
 4553              		.loc 4 640 0
 4554 0018 BA68     		ldr	r2, [r7, #8]
 4555 001a FB68     		ldr	r3, [r7, #12]
 4556 001c D31A     		subs	r3, r2, r3
 4557 001e 002B     		cmp	r3, #0
 4558 0020 B8BF     		it	lt
 4559 0022 5B42     		rsblt	r3, r3, #0
 4560 0024 7B61     		str	r3, [r7, #20]
 641:.\main.c      ****     if (diff_count == 0) return;
 4561              		.loc 4 641 0
 4562 0026 7B69     		ldr	r3, [r7, #20]
 4563 0028 002B     		cmp	r3, #0
 4564 002a 00D1     		bne	.L232
 4565              		.loc 4 641 0 is_stmt 0 discriminator 2
 4566 002c 0EE0     		b	.L229
 4567              	.L232:
 642:.\main.c      ****         
 643:.\main.c      ****     /* Determine correction that must be applied to the wheel
 644:.\main.c      ****     * desired_count > diff_count :-> wheel is slow; increase PWM
 645:.\main.c      ****     * desired_count < diff_count :-> wheel is fast; decrease PWM
 646:.\main.c      ****     * desired_count == diff_count :-> wheel is stable; do nothing
 647:.\main.c      ****     */
 648:.\main.c      ****     int correction = desired_count-diff_count;
 4568              		.loc 4 648 0 is_stmt 1
 4569 002e 7A68     		ldr	r2, [r7, #4]
 4570 0030 7B69     		ldr	r3, [r7, #20]
 4571 0032 D31A     		subs	r3, r2, r3
 4572 0034 3B61     		str	r3, [r7, #16]
 649:.\main.c      ****     
 650:.\main.c      ****     // Apply the speed correction to the appropriate wheel          
 651:.\main.c      ****     if (isLeftWheel) changeLeftWheelSpeed(correction);
 4573              		.loc 4 651 0
 4574 0036 3B68     		ldr	r3, [r7]
 4575 0038 002B     		cmp	r3, #0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 102


 4576 003a 03D0     		beq	.L233
 4577              		.loc 4 651 0 is_stmt 0 discriminator 1
 4578 003c 3869     		ldr	r0, [r7, #16]
 4579 003e FFF7FEFF 		bl	changeLeftWheelSpeed
 4580 0042 02E0     		b	.L234
 4581              	.L233:
 652:.\main.c      ****     else changeRightWheelSpeed(correction);
 4582              		.loc 4 652 0 is_stmt 1
 4583 0044 3869     		ldr	r0, [r7, #16]
 4584 0046 FFF7FEFF 		bl	changeRightWheelSpeed
 4585              	.L234:
 653:.\main.c      ****     
 654:.\main.c      ****     return;
 4586              		.loc 4 654 0 discriminator 3
 4587 004a 00BF     		nop
 4588              	.L229:
 655:.\main.c      **** }
 4589              		.loc 4 655 0
 4590 004c 1837     		adds	r7, r7, #24
 4591              		.cfi_def_cfa_offset 8
 4592 004e BD46     		mov	sp, r7
 4593              		.cfi_def_cfa_register 13
 4594              		@ sp needed
 4595 0050 80BD     		pop	{r7, pc}
 4596              		.cfi_endproc
 4597              	.LFE98:
 4598              		.size	correctSpeed, .-correctSpeed
 4599 0052 00BF     		.section	.text.setWheelDirection,"ax",%progbits
 4600              		.align	2
 4601              		.global	setWheelDirection
 4602              		.thumb
 4603              		.thumb_func
 4604              		.type	setWheelDirection, %function
 4605              	setWheelDirection:
 4606              	.LFB99:
 656:.\main.c      **** 
 657:.\main.c      **** void setWheelDirection(int leftIsForward, int rightIsForward){
 4607              		.loc 4 657 0
 4608              		.cfi_startproc
 4609              		@ args = 0, pretend = 0, frame = 8
 4610              		@ frame_needed = 1, uses_anonymous_args = 0
 4611 0000 80B5     		push	{r7, lr}
 4612              		.cfi_def_cfa_offset 8
 4613              		.cfi_offset 7, -8
 4614              		.cfi_offset 14, -4
 4615 0002 82B0     		sub	sp, sp, #8
 4616              		.cfi_def_cfa_offset 16
 4617 0004 00AF     		add	r7, sp, #0
 4618              		.cfi_def_cfa_register 7
 4619 0006 7860     		str	r0, [r7, #4]
 4620 0008 3960     		str	r1, [r7]
 658:.\main.c      ****     INV1_Write(!leftIsForward);
 4621              		.loc 4 658 0
 4622 000a 7B68     		ldr	r3, [r7, #4]
 4623 000c 002B     		cmp	r3, #0
 4624 000e 0CBF     		ite	eq
 4625 0010 0123     		moveq	r3, #1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 103


 4626 0012 0023     		movne	r3, #0
 4627 0014 DBB2     		uxtb	r3, r3
 4628 0016 1846     		mov	r0, r3
 4629 0018 FFF7FEFF 		bl	INV1_Write
 659:.\main.c      ****     INV2_Write(rightIsForward);
 4630              		.loc 4 659 0
 4631 001c 3B68     		ldr	r3, [r7]
 4632 001e DBB2     		uxtb	r3, r3
 4633 0020 1846     		mov	r0, r3
 4634 0022 FFF7FEFF 		bl	INV2_Write
 660:.\main.c      **** }
 4635              		.loc 4 660 0
 4636 0026 0837     		adds	r7, r7, #8
 4637              		.cfi_def_cfa_offset 8
 4638 0028 BD46     		mov	sp, r7
 4639              		.cfi_def_cfa_register 13
 4640              		@ sp needed
 4641 002a 80BD     		pop	{r7, pc}
 4642              		.cfi_endproc
 4643              	.LFE99:
 4644              		.size	setWheelDirection, .-setWheelDirection
 4645              		.section	.text.usbPutString,"ax",%progbits
 4646              		.align	2
 4647              		.global	usbPutString
 4648              		.thumb
 4649              		.thumb_func
 4650              		.type	usbPutString, %function
 4651              	usbPutString:
 4652              	.LFB100:
 661:.\main.c      **** 
 662:.\main.c      **** //* ========================================
 663:.\main.c      **** void usbPutString(char *s) {
 4653              		.loc 4 663 0
 4654              		.cfi_startproc
 4655              		@ args = 0, pretend = 0, frame = 8
 4656              		@ frame_needed = 1, uses_anonymous_args = 0
 4657              		@ link register save eliminated.
 4658 0000 80B4     		push	{r7}
 4659              		.cfi_def_cfa_offset 4
 4660              		.cfi_offset 7, -4
 4661 0002 83B0     		sub	sp, sp, #12
 4662              		.cfi_def_cfa_offset 16
 4663 0004 00AF     		add	r7, sp, #0
 4664              		.cfi_def_cfa_register 7
 4665 0006 7860     		str	r0, [r7, #4]
 664:.\main.c      **** // !! Assumes that *s is a string with allocated space >=64 chars     
 665:.\main.c      **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 666:.\main.c      **** //  length to 62 char (63rd char is a '!')
 667:.\main.c      ****     
 668:.\main.c      **** #ifdef PUTTY
 669:.\main.c      ****     while (USBUART_CDCIsReady() == 0){ };
 670:.\main.c      ****     USBUART_PutData((uint8 *)s, strlen(s));
 671:.\main.c      **** #endif
 672:.\main.c      ****     (void)s;
 673:.\main.c      ****     return;
 4666              		.loc 4 673 0
 4667 0008 00BF     		nop
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 104


 674:.\main.c      **** }
 4668              		.loc 4 674 0
 4669 000a 0C37     		adds	r7, r7, #12
 4670              		.cfi_def_cfa_offset 4
 4671 000c BD46     		mov	sp, r7
 4672              		.cfi_def_cfa_register 13
 4673              		@ sp needed
 4674 000e 5DF8047B 		ldr	r7, [sp], #4
 4675              		.cfi_restore 7
 4676              		.cfi_def_cfa_offset 0
 4677 0012 7047     		bx	lr
 4678              		.cfi_endproc
 4679              	.LFE100:
 4680              		.size	usbPutString, .-usbPutString
 4681              		.section	.rodata
 4682 023a 0000     		.align	2
 4683              	.LC31:
 4684 023c 4C00     		.ascii	"L\000"
 4685 023e 0000     		.align	2
 4686              	.LC32:
 4687 0240 5200     		.ascii	"R\000"
 4688 0242 0000     		.align	2
 4689              	.LC33:
 4690 0244 5500     		.ascii	"U\000"
 4691 0246 0000     		.align	2
 4692              	.LC34:
 4693 0248 2C00     		.ascii	",\000"
 4694 024a 0000     		.align	2
 4695              	.LC35:
 4696 024c 290D0A00 		.ascii	")\015\012\000"
 4697              		.section	.text.printCommandsUSB,"ax",%progbits
 4698              		.align	2
 4699              		.global	printCommandsUSB
 4700              		.thumb
 4701              		.thumb_func
 4702              		.type	printCommandsUSB, %function
 4703              	printCommandsUSB:
 4704              	.LFB101:
 675:.\main.c      **** 
 676:.\main.c      **** /* Prints the commands */
 677:.\main.c      **** void printCommandsUSB(int *commands){
 4705              		.loc 4 677 0
 4706              		.cfi_startproc
 4707              		@ args = 0, pretend = 0, frame = 48
 4708              		@ frame_needed = 1, uses_anonymous_args = 0
 4709 0000 80B5     		push	{r7, lr}
 4710              		.cfi_def_cfa_offset 8
 4711              		.cfi_offset 7, -8
 4712              		.cfi_offset 14, -4
 4713 0002 8CB0     		sub	sp, sp, #48
 4714              		.cfi_def_cfa_offset 56
 4715 0004 00AF     		add	r7, sp, #0
 4716              		.cfi_def_cfa_register 7
 4717 0006 7860     		str	r0, [r7, #4]
 678:.\main.c      ****     //fputs("Commands: (",stdout);
 679:.\main.c      ****     usbPutString("Commands: (");
 4718              		.loc 4 679 0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 105


 4719 0008 2A48     		ldr	r0, .L252
 4720 000a FFF7FEFF 		bl	usbPutString
 680:.\main.c      ****     int i;
 681:.\main.c      ****     char buff[32];
 682:.\main.c      ****     for (i = 0; i < MAX_COMMAND_LENGTH; i++){
 4721              		.loc 4 682 0
 4722 000e 0023     		movs	r3, #0
 4723 0010 FB62     		str	r3, [r7, #44]
 4724 0012 45E0     		b	.L239
 4725              	.L250:
 683:.\main.c      ****         if (commands[i] == EMPTY_COMMAND){
 4726              		.loc 4 683 0
 4727 0014 FB6A     		ldr	r3, [r7, #44]
 4728 0016 9B00     		lsls	r3, r3, #2
 4729 0018 7A68     		ldr	r2, [r7, #4]
 4730 001a 1344     		add	r3, r3, r2
 4731 001c 1B68     		ldr	r3, [r3]
 4732 001e 002B     		cmp	r3, #0
 4733 0020 03D1     		bne	.L240
 684:.\main.c      ****             if (i > 0) break;
 4734              		.loc 4 684 0
 4735 0022 FB6A     		ldr	r3, [r7, #44]
 4736 0024 002B     		cmp	r3, #0
 4737 0026 41DD     		ble	.L238
 4738 0028 3DE0     		b	.L242
 4739              	.L240:
 685:.\main.c      ****             return;
 686:.\main.c      ****         }
 687:.\main.c      ****         switch(commands[i]){
 4740              		.loc 4 687 0
 4741 002a FB6A     		ldr	r3, [r7, #44]
 4742 002c 9B00     		lsls	r3, r3, #2
 4743 002e 7A68     		ldr	r2, [r7, #4]
 4744 0030 1344     		add	r3, r3, r2
 4745 0032 1B68     		ldr	r3, [r3]
 4746 0034 13F1020F 		cmn	r3, #2
 4747 0038 0AD0     		beq	.L245
 4748 003a B3F1FF3F 		cmp	r3, #-1
 4749 003e 03D0     		beq	.L246
 4750 0040 13F1030F 		cmn	r3, #3
 4751 0044 08D0     		beq	.L247
 4752 0046 0BE0     		b	.L251
 4753              	.L246:
 688:.\main.c      ****             case LEFT_TURN:
 689:.\main.c      ****                 usbPutString("L");
 4754              		.loc 4 689 0
 4755 0048 1B48     		ldr	r0, .L252+4
 4756 004a FFF7FEFF 		bl	usbPutString
 690:.\main.c      ****                 break;
 4757              		.loc 4 690 0
 4758 004e 19E0     		b	.L248
 4759              	.L245:
 691:.\main.c      ****             case RIGHT_TURN:
 692:.\main.c      ****                 usbPutString("R");
 4760              		.loc 4 692 0
 4761 0050 1A48     		ldr	r0, .L252+8
 4762 0052 FFF7FEFF 		bl	usbPutString
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 106


 693:.\main.c      ****                 break;
 4763              		.loc 4 693 0
 4764 0056 15E0     		b	.L248
 4765              	.L247:
 694:.\main.c      ****             case U_TURN:
 695:.\main.c      ****                 usbPutString("U");
 4766              		.loc 4 695 0
 4767 0058 1948     		ldr	r0, .L252+12
 4768 005a FFF7FEFF 		bl	usbPutString
 696:.\main.c      ****                 break;
 4769              		.loc 4 696 0
 4770 005e 11E0     		b	.L248
 4771              	.L251:
 697:.\main.c      ****             default:
 698:.\main.c      ****                 itoa(commands[i], buff, 10);
 4772              		.loc 4 698 0
 4773 0060 FB6A     		ldr	r3, [r7, #44]
 4774 0062 9B00     		lsls	r3, r3, #2
 4775 0064 7A68     		ldr	r2, [r7, #4]
 4776 0066 1344     		add	r3, r3, r2
 4777 0068 1A68     		ldr	r2, [r3]
 4778 006a 07F10C03 		add	r3, r7, #12
 4779 006e 1046     		mov	r0, r2
 4780 0070 1946     		mov	r1, r3
 4781 0072 0A22     		movs	r2, #10
 4782 0074 FFF7FEFF 		bl	itoa
 699:.\main.c      ****                 usbPutString(buff);
 4783              		.loc 4 699 0
 4784 0078 07F10C03 		add	r3, r7, #12
 4785 007c 1846     		mov	r0, r3
 4786 007e FFF7FEFF 		bl	usbPutString
 700:.\main.c      ****                 break;
 4787              		.loc 4 700 0
 4788 0082 00BF     		nop
 4789              	.L248:
 701:.\main.c      ****         };
 702:.\main.c      ****         if (commands[i+1] != EMPTY_COMMAND) usbPutString(",");
 4790              		.loc 4 702 0
 4791 0084 FB6A     		ldr	r3, [r7, #44]
 4792 0086 0133     		adds	r3, r3, #1
 4793 0088 9B00     		lsls	r3, r3, #2
 4794 008a 7A68     		ldr	r2, [r7, #4]
 4795 008c 1344     		add	r3, r3, r2
 4796 008e 1B68     		ldr	r3, [r3]
 4797 0090 002B     		cmp	r3, #0
 4798 0092 02D0     		beq	.L249
 4799              		.loc 4 702 0 is_stmt 0 discriminator 1
 4800 0094 0B48     		ldr	r0, .L252+16
 4801 0096 FFF7FEFF 		bl	usbPutString
 4802              	.L249:
 682:.\main.c      ****         if (commands[i] == EMPTY_COMMAND){
 4803              		.loc 4 682 0 is_stmt 1 discriminator 2
 4804 009a FB6A     		ldr	r3, [r7, #44]
 4805 009c 0133     		adds	r3, r3, #1
 4806 009e FB62     		str	r3, [r7, #44]
 4807              	.L239:
 682:.\main.c      ****         if (commands[i] == EMPTY_COMMAND){
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 107


 4808              		.loc 4 682 0 is_stmt 0 discriminator 1
 4809 00a0 FB6A     		ldr	r3, [r7, #44]
 4810 00a2 312B     		cmp	r3, #49
 4811 00a4 B6DD     		ble	.L250
 4812              	.L242:
 703:.\main.c      ****     }
 704:.\main.c      ****     usbPutString(")\r\n");
 4813              		.loc 4 704 0 is_stmt 1 discriminator 1
 4814 00a6 0848     		ldr	r0, .L252+20
 4815 00a8 FFF7FEFF 		bl	usbPutString
 4816              	.L238:
 705:.\main.c      **** }
 4817              		.loc 4 705 0
 4818 00ac 3037     		adds	r7, r7, #48
 4819              		.cfi_def_cfa_offset 8
 4820 00ae BD46     		mov	sp, r7
 4821              		.cfi_def_cfa_register 13
 4822              		@ sp needed
 4823 00b0 80BD     		pop	{r7, pc}
 4824              	.L253:
 4825 00b2 00BF     		.align	2
 4826              	.L252:
 4827 00b4 10000000 		.word	.LC2
 4828 00b8 3C020000 		.word	.LC31
 4829 00bc 40020000 		.word	.LC32
 4830 00c0 44020000 		.word	.LC33
 4831 00c4 48020000 		.word	.LC34
 4832 00c8 4C020000 		.word	.LC35
 4833              		.cfi_endproc
 4834              	.LFE101:
 4835              		.size	printCommandsUSB, .-printCommandsUSB
 4836              		.section	.text.printSingleCommandUSB,"ax",%progbits
 4837              		.align	2
 4838              		.global	printSingleCommandUSB
 4839              		.thumb
 4840              		.thumb_func
 4841              		.type	printSingleCommandUSB, %function
 4842              	printSingleCommandUSB:
 4843              	.LFB102:
 706:.\main.c      **** 
 707:.\main.c      **** void printSingleCommandUSB(int command){
 4844              		.loc 4 707 0
 4845              		.cfi_startproc
 4846              		@ args = 0, pretend = 0, frame = 40
 4847              		@ frame_needed = 1, uses_anonymous_args = 0
 4848 0000 80B5     		push	{r7, lr}
 4849              		.cfi_def_cfa_offset 8
 4850              		.cfi_offset 7, -8
 4851              		.cfi_offset 14, -4
 4852 0002 8AB0     		sub	sp, sp, #40
 4853              		.cfi_def_cfa_offset 48
 4854 0004 00AF     		add	r7, sp, #0
 4855              		.cfi_def_cfa_register 7
 4856 0006 7860     		str	r0, [r7, #4]
 708:.\main.c      ****     char buff[32];
 709:.\main.c      ****     switch(command){
 4857              		.loc 4 709 0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 108


 4858 0008 7B68     		ldr	r3, [r7, #4]
 4859 000a 13F1020F 		cmn	r3, #2
 4860 000e 0AD0     		beq	.L256
 4861 0010 B3F1FF3F 		cmp	r3, #-1
 4862 0014 03D0     		beq	.L257
 4863 0016 13F1030F 		cmn	r3, #3
 4864 001a 08D0     		beq	.L258
 4865 001c 0BE0     		b	.L260
 4866              	.L257:
 710:.\main.c      ****         case LEFT_TURN:
 711:.\main.c      ****             usbPutString("L");
 4867              		.loc 4 711 0
 4868 001e 0F48     		ldr	r0, .L261
 4869 0020 FFF7FEFF 		bl	usbPutString
 712:.\main.c      ****             break;
 4870              		.loc 4 712 0
 4871 0024 14E0     		b	.L259
 4872              	.L256:
 713:.\main.c      ****         case RIGHT_TURN:
 714:.\main.c      ****             usbPutString("R");
 4873              		.loc 4 714 0
 4874 0026 0E48     		ldr	r0, .L261+4
 4875 0028 FFF7FEFF 		bl	usbPutString
 715:.\main.c      ****             break;
 4876              		.loc 4 715 0
 4877 002c 10E0     		b	.L259
 4878              	.L258:
 716:.\main.c      ****         case U_TURN:
 717:.\main.c      ****             usbPutString("U");
 4879              		.loc 4 717 0
 4880 002e 0D48     		ldr	r0, .L261+8
 4881 0030 FFF7FEFF 		bl	usbPutString
 718:.\main.c      ****             break;
 4882              		.loc 4 718 0
 4883 0034 0CE0     		b	.L259
 4884              	.L260:
 719:.\main.c      ****         default:
 720:.\main.c      ****             itoa(command, buff, 10);
 4885              		.loc 4 720 0
 4886 0036 07F10803 		add	r3, r7, #8
 4887 003a 7868     		ldr	r0, [r7, #4]
 4888 003c 1946     		mov	r1, r3
 4889 003e 0A22     		movs	r2, #10
 4890 0040 FFF7FEFF 		bl	itoa
 721:.\main.c      ****             usbPutString(buff);
 4891              		.loc 4 721 0
 4892 0044 07F10803 		add	r3, r7, #8
 4893 0048 1846     		mov	r0, r3
 4894 004a FFF7FEFF 		bl	usbPutString
 722:.\main.c      ****             break;
 4895              		.loc 4 722 0
 4896 004e 00BF     		nop
 4897              	.L259:
 723:.\main.c      ****     };
 724:.\main.c      ****     usbPutString("\r\n");
 4898              		.loc 4 724 0
 4899 0050 0548     		ldr	r0, .L261+12
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 109


 4900 0052 FFF7FEFF 		bl	usbPutString
 725:.\main.c      **** }
 4901              		.loc 4 725 0
 4902 0056 2837     		adds	r7, r7, #40
 4903              		.cfi_def_cfa_offset 8
 4904 0058 BD46     		mov	sp, r7
 4905              		.cfi_def_cfa_register 13
 4906              		@ sp needed
 4907 005a 80BD     		pop	{r7, pc}
 4908              	.L262:
 4909              		.align	2
 4910              	.L261:
 4911 005c 3C020000 		.word	.LC31
 4912 0060 40020000 		.word	.LC32
 4913 0064 44020000 		.word	.LC33
 4914 0068 20010000 		.word	.LC18
 4915              		.cfi_endproc
 4916              	.LFE102:
 4917              		.size	printSingleCommandUSB, .-printSingleCommandUSB
 4918              		.text
 4919              	.Letext0:
 4920              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4921              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4922              		.file 7 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4923              		.file 8 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4924              		.file 9 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 4925              		.file 10 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9
 4926              		.file 11 "Generated_Source\\PSoC5/cytypes.h"
 4927              		.file 12 ".\\vars.h"
 4928              		.file 13 ".\\BFS/point.h"
 4929              		.file 14 "Generated_Source\\PSoC5/core_cm3.h"
 4930              		.file 15 ".\\BFS/map5.h"
 4931              		.section	.debug_info,"",%progbits
 4932              	.Ldebug_info0:
 4933 0000 27170000 		.4byte	0x1727
 4934 0004 0400     		.2byte	0x4
 4935 0006 00000000 		.4byte	.Ldebug_abbrev0
 4936 000a 04       		.byte	0x4
 4937 000b 01       		.uleb128 0x1
 4938 000c D3050000 		.4byte	.LASF260
 4939 0010 01       		.byte	0x1
 4940 0011 B60B0000 		.4byte	.LASF261
 4941 0015 80080000 		.4byte	.LASF262
 4942 0019 00000000 		.4byte	.Ldebug_ranges0+0
 4943 001d 00000000 		.4byte	0
 4944 0021 00000000 		.4byte	.Ldebug_line0
 4945 0025 02       		.uleb128 0x2
 4946 0026 01       		.byte	0x1
 4947 0027 06       		.byte	0x6
 4948 0028 CE0A0000 		.4byte	.LASF0
 4949 002c 02       		.uleb128 0x2
 4950 002d 01       		.byte	0x1
 4951 002e 08       		.byte	0x8
 4952 002f F3090000 		.4byte	.LASF1
 4953 0033 02       		.uleb128 0x2
 4954 0034 02       		.byte	0x2
 4955 0035 05       		.byte	0x5
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 110


 4956 0036 AE070000 		.4byte	.LASF2
 4957 003a 02       		.uleb128 0x2
 4958 003b 02       		.byte	0x2
 4959 003c 07       		.byte	0x7
 4960 003d E10A0000 		.4byte	.LASF3
 4961 0041 03       		.uleb128 0x3
 4962 0042 E1000000 		.4byte	.LASF9
 4963 0046 05       		.byte	0x5
 4964 0047 3F       		.byte	0x3f
 4965 0048 4C000000 		.4byte	0x4c
 4966 004c 02       		.uleb128 0x2
 4967 004d 04       		.byte	0x4
 4968 004e 05       		.byte	0x5
 4969 004f D7070000 		.4byte	.LASF4
 4970 0053 02       		.uleb128 0x2
 4971 0054 04       		.byte	0x4
 4972 0055 07       		.byte	0x7
 4973 0056 8E090000 		.4byte	.LASF5
 4974 005a 02       		.uleb128 0x2
 4975 005b 08       		.byte	0x8
 4976 005c 05       		.byte	0x5
 4977 005d 39050000 		.4byte	.LASF6
 4978 0061 02       		.uleb128 0x2
 4979 0062 08       		.byte	0x8
 4980 0063 07       		.byte	0x7
 4981 0064 98020000 		.4byte	.LASF7
 4982 0068 04       		.uleb128 0x4
 4983 0069 04       		.byte	0x4
 4984 006a 05       		.byte	0x5
 4985 006b 696E7400 		.ascii	"int\000"
 4986 006f 02       		.uleb128 0x2
 4987 0070 04       		.byte	0x4
 4988 0071 07       		.byte	0x7
 4989 0072 97000000 		.4byte	.LASF8
 4990 0076 05       		.uleb128 0x5
 4991 0077 04       		.byte	0x4
 4992 0078 03       		.uleb128 0x3
 4993 0079 0E010000 		.4byte	.LASF10
 4994 007d 06       		.byte	0x6
 4995 007e 07       		.byte	0x7
 4996 007f 68000000 		.4byte	0x68
 4997 0083 03       		.uleb128 0x3
 4998 0084 360B0000 		.4byte	.LASF11
 4999 0088 07       		.byte	0x7
 5000 0089 10       		.byte	0x10
 5001 008a 4C000000 		.4byte	0x4c
 5002 008e 03       		.uleb128 0x3
 5003 008f 81010000 		.4byte	.LASF12
 5004 0093 07       		.byte	0x7
 5005 0094 27       		.byte	0x27
 5006 0095 4C000000 		.4byte	0x4c
 5007 0099 06       		.uleb128 0x6
 5008 009a B1090000 		.4byte	.LASF13
 5009 009e 08       		.byte	0x8
 5010 009f 6101     		.2byte	0x161
 5011 00a1 6F000000 		.4byte	0x6f
 5012 00a5 07       		.uleb128 0x7
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 111


 5013 00a6 04       		.byte	0x4
 5014 00a7 07       		.byte	0x7
 5015 00a8 4A       		.byte	0x4a
 5016 00a9 C4000000 		.4byte	0xc4
 5017 00ad 08       		.uleb128 0x8
 5018 00ae B6040000 		.4byte	.LASF14
 5019 00b2 07       		.byte	0x7
 5020 00b3 4C       		.byte	0x4c
 5021 00b4 99000000 		.4byte	0x99
 5022 00b8 08       		.uleb128 0x8
 5023 00b9 3F080000 		.4byte	.LASF15
 5024 00bd 07       		.byte	0x7
 5025 00be 4D       		.byte	0x4d
 5026 00bf C4000000 		.4byte	0xc4
 5027 00c3 00       		.byte	0
 5028 00c4 09       		.uleb128 0x9
 5029 00c5 2C000000 		.4byte	0x2c
 5030 00c9 D4000000 		.4byte	0xd4
 5031 00cd 0A       		.uleb128 0xa
 5032 00ce D4000000 		.4byte	0xd4
 5033 00d2 03       		.byte	0x3
 5034 00d3 00       		.byte	0
 5035 00d4 02       		.uleb128 0x2
 5036 00d5 04       		.byte	0x4
 5037 00d6 07       		.byte	0x7
 5038 00d7 6B090000 		.4byte	.LASF16
 5039 00db 0B       		.uleb128 0xb
 5040 00dc 08       		.byte	0x8
 5041 00dd 07       		.byte	0x7
 5042 00de 47       		.byte	0x47
 5043 00df FC000000 		.4byte	0xfc
 5044 00e3 0C       		.uleb128 0xc
 5045 00e4 16020000 		.4byte	.LASF17
 5046 00e8 07       		.byte	0x7
 5047 00e9 49       		.byte	0x49
 5048 00ea 68000000 		.4byte	0x68
 5049 00ee 00       		.byte	0
 5050 00ef 0C       		.uleb128 0xc
 5051 00f0 F5030000 		.4byte	.LASF18
 5052 00f4 07       		.byte	0x7
 5053 00f5 4E       		.byte	0x4e
 5054 00f6 A5000000 		.4byte	0xa5
 5055 00fa 04       		.byte	0x4
 5056 00fb 00       		.byte	0
 5057 00fc 03       		.uleb128 0x3
 5058 00fd 87060000 		.4byte	.LASF19
 5059 0101 07       		.byte	0x7
 5060 0102 4F       		.byte	0x4f
 5061 0103 DB000000 		.4byte	0xdb
 5062 0107 03       		.uleb128 0x3
 5063 0108 9B040000 		.4byte	.LASF20
 5064 010c 07       		.byte	0x7
 5065 010d 53       		.byte	0x53
 5066 010e 78000000 		.4byte	0x78
 5067 0112 03       		.uleb128 0x3
 5068 0113 65050000 		.4byte	.LASF21
 5069 0117 09       		.byte	0x9
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 112


 5070 0118 16       		.byte	0x16
 5071 0119 53000000 		.4byte	0x53
 5072 011d 0D       		.uleb128 0xd
 5073 011e C0010000 		.4byte	.LASF26
 5074 0122 18       		.byte	0x18
 5075 0123 09       		.byte	0x9
 5076 0124 2D       		.byte	0x2d
 5077 0125 70010000 		.4byte	0x170
 5078 0129 0C       		.uleb128 0xc
 5079 012a B7030000 		.4byte	.LASF22
 5080 012e 09       		.byte	0x9
 5081 012f 2F       		.byte	0x2f
 5082 0130 70010000 		.4byte	0x170
 5083 0134 00       		.byte	0
 5084 0135 0E       		.uleb128 0xe
 5085 0136 5F6B00   		.ascii	"_k\000"
 5086 0139 09       		.byte	0x9
 5087 013a 30       		.byte	0x30
 5088 013b 68000000 		.4byte	0x68
 5089 013f 04       		.byte	0x4
 5090 0140 0C       		.uleb128 0xc
 5091 0141 12090000 		.4byte	.LASF23
 5092 0145 09       		.byte	0x9
 5093 0146 30       		.byte	0x30
 5094 0147 68000000 		.4byte	0x68
 5095 014b 08       		.byte	0x8
 5096 014c 0C       		.uleb128 0xc
 5097 014d 13080000 		.4byte	.LASF24
 5098 0151 09       		.byte	0x9
 5099 0152 30       		.byte	0x30
 5100 0153 68000000 		.4byte	0x68
 5101 0157 0C       		.byte	0xc
 5102 0158 0C       		.uleb128 0xc
 5103 0159 D0020000 		.4byte	.LASF25
 5104 015d 09       		.byte	0x9
 5105 015e 30       		.byte	0x30
 5106 015f 68000000 		.4byte	0x68
 5107 0163 10       		.byte	0x10
 5108 0164 0E       		.uleb128 0xe
 5109 0165 5F7800   		.ascii	"_x\000"
 5110 0168 09       		.byte	0x9
 5111 0169 31       		.byte	0x31
 5112 016a 76010000 		.4byte	0x176
 5113 016e 14       		.byte	0x14
 5114 016f 00       		.byte	0
 5115 0170 0F       		.uleb128 0xf
 5116 0171 04       		.byte	0x4
 5117 0172 1D010000 		.4byte	0x11d
 5118 0176 09       		.uleb128 0x9
 5119 0177 12010000 		.4byte	0x112
 5120 017b 86010000 		.4byte	0x186
 5121 017f 0A       		.uleb128 0xa
 5122 0180 D4000000 		.4byte	0xd4
 5123 0184 00       		.byte	0
 5124 0185 00       		.byte	0
 5125 0186 0D       		.uleb128 0xd
 5126 0187 60090000 		.4byte	.LASF27
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 113


 5127 018b 24       		.byte	0x24
 5128 018c 09       		.byte	0x9
 5129 018d 35       		.byte	0x35
 5130 018e FF010000 		.4byte	0x1ff
 5131 0192 0C       		.uleb128 0xc
 5132 0193 75030000 		.4byte	.LASF28
 5133 0197 09       		.byte	0x9
 5134 0198 37       		.byte	0x37
 5135 0199 68000000 		.4byte	0x68
 5136 019d 00       		.byte	0
 5137 019e 0C       		.uleb128 0xc
 5138 019f 36020000 		.4byte	.LASF29
 5139 01a3 09       		.byte	0x9
 5140 01a4 38       		.byte	0x38
 5141 01a5 68000000 		.4byte	0x68
 5142 01a9 04       		.byte	0x4
 5143 01aa 0C       		.uleb128 0xc
 5144 01ab FF010000 		.4byte	.LASF30
 5145 01af 09       		.byte	0x9
 5146 01b0 39       		.byte	0x39
 5147 01b1 68000000 		.4byte	0x68
 5148 01b5 08       		.byte	0x8
 5149 01b6 0C       		.uleb128 0xc
 5150 01b7 5E040000 		.4byte	.LASF31
 5151 01bb 09       		.byte	0x9
 5152 01bc 3A       		.byte	0x3a
 5153 01bd 68000000 		.4byte	0x68
 5154 01c1 0C       		.byte	0xc
 5155 01c2 0C       		.uleb128 0xc
 5156 01c3 39070000 		.4byte	.LASF32
 5157 01c7 09       		.byte	0x9
 5158 01c8 3B       		.byte	0x3b
 5159 01c9 68000000 		.4byte	0x68
 5160 01cd 10       		.byte	0x10
 5161 01ce 0C       		.uleb128 0xc
 5162 01cf 58080000 		.4byte	.LASF33
 5163 01d3 09       		.byte	0x9
 5164 01d4 3C       		.byte	0x3c
 5165 01d5 68000000 		.4byte	0x68
 5166 01d9 14       		.byte	0x14
 5167 01da 0C       		.uleb128 0xc
 5168 01db E0010000 		.4byte	.LASF34
 5169 01df 09       		.byte	0x9
 5170 01e0 3D       		.byte	0x3d
 5171 01e1 68000000 		.4byte	0x68
 5172 01e5 18       		.byte	0x18
 5173 01e6 0C       		.uleb128 0xc
 5174 01e7 8C030000 		.4byte	.LASF35
 5175 01eb 09       		.byte	0x9
 5176 01ec 3E       		.byte	0x3e
 5177 01ed 68000000 		.4byte	0x68
 5178 01f1 1C       		.byte	0x1c
 5179 01f2 0C       		.uleb128 0xc
 5180 01f3 B8060000 		.4byte	.LASF36
 5181 01f7 09       		.byte	0x9
 5182 01f8 3F       		.byte	0x3f
 5183 01f9 68000000 		.4byte	0x68
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 114


 5184 01fd 20       		.byte	0x20
 5185 01fe 00       		.byte	0
 5186 01ff 10       		.uleb128 0x10
 5187 0200 48000000 		.4byte	.LASF37
 5188 0204 0801     		.2byte	0x108
 5189 0206 09       		.byte	0x9
 5190 0207 48       		.byte	0x48
 5191 0208 3F020000 		.4byte	0x23f
 5192 020c 0C       		.uleb128 0xc
 5193 020d C60A0000 		.4byte	.LASF38
 5194 0211 09       		.byte	0x9
 5195 0212 49       		.byte	0x49
 5196 0213 3F020000 		.4byte	0x23f
 5197 0217 00       		.byte	0
 5198 0218 0C       		.uleb128 0xc
 5199 0219 C0090000 		.4byte	.LASF39
 5200 021d 09       		.byte	0x9
 5201 021e 4A       		.byte	0x4a
 5202 021f 3F020000 		.4byte	0x23f
 5203 0223 80       		.byte	0x80
 5204 0224 11       		.uleb128 0x11
 5205 0225 180B0000 		.4byte	.LASF40
 5206 0229 09       		.byte	0x9
 5207 022a 4C       		.byte	0x4c
 5208 022b 12010000 		.4byte	0x112
 5209 022f 0001     		.2byte	0x100
 5210 0231 11       		.uleb128 0x11
 5211 0232 690B0000 		.4byte	.LASF41
 5212 0236 09       		.byte	0x9
 5213 0237 4F       		.byte	0x4f
 5214 0238 12010000 		.4byte	0x112
 5215 023c 0401     		.2byte	0x104
 5216 023e 00       		.byte	0
 5217 023f 09       		.uleb128 0x9
 5218 0240 76000000 		.4byte	0x76
 5219 0244 4F020000 		.4byte	0x24f
 5220 0248 0A       		.uleb128 0xa
 5221 0249 D4000000 		.4byte	0xd4
 5222 024d 1F       		.byte	0x1f
 5223 024e 00       		.byte	0
 5224 024f 10       		.uleb128 0x10
 5225 0250 8C070000 		.4byte	.LASF42
 5226 0254 9001     		.2byte	0x190
 5227 0256 09       		.byte	0x9
 5228 0257 5B       		.byte	0x5b
 5229 0258 8D020000 		.4byte	0x28d
 5230 025c 0C       		.uleb128 0xc
 5231 025d B7030000 		.4byte	.LASF22
 5232 0261 09       		.byte	0x9
 5233 0262 5C       		.byte	0x5c
 5234 0263 8D020000 		.4byte	0x28d
 5235 0267 00       		.byte	0
 5236 0268 0C       		.uleb128 0xc
 5237 0269 9B030000 		.4byte	.LASF43
 5238 026d 09       		.byte	0x9
 5239 026e 5D       		.byte	0x5d
 5240 026f 68000000 		.4byte	0x68
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 115


 5241 0273 04       		.byte	0x4
 5242 0274 0C       		.uleb128 0xc
 5243 0275 89010000 		.4byte	.LASF44
 5244 0279 09       		.byte	0x9
 5245 027a 5F       		.byte	0x5f
 5246 027b 93020000 		.4byte	0x293
 5247 027f 08       		.byte	0x8
 5248 0280 0C       		.uleb128 0xc
 5249 0281 48000000 		.4byte	.LASF37
 5250 0285 09       		.byte	0x9
 5251 0286 60       		.byte	0x60
 5252 0287 FF010000 		.4byte	0x1ff
 5253 028b 88       		.byte	0x88
 5254 028c 00       		.byte	0
 5255 028d 0F       		.uleb128 0xf
 5256 028e 04       		.byte	0x4
 5257 028f 4F020000 		.4byte	0x24f
 5258 0293 09       		.uleb128 0x9
 5259 0294 A3020000 		.4byte	0x2a3
 5260 0298 A3020000 		.4byte	0x2a3
 5261 029c 0A       		.uleb128 0xa
 5262 029d D4000000 		.4byte	0xd4
 5263 02a1 1F       		.byte	0x1f
 5264 02a2 00       		.byte	0
 5265 02a3 0F       		.uleb128 0xf
 5266 02a4 04       		.byte	0x4
 5267 02a5 A9020000 		.4byte	0x2a9
 5268 02a9 12       		.uleb128 0x12
 5269 02aa 0D       		.uleb128 0xd
 5270 02ab 850A0000 		.4byte	.LASF45
 5271 02af 08       		.byte	0x8
 5272 02b0 09       		.byte	0x9
 5273 02b1 73       		.byte	0x73
 5274 02b2 CF020000 		.4byte	0x2cf
 5275 02b6 0C       		.uleb128 0xc
 5276 02b7 4F050000 		.4byte	.LASF46
 5277 02bb 09       		.byte	0x9
 5278 02bc 74       		.byte	0x74
 5279 02bd CF020000 		.4byte	0x2cf
 5280 02c1 00       		.byte	0
 5281 02c2 0C       		.uleb128 0xc
 5282 02c3 210B0000 		.4byte	.LASF47
 5283 02c7 09       		.byte	0x9
 5284 02c8 75       		.byte	0x75
 5285 02c9 68000000 		.4byte	0x68
 5286 02cd 04       		.byte	0x4
 5287 02ce 00       		.byte	0
 5288 02cf 0F       		.uleb128 0xf
 5289 02d0 04       		.byte	0x4
 5290 02d1 2C000000 		.4byte	0x2c
 5291 02d5 0D       		.uleb128 0xd
 5292 02d6 C8020000 		.4byte	.LASF48
 5293 02da 68       		.byte	0x68
 5294 02db 09       		.byte	0x9
 5295 02dc B3       		.byte	0xb3
 5296 02dd FF030000 		.4byte	0x3ff
 5297 02e1 0E       		.uleb128 0xe
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 116


 5298 02e2 5F7000   		.ascii	"_p\000"
 5299 02e5 09       		.byte	0x9
 5300 02e6 B4       		.byte	0xb4
 5301 02e7 CF020000 		.4byte	0x2cf
 5302 02eb 00       		.byte	0
 5303 02ec 0E       		.uleb128 0xe
 5304 02ed 5F7200   		.ascii	"_r\000"
 5305 02f0 09       		.byte	0x9
 5306 02f1 B5       		.byte	0xb5
 5307 02f2 68000000 		.4byte	0x68
 5308 02f6 04       		.byte	0x4
 5309 02f7 0E       		.uleb128 0xe
 5310 02f8 5F7700   		.ascii	"_w\000"
 5311 02fb 09       		.byte	0x9
 5312 02fc B6       		.byte	0xb6
 5313 02fd 68000000 		.4byte	0x68
 5314 0301 08       		.byte	0x8
 5315 0302 0C       		.uleb128 0xc
 5316 0303 D4000000 		.4byte	.LASF49
 5317 0307 09       		.byte	0x9
 5318 0308 B7       		.byte	0xb7
 5319 0309 33000000 		.4byte	0x33
 5320 030d 0C       		.byte	0xc
 5321 030e 0C       		.uleb128 0xc
 5322 030f 99050000 		.4byte	.LASF50
 5323 0313 09       		.byte	0x9
 5324 0314 B8       		.byte	0xb8
 5325 0315 33000000 		.4byte	0x33
 5326 0319 0E       		.byte	0xe
 5327 031a 0E       		.uleb128 0xe
 5328 031b 5F626600 		.ascii	"_bf\000"
 5329 031f 09       		.byte	0x9
 5330 0320 B9       		.byte	0xb9
 5331 0321 AA020000 		.4byte	0x2aa
 5332 0325 10       		.byte	0x10
 5333 0326 0C       		.uleb128 0xc
 5334 0327 CB000000 		.4byte	.LASF51
 5335 032b 09       		.byte	0x9
 5336 032c BA       		.byte	0xba
 5337 032d 68000000 		.4byte	0x68
 5338 0331 18       		.byte	0x18
 5339 0332 0C       		.uleb128 0xc
 5340 0333 8E010000 		.4byte	.LASF52
 5341 0337 09       		.byte	0x9
 5342 0338 C1       		.byte	0xc1
 5343 0339 76000000 		.4byte	0x76
 5344 033d 1C       		.byte	0x1c
 5345 033e 0C       		.uleb128 0xc
 5346 033f 2C010000 		.4byte	.LASF53
 5347 0343 09       		.byte	0x9
 5348 0344 C3       		.byte	0xc3
 5349 0345 62050000 		.4byte	0x562
 5350 0349 20       		.byte	0x20
 5351 034a 0C       		.uleb128 0xc
 5352 034b 68070000 		.4byte	.LASF54
 5353 034f 09       		.byte	0x9
 5354 0350 C5       		.byte	0xc5
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 117


 5355 0351 91050000 		.4byte	0x591
 5356 0355 24       		.byte	0x24
 5357 0356 0C       		.uleb128 0xc
 5358 0357 8F0B0000 		.4byte	.LASF55
 5359 035b 09       		.byte	0x9
 5360 035c C8       		.byte	0xc8
 5361 035d B5050000 		.4byte	0x5b5
 5362 0361 28       		.byte	0x28
 5363 0362 0C       		.uleb128 0xc
 5364 0363 DC040000 		.4byte	.LASF56
 5365 0367 09       		.byte	0x9
 5366 0368 C9       		.byte	0xc9
 5367 0369 CF050000 		.4byte	0x5cf
 5368 036d 2C       		.byte	0x2c
 5369 036e 0E       		.uleb128 0xe
 5370 036f 5F756200 		.ascii	"_ub\000"
 5371 0373 09       		.byte	0x9
 5372 0374 CC       		.byte	0xcc
 5373 0375 AA020000 		.4byte	0x2aa
 5374 0379 30       		.byte	0x30
 5375 037a 0E       		.uleb128 0xe
 5376 037b 5F757000 		.ascii	"_up\000"
 5377 037f 09       		.byte	0x9
 5378 0380 CD       		.byte	0xcd
 5379 0381 CF020000 		.4byte	0x2cf
 5380 0385 38       		.byte	0x38
 5381 0386 0E       		.uleb128 0xe
 5382 0387 5F757200 		.ascii	"_ur\000"
 5383 038b 09       		.byte	0x9
 5384 038c CE       		.byte	0xce
 5385 038d 68000000 		.4byte	0x68
 5386 0391 3C       		.byte	0x3c
 5387 0392 0C       		.uleb128 0xc
 5388 0393 B00B0000 		.4byte	.LASF57
 5389 0397 09       		.byte	0x9
 5390 0398 D1       		.byte	0xd1
 5391 0399 D5050000 		.4byte	0x5d5
 5392 039d 40       		.byte	0x40
 5393 039e 0C       		.uleb128 0xc
 5394 039f 3D0B0000 		.4byte	.LASF58
 5395 03a3 09       		.byte	0x9
 5396 03a4 D2       		.byte	0xd2
 5397 03a5 E5050000 		.4byte	0x5e5
 5398 03a9 43       		.byte	0x43
 5399 03aa 0E       		.uleb128 0xe
 5400 03ab 5F6C6200 		.ascii	"_lb\000"
 5401 03af 09       		.byte	0x9
 5402 03b0 D5       		.byte	0xd5
 5403 03b1 AA020000 		.4byte	0x2aa
 5404 03b5 44       		.byte	0x44
 5405 03b6 0C       		.uleb128 0xc
 5406 03b7 57090000 		.4byte	.LASF59
 5407 03bb 09       		.byte	0x9
 5408 03bc D8       		.byte	0xd8
 5409 03bd 68000000 		.4byte	0x68
 5410 03c1 4C       		.byte	0x4c
 5411 03c2 0C       		.uleb128 0xc
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 118


 5412 03c3 F2020000 		.4byte	.LASF60
 5413 03c7 09       		.byte	0x9
 5414 03c8 D9       		.byte	0xd9
 5415 03c9 83000000 		.4byte	0x83
 5416 03cd 50       		.byte	0x50
 5417 03ce 0C       		.uleb128 0xc
 5418 03cf 39080000 		.4byte	.LASF61
 5419 03d3 09       		.byte	0x9
 5420 03d4 DC       		.byte	0xdc
 5421 03d5 1D040000 		.4byte	0x41d
 5422 03d9 54       		.byte	0x54
 5423 03da 0C       		.uleb128 0xc
 5424 03db 65090000 		.4byte	.LASF62
 5425 03df 09       		.byte	0x9
 5426 03e0 E0       		.byte	0xe0
 5427 03e1 07010000 		.4byte	0x107
 5428 03e5 58       		.byte	0x58
 5429 03e6 0C       		.uleb128 0xc
 5430 03e7 94070000 		.4byte	.LASF63
 5431 03eb 09       		.byte	0x9
 5432 03ec E2       		.byte	0xe2
 5433 03ed FC000000 		.4byte	0xfc
 5434 03f1 5C       		.byte	0x5c
 5435 03f2 0C       		.uleb128 0xc
 5436 03f3 610B0000 		.4byte	.LASF64
 5437 03f7 09       		.byte	0x9
 5438 03f8 E3       		.byte	0xe3
 5439 03f9 68000000 		.4byte	0x68
 5440 03fd 64       		.byte	0x64
 5441 03fe 00       		.byte	0
 5442 03ff 13       		.uleb128 0x13
 5443 0400 68000000 		.4byte	0x68
 5444 0404 1D040000 		.4byte	0x41d
 5445 0408 14       		.uleb128 0x14
 5446 0409 1D040000 		.4byte	0x41d
 5447 040d 14       		.uleb128 0x14
 5448 040e 76000000 		.4byte	0x76
 5449 0412 14       		.uleb128 0x14
 5450 0413 55050000 		.4byte	0x555
 5451 0417 14       		.uleb128 0x14
 5452 0418 68000000 		.4byte	0x68
 5453 041c 00       		.byte	0
 5454 041d 0F       		.uleb128 0xf
 5455 041e 04       		.byte	0x4
 5456 041f 23040000 		.4byte	0x423
 5457 0423 15       		.uleb128 0x15
 5458 0424 DA0A0000 		.4byte	.LASF65
 5459 0428 2804     		.2byte	0x428
 5460 042a 09       		.byte	0x9
 5461 042b 3902     		.2byte	0x239
 5462 042d 55050000 		.4byte	0x555
 5463 0431 16       		.uleb128 0x16
 5464 0432 F1000000 		.4byte	.LASF66
 5465 0436 09       		.byte	0x9
 5466 0437 3B02     		.2byte	0x23b
 5467 0439 68000000 		.4byte	0x68
 5468 043d 00       		.byte	0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 119


 5469 043e 16       		.uleb128 0x16
 5470 043f 10050000 		.4byte	.LASF67
 5471 0443 09       		.byte	0x9
 5472 0444 4002     		.2byte	0x240
 5473 0446 3C060000 		.4byte	0x63c
 5474 044a 04       		.byte	0x4
 5475 044b 16       		.uleb128 0x16
 5476 044c 79010000 		.4byte	.LASF68
 5477 0450 09       		.byte	0x9
 5478 0451 4002     		.2byte	0x240
 5479 0453 3C060000 		.4byte	0x63c
 5480 0457 08       		.byte	0x8
 5481 0458 16       		.uleb128 0x16
 5482 0459 9F0B0000 		.4byte	.LASF69
 5483 045d 09       		.byte	0x9
 5484 045e 4002     		.2byte	0x240
 5485 0460 3C060000 		.4byte	0x63c
 5486 0464 0C       		.byte	0xc
 5487 0465 16       		.uleb128 0x16
 5488 0466 96030000 		.4byte	.LASF70
 5489 046a 09       		.byte	0x9
 5490 046b 4202     		.2byte	0x242
 5491 046d 68000000 		.4byte	0x68
 5492 0471 10       		.byte	0x10
 5493 0472 16       		.uleb128 0x16
 5494 0473 34030000 		.4byte	.LASF71
 5495 0477 09       		.byte	0x9
 5496 0478 4302     		.2byte	0x243
 5497 047a 1E080000 		.4byte	0x81e
 5498 047e 14       		.byte	0x14
 5499 047f 16       		.uleb128 0x16
 5500 0480 24090000 		.4byte	.LASF72
 5501 0484 09       		.byte	0x9
 5502 0485 4502     		.2byte	0x245
 5503 0487 68000000 		.4byte	0x68
 5504 048b 30       		.byte	0x30
 5505 048c 16       		.uleb128 0x16
 5506 048d 19080000 		.4byte	.LASF73
 5507 0491 09       		.byte	0x9
 5508 0492 4602     		.2byte	0x246
 5509 0494 86050000 		.4byte	0x586
 5510 0498 34       		.byte	0x34
 5511 0499 16       		.uleb128 0x16
 5512 049a E3040000 		.4byte	.LASF74
 5513 049e 09       		.byte	0x9
 5514 049f 4802     		.2byte	0x248
 5515 04a1 68000000 		.4byte	0x68
 5516 04a5 38       		.byte	0x38
 5517 04a6 16       		.uleb128 0x16
 5518 04a7 7D060000 		.4byte	.LASF75
 5519 04ab 09       		.byte	0x9
 5520 04ac 4A02     		.2byte	0x24a
 5521 04ae 39080000 		.4byte	0x839
 5522 04b2 3C       		.byte	0x3c
 5523 04b3 16       		.uleb128 0x16
 5524 04b4 F7010000 		.4byte	.LASF76
 5525 04b8 09       		.byte	0x9
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 120


 5526 04b9 4D02     		.2byte	0x24d
 5527 04bb 70010000 		.4byte	0x170
 5528 04bf 40       		.byte	0x40
 5529 04c0 16       		.uleb128 0x16
 5530 04c1 85020000 		.4byte	.LASF77
 5531 04c5 09       		.byte	0x9
 5532 04c6 4E02     		.2byte	0x24e
 5533 04c8 68000000 		.4byte	0x68
 5534 04cc 44       		.byte	0x44
 5535 04cd 16       		.uleb128 0x16
 5536 04ce 09040000 		.4byte	.LASF78
 5537 04d2 09       		.byte	0x9
 5538 04d3 4F02     		.2byte	0x24f
 5539 04d5 70010000 		.4byte	0x170
 5540 04d9 48       		.byte	0x48
 5541 04da 16       		.uleb128 0x16
 5542 04db 55050000 		.4byte	.LASF79
 5543 04df 09       		.byte	0x9
 5544 04e0 5002     		.2byte	0x250
 5545 04e2 3F080000 		.4byte	0x83f
 5546 04e6 4C       		.byte	0x4c
 5547 04e7 16       		.uleb128 0x16
 5548 04e8 0A090000 		.4byte	.LASF80
 5549 04ec 09       		.byte	0x9
 5550 04ed 5302     		.2byte	0x253
 5551 04ef 68000000 		.4byte	0x68
 5552 04f3 50       		.byte	0x50
 5553 04f4 16       		.uleb128 0x16
 5554 04f5 EB090000 		.4byte	.LASF81
 5555 04f9 09       		.byte	0x9
 5556 04fa 5402     		.2byte	0x254
 5557 04fc 55050000 		.4byte	0x555
 5558 0500 54       		.byte	0x54
 5559 0501 16       		.uleb128 0x16
 5560 0502 63010000 		.4byte	.LASF82
 5561 0506 09       		.byte	0x9
 5562 0507 7702     		.2byte	0x277
 5563 0509 FC070000 		.4byte	0x7fc
 5564 050d 58       		.byte	0x58
 5565 050e 17       		.uleb128 0x17
 5566 050f 8C070000 		.4byte	.LASF42
 5567 0513 09       		.byte	0x9
 5568 0514 7B02     		.2byte	0x27b
 5569 0516 8D020000 		.4byte	0x28d
 5570 051a 4801     		.2byte	0x148
 5571 051c 17       		.uleb128 0x17
 5572 051d 81040000 		.4byte	.LASF83
 5573 0521 09       		.byte	0x9
 5574 0522 7C02     		.2byte	0x27c
 5575 0524 4F020000 		.4byte	0x24f
 5576 0528 4C01     		.2byte	0x14c
 5577 052a 17       		.uleb128 0x17
 5578 052b 68040000 		.4byte	.LASF84
 5579 052f 09       		.byte	0x9
 5580 0530 8002     		.2byte	0x280
 5581 0532 50080000 		.4byte	0x850
 5582 0536 DC02     		.2byte	0x2dc
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 121


 5583 0538 17       		.uleb128 0x17
 5584 0539 9A0A0000 		.4byte	.LASF85
 5585 053d 09       		.byte	0x9
 5586 053e 8502     		.2byte	0x285
 5587 0540 01060000 		.4byte	0x601
 5588 0544 E002     		.2byte	0x2e0
 5589 0546 17       		.uleb128 0x17
 5590 0547 0E080000 		.4byte	.LASF86
 5591 054b 09       		.byte	0x9
 5592 054c 8602     		.2byte	0x286
 5593 054e 5C080000 		.4byte	0x85c
 5594 0552 EC02     		.2byte	0x2ec
 5595 0554 00       		.byte	0
 5596 0555 0F       		.uleb128 0xf
 5597 0556 04       		.byte	0x4
 5598 0557 5B050000 		.4byte	0x55b
 5599 055b 02       		.uleb128 0x2
 5600 055c 01       		.byte	0x1
 5601 055d 08       		.byte	0x8
 5602 055e 4F040000 		.4byte	.LASF87
 5603 0562 0F       		.uleb128 0xf
 5604 0563 04       		.byte	0x4
 5605 0564 FF030000 		.4byte	0x3ff
 5606 0568 13       		.uleb128 0x13
 5607 0569 68000000 		.4byte	0x68
 5608 056d 86050000 		.4byte	0x586
 5609 0571 14       		.uleb128 0x14
 5610 0572 1D040000 		.4byte	0x41d
 5611 0576 14       		.uleb128 0x14
 5612 0577 76000000 		.4byte	0x76
 5613 057b 14       		.uleb128 0x14
 5614 057c 86050000 		.4byte	0x586
 5615 0580 14       		.uleb128 0x14
 5616 0581 68000000 		.4byte	0x68
 5617 0585 00       		.byte	0
 5618 0586 0F       		.uleb128 0xf
 5619 0587 04       		.byte	0x4
 5620 0588 8C050000 		.4byte	0x58c
 5621 058c 18       		.uleb128 0x18
 5622 058d 5B050000 		.4byte	0x55b
 5623 0591 0F       		.uleb128 0xf
 5624 0592 04       		.byte	0x4
 5625 0593 68050000 		.4byte	0x568
 5626 0597 13       		.uleb128 0x13
 5627 0598 8E000000 		.4byte	0x8e
 5628 059c B5050000 		.4byte	0x5b5
 5629 05a0 14       		.uleb128 0x14
 5630 05a1 1D040000 		.4byte	0x41d
 5631 05a5 14       		.uleb128 0x14
 5632 05a6 76000000 		.4byte	0x76
 5633 05aa 14       		.uleb128 0x14
 5634 05ab 8E000000 		.4byte	0x8e
 5635 05af 14       		.uleb128 0x14
 5636 05b0 68000000 		.4byte	0x68
 5637 05b4 00       		.byte	0
 5638 05b5 0F       		.uleb128 0xf
 5639 05b6 04       		.byte	0x4
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 122


 5640 05b7 97050000 		.4byte	0x597
 5641 05bb 13       		.uleb128 0x13
 5642 05bc 68000000 		.4byte	0x68
 5643 05c0 CF050000 		.4byte	0x5cf
 5644 05c4 14       		.uleb128 0x14
 5645 05c5 1D040000 		.4byte	0x41d
 5646 05c9 14       		.uleb128 0x14
 5647 05ca 76000000 		.4byte	0x76
 5648 05ce 00       		.byte	0
 5649 05cf 0F       		.uleb128 0xf
 5650 05d0 04       		.byte	0x4
 5651 05d1 BB050000 		.4byte	0x5bb
 5652 05d5 09       		.uleb128 0x9
 5653 05d6 2C000000 		.4byte	0x2c
 5654 05da E5050000 		.4byte	0x5e5
 5655 05de 0A       		.uleb128 0xa
 5656 05df D4000000 		.4byte	0xd4
 5657 05e3 02       		.byte	0x2
 5658 05e4 00       		.byte	0
 5659 05e5 09       		.uleb128 0x9
 5660 05e6 2C000000 		.4byte	0x2c
 5661 05ea F5050000 		.4byte	0x5f5
 5662 05ee 0A       		.uleb128 0xa
 5663 05ef D4000000 		.4byte	0xd4
 5664 05f3 00       		.byte	0
 5665 05f4 00       		.byte	0
 5666 05f5 06       		.uleb128 0x6
 5667 05f6 E1020000 		.4byte	.LASF88
 5668 05fa 09       		.byte	0x9
 5669 05fb 1D01     		.2byte	0x11d
 5670 05fd D5020000 		.4byte	0x2d5
 5671 0601 19       		.uleb128 0x19
 5672 0602 940A0000 		.4byte	.LASF89
 5673 0606 0C       		.byte	0xc
 5674 0607 09       		.byte	0x9
 5675 0608 2101     		.2byte	0x121
 5676 060a 36060000 		.4byte	0x636
 5677 060e 16       		.uleb128 0x16
 5678 060f B7030000 		.4byte	.LASF22
 5679 0613 09       		.byte	0x9
 5680 0614 2301     		.2byte	0x123
 5681 0616 36060000 		.4byte	0x636
 5682 061a 00       		.byte	0
 5683 061b 16       		.uleb128 0x16
 5684 061c AA090000 		.4byte	.LASF90
 5685 0620 09       		.byte	0x9
 5686 0621 2401     		.2byte	0x124
 5687 0623 68000000 		.4byte	0x68
 5688 0627 04       		.byte	0x4
 5689 0628 16       		.uleb128 0x16
 5690 0629 BC040000 		.4byte	.LASF91
 5691 062d 09       		.byte	0x9
 5692 062e 2501     		.2byte	0x125
 5693 0630 3C060000 		.4byte	0x63c
 5694 0634 08       		.byte	0x8
 5695 0635 00       		.byte	0
 5696 0636 0F       		.uleb128 0xf
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 123


 5697 0637 04       		.byte	0x4
 5698 0638 01060000 		.4byte	0x601
 5699 063c 0F       		.uleb128 0xf
 5700 063d 04       		.byte	0x4
 5701 063e F5050000 		.4byte	0x5f5
 5702 0642 19       		.uleb128 0x19
 5703 0643 7D020000 		.4byte	.LASF92
 5704 0647 0E       		.byte	0xe
 5705 0648 09       		.byte	0x9
 5706 0649 3D01     		.2byte	0x13d
 5707 064b 77060000 		.4byte	0x677
 5708 064f 16       		.uleb128 0x16
 5709 0650 710B0000 		.4byte	.LASF93
 5710 0654 09       		.byte	0x9
 5711 0655 3E01     		.2byte	0x13e
 5712 0657 77060000 		.4byte	0x677
 5713 065b 00       		.byte	0
 5714 065c 16       		.uleb128 0x16
 5715 065d 5F050000 		.4byte	.LASF94
 5716 0661 09       		.byte	0x9
 5717 0662 3F01     		.2byte	0x13f
 5718 0664 77060000 		.4byte	0x677
 5719 0668 06       		.byte	0x6
 5720 0669 16       		.uleb128 0x16
 5721 066a 450A0000 		.4byte	.LASF95
 5722 066e 09       		.byte	0x9
 5723 066f 4001     		.2byte	0x140
 5724 0671 3A000000 		.4byte	0x3a
 5725 0675 0C       		.byte	0xc
 5726 0676 00       		.byte	0
 5727 0677 09       		.uleb128 0x9
 5728 0678 3A000000 		.4byte	0x3a
 5729 067c 87060000 		.4byte	0x687
 5730 0680 0A       		.uleb128 0xa
 5731 0681 D4000000 		.4byte	0xd4
 5732 0685 02       		.byte	0x2
 5733 0686 00       		.byte	0
 5734 0687 1A       		.uleb128 0x1a
 5735 0688 D0       		.byte	0xd0
 5736 0689 09       		.byte	0x9
 5737 068a 5802     		.2byte	0x258
 5738 068c 88070000 		.4byte	0x788
 5739 0690 16       		.uleb128 0x16
 5740 0691 430B0000 		.4byte	.LASF96
 5741 0695 09       		.byte	0x9
 5742 0696 5A02     		.2byte	0x25a
 5743 0698 6F000000 		.4byte	0x6f
 5744 069c 00       		.byte	0
 5745 069d 16       		.uleb128 0x16
 5746 069e A20A0000 		.4byte	.LASF97
 5747 06a2 09       		.byte	0x9
 5748 06a3 5B02     		.2byte	0x25b
 5749 06a5 55050000 		.4byte	0x555
 5750 06a9 04       		.byte	0x4
 5751 06aa 16       		.uleb128 0x16
 5752 06ab AF020000 		.4byte	.LASF98
 5753 06af 09       		.byte	0x9
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 124


 5754 06b0 5C02     		.2byte	0x25c
 5755 06b2 88070000 		.4byte	0x788
 5756 06b6 08       		.byte	0x8
 5757 06b7 16       		.uleb128 0x16
 5758 06b8 62080000 		.4byte	.LASF99
 5759 06bc 09       		.byte	0x9
 5760 06bd 5D02     		.2byte	0x25d
 5761 06bf 86010000 		.4byte	0x186
 5762 06c3 24       		.byte	0x24
 5763 06c4 16       		.uleb128 0x16
 5764 06c5 17050000 		.4byte	.LASF100
 5765 06c9 09       		.byte	0x9
 5766 06ca 5E02     		.2byte	0x25e
 5767 06cc 68000000 		.4byte	0x68
 5768 06d0 48       		.byte	0x48
 5769 06d1 16       		.uleb128 0x16
 5770 06d2 840B0000 		.4byte	.LASF101
 5771 06d6 09       		.byte	0x9
 5772 06d7 5F02     		.2byte	0x25f
 5773 06d9 61000000 		.4byte	0x61
 5774 06dd 50       		.byte	0x50
 5775 06de 16       		.uleb128 0x16
 5776 06df 73000000 		.4byte	.LASF102
 5777 06e3 09       		.byte	0x9
 5778 06e4 6002     		.2byte	0x260
 5779 06e6 42060000 		.4byte	0x642
 5780 06ea 58       		.byte	0x58
 5781 06eb 16       		.uleb128 0x16
 5782 06ec 3B040000 		.4byte	.LASF103
 5783 06f0 09       		.byte	0x9
 5784 06f1 6102     		.2byte	0x261
 5785 06f3 FC000000 		.4byte	0xfc
 5786 06f7 68       		.byte	0x68
 5787 06f8 16       		.uleb128 0x16
 5788 06f9 AF0A0000 		.4byte	.LASF104
 5789 06fd 09       		.byte	0x9
 5790 06fe 6202     		.2byte	0x262
 5791 0700 FC000000 		.4byte	0xfc
 5792 0704 70       		.byte	0x70
 5793 0705 16       		.uleb128 0x16
 5794 0706 56000000 		.4byte	.LASF105
 5795 070a 09       		.byte	0x9
 5796 070b 6302     		.2byte	0x263
 5797 070d FC000000 		.4byte	0xfc
 5798 0711 78       		.byte	0x78
 5799 0712 16       		.uleb128 0x16
 5800 0713 1A090000 		.4byte	.LASF106
 5801 0717 09       		.byte	0x9
 5802 0718 6402     		.2byte	0x264
 5803 071a 98070000 		.4byte	0x798
 5804 071e 80       		.byte	0x80
 5805 071f 16       		.uleb128 0x16
 5806 0720 78000000 		.4byte	.LASF107
 5807 0724 09       		.byte	0x9
 5808 0725 6502     		.2byte	0x265
 5809 0727 A8070000 		.4byte	0x7a8
 5810 072b 88       		.byte	0x88
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 125


 5811 072c 16       		.uleb128 0x16
 5812 072d 2D0A0000 		.4byte	.LASF108
 5813 0731 09       		.byte	0x9
 5814 0732 6602     		.2byte	0x266
 5815 0734 68000000 		.4byte	0x68
 5816 0738 A0       		.byte	0xa0
 5817 0739 16       		.uleb128 0x16
 5818 073a 3A010000 		.4byte	.LASF109
 5819 073e 09       		.byte	0x9
 5820 073f 6702     		.2byte	0x267
 5821 0741 FC000000 		.4byte	0xfc
 5822 0745 A4       		.byte	0xa4
 5823 0746 16       		.uleb128 0x16
 5824 0747 72040000 		.4byte	.LASF110
 5825 074b 09       		.byte	0x9
 5826 074c 6802     		.2byte	0x268
 5827 074e FC000000 		.4byte	0xfc
 5828 0752 AC       		.byte	0xac
 5829 0753 16       		.uleb128 0x16
 5830 0754 BD030000 		.4byte	.LASF111
 5831 0758 09       		.byte	0x9
 5832 0759 6902     		.2byte	0x269
 5833 075b FC000000 		.4byte	0xfc
 5834 075f B4       		.byte	0xb4
 5835 0760 16       		.uleb128 0x16
 5836 0761 6D050000 		.4byte	.LASF112
 5837 0765 09       		.byte	0x9
 5838 0766 6A02     		.2byte	0x26a
 5839 0768 FC000000 		.4byte	0xfc
 5840 076c BC       		.byte	0xbc
 5841 076d 16       		.uleb128 0x16
 5842 076e 2A040000 		.4byte	.LASF113
 5843 0772 09       		.byte	0x9
 5844 0773 6B02     		.2byte	0x26b
 5845 0775 FC000000 		.4byte	0xfc
 5846 0779 C4       		.byte	0xc4
 5847 077a 16       		.uleb128 0x16
 5848 077b F2060000 		.4byte	.LASF114
 5849 077f 09       		.byte	0x9
 5850 0780 6C02     		.2byte	0x26c
 5851 0782 68000000 		.4byte	0x68
 5852 0786 CC       		.byte	0xcc
 5853 0787 00       		.byte	0
 5854 0788 09       		.uleb128 0x9
 5855 0789 5B050000 		.4byte	0x55b
 5856 078d 98070000 		.4byte	0x798
 5857 0791 0A       		.uleb128 0xa
 5858 0792 D4000000 		.4byte	0xd4
 5859 0796 19       		.byte	0x19
 5860 0797 00       		.byte	0
 5861 0798 09       		.uleb128 0x9
 5862 0799 5B050000 		.4byte	0x55b
 5863 079d A8070000 		.4byte	0x7a8
 5864 07a1 0A       		.uleb128 0xa
 5865 07a2 D4000000 		.4byte	0xd4
 5866 07a6 07       		.byte	0x7
 5867 07a7 00       		.byte	0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 126


 5868 07a8 09       		.uleb128 0x9
 5869 07a9 5B050000 		.4byte	0x55b
 5870 07ad B8070000 		.4byte	0x7b8
 5871 07b1 0A       		.uleb128 0xa
 5872 07b2 D4000000 		.4byte	0xd4
 5873 07b6 17       		.byte	0x17
 5874 07b7 00       		.byte	0
 5875 07b8 1A       		.uleb128 0x1a
 5876 07b9 F0       		.byte	0xf0
 5877 07ba 09       		.byte	0x9
 5878 07bb 7102     		.2byte	0x271
 5879 07bd DC070000 		.4byte	0x7dc
 5880 07c1 16       		.uleb128 0x16
 5881 07c2 51020000 		.4byte	.LASF115
 5882 07c6 09       		.byte	0x9
 5883 07c7 7402     		.2byte	0x274
 5884 07c9 DC070000 		.4byte	0x7dc
 5885 07cd 00       		.byte	0
 5886 07ce 16       		.uleb128 0x16
 5887 07cf A70B0000 		.4byte	.LASF116
 5888 07d3 09       		.byte	0x9
 5889 07d4 7502     		.2byte	0x275
 5890 07d6 EC070000 		.4byte	0x7ec
 5891 07da 78       		.byte	0x78
 5892 07db 00       		.byte	0
 5893 07dc 09       		.uleb128 0x9
 5894 07dd CF020000 		.4byte	0x2cf
 5895 07e1 EC070000 		.4byte	0x7ec
 5896 07e5 0A       		.uleb128 0xa
 5897 07e6 D4000000 		.4byte	0xd4
 5898 07ea 1D       		.byte	0x1d
 5899 07eb 00       		.byte	0
 5900 07ec 09       		.uleb128 0x9
 5901 07ed 6F000000 		.4byte	0x6f
 5902 07f1 FC070000 		.4byte	0x7fc
 5903 07f5 0A       		.uleb128 0xa
 5904 07f6 D4000000 		.4byte	0xd4
 5905 07fa 1D       		.byte	0x1d
 5906 07fb 00       		.byte	0
 5907 07fc 1B       		.uleb128 0x1b
 5908 07fd F0       		.byte	0xf0
 5909 07fe 09       		.byte	0x9
 5910 07ff 5602     		.2byte	0x256
 5911 0801 1E080000 		.4byte	0x81e
 5912 0805 1C       		.uleb128 0x1c
 5913 0806 DA0A0000 		.4byte	.LASF65
 5914 080a 09       		.byte	0x9
 5915 080b 6D02     		.2byte	0x26d
 5916 080d 87060000 		.4byte	0x687
 5917 0811 1C       		.uleb128 0x1c
 5918 0812 71080000 		.4byte	.LASF117
 5919 0816 09       		.byte	0x9
 5920 0817 7602     		.2byte	0x276
 5921 0819 B8070000 		.4byte	0x7b8
 5922 081d 00       		.byte	0
 5923 081e 09       		.uleb128 0x9
 5924 081f 5B050000 		.4byte	0x55b
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 127


 5925 0823 2E080000 		.4byte	0x82e
 5926 0827 0A       		.uleb128 0xa
 5927 0828 D4000000 		.4byte	0xd4
 5928 082c 18       		.byte	0x18
 5929 082d 00       		.byte	0
 5930 082e 1D       		.uleb128 0x1d
 5931 082f 39080000 		.4byte	0x839
 5932 0833 14       		.uleb128 0x14
 5933 0834 1D040000 		.4byte	0x41d
 5934 0838 00       		.byte	0
 5935 0839 0F       		.uleb128 0xf
 5936 083a 04       		.byte	0x4
 5937 083b 2E080000 		.4byte	0x82e
 5938 083f 0F       		.uleb128 0xf
 5939 0840 04       		.byte	0x4
 5940 0841 70010000 		.4byte	0x170
 5941 0845 1D       		.uleb128 0x1d
 5942 0846 50080000 		.4byte	0x850
 5943 084a 14       		.uleb128 0x14
 5944 084b 68000000 		.4byte	0x68
 5945 084f 00       		.byte	0
 5946 0850 0F       		.uleb128 0xf
 5947 0851 04       		.byte	0x4
 5948 0852 56080000 		.4byte	0x856
 5949 0856 0F       		.uleb128 0xf
 5950 0857 04       		.byte	0x4
 5951 0858 45080000 		.4byte	0x845
 5952 085c 09       		.uleb128 0x9
 5953 085d F5050000 		.4byte	0x5f5
 5954 0861 6C080000 		.4byte	0x86c
 5955 0865 0A       		.uleb128 0xa
 5956 0866 D4000000 		.4byte	0xd4
 5957 086a 02       		.byte	0x2
 5958 086b 00       		.byte	0
 5959 086c 03       		.uleb128 0x3
 5960 086d B8090000 		.4byte	.LASF118
 5961 0871 0A       		.byte	0xa
 5962 0872 2C       		.byte	0x2c
 5963 0873 41000000 		.4byte	0x41
 5964 0877 06       		.uleb128 0x6
 5965 0878 DA010000 		.4byte	.LASF119
 5966 087c 0B       		.byte	0xb
 5967 087d 9201     		.2byte	0x192
 5968 087f 2C000000 		.4byte	0x2c
 5969 0883 06       		.uleb128 0x6
 5970 0884 94040000 		.4byte	.LASF120
 5971 0888 0B       		.byte	0xb
 5972 0889 9301     		.2byte	0x193
 5973 088b 3A000000 		.4byte	0x3a
 5974 088f 06       		.uleb128 0x6
 5975 0890 A4040000 		.4byte	.LASF121
 5976 0894 0B       		.byte	0xb
 5977 0895 9501     		.2byte	0x195
 5978 0897 25000000 		.4byte	0x25
 5979 089b 06       		.uleb128 0x6
 5980 089c EB000000 		.4byte	.LASF122
 5981 08a0 0B       		.byte	0xb
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 128


 5982 08a1 9601     		.2byte	0x196
 5983 08a3 33000000 		.4byte	0x33
 5984 08a7 06       		.uleb128 0x6
 5985 08a8 4B020000 		.4byte	.LASF123
 5986 08ac 0B       		.byte	0xb
 5987 08ad 9701     		.2byte	0x197
 5988 08af 4C000000 		.4byte	0x4c
 5989 08b3 02       		.uleb128 0x2
 5990 08b4 04       		.byte	0x4
 5991 08b5 04       		.byte	0x4
 5992 08b6 1E020000 		.4byte	.LASF124
 5993 08ba 02       		.uleb128 0x2
 5994 08bb 08       		.byte	0x8
 5995 08bc 04       		.byte	0x4
 5996 08bd 270B0000 		.4byte	.LASF125
 5997 08c1 0D       		.uleb128 0xd
 5998 08c2 C3060000 		.4byte	.LASF126
 5999 08c6 20       		.byte	0x20
 6000 08c7 0C       		.byte	0xc
 6001 08c8 29       		.byte	0x29
 6002 08c9 9A090000 		.4byte	0x99a
 6003 08cd 0C       		.uleb128 0xc
 6004 08ce ED060000 		.4byte	.LASF127
 6005 08d2 0C       		.byte	0xc
 6006 08d3 2A       		.byte	0x2a
 6007 08d4 8F080000 		.4byte	0x88f
 6008 08d8 00       		.byte	0
 6009 08d9 0C       		.uleb128 0xc
 6010 08da DB000000 		.4byte	.LASF128
 6011 08de 0C       		.byte	0xc
 6012 08df 2B       		.byte	0x2b
 6013 08e0 77080000 		.4byte	0x877
 6014 08e4 01       		.byte	0x1
 6015 08e5 0C       		.uleb128 0xc
 6016 08e6 CC090000 		.4byte	.LASF129
 6017 08ea 0C       		.byte	0xc
 6018 08eb 2C       		.byte	0x2c
 6019 08ec 9B080000 		.4byte	0x89b
 6020 08f0 02       		.byte	0x2
 6021 08f1 0C       		.uleb128 0xc
 6022 08f2 0E040000 		.4byte	.LASF130
 6023 08f6 0C       		.byte	0xc
 6024 08f7 2D       		.byte	0x2d
 6025 08f8 9B080000 		.4byte	0x89b
 6026 08fc 04       		.byte	0x4
 6027 08fd 0C       		.uleb128 0xc
 6028 08fe 000B0000 		.4byte	.LASF131
 6029 0902 0C       		.byte	0xc
 6030 0903 2E       		.byte	0x2e
 6031 0904 9B080000 		.4byte	0x89b
 6032 0908 06       		.byte	0x6
 6033 0909 0C       		.uleb128 0xc
 6034 090a 2E0B0000 		.4byte	.LASF132
 6035 090e 0C       		.byte	0xc
 6036 090f 2F       		.byte	0x2f
 6037 0910 9B080000 		.4byte	0x89b
 6038 0914 08       		.byte	0x8
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 129


 6039 0915 0C       		.uleb128 0xc
 6040 0916 6A060000 		.4byte	.LASF133
 6041 091a 0C       		.byte	0xc
 6042 091b 30       		.byte	0x30
 6043 091c 9B080000 		.4byte	0x89b
 6044 0920 0A       		.byte	0xa
 6045 0921 0C       		.uleb128 0xc
 6046 0922 BD0A0000 		.4byte	.LASF134
 6047 0926 0C       		.byte	0xc
 6048 0927 31       		.byte	0x31
 6049 0928 9B080000 		.4byte	0x89b
 6050 092c 0C       		.byte	0xc
 6051 092d 0C       		.uleb128 0xc
 6052 092e FB060000 		.4byte	.LASF135
 6053 0932 0C       		.byte	0xc
 6054 0933 32       		.byte	0x32
 6055 0934 9B080000 		.4byte	0x89b
 6056 0938 0E       		.byte	0xe
 6057 0939 0C       		.uleb128 0xc
 6058 093a 47050000 		.4byte	.LASF136
 6059 093e 0C       		.byte	0xc
 6060 093f 33       		.byte	0x33
 6061 0940 9B080000 		.4byte	0x89b
 6062 0944 10       		.byte	0x10
 6063 0945 0C       		.uleb128 0xc
 6064 0946 36090000 		.4byte	.LASF137
 6065 094a 0C       		.byte	0xc
 6066 094b 34       		.byte	0x34
 6067 094c 9B080000 		.4byte	0x89b
 6068 0950 12       		.byte	0x12
 6069 0951 0C       		.uleb128 0xc
 6070 0952 A5070000 		.4byte	.LASF138
 6071 0956 0C       		.byte	0xc
 6072 0957 35       		.byte	0x35
 6073 0958 9B080000 		.4byte	0x89b
 6074 095c 14       		.byte	0x14
 6075 095d 0C       		.uleb128 0xc
 6076 095e A9040000 		.4byte	.LASF139
 6077 0962 0C       		.byte	0xc
 6078 0963 36       		.byte	0x36
 6079 0964 9B080000 		.4byte	0x89b
 6080 0968 16       		.byte	0x16
 6081 0969 0C       		.uleb128 0xc
 6082 096a 32010000 		.4byte	.LASF140
 6083 096e 0C       		.byte	0xc
 6084 096f 37       		.byte	0x37
 6085 0970 9B080000 		.4byte	0x89b
 6086 0974 18       		.byte	0x18
 6087 0975 0C       		.uleb128 0xc
 6088 0976 31080000 		.4byte	.LASF141
 6089 097a 0C       		.byte	0xc
 6090 097b 38       		.byte	0x38
 6091 097c 9B080000 		.4byte	0x89b
 6092 0980 1A       		.byte	0x1a
 6093 0981 0C       		.uleb128 0xc
 6094 0982 61060000 		.4byte	.LASF142
 6095 0986 0C       		.byte	0xc
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 130


 6096 0987 39       		.byte	0x39
 6097 0988 9B080000 		.4byte	0x89b
 6098 098c 1C       		.byte	0x1c
 6099 098d 0C       		.uleb128 0xc
 6100 098e 09020000 		.4byte	.LASF143
 6101 0992 0C       		.byte	0xc
 6102 0993 3A       		.byte	0x3a
 6103 0994 9B080000 		.4byte	0x89b
 6104 0998 1E       		.byte	0x1e
 6105 0999 00       		.byte	0
 6106 099a 0D       		.uleb128 0xd
 6107 099b 120B0000 		.4byte	.LASF144
 6108 099f 08       		.byte	0x8
 6109 09a0 0D       		.byte	0xd
 6110 09a1 04       		.byte	0x4
 6111 09a2 BB090000 		.4byte	0x9bb
 6112 09a6 0E       		.uleb128 0xe
 6113 09a7 7800     		.ascii	"x\000"
 6114 09a9 0D       		.byte	0xd
 6115 09aa 05       		.byte	0x5
 6116 09ab 68000000 		.4byte	0x68
 6117 09af 00       		.byte	0
 6118 09b0 0E       		.uleb128 0xe
 6119 09b1 7900     		.ascii	"y\000"
 6120 09b3 0D       		.byte	0xd
 6121 09b4 06       		.byte	0x6
 6122 09b5 68000000 		.4byte	0x68
 6123 09b9 04       		.byte	0x4
 6124 09ba 00       		.byte	0
 6125 09bb 03       		.uleb128 0x3
 6126 09bc 120B0000 		.4byte	.LASF144
 6127 09c0 0D       		.byte	0xd
 6128 09c1 07       		.byte	0x7
 6129 09c2 9A090000 		.4byte	0x99a
 6130 09c6 1E       		.uleb128 0x1e
 6131 09c7 25000000 		.4byte	.LASF190
 6132 09cb 01       		.byte	0x1
 6133 09cc 08       		.byte	0x8
 6134 09cd 00000000 		.4byte	.LFB63
 6135 09d1 4C000000 		.4byte	.LFE63-.LFB63
 6136 09d5 01       		.uleb128 0x1
 6137 09d6 9C       		.byte	0x9c
 6138 09d7 E8090000 		.4byte	0x9e8
 6139 09db 1F       		.uleb128 0x1f
 6140 09dc 6300     		.ascii	"c\000"
 6141 09de 01       		.byte	0x1
 6142 09df 09       		.byte	0x9
 6143 09e0 5B050000 		.4byte	0x55b
 6144 09e4 02       		.uleb128 0x2
 6145 09e5 91       		.byte	0x91
 6146 09e6 77       		.sleb128 -9
 6147 09e7 00       		.byte	0
 6148 09e8 20       		.uleb128 0x20
 6149 09e9 6D617800 		.ascii	"max\000"
 6150 09ed 01       		.byte	0x1
 6151 09ee 0C       		.byte	0xc
 6152 09ef 68000000 		.4byte	0x68
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 131


 6153 09f3 00000000 		.4byte	.LFB64
 6154 09f7 4C000000 		.4byte	.LFE64-.LFB64
 6155 09fb 01       		.uleb128 0x1
 6156 09fc 9C       		.byte	0x9c
 6157 09fd 380A0000 		.4byte	0xa38
 6158 0a01 21       		.uleb128 0x21
 6159 0a02 61727200 		.ascii	"arr\000"
 6160 0a06 01       		.byte	0x1
 6161 0a07 0C       		.byte	0xc
 6162 0a08 380A0000 		.4byte	0xa38
 6163 0a0c 02       		.uleb128 0x2
 6164 0a0d 91       		.byte	0x91
 6165 0a0e 6C       		.sleb128 -20
 6166 0a0f 22       		.uleb128 0x22
 6167 0a10 A1060000 		.4byte	.LASF145
 6168 0a14 01       		.byte	0x1
 6169 0a15 0C       		.byte	0xc
 6170 0a16 68000000 		.4byte	0x68
 6171 0a1a 02       		.uleb128 0x2
 6172 0a1b 91       		.byte	0x91
 6173 0a1c 68       		.sleb128 -24
 6174 0a1d 1F       		.uleb128 0x1f
 6175 0a1e 6D617800 		.ascii	"max\000"
 6176 0a22 01       		.byte	0x1
 6177 0a23 0D       		.byte	0xd
 6178 0a24 68000000 		.4byte	0x68
 6179 0a28 02       		.uleb128 0x2
 6180 0a29 91       		.byte	0x91
 6181 0a2a 74       		.sleb128 -12
 6182 0a2b 1F       		.uleb128 0x1f
 6183 0a2c 6900     		.ascii	"i\000"
 6184 0a2e 01       		.byte	0x1
 6185 0a2f 0E       		.byte	0xe
 6186 0a30 68000000 		.4byte	0x68
 6187 0a34 02       		.uleb128 0x2
 6188 0a35 91       		.byte	0x91
 6189 0a36 70       		.sleb128 -16
 6190 0a37 00       		.byte	0
 6191 0a38 0F       		.uleb128 0xf
 6192 0a39 04       		.byte	0x4
 6193 0a3a 68000000 		.4byte	0x68
 6194 0a3e 23       		.uleb128 0x23
 6195 0a3f 0D030000 		.4byte	.LASF149
 6196 0a43 01       		.byte	0x1
 6197 0a44 15       		.byte	0x15
 6198 0a45 00000000 		.4byte	.LFB65
 6199 0a49 4E000000 		.4byte	.LFE65-.LFB65
 6200 0a4d 01       		.uleb128 0x1
 6201 0a4e 9C       		.byte	0x9c
 6202 0a4f 7C0A0000 		.4byte	0xa7c
 6203 0a53 21       		.uleb128 0x21
 6204 0a54 61727200 		.ascii	"arr\000"
 6205 0a58 01       		.byte	0x1
 6206 0a59 15       		.byte	0x15
 6207 0a5a 7C0A0000 		.4byte	0xa7c
 6208 0a5e 02       		.uleb128 0x2
 6209 0a5f 91       		.byte	0x91
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 132


 6210 0a60 6C       		.sleb128 -20
 6211 0a61 22       		.uleb128 0x22
 6212 0a62 A1060000 		.4byte	.LASF145
 6213 0a66 01       		.byte	0x1
 6214 0a67 15       		.byte	0x15
 6215 0a68 68000000 		.4byte	0x68
 6216 0a6c 02       		.uleb128 0x2
 6217 0a6d 91       		.byte	0x91
 6218 0a6e 68       		.sleb128 -24
 6219 0a6f 1F       		.uleb128 0x1f
 6220 0a70 6900     		.ascii	"i\000"
 6221 0a72 01       		.byte	0x1
 6222 0a73 16       		.byte	0x16
 6223 0a74 68000000 		.4byte	0x68
 6224 0a78 02       		.uleb128 0x2
 6225 0a79 91       		.byte	0x91
 6226 0a7a 74       		.sleb128 -12
 6227 0a7b 00       		.byte	0
 6228 0a7c 0F       		.uleb128 0xf
 6229 0a7d 04       		.byte	0x4
 6230 0a7e BB090000 		.4byte	0x9bb
 6231 0a82 24       		.uleb128 0x24
 6232 0a83 3E090000 		.4byte	.LASF146
 6233 0a87 01       		.byte	0x1
 6234 0a88 1C       		.byte	0x1c
 6235 0a89 68000000 		.4byte	0x68
 6236 0a8d 00000000 		.4byte	.LFB66
 6237 0a91 62000000 		.4byte	.LFE66-.LFB66
 6238 0a95 01       		.uleb128 0x1
 6239 0a96 9C       		.byte	0x9c
 6240 0a97 D20A0000 		.4byte	0xad2
 6241 0a9b 22       		.uleb128 0x22
 6242 0a9c E8020000 		.4byte	.LASF147
 6243 0aa0 01       		.byte	0x1
 6244 0aa1 1C       		.byte	0x1c
 6245 0aa2 7C0A0000 		.4byte	0xa7c
 6246 0aa6 02       		.uleb128 0x2
 6247 0aa7 91       		.byte	0x91
 6248 0aa8 6C       		.sleb128 -20
 6249 0aa9 22       		.uleb128 0x22
 6250 0aaa ED020000 		.4byte	.LASF148
 6251 0aae 01       		.byte	0x1
 6252 0aaf 1C       		.byte	0x1c
 6253 0ab0 7C0A0000 		.4byte	0xa7c
 6254 0ab4 02       		.uleb128 0x2
 6255 0ab5 91       		.byte	0x91
 6256 0ab6 68       		.sleb128 -24
 6257 0ab7 22       		.uleb128 0x22
 6258 0ab8 A1060000 		.4byte	.LASF145
 6259 0abc 01       		.byte	0x1
 6260 0abd 1C       		.byte	0x1c
 6261 0abe 68000000 		.4byte	0x68
 6262 0ac2 02       		.uleb128 0x2
 6263 0ac3 91       		.byte	0x91
 6264 0ac4 64       		.sleb128 -28
 6265 0ac5 1F       		.uleb128 0x1f
 6266 0ac6 6900     		.ascii	"i\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 133


 6267 0ac8 01       		.byte	0x1
 6268 0ac9 1D       		.byte	0x1d
 6269 0aca 68000000 		.4byte	0x68
 6270 0ace 02       		.uleb128 0x2
 6271 0acf 91       		.byte	0x91
 6272 0ad0 74       		.sleb128 -12
 6273 0ad1 00       		.byte	0
 6274 0ad2 23       		.uleb128 0x23
 6275 0ad3 A9000000 		.4byte	.LASF150
 6276 0ad7 01       		.byte	0x1
 6277 0ad8 24       		.byte	0x24
 6278 0ad9 00000000 		.4byte	.LFB67
 6279 0add 14000000 		.4byte	.LFE67-.LFB67
 6280 0ae1 01       		.uleb128 0x1
 6281 0ae2 9C       		.byte	0x9c
 6282 0ae3 040B0000 		.4byte	0xb04
 6283 0ae7 22       		.uleb128 0x22
 6284 0ae8 79080000 		.4byte	.LASF151
 6285 0aec 01       		.byte	0x1
 6286 0aed 24       		.byte	0x24
 6287 0aee 76000000 		.4byte	0x76
 6288 0af2 02       		.uleb128 0x2
 6289 0af3 91       		.byte	0x91
 6290 0af4 74       		.sleb128 -12
 6291 0af5 22       		.uleb128 0x22
 6292 0af6 5F030000 		.4byte	.LASF152
 6293 0afa 01       		.byte	0x1
 6294 0afb 24       		.byte	0x24
 6295 0afc 76000000 		.4byte	0x76
 6296 0b00 02       		.uleb128 0x2
 6297 0b01 91       		.byte	0x91
 6298 0b02 70       		.sleb128 -16
 6299 0b03 00       		.byte	0
 6300 0b04 20       		.uleb128 0x20
 6301 0b05 6C656E00 		.ascii	"len\000"
 6302 0b09 02       		.byte	0x2
 6303 0b0a 3A       		.byte	0x3a
 6304 0b0b 68000000 		.4byte	0x68
 6305 0b0f 00000000 		.4byte	.LFB68
 6306 0b13 54000000 		.4byte	.LFE68-.LFB68
 6307 0b17 01       		.uleb128 0x1
 6308 0b18 9C       		.byte	0x9c
 6309 0b19 460B0000 		.4byte	0xb46
 6310 0b1d 22       		.uleb128 0x22
 6311 0b1e CE030000 		.4byte	.LASF153
 6312 0b22 02       		.byte	0x2
 6313 0b23 3A       		.byte	0x3a
 6314 0b24 7C0A0000 		.4byte	0xa7c
 6315 0b28 02       		.uleb128 0x2
 6316 0b29 91       		.byte	0x91
 6317 0b2a 6C       		.sleb128 -20
 6318 0b2b 1F       		.uleb128 0x1f
 6319 0b2c 6C656E00 		.ascii	"len\000"
 6320 0b30 02       		.byte	0x2
 6321 0b31 3B       		.byte	0x3b
 6322 0b32 68000000 		.4byte	0x68
 6323 0b36 02       		.uleb128 0x2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 134


 6324 0b37 91       		.byte	0x91
 6325 0b38 74       		.sleb128 -12
 6326 0b39 1F       		.uleb128 0x1f
 6327 0b3a 6900     		.ascii	"i\000"
 6328 0b3c 02       		.byte	0x2
 6329 0b3d 3C       		.byte	0x3c
 6330 0b3e 68000000 		.4byte	0x68
 6331 0b42 02       		.uleb128 0x2
 6332 0b43 91       		.byte	0x91
 6333 0b44 70       		.sleb128 -16
 6334 0b45 00       		.byte	0
 6335 0b46 24       		.uleb128 0x24
 6336 0b47 29080000 		.4byte	.LASF154
 6337 0b4b 02       		.byte	0x2
 6338 0b4c 45       		.byte	0x45
 6339 0b4d 68000000 		.4byte	0x68
 6340 0b51 00000000 		.4byte	.LFB69
 6341 0b55 50000000 		.4byte	.LFE69-.LFB69
 6342 0b59 01       		.uleb128 0x1
 6343 0b5a 9C       		.byte	0x9c
 6344 0b5b 880B0000 		.4byte	0xb88
 6345 0b5f 22       		.uleb128 0x22
 6346 0b60 CE030000 		.4byte	.LASF153
 6347 0b64 02       		.byte	0x2
 6348 0b65 45       		.byte	0x45
 6349 0b66 7C0A0000 		.4byte	0xa7c
 6350 0b6a 02       		.uleb128 0x2
 6351 0b6b 91       		.byte	0x91
 6352 0b6c 6C       		.sleb128 -20
 6353 0b6d 22       		.uleb128 0x22
 6354 0b6e A1060000 		.4byte	.LASF145
 6355 0b72 02       		.byte	0x2
 6356 0b73 45       		.byte	0x45
 6357 0b74 68000000 		.4byte	0x68
 6358 0b78 02       		.uleb128 0x2
 6359 0b79 91       		.byte	0x91
 6360 0b7a 68       		.sleb128 -24
 6361 0b7b 1F       		.uleb128 0x1f
 6362 0b7c 6900     		.ascii	"i\000"
 6363 0b7e 02       		.byte	0x2
 6364 0b7f 46       		.byte	0x46
 6365 0b80 68000000 		.4byte	0x68
 6366 0b84 02       		.uleb128 0x2
 6367 0b85 91       		.byte	0x91
 6368 0b86 74       		.sleb128 -12
 6369 0b87 00       		.byte	0
 6370 0b88 24       		.uleb128 0x24
 6371 0b89 090A0000 		.4byte	.LASF155
 6372 0b8d 02       		.byte	0x2
 6373 0b8e 4D       		.byte	0x4d
 6374 0b8f 68000000 		.4byte	0x68
 6375 0b93 00000000 		.4byte	.LFB70
 6376 0b97 56000000 		.4byte	.LFE70-.LFB70
 6377 0b9b 01       		.uleb128 0x1
 6378 0b9c 9C       		.byte	0x9c
 6379 0b9d D60B0000 		.4byte	0xbd6
 6380 0ba1 21       		.uleb128 0x21
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 135


 6381 0ba2 7000     		.ascii	"p\000"
 6382 0ba4 02       		.byte	0x2
 6383 0ba5 4D       		.byte	0x4d
 6384 0ba6 BB090000 		.4byte	0x9bb
 6385 0baa 02       		.uleb128 0x2
 6386 0bab 91       		.byte	0x91
 6387 0bac 68       		.sleb128 -24
 6388 0bad 22       		.uleb128 0x22
 6389 0bae CE030000 		.4byte	.LASF153
 6390 0bb2 02       		.byte	0x2
 6391 0bb3 4D       		.byte	0x4d
 6392 0bb4 7C0A0000 		.4byte	0xa7c
 6393 0bb8 02       		.uleb128 0x2
 6394 0bb9 91       		.byte	0x91
 6395 0bba 64       		.sleb128 -28
 6396 0bbb 22       		.uleb128 0x22
 6397 0bbc A1060000 		.4byte	.LASF145
 6398 0bc0 02       		.byte	0x2
 6399 0bc1 4D       		.byte	0x4d
 6400 0bc2 68000000 		.4byte	0x68
 6401 0bc6 02       		.uleb128 0x2
 6402 0bc7 91       		.byte	0x91
 6403 0bc8 60       		.sleb128 -32
 6404 0bc9 1F       		.uleb128 0x1f
 6405 0bca 6900     		.ascii	"i\000"
 6406 0bcc 02       		.byte	0x2
 6407 0bcd 4E       		.byte	0x4e
 6408 0bce 68000000 		.4byte	0x68
 6409 0bd2 02       		.uleb128 0x2
 6410 0bd3 91       		.byte	0x91
 6411 0bd4 74       		.sleb128 -12
 6412 0bd5 00       		.byte	0
 6413 0bd6 25       		.uleb128 0x25
 6414 0bd7 4D070000 		.4byte	.LASF156
 6415 0bdb 02       		.byte	0x2
 6416 0bdc 56       		.byte	0x56
 6417 0bdd 00000000 		.4byte	.LFB71
 6418 0be1 74000000 		.4byte	.LFE71-.LFB71
 6419 0be5 01       		.uleb128 0x1
 6420 0be6 9C       		.byte	0x9c
 6421 0be7 060C0000 		.4byte	0xc06
 6422 0beb 22       		.uleb128 0x22
 6423 0bec CE030000 		.4byte	.LASF153
 6424 0bf0 02       		.byte	0x2
 6425 0bf1 56       		.byte	0x56
 6426 0bf2 7C0A0000 		.4byte	0xa7c
 6427 0bf6 02       		.uleb128 0x2
 6428 0bf7 91       		.byte	0x91
 6429 0bf8 6C       		.sleb128 -20
 6430 0bf9 1F       		.uleb128 0x1f
 6431 0bfa 6900     		.ascii	"i\000"
 6432 0bfc 02       		.byte	0x2
 6433 0bfd 57       		.byte	0x57
 6434 0bfe 68000000 		.4byte	0x68
 6435 0c02 02       		.uleb128 0x2
 6436 0c03 91       		.byte	0x91
 6437 0c04 74       		.sleb128 -12
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 136


 6438 0c05 00       		.byte	0
 6439 0c06 25       		.uleb128 0x25
 6440 0c07 A9030000 		.4byte	.LASF157
 6441 0c0b 02       		.byte	0x2
 6442 0c0c 63       		.byte	0x63
 6443 0c0d 00000000 		.4byte	.LFB72
 6444 0c11 B0000000 		.4byte	.LFE72-.LFB72
 6445 0c15 01       		.uleb128 0x1
 6446 0c16 9C       		.byte	0x9c
 6447 0c17 360C0000 		.4byte	0xc36
 6448 0c1b 22       		.uleb128 0x22
 6449 0c1c 30070000 		.4byte	.LASF158
 6450 0c20 02       		.byte	0x2
 6451 0c21 63       		.byte	0x63
 6452 0c22 380A0000 		.4byte	0xa38
 6453 0c26 02       		.uleb128 0x2
 6454 0c27 91       		.byte	0x91
 6455 0c28 6C       		.sleb128 -20
 6456 0c29 1F       		.uleb128 0x1f
 6457 0c2a 6900     		.ascii	"i\000"
 6458 0c2c 02       		.byte	0x2
 6459 0c2d 65       		.byte	0x65
 6460 0c2e 68000000 		.4byte	0x68
 6461 0c32 02       		.uleb128 0x2
 6462 0c33 91       		.byte	0x91
 6463 0c34 74       		.sleb128 -12
 6464 0c35 00       		.byte	0
 6465 0c36 25       		.uleb128 0x25
 6466 0c37 1C0A0000 		.4byte	.LASF159
 6467 0c3b 02       		.byte	0x2
 6468 0c3c 7C       		.byte	0x7c
 6469 0c3d 00000000 		.4byte	.LFB73
 6470 0c41 20010000 		.4byte	.LFE73-.LFB73
 6471 0c45 01       		.uleb128 0x1
 6472 0c46 9C       		.byte	0x9c
 6473 0c47 720C0000 		.4byte	0xc72
 6474 0c4b 21       		.uleb128 0x21
 6475 0c4c 6D617000 		.ascii	"map\000"
 6476 0c50 02       		.byte	0x2
 6477 0c51 7C       		.byte	0x7c
 6478 0c52 820C0000 		.4byte	0xc82
 6479 0c56 02       		.uleb128 0x2
 6480 0c57 91       		.byte	0x91
 6481 0c58 6C       		.sleb128 -20
 6482 0c59 1F       		.uleb128 0x1f
 6483 0c5a 6D00     		.ascii	"m\000"
 6484 0c5c 02       		.byte	0x2
 6485 0c5d 80       		.byte	0x80
 6486 0c5e 68000000 		.4byte	0x68
 6487 0c62 02       		.uleb128 0x2
 6488 0c63 91       		.byte	0x91
 6489 0c64 74       		.sleb128 -12
 6490 0c65 1F       		.uleb128 0x1f
 6491 0c66 6E00     		.ascii	"n\000"
 6492 0c68 02       		.byte	0x2
 6493 0c69 81       		.byte	0x81
 6494 0c6a 68000000 		.4byte	0x68
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 137


 6495 0c6e 02       		.uleb128 0x2
 6496 0c6f 91       		.byte	0x91
 6497 0c70 70       		.sleb128 -16
 6498 0c71 00       		.byte	0
 6499 0c72 09       		.uleb128 0x9
 6500 0c73 68000000 		.4byte	0x68
 6501 0c77 820C0000 		.4byte	0xc82
 6502 0c7b 0A       		.uleb128 0xa
 6503 0c7c D4000000 		.4byte	0xd4
 6504 0c80 12       		.byte	0x12
 6505 0c81 00       		.byte	0
 6506 0c82 0F       		.uleb128 0xf
 6507 0c83 04       		.byte	0x4
 6508 0c84 720C0000 		.4byte	0xc72
 6509 0c88 23       		.uleb128 0x23
 6510 0c89 C8010000 		.4byte	.LASF160
 6511 0c8d 02       		.byte	0x2
 6512 0c8e A4       		.byte	0xa4
 6513 0c8f 00000000 		.4byte	.LFB74
 6514 0c93 9E000000 		.4byte	.LFE74-.LFB74
 6515 0c97 01       		.uleb128 0x1
 6516 0c98 9C       		.byte	0x9c
 6517 0c99 D40C0000 		.4byte	0xcd4
 6518 0c9d 21       		.uleb128 0x21
 6519 0c9e 6D617000 		.ascii	"map\000"
 6520 0ca2 02       		.byte	0x2
 6521 0ca3 A4       		.byte	0xa4
 6522 0ca4 820C0000 		.4byte	0xc82
 6523 0ca8 02       		.uleb128 0x2
 6524 0ca9 91       		.byte	0x91
 6525 0caa 6C       		.sleb128 -20
 6526 0cab 22       		.uleb128 0x22
 6527 0cac CE030000 		.4byte	.LASF153
 6528 0cb0 02       		.byte	0x2
 6529 0cb1 A4       		.byte	0xa4
 6530 0cb2 7C0A0000 		.4byte	0xa7c
 6531 0cb6 02       		.uleb128 0x2
 6532 0cb7 91       		.byte	0x91
 6533 0cb8 68       		.sleb128 -24
 6534 0cb9 22       		.uleb128 0x22
 6535 0cba 57070000 		.4byte	.LASF161
 6536 0cbe 02       		.byte	0x2
 6537 0cbf A4       		.byte	0xa4
 6538 0cc0 68000000 		.4byte	0x68
 6539 0cc4 02       		.uleb128 0x2
 6540 0cc5 91       		.byte	0x91
 6541 0cc6 64       		.sleb128 -28
 6542 0cc7 1F       		.uleb128 0x1f
 6543 0cc8 6900     		.ascii	"i\000"
 6544 0cca 02       		.byte	0x2
 6545 0ccb AA       		.byte	0xaa
 6546 0ccc 68000000 		.4byte	0x68
 6547 0cd0 02       		.uleb128 0x2
 6548 0cd1 91       		.byte	0x91
 6549 0cd2 74       		.sleb128 -12
 6550 0cd3 00       		.byte	0
 6551 0cd4 24       		.uleb128 0x24
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 138


 6552 0cd5 D3030000 		.4byte	.LASF162
 6553 0cd9 02       		.byte	0x2
 6554 0cda B4       		.byte	0xb4
 6555 0cdb 68000000 		.4byte	0x68
 6556 0cdf 00000000 		.4byte	.LFB75
 6557 0ce3 58000000 		.4byte	.LFE75-.LFB75
 6558 0ce7 01       		.uleb128 0x1
 6559 0ce8 9C       		.byte	0x9c
 6560 0ce9 FA0C0000 		.4byte	0xcfa
 6561 0ced 21       		.uleb128 0x21
 6562 0cee 7000     		.ascii	"p\000"
 6563 0cf0 02       		.byte	0x2
 6564 0cf1 B4       		.byte	0xb4
 6565 0cf2 BB090000 		.4byte	0x9bb
 6566 0cf6 02       		.uleb128 0x2
 6567 0cf7 91       		.byte	0x91
 6568 0cf8 70       		.sleb128 -16
 6569 0cf9 00       		.byte	0
 6570 0cfa 23       		.uleb128 0x23
 6571 0cfb 26050000 		.4byte	.LASF163
 6572 0cff 02       		.byte	0x2
 6573 0d00 BB       		.byte	0xbb
 6574 0d01 00000000 		.4byte	.LFB76
 6575 0d05 34000000 		.4byte	.LFE76-.LFB76
 6576 0d09 01       		.uleb128 0x1
 6577 0d0a 9C       		.byte	0x9c
 6578 0d0b 1C0D0000 		.4byte	0xd1c
 6579 0d0f 21       		.uleb128 0x21
 6580 0d10 7000     		.ascii	"p\000"
 6581 0d12 02       		.byte	0x2
 6582 0d13 BB       		.byte	0xbb
 6583 0d14 BB090000 		.4byte	0x9bb
 6584 0d18 02       		.uleb128 0x2
 6585 0d19 91       		.byte	0x91
 6586 0d1a 70       		.sleb128 -16
 6587 0d1b 00       		.byte	0
 6588 0d1c 25       		.uleb128 0x25
 6589 0d1d 08070000 		.4byte	.LASF164
 6590 0d21 02       		.byte	0x2
 6591 0d22 BE       		.byte	0xbe
 6592 0d23 00000000 		.4byte	.LFB77
 6593 0d27 4C010000 		.4byte	.LFE77-.LFB77
 6594 0d2b 01       		.uleb128 0x1
 6595 0d2c 9C       		.byte	0x9c
 6596 0d2d D40D0000 		.4byte	0xdd4
 6597 0d31 22       		.uleb128 0x22
 6598 0d32 ED070000 		.4byte	.LASF165
 6599 0d36 02       		.byte	0x2
 6600 0d37 BE       		.byte	0xbe
 6601 0d38 7C0A0000 		.4byte	0xa7c
 6602 0d3c 02       		.uleb128 0x2
 6603 0d3d 91       		.byte	0x91
 6604 0d3e 44       		.sleb128 -60
 6605 0d3f 22       		.uleb128 0x22
 6606 0d40 30070000 		.4byte	.LASF158
 6607 0d44 02       		.byte	0x2
 6608 0d45 BE       		.byte	0xbe
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 139


 6609 0d46 380A0000 		.4byte	0xa38
 6610 0d4a 02       		.uleb128 0x2
 6611 0d4b 91       		.byte	0x91
 6612 0d4c 40       		.sleb128 -64
 6613 0d4d 26       		.uleb128 0x26
 6614 0d4e 8A050000 		.4byte	.LASF166
 6615 0d52 02       		.byte	0x2
 6616 0d53 C0       		.byte	0xc0
 6617 0d54 68000000 		.4byte	0x68
 6618 0d58 02       		.uleb128 0x2
 6619 0d59 91       		.byte	0x91
 6620 0d5a 74       		.sleb128 -12
 6621 0d5b 26       		.uleb128 0x26
 6622 0d5c 250A0000 		.4byte	.LASF167
 6623 0d60 02       		.byte	0x2
 6624 0d61 C1       		.byte	0xc1
 6625 0d62 BB090000 		.4byte	0x9bb
 6626 0d66 02       		.uleb128 0x2
 6627 0d67 91       		.byte	0x91
 6628 0d68 54       		.sleb128 -44
 6629 0d69 26       		.uleb128 0x26
 6630 0d6a A4000000 		.4byte	.LASF168
 6631 0d6e 02       		.byte	0x2
 6632 0d6f C1       		.byte	0xc1
 6633 0d70 BB090000 		.4byte	0x9bb
 6634 0d74 02       		.uleb128 0x2
 6635 0d75 91       		.byte	0x91
 6636 0d76 4C       		.sleb128 -52
 6637 0d77 26       		.uleb128 0x26
 6638 0d78 5A0A0000 		.4byte	.LASF169
 6639 0d7c 02       		.byte	0x2
 6640 0d7d C2       		.byte	0xc2
 6641 0d7e 68000000 		.4byte	0x68
 6642 0d82 02       		.uleb128 0x2
 6643 0d83 91       		.byte	0x91
 6644 0d84 70       		.sleb128 -16
 6645 0d85 26       		.uleb128 0x26
 6646 0d86 68010000 		.4byte	.LASF170
 6647 0d8a 02       		.byte	0x2
 6648 0d8b C3       		.byte	0xc3
 6649 0d8c 68000000 		.4byte	0x68
 6650 0d90 02       		.uleb128 0x2
 6651 0d91 91       		.byte	0x91
 6652 0d92 6C       		.sleb128 -20
 6653 0d93 26       		.uleb128 0x26
 6654 0d94 72060000 		.4byte	.LASF171
 6655 0d98 02       		.byte	0x2
 6656 0d99 C5       		.byte	0xc5
 6657 0d9a 68000000 		.4byte	0x68
 6658 0d9e 02       		.uleb128 0x2
 6659 0d9f 91       		.byte	0x91
 6660 0da0 68       		.sleb128 -24
 6661 0da1 26       		.uleb128 0x26
 6662 0da2 57070000 		.4byte	.LASF161
 6663 0da6 02       		.byte	0x2
 6664 0da7 C6       		.byte	0xc6
 6665 0da8 68000000 		.4byte	0x68
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 140


 6666 0dac 02       		.uleb128 0x2
 6667 0dad 91       		.byte	0x91
 6668 0dae 60       		.sleb128 -32
 6669 0daf 1F       		.uleb128 0x1f
 6670 0db0 6900     		.ascii	"i\000"
 6671 0db2 02       		.byte	0x2
 6672 0db3 C8       		.byte	0xc8
 6673 0db4 68000000 		.4byte	0x68
 6674 0db8 02       		.uleb128 0x2
 6675 0db9 91       		.byte	0x91
 6676 0dba 64       		.sleb128 -28
 6677 0dbb 27       		.uleb128 0x27
 6678 0dbc 2C000000 		.4byte	.LBB2
 6679 0dc0 F6000000 		.4byte	.LBE2-.LBB2
 6680 0dc4 26       		.uleb128 0x26
 6681 0dc5 E4060000 		.4byte	.LASF172
 6682 0dc9 02       		.byte	0x2
 6683 0dca D7       		.byte	0xd7
 6684 0dcb 68000000 		.4byte	0x68
 6685 0dcf 02       		.uleb128 0x2
 6686 0dd0 91       		.byte	0x91
 6687 0dd1 5C       		.sleb128 -36
 6688 0dd2 00       		.byte	0
 6689 0dd3 00       		.byte	0
 6690 0dd4 28       		.uleb128 0x28
 6691 0dd5 1A030000 		.4byte	.LASF173
 6692 0dd9 02       		.byte	0x2
 6693 0dda F6       		.byte	0xf6
 6694 0ddb 68000000 		.4byte	0x68
 6695 0ddf 00000000 		.4byte	.LFB78
 6696 0de3 80000000 		.4byte	.LFE78-.LFB78
 6697 0de7 01       		.uleb128 0x1
 6698 0de8 9C       		.byte	0x9c
 6699 0de9 2E0E0000 		.4byte	0xe2e
 6700 0ded 21       		.uleb128 0x21
 6701 0dee 7000     		.ascii	"p\000"
 6702 0df0 02       		.byte	0x2
 6703 0df1 F6       		.byte	0xf6
 6704 0df2 BB090000 		.4byte	0x9bb
 6705 0df6 02       		.uleb128 0x2
 6706 0df7 91       		.byte	0x91
 6707 0df8 58       		.sleb128 -40
 6708 0df9 1F       		.uleb128 0x1f
 6709 0dfa 6E756D00 		.ascii	"num\000"
 6710 0dfe 02       		.byte	0x2
 6711 0dff F7       		.byte	0xf7
 6712 0e00 68000000 		.4byte	0x68
 6713 0e04 02       		.uleb128 0x2
 6714 0e05 91       		.byte	0x91
 6715 0e06 74       		.sleb128 -12
 6716 0e07 26       		.uleb128 0x26
 6717 0e08 09000000 		.4byte	.LASF174
 6718 0e0c 02       		.byte	0x2
 6719 0e0d F7       		.byte	0xf7
 6720 0e0e 68000000 		.4byte	0x68
 6721 0e12 02       		.uleb128 0x2
 6722 0e13 91       		.byte	0x91
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 141


 6723 0e14 68       		.sleb128 -24
 6724 0e15 1F       		.uleb128 0x1f
 6725 0e16 6900     		.ascii	"i\000"
 6726 0e18 02       		.byte	0x2
 6727 0e19 F8       		.byte	0xf8
 6728 0e1a 68000000 		.4byte	0x68
 6729 0e1e 02       		.uleb128 0x2
 6730 0e1f 91       		.byte	0x91
 6731 0e20 70       		.sleb128 -16
 6732 0e21 1F       		.uleb128 0x1f
 6733 0e22 6A00     		.ascii	"j\000"
 6734 0e24 02       		.byte	0x2
 6735 0e25 F9       		.byte	0xf9
 6736 0e26 68000000 		.4byte	0x68
 6737 0e2a 02       		.uleb128 0x2
 6738 0e2b 91       		.byte	0x91
 6739 0e2c 6C       		.sleb128 -20
 6740 0e2d 00       		.byte	0
 6741 0e2e 25       		.uleb128 0x25
 6742 0e2f A5050000 		.4byte	.LASF175
 6743 0e33 03       		.byte	0x3
 6744 0e34 0C       		.byte	0xc
 6745 0e35 00000000 		.4byte	.LFB79
 6746 0e39 6C000000 		.4byte	.LFE79-.LFB79
 6747 0e3d 01       		.uleb128 0x1
 6748 0e3e 9C       		.byte	0x9c
 6749 0e3f 960E0000 		.4byte	0xe96
 6750 0e43 22       		.uleb128 0x22
 6751 0e44 950B0000 		.4byte	.LASF176
 6752 0e48 03       		.byte	0x3
 6753 0e49 0C       		.byte	0xc
 6754 0e4a A60E0000 		.4byte	0xea6
 6755 0e4e 02       		.uleb128 0x2
 6756 0e4f 91       		.byte	0x91
 6757 0e50 6C       		.sleb128 -20
 6758 0e51 21       		.uleb128 0x21
 6759 0e52 636E7400 		.ascii	"cnt\000"
 6760 0e56 03       		.byte	0x3
 6761 0e57 0C       		.byte	0xc
 6762 0e58 380A0000 		.4byte	0xa38
 6763 0e5c 02       		.uleb128 0x2
 6764 0e5d 91       		.byte	0x91
 6765 0e5e 68       		.sleb128 -24
 6766 0e5f 22       		.uleb128 0x22
 6767 0e60 ED070000 		.4byte	.LASF165
 6768 0e64 03       		.byte	0x3
 6769 0e65 0D       		.byte	0xd
 6770 0e66 7C0A0000 		.4byte	0xa7c
 6771 0e6a 02       		.uleb128 0x2
 6772 0e6b 91       		.byte	0x91
 6773 0e6c 64       		.sleb128 -28
 6774 0e6d 22       		.uleb128 0x22
 6775 0e6e FD070000 		.4byte	.LASF177
 6776 0e72 03       		.byte	0x3
 6777 0e73 0D       		.byte	0xd
 6778 0e74 68000000 		.4byte	0x68
 6779 0e78 02       		.uleb128 0x2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 142


 6780 0e79 91       		.byte	0x91
 6781 0e7a 60       		.sleb128 -32
 6782 0e7b 21       		.uleb128 0x21
 6783 0e7c 7000     		.ascii	"p\000"
 6784 0e7e 03       		.byte	0x3
 6785 0e7f 0D       		.byte	0xd
 6786 0e80 BB090000 		.4byte	0x9bb
 6787 0e84 02       		.uleb128 0x2
 6788 0e85 91       		.byte	0x91
 6789 0e86 00       		.sleb128 0
 6790 0e87 26       		.uleb128 0x26
 6791 0e88 09000000 		.4byte	.LASF174
 6792 0e8c 03       		.byte	0x3
 6793 0e8d 0F       		.byte	0xf
 6794 0e8e 68000000 		.4byte	0x68
 6795 0e92 02       		.uleb128 0x2
 6796 0e93 91       		.byte	0x91
 6797 0e94 74       		.sleb128 -12
 6798 0e95 00       		.byte	0
 6799 0e96 09       		.uleb128 0x9
 6800 0e97 BB090000 		.4byte	0x9bb
 6801 0e9b A60E0000 		.4byte	0xea6
 6802 0e9f 0A       		.uleb128 0xa
 6803 0ea0 D4000000 		.4byte	0xd4
 6804 0ea4 8B       		.byte	0x8b
 6805 0ea5 00       		.byte	0
 6806 0ea6 0F       		.uleb128 0xf
 6807 0ea7 04       		.byte	0x4
 6808 0ea8 960E0000 		.4byte	0xe96
 6809 0eac 29       		.uleb128 0x29
 6810 0ead 42465300 		.ascii	"BFS\000"
 6811 0eb1 03       		.byte	0x3
 6812 0eb2 19       		.byte	0x19
 6813 0eb3 00000000 		.4byte	.LFB80
 6814 0eb7 54040000 		.4byte	.LFE80-.LFB80
 6815 0ebb 01       		.uleb128 0x1
 6816 0ebc 9C       		.byte	0x9c
 6817 0ebd 680F0000 		.4byte	0xf68
 6818 0ec1 22       		.uleb128 0x22
 6819 0ec2 DE060000 		.4byte	.LASF178
 6820 0ec6 03       		.byte	0x3
 6821 0ec7 19       		.byte	0x19
 6822 0ec8 BB090000 		.4byte	0x9bb
 6823 0ecc 04       		.uleb128 0x4
 6824 0ecd 91       		.byte	0x91
 6825 0ece B0D07E   		.sleb128 -22480
 6826 0ed1 22       		.uleb128 0x22
 6827 0ed2 48040000 		.4byte	.LASF179
 6828 0ed6 03       		.byte	0x3
 6829 0ed7 19       		.byte	0x19
 6830 0ed8 BB090000 		.4byte	0x9bb
 6831 0edc 04       		.uleb128 0x4
 6832 0edd 91       		.byte	0x91
 6833 0ede A8D07E   		.sleb128 -22488
 6834 0ee1 22       		.uleb128 0x22
 6835 0ee2 ED070000 		.4byte	.LASF165
 6836 0ee6 03       		.byte	0x3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 143


 6837 0ee7 19       		.byte	0x19
 6838 0ee8 7C0A0000 		.4byte	0xa7c
 6839 0eec 02       		.uleb128 0x2
 6840 0eed 91       		.byte	0x91
 6841 0eee 00       		.sleb128 0
 6842 0eef 26       		.uleb128 0x26
 6843 0ef0 84000000 		.4byte	.LASF180
 6844 0ef4 03       		.byte	0x3
 6845 0ef5 1B       		.byte	0x1b
 6846 0ef6 680F0000 		.4byte	0xf68
 6847 0efa 04       		.uleb128 0x4
 6848 0efb 91       		.byte	0x91
 6849 0efc 84A87F   		.sleb128 -11260
 6850 0eff 26       		.uleb128 0x26
 6851 0f00 950B0000 		.4byte	.LASF176
 6852 0f04 03       		.byte	0x3
 6853 0f05 1C       		.byte	0x1c
 6854 0f06 680F0000 		.4byte	0xf68
 6855 0f0a 04       		.uleb128 0x4
 6856 0f0b 91       		.byte	0x91
 6857 0f0c C4D07E   		.sleb128 -22460
 6858 0f0f 1F       		.uleb128 0x1f
 6859 0f10 6900     		.ascii	"i\000"
 6860 0f12 03       		.byte	0x3
 6861 0f13 20       		.byte	0x20
 6862 0f14 68000000 		.4byte	0x68
 6863 0f18 02       		.uleb128 0x2
 6864 0f19 91       		.byte	0x91
 6865 0f1a 6C       		.sleb128 -20
 6866 0f1b 26       		.uleb128 0x26
 6867 0f1c FD070000 		.4byte	.LASF177
 6868 0f20 03       		.byte	0x3
 6869 0f21 29       		.byte	0x29
 6870 0f22 68000000 		.4byte	0x68
 6871 0f26 02       		.uleb128 0x2
 6872 0f27 91       		.byte	0x91
 6873 0f28 68       		.sleb128 -24
 6874 0f29 1F       		.uleb128 0x1f
 6875 0f2a 636E7400 		.ascii	"cnt\000"
 6876 0f2e 03       		.byte	0x3
 6877 0f2f 2A       		.byte	0x2a
 6878 0f30 68000000 		.4byte	0x68
 6879 0f34 04       		.uleb128 0x4
 6880 0f35 91       		.byte	0x91
 6881 0f36 C0D07E   		.sleb128 -22464
 6882 0f39 27       		.uleb128 0x27
 6883 0f3a F6000000 		.4byte	.LBB3
 6884 0f3e 52030000 		.4byte	.LBE3-.LBB3
 6885 0f42 1F       		.uleb128 0x1f
 6886 0f43 6900     		.ascii	"i\000"
 6887 0f45 03       		.byte	0x3
 6888 0f46 2E       		.byte	0x2e
 6889 0f47 68000000 		.4byte	0x68
 6890 0f4b 02       		.uleb128 0x2
 6891 0f4c 91       		.byte	0x91
 6892 0f4d 64       		.sleb128 -28
 6893 0f4e 27       		.uleb128 0x27
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 144


 6894 0f4f 0E010000 		.4byte	.LBB4
 6895 0f53 5A020000 		.4byte	.LBE4-.LBB4
 6896 0f57 1F       		.uleb128 0x1f
 6897 0f58 7000     		.ascii	"p\000"
 6898 0f5a 03       		.byte	0x3
 6899 0f5b 3B       		.byte	0x3b
 6900 0f5c BB090000 		.4byte	0x9bb
 6901 0f60 04       		.uleb128 0x4
 6902 0f61 91       		.byte	0x91
 6903 0f62 B8D07E   		.sleb128 -22472
 6904 0f65 00       		.byte	0
 6905 0f66 00       		.byte	0
 6906 0f67 00       		.byte	0
 6907 0f68 09       		.uleb128 0x9
 6908 0f69 BB090000 		.4byte	0x9bb
 6909 0f6d 7E0F0000 		.4byte	0xf7e
 6910 0f71 0A       		.uleb128 0xa
 6911 0f72 D4000000 		.4byte	0xd4
 6912 0f76 09       		.byte	0x9
 6913 0f77 0A       		.uleb128 0xa
 6914 0f78 D4000000 		.4byte	0xd4
 6915 0f7c 8B       		.byte	0x8b
 6916 0f7d 00       		.byte	0
 6917 0f7e 2A       		.uleb128 0x2a
 6918 0f7f B5000000 		.4byte	.LASF181
 6919 0f83 04       		.byte	0x4
 6920 0f84 66       		.byte	0x66
 6921 0f85 00000000 		.4byte	.LFB81
 6922 0f89 30000000 		.4byte	.LFE81-.LFB81
 6923 0f8d 01       		.uleb128 0x1
 6924 0f8e 9C       		.byte	0x9c
 6925 0f8f 2B       		.uleb128 0x2b
 6926 0f90 8C0A0000 		.4byte	.LASF182
 6927 0f94 04       		.byte	0x4
 6928 0f95 6D       		.byte	0x6d
 6929 0f96 00000000 		.4byte	.LFB82
 6930 0f9a 18000000 		.4byte	.LFE82-.LFB82
 6931 0f9e 01       		.uleb128 0x1
 6932 0f9f 9C       		.byte	0x9c
 6933 0fa0 2C       		.uleb128 0x2c
 6934 0fa1 63070000 		.4byte	.LASF183
 6935 0fa5 04       		.byte	0x4
 6936 0fa6 82       		.byte	0x82
 6937 0fa7 68000000 		.4byte	0x68
 6938 0fab 00000000 		.4byte	.LFB83
 6939 0faf 68020000 		.4byte	.LFE83-.LFB83
 6940 0fb3 01       		.uleb128 0x1
 6941 0fb4 9C       		.byte	0x9c
 6942 0fb5 0B100000 		.4byte	0x100b
 6943 0fb9 26       		.uleb128 0x26
 6944 0fba 46080000 		.4byte	.LASF184
 6945 0fbe 04       		.byte	0x4
 6946 0fbf B6       		.byte	0xb6
 6947 0fc0 68000000 		.4byte	0x68
 6948 0fc4 02       		.uleb128 0x2
 6949 0fc5 91       		.byte	0x91
 6950 0fc6 6C       		.sleb128 -20
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 145


 6951 0fc7 26       		.uleb128 0x26
 6952 0fc8 E4030000 		.4byte	.LASF185
 6953 0fcc 04       		.byte	0x4
 6954 0fcd B7       		.byte	0xb7
 6955 0fce 68000000 		.4byte	0x68
 6956 0fd2 02       		.uleb128 0x2
 6957 0fd3 91       		.byte	0x91
 6958 0fd4 68       		.sleb128 -24
 6959 0fd5 26       		.uleb128 0x26
 6960 0fd6 4A0A0000 		.4byte	.LASF186
 6961 0fda 04       		.byte	0x4
 6962 0fdb B9       		.byte	0xb9
 6963 0fdc 68000000 		.4byte	0x68
 6964 0fe0 02       		.uleb128 0x2
 6965 0fe1 91       		.byte	0x91
 6966 0fe2 74       		.sleb128 -12
 6967 0fe3 26       		.uleb128 0x26
 6968 0fe4 42070000 		.4byte	.LASF187
 6969 0fe8 04       		.byte	0x4
 6970 0fe9 BA       		.byte	0xba
 6971 0fea 0B100000 		.4byte	0x100b
 6972 0fee 03       		.uleb128 0x3
 6973 0fef 91       		.byte	0x91
 6974 0ff0 F07E     		.sleb128 -144
 6975 0ff2 27       		.uleb128 0x27
 6976 0ff3 B6010000 		.4byte	.LBB5
 6977 0ff7 2E000000 		.4byte	.LBE5-.LBB5
 6978 0ffb 26       		.uleb128 0x26
 6979 0ffc 25070000 		.4byte	.LASF188
 6980 1000 04       		.byte	0x4
 6981 1001 D2       		.byte	0xd2
 6982 1002 68000000 		.4byte	0x68
 6983 1006 02       		.uleb128 0x2
 6984 1007 91       		.byte	0x91
 6985 1008 70       		.sleb128 -16
 6986 1009 00       		.byte	0
 6987 100a 00       		.byte	0
 6988 100b 09       		.uleb128 0x9
 6989 100c 68000000 		.4byte	0x68
 6990 1010 1B100000 		.4byte	0x101b
 6991 1014 0A       		.uleb128 0xa
 6992 1015 D4000000 		.4byte	0xd4
 6993 1019 1D       		.byte	0x1d
 6994 101a 00       		.byte	0
 6995 101b 28       		.uleb128 0x28
 6996 101c CD060000 		.4byte	.LASF189
 6997 1020 04       		.byte	0x4
 6998 1021 FE       		.byte	0xfe
 6999 1022 A7080000 		.4byte	0x8a7
 7000 1026 00000000 		.4byte	.LFB84
 7001 102a 24000000 		.4byte	.LFE84-.LFB84
 7002 102e 01       		.uleb128 0x1
 7003 102f 9C       		.byte	0x9c
 7004 1030 41100000 		.4byte	0x1041
 7005 1034 21       		.uleb128 0x21
 7006 1035 6E00     		.ascii	"n\000"
 7007 1037 04       		.byte	0x4
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 146


 7008 1038 FE       		.byte	0xfe
 7009 1039 9B080000 		.4byte	0x89b
 7010 103d 02       		.uleb128 0x2
 7011 103e 91       		.byte	0x91
 7012 103f 76       		.sleb128 -10
 7013 1040 00       		.byte	0
 7014 1041 2D       		.uleb128 0x2d
 7015 1042 FA020000 		.4byte	.LASF191
 7016 1046 04       		.byte	0x4
 7017 1047 0201     		.2byte	0x102
 7018 1049 00000000 		.4byte	.LFB85
 7019 104d E4000000 		.4byte	.LFE85-.LFB85
 7020 1051 01       		.uleb128 0x1
 7021 1052 9C       		.byte	0x9c
 7022 1053 8D100000 		.4byte	0x108d
 7023 1057 2E       		.uleb128 0x2e
 7024 1058 6900     		.ascii	"i\000"
 7025 105a 04       		.byte	0x4
 7026 105b 0401     		.2byte	0x104
 7027 105d 68000000 		.4byte	0x68
 7028 1061 02       		.uleb128 0x2
 7029 1062 91       		.byte	0x91
 7030 1063 74       		.sleb128 -12
 7031 1064 2F       		.uleb128 0x2f
 7032 1065 4E030000 		.4byte	.LASF192
 7033 1069 04       		.byte	0x4
 7034 106a 0C01     		.2byte	0x10c
 7035 106c 8D100000 		.4byte	0x108d
 7036 1070 02       		.uleb128 0x2
 7037 1071 91       		.byte	0x91
 7038 1072 50       		.sleb128 -48
 7039 1073 27       		.uleb128 0x27
 7040 1074 0C000000 		.4byte	.LBB6
 7041 1078 26000000 		.4byte	.LBE6-.LBB6
 7042 107c 2F       		.uleb128 0x2f
 7043 107d 10000000 		.4byte	.LASF193
 7044 1081 04       		.byte	0x4
 7045 1082 0601     		.2byte	0x106
 7046 1084 68000000 		.4byte	0x68
 7047 1088 02       		.uleb128 0x2
 7048 1089 91       		.byte	0x91
 7049 108a 70       		.sleb128 -16
 7050 108b 00       		.byte	0
 7051 108c 00       		.byte	0
 7052 108d 09       		.uleb128 0x9
 7053 108e 5B050000 		.4byte	0x55b
 7054 1092 9D100000 		.4byte	0x109d
 7055 1096 0A       		.uleb128 0xa
 7056 1097 D4000000 		.4byte	0xd4
 7057 109b 1F       		.byte	0x1f
 7058 109c 00       		.byte	0
 7059 109d 30       		.uleb128 0x30
 7060 109e C0050000 		.4byte	.LASF194
 7061 10a2 04       		.byte	0x4
 7062 10a3 2301     		.2byte	0x123
 7063 10a5 00000000 		.4byte	.LFB86
 7064 10a9 B8010000 		.4byte	.LFE86-.LFB86
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 147


 7065 10ad 01       		.uleb128 0x1
 7066 10ae 9C       		.byte	0x9c
 7067 10af FF100000 		.4byte	0x10ff
 7068 10b3 31       		.uleb128 0x31
 7069 10b4 BF0B0000 		.4byte	.LASF195
 7070 10b8 04       		.byte	0x4
 7071 10b9 2301     		.2byte	0x123
 7072 10bb 68000000 		.4byte	0x68
 7073 10bf 02       		.uleb128 0x2
 7074 10c0 91       		.byte	0x91
 7075 10c1 6C       		.sleb128 -20
 7076 10c2 31       		.uleb128 0x31
 7077 10c3 46080000 		.4byte	.LASF184
 7078 10c7 04       		.byte	0x4
 7079 10c8 2301     		.2byte	0x123
 7080 10ca 380A0000 		.4byte	0xa38
 7081 10ce 02       		.uleb128 0x2
 7082 10cf 91       		.byte	0x91
 7083 10d0 68       		.sleb128 -24
 7084 10d1 31       		.uleb128 0x31
 7085 10d2 E4030000 		.4byte	.LASF185
 7086 10d6 04       		.byte	0x4
 7087 10d7 2301     		.2byte	0x123
 7088 10d9 380A0000 		.4byte	0xa38
 7089 10dd 02       		.uleb128 0x2
 7090 10de 91       		.byte	0x91
 7091 10df 64       		.sleb128 -28
 7092 10e0 2F       		.uleb128 0x2f
 7093 10e1 00000000 		.4byte	.LASF196
 7094 10e5 04       		.byte	0x4
 7095 10e6 2A01     		.2byte	0x12a
 7096 10e8 B3080000 		.4byte	0x8b3
 7097 10ec 02       		.uleb128 0x2
 7098 10ed 91       		.byte	0x91
 7099 10ee 74       		.sleb128 -12
 7100 10ef 2F       		.uleb128 0x2f
 7101 10f0 CB040000 		.4byte	.LASF197
 7102 10f4 04       		.byte	0x4
 7103 10f5 2B01     		.2byte	0x12b
 7104 10f7 68000000 		.4byte	0x68
 7105 10fb 02       		.uleb128 0x2
 7106 10fc 91       		.byte	0x91
 7107 10fd 70       		.sleb128 -16
 7108 10fe 00       		.byte	0
 7109 10ff 2D       		.uleb128 0x2d
 7110 1100 8F020000 		.4byte	.LASF198
 7111 1104 04       		.byte	0x4
 7112 1105 7A01     		.2byte	0x17a
 7113 1107 00000000 		.4byte	.LFB87
 7114 110b 78000000 		.4byte	.LFE87-.LFB87
 7115 110f 01       		.uleb128 0x1
 7116 1110 9C       		.byte	0x9c
 7117 1111 34110000 		.4byte	0x1134
 7118 1115 2F       		.uleb128 0x2f
 7119 1116 20010000 		.4byte	.LASF199
 7120 111a 04       		.byte	0x4
 7121 111b 7C01     		.2byte	0x17c
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 148


 7122 111d 68000000 		.4byte	0x68
 7123 1121 02       		.uleb128 0x2
 7124 1122 91       		.byte	0x91
 7125 1123 74       		.sleb128 -12
 7126 1124 2F       		.uleb128 0x2f
 7127 1125 FD030000 		.4byte	.LASF200
 7128 1129 04       		.byte	0x4
 7129 112a 7D01     		.2byte	0x17d
 7130 112c 68000000 		.4byte	0x68
 7131 1130 02       		.uleb128 0x2
 7132 1131 91       		.byte	0x91
 7133 1132 70       		.sleb128 -16
 7134 1133 00       		.byte	0
 7135 1134 2D       		.uleb128 0x2d
 7136 1135 8A040000 		.4byte	.LASF201
 7137 1139 04       		.byte	0x4
 7138 113a 8C01     		.2byte	0x18c
 7139 113c 00000000 		.4byte	.LFB88
 7140 1140 78000000 		.4byte	.LFE88-.LFB88
 7141 1144 01       		.uleb128 0x1
 7142 1145 9C       		.byte	0x9c
 7143 1146 69110000 		.4byte	0x1169
 7144 114a 2F       		.uleb128 0x2f
 7145 114b 20010000 		.4byte	.LASF199
 7146 114f 04       		.byte	0x4
 7147 1150 8E01     		.2byte	0x18e
 7148 1152 68000000 		.4byte	0x68
 7149 1156 02       		.uleb128 0x2
 7150 1157 91       		.byte	0x91
 7151 1158 74       		.sleb128 -12
 7152 1159 2F       		.uleb128 0x2f
 7153 115a FD030000 		.4byte	.LASF200
 7154 115e 04       		.byte	0x4
 7155 115f 8F01     		.2byte	0x18f
 7156 1161 68000000 		.4byte	0x68
 7157 1165 02       		.uleb128 0x2
 7158 1166 91       		.byte	0x91
 7159 1167 70       		.sleb128 -16
 7160 1168 00       		.byte	0
 7161 1169 30       		.uleb128 0x30
 7162 116a C8070000 		.4byte	.LASF202
 7163 116e 04       		.byte	0x4
 7164 116f 9F01     		.2byte	0x19f
 7165 1171 00000000 		.4byte	.LFB89
 7166 1175 B0000000 		.4byte	.LFE89-.LFB89
 7167 1179 01       		.uleb128 0x1
 7168 117a 9C       		.byte	0x9c
 7169 117b AD110000 		.4byte	0x11ad
 7170 117f 31       		.uleb128 0x31
 7171 1180 64000000 		.4byte	.LASF203
 7172 1184 04       		.byte	0x4
 7173 1185 9F01     		.2byte	0x19f
 7174 1187 68000000 		.4byte	0x68
 7175 118b 02       		.uleb128 0x2
 7176 118c 91       		.byte	0x91
 7177 118d 6C       		.sleb128 -20
 7178 118e 2F       		.uleb128 0x2f
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 149


 7179 118f AF050000 		.4byte	.LASF204
 7180 1193 04       		.byte	0x4
 7181 1194 A001     		.2byte	0x1a0
 7182 1196 B3080000 		.4byte	0x8b3
 7183 119a 02       		.uleb128 0x2
 7184 119b 91       		.byte	0x91
 7185 119c 70       		.sleb128 -16
 7186 119d 2F       		.uleb128 0x2f
 7187 119e 53010000 		.4byte	.LASF205
 7188 11a2 04       		.byte	0x4
 7189 11a3 A101     		.2byte	0x1a1
 7190 11a5 B3080000 		.4byte	0x8b3
 7191 11a9 02       		.uleb128 0x2
 7192 11aa 91       		.byte	0x91
 7193 11ab 74       		.sleb128 -12
 7194 11ac 00       		.byte	0
 7195 11ad 2D       		.uleb128 0x2d
 7196 11ae 96010000 		.4byte	.LASF206
 7197 11b2 04       		.byte	0x4
 7198 11b3 BC01     		.2byte	0x1bc
 7199 11b5 00000000 		.4byte	.LFB90
 7200 11b9 C0000000 		.4byte	.LFE90-.LFB90
 7201 11bd 01       		.uleb128 0x1
 7202 11be 9C       		.byte	0x9c
 7203 11bf E2110000 		.4byte	0x11e2
 7204 11c3 2F       		.uleb128 0x2f
 7205 11c4 20010000 		.4byte	.LASF199
 7206 11c8 04       		.byte	0x4
 7207 11c9 BE01     		.2byte	0x1be
 7208 11cb 68000000 		.4byte	0x68
 7209 11cf 02       		.uleb128 0x2
 7210 11d0 91       		.byte	0x91
 7211 11d1 74       		.sleb128 -12
 7212 11d2 2F       		.uleb128 0x2f
 7213 11d3 FD030000 		.4byte	.LASF200
 7214 11d7 04       		.byte	0x4
 7215 11d8 BF01     		.2byte	0x1bf
 7216 11da 68000000 		.4byte	0x68
 7217 11de 02       		.uleb128 0x2
 7218 11df 91       		.byte	0x91
 7219 11e0 70       		.sleb128 -16
 7220 11e1 00       		.byte	0
 7221 11e2 2D       		.uleb128 0x2d
 7222 11e3 92060000 		.4byte	.LASF207
 7223 11e7 04       		.byte	0x4
 7224 11e8 E001     		.2byte	0x1e0
 7225 11ea 00000000 		.4byte	.LFB91
 7226 11ee E8000000 		.4byte	.LFE91-.LFB91
 7227 11f2 01       		.uleb128 0x1
 7228 11f3 9C       		.byte	0x9c
 7229 11f4 17120000 		.4byte	0x1217
 7230 11f8 2F       		.uleb128 0x2f
 7231 11f9 20010000 		.4byte	.LASF199
 7232 11fd 04       		.byte	0x4
 7233 11fe E201     		.2byte	0x1e2
 7234 1200 68000000 		.4byte	0x68
 7235 1204 02       		.uleb128 0x2
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 150


 7236 1205 91       		.byte	0x91
 7237 1206 74       		.sleb128 -12
 7238 1207 2F       		.uleb128 0x2f
 7239 1208 FD030000 		.4byte	.LASF200
 7240 120c 04       		.byte	0x4
 7241 120d E301     		.2byte	0x1e3
 7242 120f 68000000 		.4byte	0x68
 7243 1213 02       		.uleb128 0x2
 7244 1214 91       		.byte	0x91
 7245 1215 70       		.sleb128 -16
 7246 1216 00       		.byte	0
 7247 1217 30       		.uleb128 0x30
 7248 1218 9F050000 		.4byte	.LASF208
 7249 121c 04       		.byte	0x4
 7250 121d 1302     		.2byte	0x213
 7251 121f 00000000 		.4byte	.LFB92
 7252 1223 9C010000 		.4byte	.LFE92-.LFB92
 7253 1227 01       		.uleb128 0x1
 7254 1228 9C       		.byte	0x9c
 7255 1229 79120000 		.4byte	0x1279
 7256 122d 31       		.uleb128 0x31
 7257 122e E4030000 		.4byte	.LASF185
 7258 1232 04       		.byte	0x4
 7259 1233 1302     		.2byte	0x213
 7260 1235 380A0000 		.4byte	0xa38
 7261 1239 02       		.uleb128 0x2
 7262 123a 91       		.byte	0x91
 7263 123b 64       		.sleb128 -28
 7264 123c 31       		.uleb128 0x31
 7265 123d 46080000 		.4byte	.LASF184
 7266 1241 04       		.byte	0x4
 7267 1242 1302     		.2byte	0x213
 7268 1244 380A0000 		.4byte	0xa38
 7269 1248 02       		.uleb128 0x2
 7270 1249 91       		.byte	0x91
 7271 124a 60       		.sleb128 -32
 7272 124b 2F       		.uleb128 0x2f
 7273 124c 00000000 		.4byte	.LASF196
 7274 1250 04       		.byte	0x4
 7275 1251 1802     		.2byte	0x218
 7276 1253 B3080000 		.4byte	0x8b3
 7277 1257 02       		.uleb128 0x2
 7278 1258 91       		.byte	0x91
 7279 1259 74       		.sleb128 -12
 7280 125a 2F       		.uleb128 0x2f
 7281 125b 20010000 		.4byte	.LASF199
 7282 125f 04       		.byte	0x4
 7283 1260 3702     		.2byte	0x237
 7284 1262 68000000 		.4byte	0x68
 7285 1266 02       		.uleb128 0x2
 7286 1267 91       		.byte	0x91
 7287 1268 70       		.sleb128 -16
 7288 1269 2F       		.uleb128 0x2f
 7289 126a FD030000 		.4byte	.LASF200
 7290 126e 04       		.byte	0x4
 7291 126f 3802     		.2byte	0x238
 7292 1271 68000000 		.4byte	0x68
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 151


 7293 1275 02       		.uleb128 0x2
 7294 1276 91       		.byte	0x91
 7295 1277 6C       		.sleb128 -20
 7296 1278 00       		.byte	0
 7297 1279 30       		.uleb128 0x30
 7298 127a 58020000 		.4byte	.LASF209
 7299 127e 04       		.byte	0x4
 7300 127f 5F02     		.2byte	0x25f
 7301 1281 00000000 		.4byte	.LFB93
 7302 1285 2A000000 		.4byte	.LFE93-.LFB93
 7303 1289 01       		.uleb128 0x1
 7304 128a 9C       		.byte	0x9c
 7305 128b AE120000 		.4byte	0x12ae
 7306 128f 31       		.uleb128 0x31
 7307 1290 6C000000 		.4byte	.LASF210
 7308 1294 04       		.byte	0x4
 7309 1295 5F02     		.2byte	0x25f
 7310 1297 68000000 		.4byte	0x68
 7311 129b 02       		.uleb128 0x2
 7312 129c 91       		.byte	0x91
 7313 129d 6C       		.sleb128 -20
 7314 129e 2F       		.uleb128 0x2f
 7315 129f A6060000 		.4byte	.LASF211
 7316 12a3 04       		.byte	0x4
 7317 12a4 6002     		.2byte	0x260
 7318 12a6 68000000 		.4byte	0x68
 7319 12aa 02       		.uleb128 0x2
 7320 12ab 91       		.byte	0x91
 7321 12ac 74       		.sleb128 -12
 7322 12ad 00       		.byte	0
 7323 12ae 30       		.uleb128 0x30
 7324 12af F8000000 		.4byte	.LASF212
 7325 12b3 04       		.byte	0x4
 7326 12b4 6402     		.2byte	0x264
 7327 12b6 00000000 		.4byte	.LFB94
 7328 12ba 2A000000 		.4byte	.LFE94-.LFB94
 7329 12be 01       		.uleb128 0x1
 7330 12bf 9C       		.byte	0x9c
 7331 12c0 E3120000 		.4byte	0x12e3
 7332 12c4 31       		.uleb128 0x31
 7333 12c5 6C000000 		.4byte	.LASF210
 7334 12c9 04       		.byte	0x4
 7335 12ca 6402     		.2byte	0x264
 7336 12cc 68000000 		.4byte	0x68
 7337 12d0 02       		.uleb128 0x2
 7338 12d1 91       		.byte	0x91
 7339 12d2 6C       		.sleb128 -20
 7340 12d3 2F       		.uleb128 0x2f
 7341 12d4 A6060000 		.4byte	.LASF211
 7342 12d8 04       		.byte	0x4
 7343 12d9 6502     		.2byte	0x265
 7344 12db 68000000 		.4byte	0x68
 7345 12df 02       		.uleb128 0x2
 7346 12e0 91       		.byte	0x91
 7347 12e1 74       		.sleb128 -12
 7348 12e2 00       		.byte	0
 7349 12e3 32       		.uleb128 0x32
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 152


 7350 12e4 BC020000 		.4byte	.LASF213
 7351 12e8 04       		.byte	0x4
 7352 12e9 6902     		.2byte	0x269
 7353 12eb 00000000 		.4byte	.LFB95
 7354 12ef 16000000 		.4byte	.LFE95-.LFB95
 7355 12f3 01       		.uleb128 0x1
 7356 12f4 9C       		.byte	0x9c
 7357 12f5 32       		.uleb128 0x32
 7358 12f6 05050000 		.4byte	.LASF214
 7359 12fa 04       		.byte	0x4
 7360 12fb 6E02     		.2byte	0x26e
 7361 12fd 00000000 		.4byte	.LFB96
 7362 1301 12000000 		.4byte	.LFE96-.LFB96
 7363 1305 01       		.uleb128 0x1
 7364 1306 9C       		.byte	0x9c
 7365 1307 33       		.uleb128 0x33
 7366 1308 4B090000 		.4byte	.LASF215
 7367 130c 04       		.byte	0x4
 7368 130d 7302     		.2byte	0x273
 7369 130f B3080000 		.4byte	0x8b3
 7370 1313 00000000 		.4byte	.LFB97
 7371 1317 CC000000 		.4byte	.LFE97-.LFB97
 7372 131b 01       		.uleb128 0x1
 7373 131c 9C       		.byte	0x9c
 7374 131d 5E130000 		.4byte	0x135e
 7375 1321 31       		.uleb128 0x31
 7376 1322 20010000 		.4byte	.LASF199
 7377 1326 04       		.byte	0x4
 7378 1327 7302     		.2byte	0x273
 7379 1329 68000000 		.4byte	0x68
 7380 132d 02       		.uleb128 0x2
 7381 132e 91       		.byte	0x91
 7382 132f 6C       		.sleb128 -20
 7383 1330 31       		.uleb128 0x31
 7384 1331 FD030000 		.4byte	.LASF200
 7385 1335 04       		.byte	0x4
 7386 1336 7302     		.2byte	0x273
 7387 1338 68000000 		.4byte	0x68
 7388 133c 02       		.uleb128 0x2
 7389 133d 91       		.byte	0x91
 7390 133e 68       		.sleb128 -24
 7391 133f 2F       		.uleb128 0x2f
 7392 1340 010A0000 		.4byte	.LASF216
 7393 1344 04       		.byte	0x4
 7394 1345 7402     		.2byte	0x274
 7395 1347 B3080000 		.4byte	0x8b3
 7396 134b 02       		.uleb128 0x2
 7397 134c 91       		.byte	0x91
 7398 134d 74       		.sleb128 -12
 7399 134e 2F       		.uleb128 0x2f
 7400 134f EE040000 		.4byte	.LASF217
 7401 1353 04       		.byte	0x4
 7402 1354 7502     		.2byte	0x275
 7403 1356 B3080000 		.4byte	0x8b3
 7404 135a 02       		.uleb128 0x2
 7405 135b 91       		.byte	0x91
 7406 135c 70       		.sleb128 -16
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 153


 7407 135d 00       		.byte	0
 7408 135e 30       		.uleb128 0x30
 7409 135f 18000000 		.4byte	.LASF218
 7410 1363 04       		.byte	0x4
 7411 1364 7B02     		.2byte	0x27b
 7412 1366 00000000 		.4byte	.LFB98
 7413 136a 52000000 		.4byte	.LFE98-.LFB98
 7414 136e 01       		.uleb128 0x1
 7415 136f 9C       		.byte	0x9c
 7416 1370 CF130000 		.4byte	0x13cf
 7417 1374 31       		.uleb128 0x31
 7418 1375 A0090000 		.4byte	.LASF219
 7419 1379 04       		.byte	0x4
 7420 137a 7B02     		.2byte	0x27b
 7421 137c 68000000 		.4byte	0x68
 7422 1380 02       		.uleb128 0x2
 7423 1381 91       		.byte	0x91
 7424 1382 6C       		.sleb128 -20
 7425 1383 31       		.uleb128 0x31
 7426 1384 19040000 		.4byte	.LASF220
 7427 1388 04       		.byte	0x4
 7428 1389 7B02     		.2byte	0x27b
 7429 138b 68000000 		.4byte	0x68
 7430 138f 02       		.uleb128 0x2
 7431 1390 91       		.byte	0x91
 7432 1391 68       		.sleb128 -24
 7433 1392 31       		.uleb128 0x31
 7434 1393 7E030000 		.4byte	.LASF221
 7435 1397 04       		.byte	0x4
 7436 1398 7B02     		.2byte	0x27b
 7437 139a 68000000 		.4byte	0x68
 7438 139e 02       		.uleb128 0x2
 7439 139f 91       		.byte	0x91
 7440 13a0 64       		.sleb128 -28
 7441 13a1 31       		.uleb128 0x31
 7442 13a2 F40A0000 		.4byte	.LASF222
 7443 13a6 04       		.byte	0x4
 7444 13a7 7B02     		.2byte	0x27b
 7445 13a9 68000000 		.4byte	0x68
 7446 13ad 02       		.uleb128 0x2
 7447 13ae 91       		.byte	0x91
 7448 13af 60       		.sleb128 -32
 7449 13b0 2F       		.uleb128 0x2f
 7450 13b1 74090000 		.4byte	.LASF223
 7451 13b5 04       		.byte	0x4
 7452 13b6 8002     		.2byte	0x280
 7453 13b8 68000000 		.4byte	0x68
 7454 13bc 02       		.uleb128 0x2
 7455 13bd 91       		.byte	0x91
 7456 13be 74       		.sleb128 -12
 7457 13bf 2F       		.uleb128 0x2f
 7458 13c0 48010000 		.4byte	.LASF224
 7459 13c4 04       		.byte	0x4
 7460 13c5 8802     		.2byte	0x288
 7461 13c7 68000000 		.4byte	0x68
 7462 13cb 02       		.uleb128 0x2
 7463 13cc 91       		.byte	0x91
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 154


 7464 13cd 70       		.sleb128 -16
 7465 13ce 00       		.byte	0
 7466 13cf 30       		.uleb128 0x30
 7467 13d0 24020000 		.4byte	.LASF225
 7468 13d4 04       		.byte	0x4
 7469 13d5 9102     		.2byte	0x291
 7470 13d7 00000000 		.4byte	.LFB99
 7471 13db 2C000000 		.4byte	.LFE99-.LFB99
 7472 13df 01       		.uleb128 0x1
 7473 13e0 9C       		.byte	0x9c
 7474 13e1 04140000 		.4byte	0x1404
 7475 13e5 31       		.uleb128 0x31
 7476 13e6 DD090000 		.4byte	.LASF226
 7477 13ea 04       		.byte	0x4
 7478 13eb 9102     		.2byte	0x291
 7479 13ed 68000000 		.4byte	0x68
 7480 13f1 02       		.uleb128 0x2
 7481 13f2 91       		.byte	0x91
 7482 13f3 74       		.sleb128 -12
 7483 13f4 31       		.uleb128 0x31
 7484 13f5 F6040000 		.4byte	.LASF227
 7485 13f9 04       		.byte	0x4
 7486 13fa 9102     		.2byte	0x291
 7487 13fc 68000000 		.4byte	0x68
 7488 1400 02       		.uleb128 0x2
 7489 1401 91       		.byte	0x91
 7490 1402 70       		.sleb128 -16
 7491 1403 00       		.byte	0
 7492 1404 34       		.uleb128 0x34
 7493 1405 EA010000 		.4byte	.LASF228
 7494 1409 04       		.byte	0x4
 7495 140a 9702     		.2byte	0x297
 7496 140c 00000000 		.4byte	.LFB100
 7497 1410 14000000 		.4byte	.LFE100-.LFB100
 7498 1414 01       		.uleb128 0x1
 7499 1415 9C       		.byte	0x9c
 7500 1416 28140000 		.4byte	0x1428
 7501 141a 35       		.uleb128 0x35
 7502 141b 7300     		.ascii	"s\000"
 7503 141d 04       		.byte	0x4
 7504 141e 9702     		.2byte	0x297
 7505 1420 55050000 		.4byte	0x555
 7506 1424 02       		.uleb128 0x2
 7507 1425 91       		.byte	0x91
 7508 1426 74       		.sleb128 -12
 7509 1427 00       		.byte	0
 7510 1428 30       		.uleb128 0x30
 7511 1429 500B0000 		.4byte	.LASF229
 7512 142d 04       		.byte	0x4
 7513 142e A502     		.2byte	0x2a5
 7514 1430 00000000 		.4byte	.LFB101
 7515 1434 CC000000 		.4byte	.LFE101-.LFB101
 7516 1438 01       		.uleb128 0x1
 7517 1439 9C       		.byte	0x9c
 7518 143a 6A140000 		.4byte	0x146a
 7519 143e 31       		.uleb128 0x31
 7520 143f 30070000 		.4byte	.LASF158
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 155


 7521 1443 04       		.byte	0x4
 7522 1444 A502     		.2byte	0x2a5
 7523 1446 380A0000 		.4byte	0xa38
 7524 144a 02       		.uleb128 0x2
 7525 144b 91       		.byte	0x91
 7526 144c 4C       		.sleb128 -52
 7527 144d 2E       		.uleb128 0x2e
 7528 144e 6900     		.ascii	"i\000"
 7529 1450 04       		.byte	0x4
 7530 1451 A802     		.2byte	0x2a8
 7531 1453 68000000 		.4byte	0x68
 7532 1457 02       		.uleb128 0x2
 7533 1458 91       		.byte	0x91
 7534 1459 74       		.sleb128 -12
 7535 145a 2F       		.uleb128 0x2f
 7536 145b 4E030000 		.4byte	.LASF192
 7537 145f 04       		.byte	0x4
 7538 1460 A902     		.2byte	0x2a9
 7539 1462 8D100000 		.4byte	0x108d
 7540 1466 02       		.uleb128 0x2
 7541 1467 91       		.byte	0x91
 7542 1468 54       		.sleb128 -44
 7543 1469 00       		.byte	0
 7544 146a 30       		.uleb128 0x30
 7545 146b 32000000 		.4byte	.LASF230
 7546 146f 04       		.byte	0x4
 7547 1470 C302     		.2byte	0x2c3
 7548 1472 00000000 		.4byte	.LFB102
 7549 1476 6C000000 		.4byte	.LFE102-.LFB102
 7550 147a 01       		.uleb128 0x1
 7551 147b 9C       		.byte	0x9c
 7552 147c 9F140000 		.4byte	0x149f
 7553 1480 31       		.uleb128 0x31
 7554 1481 B0060000 		.4byte	.LASF231
 7555 1485 04       		.byte	0x4
 7556 1486 C302     		.2byte	0x2c3
 7557 1488 68000000 		.4byte	0x68
 7558 148c 02       		.uleb128 0x2
 7559 148d 91       		.byte	0x91
 7560 148e 54       		.sleb128 -44
 7561 148f 2F       		.uleb128 0x2f
 7562 1490 4E030000 		.4byte	.LASF192
 7563 1494 04       		.byte	0x4
 7564 1495 C402     		.2byte	0x2c4
 7565 1497 8D100000 		.4byte	0x108d
 7566 149b 02       		.uleb128 0x2
 7567 149c 91       		.byte	0x91
 7568 149d 58       		.sleb128 -40
 7569 149e 00       		.byte	0
 7570 149f 36       		.uleb128 0x36
 7571 14a0 3F020000 		.4byte	.LASF232
 7572 14a4 09       		.byte	0x9
 7573 14a5 FA02     		.2byte	0x2fa
 7574 14a7 1D040000 		.4byte	0x41d
 7575 14ab 36       		.uleb128 0x36
 7576 14ac E0070000 		.4byte	.LASF233
 7577 14b0 0E       		.byte	0xe
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 156


 7578 14b1 9606     		.2byte	0x696
 7579 14b3 B7140000 		.4byte	0x14b7
 7580 14b7 37       		.uleb128 0x37
 7581 14b8 6C080000 		.4byte	0x86c
 7582 14bc 38       		.uleb128 0x38
 7583 14bd 747300   		.ascii	"ts\000"
 7584 14c0 0C       		.byte	0xc
 7585 14c1 10       		.byte	0x10
 7586 14c2 77080000 		.4byte	0x877
 7587 14c6 05       		.uleb128 0x5
 7588 14c7 03       		.byte	0x3
 7589 14c8 00000000 		.4byte	ts
 7590 14cc 39       		.uleb128 0x39
 7591 14cd 6E0A0000 		.4byte	.LASF234
 7592 14d1 0C       		.byte	0xc
 7593 14d2 11       		.byte	0x11
 7594 14d3 83080000 		.4byte	0x883
 7595 14d7 05       		.uleb128 0x5
 7596 14d8 03       		.byte	0x3
 7597 14d9 00000000 		.4byte	ts_enc
 7598 14dd 39       		.uleb128 0x39
 7599 14de 04080000 		.4byte	.LASF235
 7600 14e2 0C       		.byte	0xc
 7601 14e3 12       		.byte	0x12
 7602 14e4 83080000 		.4byte	0x883
 7603 14e8 05       		.uleb128 0x5
 7604 14e9 03       		.byte	0x3
 7605 14ea 00000000 		.4byte	ts_update
 7606 14ee 39       		.uleb128 0x39
 7607 14ef A0030000 		.4byte	.LASF236
 7608 14f3 0C       		.byte	0xc
 7609 14f4 13       		.byte	0x13
 7610 14f5 83080000 		.4byte	0x883
 7611 14f9 05       		.uleb128 0x5
 7612 14fa 03       		.byte	0x3
 7613 14fb 00000000 		.4byte	ts_speed
 7614 14ff 39       		.uleb128 0x39
 7615 1500 1F040000 		.4byte	.LASF237
 7616 1504 0C       		.byte	0xc
 7617 1505 14       		.byte	0x14
 7618 1506 83080000 		.4byte	0x883
 7619 150a 05       		.uleb128 0x5
 7620 150b 03       		.byte	0x3
 7621 150c 00000000 		.4byte	ts_display
 7622 1510 39       		.uleb128 0x39
 7623 1511 53030000 		.4byte	.LASF238
 7624 1515 0C       		.byte	0xc
 7625 1516 16       		.byte	0x16
 7626 1517 77080000 		.4byte	0x877
 7627 151b 05       		.uleb128 0x5
 7628 151c 03       		.byte	0x3
 7629 151d 00000000 		.4byte	flag_ts_enc
 7630 1521 39       		.uleb128 0x39
 7631 1522 3F030000 		.4byte	.LASF239
 7632 1526 0C       		.byte	0xc
 7633 1527 17       		.byte	0x17
 7634 1528 77080000 		.4byte	0x877
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 157


 7635 152c 05       		.uleb128 0x5
 7636 152d 03       		.byte	0x3
 7637 152e 00000000 		.4byte	flag_ts_update
 7638 1532 39       		.uleb128 0x39
 7639 1533 6F070000 		.4byte	.LASF240
 7640 1537 0C       		.byte	0xc
 7641 1538 18       		.byte	0x18
 7642 1539 77080000 		.4byte	0x877
 7643 153d 05       		.uleb128 0x5
 7644 153e 03       		.byte	0x3
 7645 153f 00000000 		.4byte	flag_ts_speed
 7646 1543 39       		.uleb128 0x39
 7647 1544 750A0000 		.4byte	.LASF241
 7648 1548 0C       		.byte	0xc
 7649 1549 19       		.byte	0x19
 7650 154a 77080000 		.4byte	0x877
 7651 154e 05       		.uleb128 0x5
 7652 154f 03       		.byte	0x3
 7653 1550 00000000 		.4byte	flag_ts_display
 7654 1554 39       		.uleb128 0x39
 7655 1555 9D070000 		.4byte	.LASF242
 7656 1559 0C       		.byte	0xc
 7657 155a 1C       		.byte	0x1c
 7658 155b 77080000 		.4byte	0x877
 7659 155f 05       		.uleb128 0x5
 7660 1560 03       		.byte	0x3
 7661 1561 00000000 		.4byte	flag_rx
 7662 1565 39       		.uleb128 0x39
 7663 1566 D5020000 		.4byte	.LASF243
 7664 156a 0C       		.byte	0xc
 7665 156b 1D       		.byte	0x1d
 7666 156c 77080000 		.4byte	0x877
 7667 1570 05       		.uleb128 0x5
 7668 1571 03       		.byte	0x3
 7669 1572 00000000 		.4byte	flag_packet
 7670 1576 39       		.uleb128 0x39
 7671 1577 7F090000 		.4byte	.LASF244
 7672 157b 0C       		.byte	0xc
 7673 157c 1E       		.byte	0x1e
 7674 157d 77080000 		.4byte	0x877
 7675 1581 05       		.uleb128 0x5
 7676 1582 03       		.byte	0x3
 7677 1583 00000000 		.4byte	flag_KB_string
 7678 1587 39       		.uleb128 0x39
 7679 1588 7D070000 		.4byte	.LASF245
 7680 158c 0C       		.byte	0xc
 7681 158d 20       		.byte	0x20
 7682 158e 77080000 		.4byte	0x877
 7683 1592 05       		.uleb128 0x5
 7684 1593 03       		.byte	0x3
 7685 1594 00000000 		.4byte	dataready_flag
 7686 1598 39       		.uleb128 0x39
 7687 1599 A4010000 		.4byte	.LASF246
 7688 159d 0C       		.byte	0xc
 7689 159e 22       		.byte	0x22
 7690 159f 77080000 		.4byte	0x877
 7691 15a3 05       		.uleb128 0x5
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 158


 7692 15a4 03       		.byte	0x3
 7693 15a5 00000000 		.4byte	flag_rf_transmission_active
 7694 15a9 09       		.uleb128 0x9
 7695 15aa 5B050000 		.4byte	0x55b
 7696 15ae B9150000 		.4byte	0x15b9
 7697 15b2 0A       		.uleb128 0xa
 7698 15b3 D4000000 		.4byte	0xd4
 7699 15b7 3F       		.byte	0x3f
 7700 15b8 00       		.byte	0
 7701 15b9 39       		.uleb128 0x39
 7702 15ba 7C050000 		.4byte	.LASF247
 7703 15be 0C       		.byte	0xc
 7704 15bf 25       		.byte	0x25
 7705 15c0 A9150000 		.4byte	0x15a9
 7706 15c4 05       		.uleb128 0x5
 7707 15c5 03       		.byte	0x3
 7708 15c6 00000000 		.4byte	displaystring
 7709 15ca 39       		.uleb128 0x39
 7710 15cb 170A0000 		.4byte	.LASF248
 7711 15cf 0C       		.byte	0xc
 7712 15d0 26       		.byte	0x26
 7713 15d1 A9150000 		.4byte	0x15a9
 7714 15d5 05       		.uleb128 0x5
 7715 15d6 03       		.byte	0x3
 7716 15d7 00000000 		.4byte	line
 7717 15db 39       		.uleb128 0x39
 7718 15dc D7090000 		.4byte	.LASF249
 7719 15e0 0C       		.byte	0xc
 7720 15e1 26       		.byte	0x26
 7721 15e2 A9150000 		.4byte	0x15a9
 7722 15e6 05       		.uleb128 0x5
 7723 15e7 03       		.byte	0x3
 7724 15e8 00000000 		.4byte	entry
 7725 15ec 09       		.uleb128 0x9
 7726 15ed 77080000 		.4byte	0x877
 7727 15f1 FC150000 		.4byte	0x15fc
 7728 15f5 0A       		.uleb128 0xa
 7729 15f6 D4000000 		.4byte	0xd4
 7730 15fa 3F       		.byte	0x3f
 7731 15fb 00       		.byte	0
 7732 15fc 39       		.uleb128 0x39
 7733 15fd 54040000 		.4byte	.LASF250
 7734 1601 0C       		.byte	0xc
 7735 1602 27       		.byte	0x27
 7736 1603 EC150000 		.4byte	0x15ec
 7737 1607 05       		.uleb128 0x5
 7738 1608 03       		.byte	0x3
 7739 1609 00000000 		.4byte	usbBuffer
 7740 160d 39       		.uleb128 0x39
 7741 160e 770B0000 		.4byte	.LASF251
 7742 1612 0C       		.byte	0xc
 7743 1613 3C       		.byte	0x3c
 7744 1614 C1080000 		.4byte	0x8c1
 7745 1618 05       		.uleb128 0x5
 7746 1619 03       		.byte	0x3
 7747 161a 00000000 		.4byte	system_state
 7748 161e 09       		.uleb128 0x9
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 159


 7749 161f 68000000 		.4byte	0x68
 7750 1623 34160000 		.4byte	0x1634
 7751 1627 0A       		.uleb128 0xa
 7752 1628 D4000000 		.4byte	0xd4
 7753 162c 0E       		.byte	0xe
 7754 162d 0A       		.uleb128 0xa
 7755 162e D4000000 		.4byte	0xd4
 7756 1632 12       		.byte	0x12
 7757 1633 00       		.byte	0
 7758 1634 38       		.uleb128 0x38
 7759 1635 6D617000 		.ascii	"map\000"
 7760 1639 0F       		.byte	0xf
 7761 163a 01       		.byte	0x1
 7762 163b 1E160000 		.4byte	0x161e
 7763 163f 05       		.uleb128 0x5
 7764 1640 03       		.byte	0x3
 7765 1641 00000000 		.4byte	map
 7766 1645 09       		.uleb128 0x9
 7767 1646 68000000 		.4byte	0x68
 7768 164a 5B160000 		.4byte	0x165b
 7769 164e 0A       		.uleb128 0xa
 7770 164f D4000000 		.4byte	0xd4
 7771 1653 05       		.byte	0x5
 7772 1654 0A       		.uleb128 0xa
 7773 1655 D4000000 		.4byte	0xd4
 7774 1659 01       		.byte	0x1
 7775 165a 00       		.byte	0
 7776 165b 39       		.uleb128 0x39
 7777 165c C1000000 		.4byte	.LASF252
 7778 1660 0F       		.byte	0xf
 7779 1661 13       		.byte	0x13
 7780 1662 45160000 		.4byte	0x1645
 7781 1666 05       		.uleb128 0x5
 7782 1667 03       		.byte	0x3
 7783 1668 00000000 		.4byte	food_list
 7784 166c 39       		.uleb128 0x39
 7785 166d C2040000 		.4byte	.LASF253
 7786 1671 04       		.byte	0x4
 7787 1672 5B       		.byte	0x5b
 7788 1673 7D160000 		.4byte	0x167d
 7789 1677 05       		.uleb128 0x5
 7790 1678 03       		.byte	0x3
 7791 1679 00000000 		.4byte	adc_flag
 7792 167d 37       		.uleb128 0x37
 7793 167e 68000000 		.4byte	0x68
 7794 1682 09       		.uleb128 0x9
 7795 1683 8F080000 		.4byte	0x88f
 7796 1687 92160000 		.4byte	0x1692
 7797 168b 0A       		.uleb128 0xa
 7798 168c D4000000 		.4byte	0xd4
 7799 1690 05       		.byte	0x5
 7800 1691 00       		.byte	0
 7801 1692 39       		.uleb128 0x39
 7802 1693 6D020000 		.4byte	.LASF254
 7803 1697 04       		.byte	0x4
 7804 1698 5C       		.byte	0x5c
 7805 1699 82160000 		.4byte	0x1682
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 160


 7806 169d 05       		.uleb128 0x5
 7807 169e 03       		.byte	0x3
 7808 169f 00000000 		.4byte	sensor_readings
 7809 16a3 09       		.uleb128 0x9
 7810 16a4 68000000 		.4byte	0x68
 7811 16a8 B3160000 		.4byte	0x16b3
 7812 16ac 0A       		.uleb128 0xa
 7813 16ad D4000000 		.4byte	0xd4
 7814 16b1 05       		.byte	0x5
 7815 16b2 00       		.byte	0
 7816 16b3 39       		.uleb128 0x39
 7817 16b4 68030000 		.4byte	.LASF255
 7818 16b8 04       		.byte	0x4
 7819 16b9 5D       		.byte	0x5d
 7820 16ba A3160000 		.4byte	0x16a3
 7821 16be 05       		.uleb128 0x5
 7822 16bf 03       		.byte	0x3
 7823 16c0 00000000 		.4byte	adc_readings
 7824 16c4 39       		.uleb128 0x39
 7825 16c5 8A000000 		.4byte	.LASF256
 7826 16c9 04       		.byte	0x4
 7827 16ca 5E       		.byte	0x5e
 7828 16cb 68000000 		.4byte	0x68
 7829 16cf 05       		.uleb128 0x5
 7830 16d0 03       		.byte	0x3
 7831 16d1 00000000 		.4byte	sample_count
 7832 16d5 39       		.uleb128 0x39
 7833 16d6 3A0A0000 		.4byte	.LASF257
 7834 16da 04       		.byte	0x4
 7835 16db 60       		.byte	0x60
 7836 16dc 7D160000 		.4byte	0x167d
 7837 16e0 05       		.uleb128 0x5
 7838 16e1 03       		.byte	0x3
 7839 16e2 00000000 		.4byte	timer_flag
 7840 16e6 39       		.uleb128 0x39
 7841 16e7 B8070000 		.4byte	.LASF258
 7842 16eb 04       		.byte	0x4
 7843 16ec 61       		.byte	0x61
 7844 16ed 7D160000 		.4byte	0x167d
 7845 16f1 05       		.uleb128 0x5
 7846 16f2 03       		.byte	0x3
 7847 16f3 00000000 		.4byte	countM1
 7848 16f7 39       		.uleb128 0x39
 7849 16f8 C0070000 		.4byte	.LASF259
 7850 16fc 04       		.byte	0x4
 7851 16fd 62       		.byte	0x62
 7852 16fe 7D160000 		.4byte	0x167d
 7853 1702 05       		.uleb128 0x5
 7854 1703 03       		.byte	0x3
 7855 1704 00000000 		.4byte	countM2
 7856 1708 39       		.uleb128 0x39
 7857 1709 20010000 		.4byte	.LASF199
 7858 170d 04       		.byte	0x4
 7859 170e 63       		.byte	0x63
 7860 170f 68000000 		.4byte	0x68
 7861 1713 05       		.uleb128 0x5
 7862 1714 03       		.byte	0x3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 161


 7863 1715 00000000 		.4byte	prevCountM1
 7864 1719 39       		.uleb128 0x39
 7865 171a FD030000 		.4byte	.LASF200
 7866 171e 04       		.byte	0x4
 7867 171f 64       		.byte	0x64
 7868 1720 68000000 		.4byte	0x68
 7869 1724 05       		.uleb128 0x5
 7870 1725 03       		.byte	0x3
 7871 1726 00000000 		.4byte	prevCountM2
 7872 172a 00       		.byte	0
 7873              		.section	.debug_abbrev,"",%progbits
 7874              	.Ldebug_abbrev0:
 7875 0000 01       		.uleb128 0x1
 7876 0001 11       		.uleb128 0x11
 7877 0002 01       		.byte	0x1
 7878 0003 25       		.uleb128 0x25
 7879 0004 0E       		.uleb128 0xe
 7880 0005 13       		.uleb128 0x13
 7881 0006 0B       		.uleb128 0xb
 7882 0007 03       		.uleb128 0x3
 7883 0008 0E       		.uleb128 0xe
 7884 0009 1B       		.uleb128 0x1b
 7885 000a 0E       		.uleb128 0xe
 7886 000b 55       		.uleb128 0x55
 7887 000c 17       		.uleb128 0x17
 7888 000d 11       		.uleb128 0x11
 7889 000e 01       		.uleb128 0x1
 7890 000f 10       		.uleb128 0x10
 7891 0010 17       		.uleb128 0x17
 7892 0011 00       		.byte	0
 7893 0012 00       		.byte	0
 7894 0013 02       		.uleb128 0x2
 7895 0014 24       		.uleb128 0x24
 7896 0015 00       		.byte	0
 7897 0016 0B       		.uleb128 0xb
 7898 0017 0B       		.uleb128 0xb
 7899 0018 3E       		.uleb128 0x3e
 7900 0019 0B       		.uleb128 0xb
 7901 001a 03       		.uleb128 0x3
 7902 001b 0E       		.uleb128 0xe
 7903 001c 00       		.byte	0
 7904 001d 00       		.byte	0
 7905 001e 03       		.uleb128 0x3
 7906 001f 16       		.uleb128 0x16
 7907 0020 00       		.byte	0
 7908 0021 03       		.uleb128 0x3
 7909 0022 0E       		.uleb128 0xe
 7910 0023 3A       		.uleb128 0x3a
 7911 0024 0B       		.uleb128 0xb
 7912 0025 3B       		.uleb128 0x3b
 7913 0026 0B       		.uleb128 0xb
 7914 0027 49       		.uleb128 0x49
 7915 0028 13       		.uleb128 0x13
 7916 0029 00       		.byte	0
 7917 002a 00       		.byte	0
 7918 002b 04       		.uleb128 0x4
 7919 002c 24       		.uleb128 0x24
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 162


 7920 002d 00       		.byte	0
 7921 002e 0B       		.uleb128 0xb
 7922 002f 0B       		.uleb128 0xb
 7923 0030 3E       		.uleb128 0x3e
 7924 0031 0B       		.uleb128 0xb
 7925 0032 03       		.uleb128 0x3
 7926 0033 08       		.uleb128 0x8
 7927 0034 00       		.byte	0
 7928 0035 00       		.byte	0
 7929 0036 05       		.uleb128 0x5
 7930 0037 0F       		.uleb128 0xf
 7931 0038 00       		.byte	0
 7932 0039 0B       		.uleb128 0xb
 7933 003a 0B       		.uleb128 0xb
 7934 003b 00       		.byte	0
 7935 003c 00       		.byte	0
 7936 003d 06       		.uleb128 0x6
 7937 003e 16       		.uleb128 0x16
 7938 003f 00       		.byte	0
 7939 0040 03       		.uleb128 0x3
 7940 0041 0E       		.uleb128 0xe
 7941 0042 3A       		.uleb128 0x3a
 7942 0043 0B       		.uleb128 0xb
 7943 0044 3B       		.uleb128 0x3b
 7944 0045 05       		.uleb128 0x5
 7945 0046 49       		.uleb128 0x49
 7946 0047 13       		.uleb128 0x13
 7947 0048 00       		.byte	0
 7948 0049 00       		.byte	0
 7949 004a 07       		.uleb128 0x7
 7950 004b 17       		.uleb128 0x17
 7951 004c 01       		.byte	0x1
 7952 004d 0B       		.uleb128 0xb
 7953 004e 0B       		.uleb128 0xb
 7954 004f 3A       		.uleb128 0x3a
 7955 0050 0B       		.uleb128 0xb
 7956 0051 3B       		.uleb128 0x3b
 7957 0052 0B       		.uleb128 0xb
 7958 0053 01       		.uleb128 0x1
 7959 0054 13       		.uleb128 0x13
 7960 0055 00       		.byte	0
 7961 0056 00       		.byte	0
 7962 0057 08       		.uleb128 0x8
 7963 0058 0D       		.uleb128 0xd
 7964 0059 00       		.byte	0
 7965 005a 03       		.uleb128 0x3
 7966 005b 0E       		.uleb128 0xe
 7967 005c 3A       		.uleb128 0x3a
 7968 005d 0B       		.uleb128 0xb
 7969 005e 3B       		.uleb128 0x3b
 7970 005f 0B       		.uleb128 0xb
 7971 0060 49       		.uleb128 0x49
 7972 0061 13       		.uleb128 0x13
 7973 0062 00       		.byte	0
 7974 0063 00       		.byte	0
 7975 0064 09       		.uleb128 0x9
 7976 0065 01       		.uleb128 0x1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 163


 7977 0066 01       		.byte	0x1
 7978 0067 49       		.uleb128 0x49
 7979 0068 13       		.uleb128 0x13
 7980 0069 01       		.uleb128 0x1
 7981 006a 13       		.uleb128 0x13
 7982 006b 00       		.byte	0
 7983 006c 00       		.byte	0
 7984 006d 0A       		.uleb128 0xa
 7985 006e 21       		.uleb128 0x21
 7986 006f 00       		.byte	0
 7987 0070 49       		.uleb128 0x49
 7988 0071 13       		.uleb128 0x13
 7989 0072 2F       		.uleb128 0x2f
 7990 0073 0B       		.uleb128 0xb
 7991 0074 00       		.byte	0
 7992 0075 00       		.byte	0
 7993 0076 0B       		.uleb128 0xb
 7994 0077 13       		.uleb128 0x13
 7995 0078 01       		.byte	0x1
 7996 0079 0B       		.uleb128 0xb
 7997 007a 0B       		.uleb128 0xb
 7998 007b 3A       		.uleb128 0x3a
 7999 007c 0B       		.uleb128 0xb
 8000 007d 3B       		.uleb128 0x3b
 8001 007e 0B       		.uleb128 0xb
 8002 007f 01       		.uleb128 0x1
 8003 0080 13       		.uleb128 0x13
 8004 0081 00       		.byte	0
 8005 0082 00       		.byte	0
 8006 0083 0C       		.uleb128 0xc
 8007 0084 0D       		.uleb128 0xd
 8008 0085 00       		.byte	0
 8009 0086 03       		.uleb128 0x3
 8010 0087 0E       		.uleb128 0xe
 8011 0088 3A       		.uleb128 0x3a
 8012 0089 0B       		.uleb128 0xb
 8013 008a 3B       		.uleb128 0x3b
 8014 008b 0B       		.uleb128 0xb
 8015 008c 49       		.uleb128 0x49
 8016 008d 13       		.uleb128 0x13
 8017 008e 38       		.uleb128 0x38
 8018 008f 0B       		.uleb128 0xb
 8019 0090 00       		.byte	0
 8020 0091 00       		.byte	0
 8021 0092 0D       		.uleb128 0xd
 8022 0093 13       		.uleb128 0x13
 8023 0094 01       		.byte	0x1
 8024 0095 03       		.uleb128 0x3
 8025 0096 0E       		.uleb128 0xe
 8026 0097 0B       		.uleb128 0xb
 8027 0098 0B       		.uleb128 0xb
 8028 0099 3A       		.uleb128 0x3a
 8029 009a 0B       		.uleb128 0xb
 8030 009b 3B       		.uleb128 0x3b
 8031 009c 0B       		.uleb128 0xb
 8032 009d 01       		.uleb128 0x1
 8033 009e 13       		.uleb128 0x13
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 164


 8034 009f 00       		.byte	0
 8035 00a0 00       		.byte	0
 8036 00a1 0E       		.uleb128 0xe
 8037 00a2 0D       		.uleb128 0xd
 8038 00a3 00       		.byte	0
 8039 00a4 03       		.uleb128 0x3
 8040 00a5 08       		.uleb128 0x8
 8041 00a6 3A       		.uleb128 0x3a
 8042 00a7 0B       		.uleb128 0xb
 8043 00a8 3B       		.uleb128 0x3b
 8044 00a9 0B       		.uleb128 0xb
 8045 00aa 49       		.uleb128 0x49
 8046 00ab 13       		.uleb128 0x13
 8047 00ac 38       		.uleb128 0x38
 8048 00ad 0B       		.uleb128 0xb
 8049 00ae 00       		.byte	0
 8050 00af 00       		.byte	0
 8051 00b0 0F       		.uleb128 0xf
 8052 00b1 0F       		.uleb128 0xf
 8053 00b2 00       		.byte	0
 8054 00b3 0B       		.uleb128 0xb
 8055 00b4 0B       		.uleb128 0xb
 8056 00b5 49       		.uleb128 0x49
 8057 00b6 13       		.uleb128 0x13
 8058 00b7 00       		.byte	0
 8059 00b8 00       		.byte	0
 8060 00b9 10       		.uleb128 0x10
 8061 00ba 13       		.uleb128 0x13
 8062 00bb 01       		.byte	0x1
 8063 00bc 03       		.uleb128 0x3
 8064 00bd 0E       		.uleb128 0xe
 8065 00be 0B       		.uleb128 0xb
 8066 00bf 05       		.uleb128 0x5
 8067 00c0 3A       		.uleb128 0x3a
 8068 00c1 0B       		.uleb128 0xb
 8069 00c2 3B       		.uleb128 0x3b
 8070 00c3 0B       		.uleb128 0xb
 8071 00c4 01       		.uleb128 0x1
 8072 00c5 13       		.uleb128 0x13
 8073 00c6 00       		.byte	0
 8074 00c7 00       		.byte	0
 8075 00c8 11       		.uleb128 0x11
 8076 00c9 0D       		.uleb128 0xd
 8077 00ca 00       		.byte	0
 8078 00cb 03       		.uleb128 0x3
 8079 00cc 0E       		.uleb128 0xe
 8080 00cd 3A       		.uleb128 0x3a
 8081 00ce 0B       		.uleb128 0xb
 8082 00cf 3B       		.uleb128 0x3b
 8083 00d0 0B       		.uleb128 0xb
 8084 00d1 49       		.uleb128 0x49
 8085 00d2 13       		.uleb128 0x13
 8086 00d3 38       		.uleb128 0x38
 8087 00d4 05       		.uleb128 0x5
 8088 00d5 00       		.byte	0
 8089 00d6 00       		.byte	0
 8090 00d7 12       		.uleb128 0x12
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 165


 8091 00d8 15       		.uleb128 0x15
 8092 00d9 00       		.byte	0
 8093 00da 27       		.uleb128 0x27
 8094 00db 19       		.uleb128 0x19
 8095 00dc 00       		.byte	0
 8096 00dd 00       		.byte	0
 8097 00de 13       		.uleb128 0x13
 8098 00df 15       		.uleb128 0x15
 8099 00e0 01       		.byte	0x1
 8100 00e1 27       		.uleb128 0x27
 8101 00e2 19       		.uleb128 0x19
 8102 00e3 49       		.uleb128 0x49
 8103 00e4 13       		.uleb128 0x13
 8104 00e5 01       		.uleb128 0x1
 8105 00e6 13       		.uleb128 0x13
 8106 00e7 00       		.byte	0
 8107 00e8 00       		.byte	0
 8108 00e9 14       		.uleb128 0x14
 8109 00ea 05       		.uleb128 0x5
 8110 00eb 00       		.byte	0
 8111 00ec 49       		.uleb128 0x49
 8112 00ed 13       		.uleb128 0x13
 8113 00ee 00       		.byte	0
 8114 00ef 00       		.byte	0
 8115 00f0 15       		.uleb128 0x15
 8116 00f1 13       		.uleb128 0x13
 8117 00f2 01       		.byte	0x1
 8118 00f3 03       		.uleb128 0x3
 8119 00f4 0E       		.uleb128 0xe
 8120 00f5 0B       		.uleb128 0xb
 8121 00f6 05       		.uleb128 0x5
 8122 00f7 3A       		.uleb128 0x3a
 8123 00f8 0B       		.uleb128 0xb
 8124 00f9 3B       		.uleb128 0x3b
 8125 00fa 05       		.uleb128 0x5
 8126 00fb 01       		.uleb128 0x1
 8127 00fc 13       		.uleb128 0x13
 8128 00fd 00       		.byte	0
 8129 00fe 00       		.byte	0
 8130 00ff 16       		.uleb128 0x16
 8131 0100 0D       		.uleb128 0xd
 8132 0101 00       		.byte	0
 8133 0102 03       		.uleb128 0x3
 8134 0103 0E       		.uleb128 0xe
 8135 0104 3A       		.uleb128 0x3a
 8136 0105 0B       		.uleb128 0xb
 8137 0106 3B       		.uleb128 0x3b
 8138 0107 05       		.uleb128 0x5
 8139 0108 49       		.uleb128 0x49
 8140 0109 13       		.uleb128 0x13
 8141 010a 38       		.uleb128 0x38
 8142 010b 0B       		.uleb128 0xb
 8143 010c 00       		.byte	0
 8144 010d 00       		.byte	0
 8145 010e 17       		.uleb128 0x17
 8146 010f 0D       		.uleb128 0xd
 8147 0110 00       		.byte	0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 166


 8148 0111 03       		.uleb128 0x3
 8149 0112 0E       		.uleb128 0xe
 8150 0113 3A       		.uleb128 0x3a
 8151 0114 0B       		.uleb128 0xb
 8152 0115 3B       		.uleb128 0x3b
 8153 0116 05       		.uleb128 0x5
 8154 0117 49       		.uleb128 0x49
 8155 0118 13       		.uleb128 0x13
 8156 0119 38       		.uleb128 0x38
 8157 011a 05       		.uleb128 0x5
 8158 011b 00       		.byte	0
 8159 011c 00       		.byte	0
 8160 011d 18       		.uleb128 0x18
 8161 011e 26       		.uleb128 0x26
 8162 011f 00       		.byte	0
 8163 0120 49       		.uleb128 0x49
 8164 0121 13       		.uleb128 0x13
 8165 0122 00       		.byte	0
 8166 0123 00       		.byte	0
 8167 0124 19       		.uleb128 0x19
 8168 0125 13       		.uleb128 0x13
 8169 0126 01       		.byte	0x1
 8170 0127 03       		.uleb128 0x3
 8171 0128 0E       		.uleb128 0xe
 8172 0129 0B       		.uleb128 0xb
 8173 012a 0B       		.uleb128 0xb
 8174 012b 3A       		.uleb128 0x3a
 8175 012c 0B       		.uleb128 0xb
 8176 012d 3B       		.uleb128 0x3b
 8177 012e 05       		.uleb128 0x5
 8178 012f 01       		.uleb128 0x1
 8179 0130 13       		.uleb128 0x13
 8180 0131 00       		.byte	0
 8181 0132 00       		.byte	0
 8182 0133 1A       		.uleb128 0x1a
 8183 0134 13       		.uleb128 0x13
 8184 0135 01       		.byte	0x1
 8185 0136 0B       		.uleb128 0xb
 8186 0137 0B       		.uleb128 0xb
 8187 0138 3A       		.uleb128 0x3a
 8188 0139 0B       		.uleb128 0xb
 8189 013a 3B       		.uleb128 0x3b
 8190 013b 05       		.uleb128 0x5
 8191 013c 01       		.uleb128 0x1
 8192 013d 13       		.uleb128 0x13
 8193 013e 00       		.byte	0
 8194 013f 00       		.byte	0
 8195 0140 1B       		.uleb128 0x1b
 8196 0141 17       		.uleb128 0x17
 8197 0142 01       		.byte	0x1
 8198 0143 0B       		.uleb128 0xb
 8199 0144 0B       		.uleb128 0xb
 8200 0145 3A       		.uleb128 0x3a
 8201 0146 0B       		.uleb128 0xb
 8202 0147 3B       		.uleb128 0x3b
 8203 0148 05       		.uleb128 0x5
 8204 0149 01       		.uleb128 0x1
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 167


 8205 014a 13       		.uleb128 0x13
 8206 014b 00       		.byte	0
 8207 014c 00       		.byte	0
 8208 014d 1C       		.uleb128 0x1c
 8209 014e 0D       		.uleb128 0xd
 8210 014f 00       		.byte	0
 8211 0150 03       		.uleb128 0x3
 8212 0151 0E       		.uleb128 0xe
 8213 0152 3A       		.uleb128 0x3a
 8214 0153 0B       		.uleb128 0xb
 8215 0154 3B       		.uleb128 0x3b
 8216 0155 05       		.uleb128 0x5
 8217 0156 49       		.uleb128 0x49
 8218 0157 13       		.uleb128 0x13
 8219 0158 00       		.byte	0
 8220 0159 00       		.byte	0
 8221 015a 1D       		.uleb128 0x1d
 8222 015b 15       		.uleb128 0x15
 8223 015c 01       		.byte	0x1
 8224 015d 27       		.uleb128 0x27
 8225 015e 19       		.uleb128 0x19
 8226 015f 01       		.uleb128 0x1
 8227 0160 13       		.uleb128 0x13
 8228 0161 00       		.byte	0
 8229 0162 00       		.byte	0
 8230 0163 1E       		.uleb128 0x1e
 8231 0164 2E       		.uleb128 0x2e
 8232 0165 01       		.byte	0x1
 8233 0166 3F       		.uleb128 0x3f
 8234 0167 19       		.uleb128 0x19
 8235 0168 03       		.uleb128 0x3
 8236 0169 0E       		.uleb128 0xe
 8237 016a 3A       		.uleb128 0x3a
 8238 016b 0B       		.uleb128 0xb
 8239 016c 3B       		.uleb128 0x3b
 8240 016d 0B       		.uleb128 0xb
 8241 016e 11       		.uleb128 0x11
 8242 016f 01       		.uleb128 0x1
 8243 0170 12       		.uleb128 0x12
 8244 0171 06       		.uleb128 0x6
 8245 0172 40       		.uleb128 0x40
 8246 0173 18       		.uleb128 0x18
 8247 0174 9642     		.uleb128 0x2116
 8248 0176 19       		.uleb128 0x19
 8249 0177 01       		.uleb128 0x1
 8250 0178 13       		.uleb128 0x13
 8251 0179 00       		.byte	0
 8252 017a 00       		.byte	0
 8253 017b 1F       		.uleb128 0x1f
 8254 017c 34       		.uleb128 0x34
 8255 017d 00       		.byte	0
 8256 017e 03       		.uleb128 0x3
 8257 017f 08       		.uleb128 0x8
 8258 0180 3A       		.uleb128 0x3a
 8259 0181 0B       		.uleb128 0xb
 8260 0182 3B       		.uleb128 0x3b
 8261 0183 0B       		.uleb128 0xb
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 168


 8262 0184 49       		.uleb128 0x49
 8263 0185 13       		.uleb128 0x13
 8264 0186 02       		.uleb128 0x2
 8265 0187 18       		.uleb128 0x18
 8266 0188 00       		.byte	0
 8267 0189 00       		.byte	0
 8268 018a 20       		.uleb128 0x20
 8269 018b 2E       		.uleb128 0x2e
 8270 018c 01       		.byte	0x1
 8271 018d 3F       		.uleb128 0x3f
 8272 018e 19       		.uleb128 0x19
 8273 018f 03       		.uleb128 0x3
 8274 0190 08       		.uleb128 0x8
 8275 0191 3A       		.uleb128 0x3a
 8276 0192 0B       		.uleb128 0xb
 8277 0193 3B       		.uleb128 0x3b
 8278 0194 0B       		.uleb128 0xb
 8279 0195 27       		.uleb128 0x27
 8280 0196 19       		.uleb128 0x19
 8281 0197 49       		.uleb128 0x49
 8282 0198 13       		.uleb128 0x13
 8283 0199 11       		.uleb128 0x11
 8284 019a 01       		.uleb128 0x1
 8285 019b 12       		.uleb128 0x12
 8286 019c 06       		.uleb128 0x6
 8287 019d 40       		.uleb128 0x40
 8288 019e 18       		.uleb128 0x18
 8289 019f 9742     		.uleb128 0x2117
 8290 01a1 19       		.uleb128 0x19
 8291 01a2 01       		.uleb128 0x1
 8292 01a3 13       		.uleb128 0x13
 8293 01a4 00       		.byte	0
 8294 01a5 00       		.byte	0
 8295 01a6 21       		.uleb128 0x21
 8296 01a7 05       		.uleb128 0x5
 8297 01a8 00       		.byte	0
 8298 01a9 03       		.uleb128 0x3
 8299 01aa 08       		.uleb128 0x8
 8300 01ab 3A       		.uleb128 0x3a
 8301 01ac 0B       		.uleb128 0xb
 8302 01ad 3B       		.uleb128 0x3b
 8303 01ae 0B       		.uleb128 0xb
 8304 01af 49       		.uleb128 0x49
 8305 01b0 13       		.uleb128 0x13
 8306 01b1 02       		.uleb128 0x2
 8307 01b2 18       		.uleb128 0x18
 8308 01b3 00       		.byte	0
 8309 01b4 00       		.byte	0
 8310 01b5 22       		.uleb128 0x22
 8311 01b6 05       		.uleb128 0x5
 8312 01b7 00       		.byte	0
 8313 01b8 03       		.uleb128 0x3
 8314 01b9 0E       		.uleb128 0xe
 8315 01ba 3A       		.uleb128 0x3a
 8316 01bb 0B       		.uleb128 0xb
 8317 01bc 3B       		.uleb128 0x3b
 8318 01bd 0B       		.uleb128 0xb
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 169


 8319 01be 49       		.uleb128 0x49
 8320 01bf 13       		.uleb128 0x13
 8321 01c0 02       		.uleb128 0x2
 8322 01c1 18       		.uleb128 0x18
 8323 01c2 00       		.byte	0
 8324 01c3 00       		.byte	0
 8325 01c4 23       		.uleb128 0x23
 8326 01c5 2E       		.uleb128 0x2e
 8327 01c6 01       		.byte	0x1
 8328 01c7 3F       		.uleb128 0x3f
 8329 01c8 19       		.uleb128 0x19
 8330 01c9 03       		.uleb128 0x3
 8331 01ca 0E       		.uleb128 0xe
 8332 01cb 3A       		.uleb128 0x3a
 8333 01cc 0B       		.uleb128 0xb
 8334 01cd 3B       		.uleb128 0x3b
 8335 01ce 0B       		.uleb128 0xb
 8336 01cf 27       		.uleb128 0x27
 8337 01d0 19       		.uleb128 0x19
 8338 01d1 11       		.uleb128 0x11
 8339 01d2 01       		.uleb128 0x1
 8340 01d3 12       		.uleb128 0x12
 8341 01d4 06       		.uleb128 0x6
 8342 01d5 40       		.uleb128 0x40
 8343 01d6 18       		.uleb128 0x18
 8344 01d7 9742     		.uleb128 0x2117
 8345 01d9 19       		.uleb128 0x19
 8346 01da 01       		.uleb128 0x1
 8347 01db 13       		.uleb128 0x13
 8348 01dc 00       		.byte	0
 8349 01dd 00       		.byte	0
 8350 01de 24       		.uleb128 0x24
 8351 01df 2E       		.uleb128 0x2e
 8352 01e0 01       		.byte	0x1
 8353 01e1 3F       		.uleb128 0x3f
 8354 01e2 19       		.uleb128 0x19
 8355 01e3 03       		.uleb128 0x3
 8356 01e4 0E       		.uleb128 0xe
 8357 01e5 3A       		.uleb128 0x3a
 8358 01e6 0B       		.uleb128 0xb
 8359 01e7 3B       		.uleb128 0x3b
 8360 01e8 0B       		.uleb128 0xb
 8361 01e9 27       		.uleb128 0x27
 8362 01ea 19       		.uleb128 0x19
 8363 01eb 49       		.uleb128 0x49
 8364 01ec 13       		.uleb128 0x13
 8365 01ed 11       		.uleb128 0x11
 8366 01ee 01       		.uleb128 0x1
 8367 01ef 12       		.uleb128 0x12
 8368 01f0 06       		.uleb128 0x6
 8369 01f1 40       		.uleb128 0x40
 8370 01f2 18       		.uleb128 0x18
 8371 01f3 9742     		.uleb128 0x2117
 8372 01f5 19       		.uleb128 0x19
 8373 01f6 01       		.uleb128 0x1
 8374 01f7 13       		.uleb128 0x13
 8375 01f8 00       		.byte	0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 170


 8376 01f9 00       		.byte	0
 8377 01fa 25       		.uleb128 0x25
 8378 01fb 2E       		.uleb128 0x2e
 8379 01fc 01       		.byte	0x1
 8380 01fd 3F       		.uleb128 0x3f
 8381 01fe 19       		.uleb128 0x19
 8382 01ff 03       		.uleb128 0x3
 8383 0200 0E       		.uleb128 0xe
 8384 0201 3A       		.uleb128 0x3a
 8385 0202 0B       		.uleb128 0xb
 8386 0203 3B       		.uleb128 0x3b
 8387 0204 0B       		.uleb128 0xb
 8388 0205 27       		.uleb128 0x27
 8389 0206 19       		.uleb128 0x19
 8390 0207 11       		.uleb128 0x11
 8391 0208 01       		.uleb128 0x1
 8392 0209 12       		.uleb128 0x12
 8393 020a 06       		.uleb128 0x6
 8394 020b 40       		.uleb128 0x40
 8395 020c 18       		.uleb128 0x18
 8396 020d 9642     		.uleb128 0x2116
 8397 020f 19       		.uleb128 0x19
 8398 0210 01       		.uleb128 0x1
 8399 0211 13       		.uleb128 0x13
 8400 0212 00       		.byte	0
 8401 0213 00       		.byte	0
 8402 0214 26       		.uleb128 0x26
 8403 0215 34       		.uleb128 0x34
 8404 0216 00       		.byte	0
 8405 0217 03       		.uleb128 0x3
 8406 0218 0E       		.uleb128 0xe
 8407 0219 3A       		.uleb128 0x3a
 8408 021a 0B       		.uleb128 0xb
 8409 021b 3B       		.uleb128 0x3b
 8410 021c 0B       		.uleb128 0xb
 8411 021d 49       		.uleb128 0x49
 8412 021e 13       		.uleb128 0x13
 8413 021f 02       		.uleb128 0x2
 8414 0220 18       		.uleb128 0x18
 8415 0221 00       		.byte	0
 8416 0222 00       		.byte	0
 8417 0223 27       		.uleb128 0x27
 8418 0224 0B       		.uleb128 0xb
 8419 0225 01       		.byte	0x1
 8420 0226 11       		.uleb128 0x11
 8421 0227 01       		.uleb128 0x1
 8422 0228 12       		.uleb128 0x12
 8423 0229 06       		.uleb128 0x6
 8424 022a 00       		.byte	0
 8425 022b 00       		.byte	0
 8426 022c 28       		.uleb128 0x28
 8427 022d 2E       		.uleb128 0x2e
 8428 022e 01       		.byte	0x1
 8429 022f 3F       		.uleb128 0x3f
 8430 0230 19       		.uleb128 0x19
 8431 0231 03       		.uleb128 0x3
 8432 0232 0E       		.uleb128 0xe
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 171


 8433 0233 3A       		.uleb128 0x3a
 8434 0234 0B       		.uleb128 0xb
 8435 0235 3B       		.uleb128 0x3b
 8436 0236 0B       		.uleb128 0xb
 8437 0237 27       		.uleb128 0x27
 8438 0238 19       		.uleb128 0x19
 8439 0239 49       		.uleb128 0x49
 8440 023a 13       		.uleb128 0x13
 8441 023b 11       		.uleb128 0x11
 8442 023c 01       		.uleb128 0x1
 8443 023d 12       		.uleb128 0x12
 8444 023e 06       		.uleb128 0x6
 8445 023f 40       		.uleb128 0x40
 8446 0240 18       		.uleb128 0x18
 8447 0241 9642     		.uleb128 0x2116
 8448 0243 19       		.uleb128 0x19
 8449 0244 01       		.uleb128 0x1
 8450 0245 13       		.uleb128 0x13
 8451 0246 00       		.byte	0
 8452 0247 00       		.byte	0
 8453 0248 29       		.uleb128 0x29
 8454 0249 2E       		.uleb128 0x2e
 8455 024a 01       		.byte	0x1
 8456 024b 3F       		.uleb128 0x3f
 8457 024c 19       		.uleb128 0x19
 8458 024d 03       		.uleb128 0x3
 8459 024e 08       		.uleb128 0x8
 8460 024f 3A       		.uleb128 0x3a
 8461 0250 0B       		.uleb128 0xb
 8462 0251 3B       		.uleb128 0x3b
 8463 0252 0B       		.uleb128 0xb
 8464 0253 27       		.uleb128 0x27
 8465 0254 19       		.uleb128 0x19
 8466 0255 11       		.uleb128 0x11
 8467 0256 01       		.uleb128 0x1
 8468 0257 12       		.uleb128 0x12
 8469 0258 06       		.uleb128 0x6
 8470 0259 40       		.uleb128 0x40
 8471 025a 18       		.uleb128 0x18
 8472 025b 9642     		.uleb128 0x2116
 8473 025d 19       		.uleb128 0x19
 8474 025e 01       		.uleb128 0x1
 8475 025f 13       		.uleb128 0x13
 8476 0260 00       		.byte	0
 8477 0261 00       		.byte	0
 8478 0262 2A       		.uleb128 0x2a
 8479 0263 2E       		.uleb128 0x2e
 8480 0264 00       		.byte	0
 8481 0265 3F       		.uleb128 0x3f
 8482 0266 19       		.uleb128 0x19
 8483 0267 03       		.uleb128 0x3
 8484 0268 0E       		.uleb128 0xe
 8485 0269 3A       		.uleb128 0x3a
 8486 026a 0B       		.uleb128 0xb
 8487 026b 3B       		.uleb128 0x3b
 8488 026c 0B       		.uleb128 0xb
 8489 026d 27       		.uleb128 0x27
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 172


 8490 026e 19       		.uleb128 0x19
 8491 026f 11       		.uleb128 0x11
 8492 0270 01       		.uleb128 0x1
 8493 0271 12       		.uleb128 0x12
 8494 0272 06       		.uleb128 0x6
 8495 0273 40       		.uleb128 0x40
 8496 0274 18       		.uleb128 0x18
 8497 0275 9642     		.uleb128 0x2116
 8498 0277 19       		.uleb128 0x19
 8499 0278 00       		.byte	0
 8500 0279 00       		.byte	0
 8501 027a 2B       		.uleb128 0x2b
 8502 027b 2E       		.uleb128 0x2e
 8503 027c 00       		.byte	0
 8504 027d 3F       		.uleb128 0x3f
 8505 027e 19       		.uleb128 0x19
 8506 027f 03       		.uleb128 0x3
 8507 0280 0E       		.uleb128 0xe
 8508 0281 3A       		.uleb128 0x3a
 8509 0282 0B       		.uleb128 0xb
 8510 0283 3B       		.uleb128 0x3b
 8511 0284 0B       		.uleb128 0xb
 8512 0285 27       		.uleb128 0x27
 8513 0286 19       		.uleb128 0x19
 8514 0287 11       		.uleb128 0x11
 8515 0288 01       		.uleb128 0x1
 8516 0289 12       		.uleb128 0x12
 8517 028a 06       		.uleb128 0x6
 8518 028b 40       		.uleb128 0x40
 8519 028c 18       		.uleb128 0x18
 8520 028d 9742     		.uleb128 0x2117
 8521 028f 19       		.uleb128 0x19
 8522 0290 00       		.byte	0
 8523 0291 00       		.byte	0
 8524 0292 2C       		.uleb128 0x2c
 8525 0293 2E       		.uleb128 0x2e
 8526 0294 01       		.byte	0x1
 8527 0295 3F       		.uleb128 0x3f
 8528 0296 19       		.uleb128 0x19
 8529 0297 03       		.uleb128 0x3
 8530 0298 0E       		.uleb128 0xe
 8531 0299 3A       		.uleb128 0x3a
 8532 029a 0B       		.uleb128 0xb
 8533 029b 3B       		.uleb128 0x3b
 8534 029c 0B       		.uleb128 0xb
 8535 029d 49       		.uleb128 0x49
 8536 029e 13       		.uleb128 0x13
 8537 029f 11       		.uleb128 0x11
 8538 02a0 01       		.uleb128 0x1
 8539 02a1 12       		.uleb128 0x12
 8540 02a2 06       		.uleb128 0x6
 8541 02a3 40       		.uleb128 0x40
 8542 02a4 18       		.uleb128 0x18
 8543 02a5 9642     		.uleb128 0x2116
 8544 02a7 19       		.uleb128 0x19
 8545 02a8 01       		.uleb128 0x1
 8546 02a9 13       		.uleb128 0x13
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 173


 8547 02aa 00       		.byte	0
 8548 02ab 00       		.byte	0
 8549 02ac 2D       		.uleb128 0x2d
 8550 02ad 2E       		.uleb128 0x2e
 8551 02ae 01       		.byte	0x1
 8552 02af 3F       		.uleb128 0x3f
 8553 02b0 19       		.uleb128 0x19
 8554 02b1 03       		.uleb128 0x3
 8555 02b2 0E       		.uleb128 0xe
 8556 02b3 3A       		.uleb128 0x3a
 8557 02b4 0B       		.uleb128 0xb
 8558 02b5 3B       		.uleb128 0x3b
 8559 02b6 05       		.uleb128 0x5
 8560 02b7 11       		.uleb128 0x11
 8561 02b8 01       		.uleb128 0x1
 8562 02b9 12       		.uleb128 0x12
 8563 02ba 06       		.uleb128 0x6
 8564 02bb 40       		.uleb128 0x40
 8565 02bc 18       		.uleb128 0x18
 8566 02bd 9642     		.uleb128 0x2116
 8567 02bf 19       		.uleb128 0x19
 8568 02c0 01       		.uleb128 0x1
 8569 02c1 13       		.uleb128 0x13
 8570 02c2 00       		.byte	0
 8571 02c3 00       		.byte	0
 8572 02c4 2E       		.uleb128 0x2e
 8573 02c5 34       		.uleb128 0x34
 8574 02c6 00       		.byte	0
 8575 02c7 03       		.uleb128 0x3
 8576 02c8 08       		.uleb128 0x8
 8577 02c9 3A       		.uleb128 0x3a
 8578 02ca 0B       		.uleb128 0xb
 8579 02cb 3B       		.uleb128 0x3b
 8580 02cc 05       		.uleb128 0x5
 8581 02cd 49       		.uleb128 0x49
 8582 02ce 13       		.uleb128 0x13
 8583 02cf 02       		.uleb128 0x2
 8584 02d0 18       		.uleb128 0x18
 8585 02d1 00       		.byte	0
 8586 02d2 00       		.byte	0
 8587 02d3 2F       		.uleb128 0x2f
 8588 02d4 34       		.uleb128 0x34
 8589 02d5 00       		.byte	0
 8590 02d6 03       		.uleb128 0x3
 8591 02d7 0E       		.uleb128 0xe
 8592 02d8 3A       		.uleb128 0x3a
 8593 02d9 0B       		.uleb128 0xb
 8594 02da 3B       		.uleb128 0x3b
 8595 02db 05       		.uleb128 0x5
 8596 02dc 49       		.uleb128 0x49
 8597 02dd 13       		.uleb128 0x13
 8598 02de 02       		.uleb128 0x2
 8599 02df 18       		.uleb128 0x18
 8600 02e0 00       		.byte	0
 8601 02e1 00       		.byte	0
 8602 02e2 30       		.uleb128 0x30
 8603 02e3 2E       		.uleb128 0x2e
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 174


 8604 02e4 01       		.byte	0x1
 8605 02e5 3F       		.uleb128 0x3f
 8606 02e6 19       		.uleb128 0x19
 8607 02e7 03       		.uleb128 0x3
 8608 02e8 0E       		.uleb128 0xe
 8609 02e9 3A       		.uleb128 0x3a
 8610 02ea 0B       		.uleb128 0xb
 8611 02eb 3B       		.uleb128 0x3b
 8612 02ec 05       		.uleb128 0x5
 8613 02ed 27       		.uleb128 0x27
 8614 02ee 19       		.uleb128 0x19
 8615 02ef 11       		.uleb128 0x11
 8616 02f0 01       		.uleb128 0x1
 8617 02f1 12       		.uleb128 0x12
 8618 02f2 06       		.uleb128 0x6
 8619 02f3 40       		.uleb128 0x40
 8620 02f4 18       		.uleb128 0x18
 8621 02f5 9642     		.uleb128 0x2116
 8622 02f7 19       		.uleb128 0x19
 8623 02f8 01       		.uleb128 0x1
 8624 02f9 13       		.uleb128 0x13
 8625 02fa 00       		.byte	0
 8626 02fb 00       		.byte	0
 8627 02fc 31       		.uleb128 0x31
 8628 02fd 05       		.uleb128 0x5
 8629 02fe 00       		.byte	0
 8630 02ff 03       		.uleb128 0x3
 8631 0300 0E       		.uleb128 0xe
 8632 0301 3A       		.uleb128 0x3a
 8633 0302 0B       		.uleb128 0xb
 8634 0303 3B       		.uleb128 0x3b
 8635 0304 05       		.uleb128 0x5
 8636 0305 49       		.uleb128 0x49
 8637 0306 13       		.uleb128 0x13
 8638 0307 02       		.uleb128 0x2
 8639 0308 18       		.uleb128 0x18
 8640 0309 00       		.byte	0
 8641 030a 00       		.byte	0
 8642 030b 32       		.uleb128 0x32
 8643 030c 2E       		.uleb128 0x2e
 8644 030d 00       		.byte	0
 8645 030e 3F       		.uleb128 0x3f
 8646 030f 19       		.uleb128 0x19
 8647 0310 03       		.uleb128 0x3
 8648 0311 0E       		.uleb128 0xe
 8649 0312 3A       		.uleb128 0x3a
 8650 0313 0B       		.uleb128 0xb
 8651 0314 3B       		.uleb128 0x3b
 8652 0315 05       		.uleb128 0x5
 8653 0316 11       		.uleb128 0x11
 8654 0317 01       		.uleb128 0x1
 8655 0318 12       		.uleb128 0x12
 8656 0319 06       		.uleb128 0x6
 8657 031a 40       		.uleb128 0x40
 8658 031b 18       		.uleb128 0x18
 8659 031c 9642     		.uleb128 0x2116
 8660 031e 19       		.uleb128 0x19
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 175


 8661 031f 00       		.byte	0
 8662 0320 00       		.byte	0
 8663 0321 33       		.uleb128 0x33
 8664 0322 2E       		.uleb128 0x2e
 8665 0323 01       		.byte	0x1
 8666 0324 3F       		.uleb128 0x3f
 8667 0325 19       		.uleb128 0x19
 8668 0326 03       		.uleb128 0x3
 8669 0327 0E       		.uleb128 0xe
 8670 0328 3A       		.uleb128 0x3a
 8671 0329 0B       		.uleb128 0xb
 8672 032a 3B       		.uleb128 0x3b
 8673 032b 05       		.uleb128 0x5
 8674 032c 27       		.uleb128 0x27
 8675 032d 19       		.uleb128 0x19
 8676 032e 49       		.uleb128 0x49
 8677 032f 13       		.uleb128 0x13
 8678 0330 11       		.uleb128 0x11
 8679 0331 01       		.uleb128 0x1
 8680 0332 12       		.uleb128 0x12
 8681 0333 06       		.uleb128 0x6
 8682 0334 40       		.uleb128 0x40
 8683 0335 18       		.uleb128 0x18
 8684 0336 9642     		.uleb128 0x2116
 8685 0338 19       		.uleb128 0x19
 8686 0339 01       		.uleb128 0x1
 8687 033a 13       		.uleb128 0x13
 8688 033b 00       		.byte	0
 8689 033c 00       		.byte	0
 8690 033d 34       		.uleb128 0x34
 8691 033e 2E       		.uleb128 0x2e
 8692 033f 01       		.byte	0x1
 8693 0340 3F       		.uleb128 0x3f
 8694 0341 19       		.uleb128 0x19
 8695 0342 03       		.uleb128 0x3
 8696 0343 0E       		.uleb128 0xe
 8697 0344 3A       		.uleb128 0x3a
 8698 0345 0B       		.uleb128 0xb
 8699 0346 3B       		.uleb128 0x3b
 8700 0347 05       		.uleb128 0x5
 8701 0348 27       		.uleb128 0x27
 8702 0349 19       		.uleb128 0x19
 8703 034a 11       		.uleb128 0x11
 8704 034b 01       		.uleb128 0x1
 8705 034c 12       		.uleb128 0x12
 8706 034d 06       		.uleb128 0x6
 8707 034e 40       		.uleb128 0x40
 8708 034f 18       		.uleb128 0x18
 8709 0350 9742     		.uleb128 0x2117
 8710 0352 19       		.uleb128 0x19
 8711 0353 01       		.uleb128 0x1
 8712 0354 13       		.uleb128 0x13
 8713 0355 00       		.byte	0
 8714 0356 00       		.byte	0
 8715 0357 35       		.uleb128 0x35
 8716 0358 05       		.uleb128 0x5
 8717 0359 00       		.byte	0
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 176


 8718 035a 03       		.uleb128 0x3
 8719 035b 08       		.uleb128 0x8
 8720 035c 3A       		.uleb128 0x3a
 8721 035d 0B       		.uleb128 0xb
 8722 035e 3B       		.uleb128 0x3b
 8723 035f 05       		.uleb128 0x5
 8724 0360 49       		.uleb128 0x49
 8725 0361 13       		.uleb128 0x13
 8726 0362 02       		.uleb128 0x2
 8727 0363 18       		.uleb128 0x18
 8728 0364 00       		.byte	0
 8729 0365 00       		.byte	0
 8730 0366 36       		.uleb128 0x36
 8731 0367 34       		.uleb128 0x34
 8732 0368 00       		.byte	0
 8733 0369 03       		.uleb128 0x3
 8734 036a 0E       		.uleb128 0xe
 8735 036b 3A       		.uleb128 0x3a
 8736 036c 0B       		.uleb128 0xb
 8737 036d 3B       		.uleb128 0x3b
 8738 036e 05       		.uleb128 0x5
 8739 036f 49       		.uleb128 0x49
 8740 0370 13       		.uleb128 0x13
 8741 0371 3F       		.uleb128 0x3f
 8742 0372 19       		.uleb128 0x19
 8743 0373 3C       		.uleb128 0x3c
 8744 0374 19       		.uleb128 0x19
 8745 0375 00       		.byte	0
 8746 0376 00       		.byte	0
 8747 0377 37       		.uleb128 0x37
 8748 0378 35       		.uleb128 0x35
 8749 0379 00       		.byte	0
 8750 037a 49       		.uleb128 0x49
 8751 037b 13       		.uleb128 0x13
 8752 037c 00       		.byte	0
 8753 037d 00       		.byte	0
 8754 037e 38       		.uleb128 0x38
 8755 037f 34       		.uleb128 0x34
 8756 0380 00       		.byte	0
 8757 0381 03       		.uleb128 0x3
 8758 0382 08       		.uleb128 0x8
 8759 0383 3A       		.uleb128 0x3a
 8760 0384 0B       		.uleb128 0xb
 8761 0385 3B       		.uleb128 0x3b
 8762 0386 0B       		.uleb128 0xb
 8763 0387 49       		.uleb128 0x49
 8764 0388 13       		.uleb128 0x13
 8765 0389 3F       		.uleb128 0x3f
 8766 038a 19       		.uleb128 0x19
 8767 038b 02       		.uleb128 0x2
 8768 038c 18       		.uleb128 0x18
 8769 038d 00       		.byte	0
 8770 038e 00       		.byte	0
 8771 038f 39       		.uleb128 0x39
 8772 0390 34       		.uleb128 0x34
 8773 0391 00       		.byte	0
 8774 0392 03       		.uleb128 0x3
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 177


 8775 0393 0E       		.uleb128 0xe
 8776 0394 3A       		.uleb128 0x3a
 8777 0395 0B       		.uleb128 0xb
 8778 0396 3B       		.uleb128 0x3b
 8779 0397 0B       		.uleb128 0xb
 8780 0398 49       		.uleb128 0x49
 8781 0399 13       		.uleb128 0x13
 8782 039a 3F       		.uleb128 0x3f
 8783 039b 19       		.uleb128 0x19
 8784 039c 02       		.uleb128 0x2
 8785 039d 18       		.uleb128 0x18
 8786 039e 00       		.byte	0
 8787 039f 00       		.byte	0
 8788 03a0 00       		.byte	0
 8789              		.section	.debug_aranges,"",%progbits
 8790 0000 54010000 		.4byte	0x154
 8791 0004 0200     		.2byte	0x2
 8792 0006 00000000 		.4byte	.Ldebug_info0
 8793 000a 04       		.byte	0x4
 8794 000b 00       		.byte	0
 8795 000c 0000     		.2byte	0
 8796 000e 0000     		.2byte	0
 8797 0010 00000000 		.4byte	.LFB63
 8798 0014 4C000000 		.4byte	.LFE63-.LFB63
 8799 0018 00000000 		.4byte	.LFB64
 8800 001c 4C000000 		.4byte	.LFE64-.LFB64
 8801 0020 00000000 		.4byte	.LFB65
 8802 0024 4E000000 		.4byte	.LFE65-.LFB65
 8803 0028 00000000 		.4byte	.LFB66
 8804 002c 62000000 		.4byte	.LFE66-.LFB66
 8805 0030 00000000 		.4byte	.LFB67
 8806 0034 14000000 		.4byte	.LFE67-.LFB67
 8807 0038 00000000 		.4byte	.LFB68
 8808 003c 54000000 		.4byte	.LFE68-.LFB68
 8809 0040 00000000 		.4byte	.LFB69
 8810 0044 50000000 		.4byte	.LFE69-.LFB69
 8811 0048 00000000 		.4byte	.LFB70
 8812 004c 56000000 		.4byte	.LFE70-.LFB70
 8813 0050 00000000 		.4byte	.LFB71
 8814 0054 74000000 		.4byte	.LFE71-.LFB71
 8815 0058 00000000 		.4byte	.LFB72
 8816 005c B0000000 		.4byte	.LFE72-.LFB72
 8817 0060 00000000 		.4byte	.LFB73
 8818 0064 20010000 		.4byte	.LFE73-.LFB73
 8819 0068 00000000 		.4byte	.LFB74
 8820 006c 9E000000 		.4byte	.LFE74-.LFB74
 8821 0070 00000000 		.4byte	.LFB75
 8822 0074 58000000 		.4byte	.LFE75-.LFB75
 8823 0078 00000000 		.4byte	.LFB76
 8824 007c 34000000 		.4byte	.LFE76-.LFB76
 8825 0080 00000000 		.4byte	.LFB77
 8826 0084 4C010000 		.4byte	.LFE77-.LFB77
 8827 0088 00000000 		.4byte	.LFB78
 8828 008c 80000000 		.4byte	.LFE78-.LFB78
 8829 0090 00000000 		.4byte	.LFB79
 8830 0094 6C000000 		.4byte	.LFE79-.LFB79
 8831 0098 00000000 		.4byte	.LFB80
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 178


 8832 009c 54040000 		.4byte	.LFE80-.LFB80
 8833 00a0 00000000 		.4byte	.LFB81
 8834 00a4 30000000 		.4byte	.LFE81-.LFB81
 8835 00a8 00000000 		.4byte	.LFB82
 8836 00ac 18000000 		.4byte	.LFE82-.LFB82
 8837 00b0 00000000 		.4byte	.LFB83
 8838 00b4 68020000 		.4byte	.LFE83-.LFB83
 8839 00b8 00000000 		.4byte	.LFB84
 8840 00bc 24000000 		.4byte	.LFE84-.LFB84
 8841 00c0 00000000 		.4byte	.LFB85
 8842 00c4 E4000000 		.4byte	.LFE85-.LFB85
 8843 00c8 00000000 		.4byte	.LFB86
 8844 00cc B8010000 		.4byte	.LFE86-.LFB86
 8845 00d0 00000000 		.4byte	.LFB87
 8846 00d4 78000000 		.4byte	.LFE87-.LFB87
 8847 00d8 00000000 		.4byte	.LFB88
 8848 00dc 78000000 		.4byte	.LFE88-.LFB88
 8849 00e0 00000000 		.4byte	.LFB89
 8850 00e4 B0000000 		.4byte	.LFE89-.LFB89
 8851 00e8 00000000 		.4byte	.LFB90
 8852 00ec C0000000 		.4byte	.LFE90-.LFB90
 8853 00f0 00000000 		.4byte	.LFB91
 8854 00f4 E8000000 		.4byte	.LFE91-.LFB91
 8855 00f8 00000000 		.4byte	.LFB92
 8856 00fc 9C010000 		.4byte	.LFE92-.LFB92
 8857 0100 00000000 		.4byte	.LFB93
 8858 0104 2A000000 		.4byte	.LFE93-.LFB93
 8859 0108 00000000 		.4byte	.LFB94
 8860 010c 2A000000 		.4byte	.LFE94-.LFB94
 8861 0110 00000000 		.4byte	.LFB95
 8862 0114 16000000 		.4byte	.LFE95-.LFB95
 8863 0118 00000000 		.4byte	.LFB96
 8864 011c 12000000 		.4byte	.LFE96-.LFB96
 8865 0120 00000000 		.4byte	.LFB97
 8866 0124 CC000000 		.4byte	.LFE97-.LFB97
 8867 0128 00000000 		.4byte	.LFB98
 8868 012c 52000000 		.4byte	.LFE98-.LFB98
 8869 0130 00000000 		.4byte	.LFB99
 8870 0134 2C000000 		.4byte	.LFE99-.LFB99
 8871 0138 00000000 		.4byte	.LFB100
 8872 013c 14000000 		.4byte	.LFE100-.LFB100
 8873 0140 00000000 		.4byte	.LFB101
 8874 0144 CC000000 		.4byte	.LFE101-.LFB101
 8875 0148 00000000 		.4byte	.LFB102
 8876 014c 6C000000 		.4byte	.LFE102-.LFB102
 8877 0150 00000000 		.4byte	0
 8878 0154 00000000 		.4byte	0
 8879              		.section	.debug_ranges,"",%progbits
 8880              	.Ldebug_ranges0:
 8881 0000 00000000 		.4byte	.LFB63
 8882 0004 4C000000 		.4byte	.LFE63
 8883 0008 00000000 		.4byte	.LFB64
 8884 000c 4C000000 		.4byte	.LFE64
 8885 0010 00000000 		.4byte	.LFB65
 8886 0014 4E000000 		.4byte	.LFE65
 8887 0018 00000000 		.4byte	.LFB66
 8888 001c 62000000 		.4byte	.LFE66
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 179


 8889 0020 00000000 		.4byte	.LFB67
 8890 0024 14000000 		.4byte	.LFE67
 8891 0028 00000000 		.4byte	.LFB68
 8892 002c 54000000 		.4byte	.LFE68
 8893 0030 00000000 		.4byte	.LFB69
 8894 0034 50000000 		.4byte	.LFE69
 8895 0038 00000000 		.4byte	.LFB70
 8896 003c 56000000 		.4byte	.LFE70
 8897 0040 00000000 		.4byte	.LFB71
 8898 0044 74000000 		.4byte	.LFE71
 8899 0048 00000000 		.4byte	.LFB72
 8900 004c B0000000 		.4byte	.LFE72
 8901 0050 00000000 		.4byte	.LFB73
 8902 0054 20010000 		.4byte	.LFE73
 8903 0058 00000000 		.4byte	.LFB74
 8904 005c 9E000000 		.4byte	.LFE74
 8905 0060 00000000 		.4byte	.LFB75
 8906 0064 58000000 		.4byte	.LFE75
 8907 0068 00000000 		.4byte	.LFB76
 8908 006c 34000000 		.4byte	.LFE76
 8909 0070 00000000 		.4byte	.LFB77
 8910 0074 4C010000 		.4byte	.LFE77
 8911 0078 00000000 		.4byte	.LFB78
 8912 007c 80000000 		.4byte	.LFE78
 8913 0080 00000000 		.4byte	.LFB79
 8914 0084 6C000000 		.4byte	.LFE79
 8915 0088 00000000 		.4byte	.LFB80
 8916 008c 54040000 		.4byte	.LFE80
 8917 0090 00000000 		.4byte	.LFB81
 8918 0094 30000000 		.4byte	.LFE81
 8919 0098 00000000 		.4byte	.LFB82
 8920 009c 18000000 		.4byte	.LFE82
 8921 00a0 00000000 		.4byte	.LFB83
 8922 00a4 68020000 		.4byte	.LFE83
 8923 00a8 00000000 		.4byte	.LFB84
 8924 00ac 24000000 		.4byte	.LFE84
 8925 00b0 00000000 		.4byte	.LFB85
 8926 00b4 E4000000 		.4byte	.LFE85
 8927 00b8 00000000 		.4byte	.LFB86
 8928 00bc B8010000 		.4byte	.LFE86
 8929 00c0 00000000 		.4byte	.LFB87
 8930 00c4 78000000 		.4byte	.LFE87
 8931 00c8 00000000 		.4byte	.LFB88
 8932 00cc 78000000 		.4byte	.LFE88
 8933 00d0 00000000 		.4byte	.LFB89
 8934 00d4 B0000000 		.4byte	.LFE89
 8935 00d8 00000000 		.4byte	.LFB90
 8936 00dc C0000000 		.4byte	.LFE90
 8937 00e0 00000000 		.4byte	.LFB91
 8938 00e4 E8000000 		.4byte	.LFE91
 8939 00e8 00000000 		.4byte	.LFB92
 8940 00ec 9C010000 		.4byte	.LFE92
 8941 00f0 00000000 		.4byte	.LFB93
 8942 00f4 2A000000 		.4byte	.LFE93
 8943 00f8 00000000 		.4byte	.LFB94
 8944 00fc 2A000000 		.4byte	.LFE94
 8945 0100 00000000 		.4byte	.LFB95
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 180


 8946 0104 16000000 		.4byte	.LFE95
 8947 0108 00000000 		.4byte	.LFB96
 8948 010c 12000000 		.4byte	.LFE96
 8949 0110 00000000 		.4byte	.LFB97
 8950 0114 CC000000 		.4byte	.LFE97
 8951 0118 00000000 		.4byte	.LFB98
 8952 011c 52000000 		.4byte	.LFE98
 8953 0120 00000000 		.4byte	.LFB99
 8954 0124 2C000000 		.4byte	.LFE99
 8955 0128 00000000 		.4byte	.LFB100
 8956 012c 14000000 		.4byte	.LFE100
 8957 0130 00000000 		.4byte	.LFB101
 8958 0134 CC000000 		.4byte	.LFE101
 8959 0138 00000000 		.4byte	.LFB102
 8960 013c 6C000000 		.4byte	.LFE102
 8961 0140 00000000 		.4byte	0
 8962 0144 00000000 		.4byte	0
 8963              		.section	.debug_line,"",%progbits
 8964              	.Ldebug_line0:
 8965 0000 B6090000 		.section	.debug_str,"MS",%progbits,1
 8965      0200A402 
 8965      00000201 
 8965      FB0E0D00 
 8965      01010101 
 8966              	.LASF196:
 8967 0000 64697374 		.ascii	"distance\000"
 8967      616E6365 
 8967      00
 8968              	.LASF174:
 8969 0009 6D617076 		.ascii	"mapval\000"
 8969      616C00
 8970              	.LASF193:
 8971 0010 72656164 		.ascii	"reading\000"
 8971      696E6700 
 8972              	.LASF218:
 8973 0018 636F7272 		.ascii	"correctSpeed\000"
 8973      65637453 
 8973      70656564 
 8973      00
 8974              	.LASF190:
 8975 0025 626C6F63 		.ascii	"blockAndWait\000"
 8975      6B416E64 
 8975      57616974 
 8975      00
 8976              	.LASF230:
 8977 0032 7072696E 		.ascii	"printSingleCommandUSB\000"
 8977      7453696E 
 8977      676C6543 
 8977      6F6D6D61 
 8977      6E645553 
 8978              	.LASF37:
 8979 0048 5F6F6E5F 		.ascii	"_on_exit_args\000"
 8979      65786974 
 8979      5F617267 
 8979      7300
 8980              	.LASF105:
 8981 0056 5F776374 		.ascii	"_wctomb_state\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 181


 8981      6F6D625F 
 8981      73746174 
 8981      6500
 8982              	.LASF203:
 8983 0064 64656772 		.ascii	"degrees\000"
 8983      65657300 
 8984              	.LASF210:
 8985 006c 616D6F75 		.ascii	"amount\000"
 8985      6E7400
 8986              	.LASF102:
 8987 0073 5F723438 		.ascii	"_r48\000"
 8987      00
 8988              	.LASF107:
 8989 0078 5F736967 		.ascii	"_signal_buf\000"
 8989      6E616C5F 
 8989      62756600 
 8990              	.LASF180:
 8991 0084 70617468 		.ascii	"paths\000"
 8991      7300
 8992              	.LASF256:
 8993 008a 73616D70 		.ascii	"sample_count\000"
 8993      6C655F63 
 8993      6F756E74 
 8993      00
 8994              	.LASF8:
 8995 0097 756E7369 		.ascii	"unsigned int\000"
 8995      676E6564 
 8995      20696E74 
 8995      00
 8996              	.LASF168:
 8997 00a4 6E657874 		.ascii	"next\000"
 8997      00
 8998              	.LASF150:
 8999 00a9 61707065 		.ascii	"appendArray\000"
 8999      6E644172 
 8999      72617900 
 9000              	.LASF181:
 9001 00b5 454E434F 		.ascii	"ENCODER_ISR\000"
 9001      4445525F 
 9001      49535200 
 9002              	.LASF252:
 9003 00c1 666F6F64 		.ascii	"food_list\000"
 9003      5F6C6973 
 9003      7400
 9004              	.LASF51:
 9005 00cb 5F6C6266 		.ascii	"_lbfsize\000"
 9005      73697A65 
 9005      00
 9006              	.LASF49:
 9007 00d4 5F666C61 		.ascii	"_flags\000"
 9007      677300
 9008              	.LASF128:
 9009 00db 696E6465 		.ascii	"index\000"
 9009      7800
 9010              	.LASF9:
 9011 00e1 5F5F696E 		.ascii	"__int32_t\000"
 9011      7433325F 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 182


 9011      7400
 9012              	.LASF122:
 9013 00eb 696E7431 		.ascii	"int16\000"
 9013      3600
 9014              	.LASF66:
 9015 00f1 5F657272 		.ascii	"_errno\000"
 9015      6E6F00
 9016              	.LASF212:
 9017 00f8 6368616E 		.ascii	"changeRightWheelSpeed\000"
 9017      67655269 
 9017      67687457 
 9017      6865656C 
 9017      53706565 
 9018              	.LASF10:
 9019 010e 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T\000"
 9019      4B5F5245 
 9019      43555253 
 9019      4956455F 
 9019      5400
 9020              	.LASF199:
 9021 0120 70726576 		.ascii	"prevCountM1\000"
 9021      436F756E 
 9021      744D3100 
 9022              	.LASF53:
 9023 012c 5F726561 		.ascii	"_read\000"
 9023      6400
 9024              	.LASF140:
 9025 0132 67325F78 		.ascii	"g2_xpos\000"
 9025      706F7300 
 9026              	.LASF109:
 9027 013a 5F6D6272 		.ascii	"_mbrlen_state\000"
 9027      6C656E5F 
 9027      73746174 
 9027      6500
 9028              	.LASF224:
 9029 0148 636F7272 		.ascii	"correction\000"
 9029      65637469 
 9029      6F6E00
 9030              	.LASF205:
 9031 0153 64697374 		.ascii	"distance_turned\000"
 9031      616E6365 
 9031      5F747572 
 9031      6E656400 
 9032              	.LASF82:
 9033 0163 5F6E6577 		.ascii	"_new\000"
 9033      00
 9034              	.LASF170:
 9035 0168 6E657874 		.ascii	"next_orientation\000"
 9035      5F6F7269 
 9035      656E7461 
 9035      74696F6E 
 9035      00
 9036              	.LASF68:
 9037 0179 5F737464 		.ascii	"_stdout\000"
 9037      6F757400 
 9038              	.LASF12:
 9039 0181 5F66706F 		.ascii	"_fpos_t\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 183


 9039      735F7400 
 9040              	.LASF44:
 9041 0189 5F666E73 		.ascii	"_fns\000"
 9041      00
 9042              	.LASF52:
 9043 018e 5F636F6F 		.ascii	"_cookie\000"
 9043      6B696500 
 9044              	.LASF206:
 9045 0196 73686172 		.ascii	"sharpTurnLeft\000"
 9045      70547572 
 9045      6E4C6566 
 9045      7400
 9046              	.LASF246:
 9047 01a4 666C6167 		.ascii	"flag_rf_transmission_active\000"
 9047      5F72665F 
 9047      7472616E 
 9047      736D6973 
 9047      73696F6E 
 9048              	.LASF26:
 9049 01c0 5F426967 		.ascii	"_Bigint\000"
 9049      696E7400 
 9050              	.LASF160:
 9051 01c8 75706461 		.ascii	"updateMapWithPath\000"
 9051      74654D61 
 9051      70576974 
 9051      68506174 
 9051      6800
 9052              	.LASF119:
 9053 01da 75696E74 		.ascii	"uint8\000"
 9053      3800
 9054              	.LASF34:
 9055 01e0 5F5F746D 		.ascii	"__tm_wday\000"
 9055      5F776461 
 9055      7900
 9056              	.LASF228:
 9057 01ea 75736250 		.ascii	"usbPutString\000"
 9057      75745374 
 9057      72696E67 
 9057      00
 9058              	.LASF76:
 9059 01f7 5F726573 		.ascii	"_result\000"
 9059      756C7400 
 9060              	.LASF30:
 9061 01ff 5F5F746D 		.ascii	"__tm_hour\000"
 9061      5F686F75 
 9061      7200
 9062              	.LASF143:
 9063 0209 67325F64 		.ascii	"g2_direction\000"
 9063      69726563 
 9063      74696F6E 
 9063      00
 9064              	.LASF17:
 9065 0216 5F5F636F 		.ascii	"__count\000"
 9065      756E7400 
 9066              	.LASF124:
 9067 021e 666C6F61 		.ascii	"float\000"
 9067      7400
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 184


 9068              	.LASF225:
 9069 0224 73657457 		.ascii	"setWheelDirection\000"
 9069      6865656C 
 9069      44697265 
 9069      6374696F 
 9069      6E00
 9070              	.LASF29:
 9071 0236 5F5F746D 		.ascii	"__tm_min\000"
 9071      5F6D696E 
 9071      00
 9072              	.LASF232:
 9073 023f 5F696D70 		.ascii	"_impure_ptr\000"
 9073      7572655F 
 9073      70747200 
 9074              	.LASF123:
 9075 024b 696E7433 		.ascii	"int32\000"
 9075      3200
 9076              	.LASF115:
 9077 0251 5F6E6578 		.ascii	"_nextf\000"
 9077      746600
 9078              	.LASF209:
 9079 0258 6368616E 		.ascii	"changeLeftWheelSpeed\000"
 9079      67654C65 
 9079      66745768 
 9079      65656C53 
 9079      70656564 
 9080              	.LASF254:
 9081 026d 73656E73 		.ascii	"sensor_readings\000"
 9081      6F725F72 
 9081      65616469 
 9081      6E677300 
 9082              	.LASF92:
 9083 027d 5F72616E 		.ascii	"_rand48\000"
 9083      64343800 
 9084              	.LASF77:
 9085 0285 5F726573 		.ascii	"_result_k\000"
 9085      756C745F 
 9085      6B00
 9086              	.LASF198:
 9087 028f 7475726E 		.ascii	"turnLeft\000"
 9087      4C656674 
 9087      00
 9088              	.LASF7:
 9089 0298 6C6F6E67 		.ascii	"long long unsigned int\000"
 9089      206C6F6E 
 9089      6720756E 
 9089      7369676E 
 9089      65642069 
 9090              	.LASF98:
 9091 02af 5F617363 		.ascii	"_asctime_buf\000"
 9091      74696D65 
 9091      5F627566 
 9091      00
 9092              	.LASF213:
 9093 02bc 73746172 		.ascii	"startWheels\000"
 9093      74576865 
 9093      656C7300 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 185


 9094              	.LASF48:
 9095 02c8 5F5F7346 		.ascii	"__sFILE\000"
 9095      494C4500 
 9096              	.LASF25:
 9097 02d0 5F776473 		.ascii	"_wds\000"
 9097      00
 9098              	.LASF243:
 9099 02d5 666C6167 		.ascii	"flag_packet\000"
 9099      5F706163 
 9099      6B657400 
 9100              	.LASF88:
 9101 02e1 5F5F4649 		.ascii	"__FILE\000"
 9101      4C4500
 9102              	.LASF147:
 9103 02e8 61727231 		.ascii	"arr1\000"
 9103      00
 9104              	.LASF148:
 9105 02ed 61727232 		.ascii	"arr2\000"
 9105      00
 9106              	.LASF60:
 9107 02f2 5F6F6666 		.ascii	"_offset\000"
 9107      73657400 
 9108              	.LASF191:
 9109 02fa 75706461 		.ascii	"updateSensorValues\000"
 9109      74655365 
 9109      6E736F72 
 9109      56616C75 
 9109      657300
 9110              	.LASF149:
 9111 030d 72657665 		.ascii	"reverseRoute\000"
 9111      72736552 
 9111      6F757465 
 9111      00
 9112              	.LASF173:
 9113 031a 6765744E 		.ascii	"getNumOfSurroundingPoints\000"
 9113      756D4F66 
 9113      53757272 
 9113      6F756E64 
 9113      696E6750 
 9114              	.LASF71:
 9115 0334 5F656D65 		.ascii	"_emergency\000"
 9115      7267656E 
 9115      637900
 9116              	.LASF239:
 9117 033f 666C6167 		.ascii	"flag_ts_update\000"
 9117      5F74735F 
 9117      75706461 
 9117      746500
 9118              	.LASF192:
 9119 034e 62756666 		.ascii	"buff\000"
 9119      00
 9120              	.LASF238:
 9121 0353 666C6167 		.ascii	"flag_ts_enc\000"
 9121      5F74735F 
 9121      656E6300 
 9122              	.LASF152:
 9123 035f 61646469 		.ascii	"addition\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 186


 9123      74696F6E 
 9123      00
 9124              	.LASF255:
 9125 0368 6164635F 		.ascii	"adc_readings\000"
 9125      72656164 
 9125      696E6773 
 9125      00
 9126              	.LASF28:
 9127 0375 5F5F746D 		.ascii	"__tm_sec\000"
 9127      5F736563 
 9127      00
 9128              	.LASF221:
 9129 037e 64657369 		.ascii	"desired_count\000"
 9129      7265645F 
 9129      636F756E 
 9129      7400
 9130              	.LASF35:
 9131 038c 5F5F746D 		.ascii	"__tm_yday\000"
 9131      5F796461 
 9131      7900
 9132              	.LASF70:
 9133 0396 5F696E63 		.ascii	"_inc\000"
 9133      00
 9134              	.LASF43:
 9135 039b 5F696E64 		.ascii	"_ind\000"
 9135      00
 9136              	.LASF236:
 9137 03a0 74735F73 		.ascii	"ts_speed\000"
 9137      70656564 
 9137      00
 9138              	.LASF157:
 9139 03a9 7072696E 		.ascii	"printCommands\000"
 9139      74436F6D 
 9139      6D616E64 
 9139      7300
 9140              	.LASF22:
 9141 03b7 5F6E6578 		.ascii	"_next\000"
 9141      7400
 9142              	.LASF111:
 9143 03bd 5F6D6273 		.ascii	"_mbsrtowcs_state\000"
 9143      72746F77 
 9143      63735F73 
 9143      74617465 
 9143      00
 9144              	.LASF153:
 9145 03ce 70617468 		.ascii	"path\000"
 9145      00
 9146              	.LASF162:
 9147 03d3 6765744D 		.ascii	"getMapValAtPoint\000"
 9147      61705661 
 9147      6C417450 
 9147      6F696E74 
 9147      00
 9148              	.LASF185:
 9149 03e4 6C656674 		.ascii	"left_wheel_count\000"
 9149      5F776865 
 9149      656C5F63 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 187


 9149      6F756E74 
 9149      00
 9150              	.LASF18:
 9151 03f5 5F5F7661 		.ascii	"__value\000"
 9151      6C756500 
 9152              	.LASF200:
 9153 03fd 70726576 		.ascii	"prevCountM2\000"
 9153      436F756E 
 9153      744D3200 
 9154              	.LASF78:
 9155 0409 5F703573 		.ascii	"_p5s\000"
 9155      00
 9156              	.LASF130:
 9157 040e 726F626F 		.ascii	"robot_ypos\000"
 9157      745F7970 
 9157      6F7300
 9158              	.LASF220:
 9159 0419 636F756E 		.ascii	"count\000"
 9159      7400
 9160              	.LASF237:
 9161 041f 74735F64 		.ascii	"ts_display\000"
 9161      6973706C 
 9161      617900
 9162              	.LASF113:
 9163 042a 5F776373 		.ascii	"_wcsrtombs_state\000"
 9163      72746F6D 
 9163      62735F73 
 9163      74617465 
 9163      00
 9164              	.LASF103:
 9165 043b 5F6D626C 		.ascii	"_mblen_state\000"
 9165      656E5F73 
 9165      74617465 
 9165      00
 9166              	.LASF179:
 9167 0448 66696E69 		.ascii	"finish\000"
 9167      736800
 9168              	.LASF87:
 9169 044f 63686172 		.ascii	"char\000"
 9169      00
 9170              	.LASF250:
 9171 0454 75736242 		.ascii	"usbBuffer\000"
 9171      75666665 
 9171      7200
 9172              	.LASF31:
 9173 045e 5F5F746D 		.ascii	"__tm_mday\000"
 9173      5F6D6461 
 9173      7900
 9174              	.LASF84:
 9175 0468 5F736967 		.ascii	"_sig_func\000"
 9175      5F66756E 
 9175      6300
 9176              	.LASF110:
 9177 0472 5F6D6272 		.ascii	"_mbrtowc_state\000"
 9177      746F7763 
 9177      5F737461 
 9177      746500
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 188


 9178              	.LASF83:
 9179 0481 5F617465 		.ascii	"_atexit0\000"
 9179      78697430 
 9179      00
 9180              	.LASF201:
 9181 048a 7475726E 		.ascii	"turnRight\000"
 9181      52696768 
 9181      7400
 9182              	.LASF120:
 9183 0494 75696E74 		.ascii	"uint16\000"
 9183      313600
 9184              	.LASF20:
 9185 049b 5F666C6F 		.ascii	"_flock_t\000"
 9185      636B5F74 
 9185      00
 9186              	.LASF121:
 9187 04a4 696E7438 		.ascii	"int8\000"
 9187      00
 9188              	.LASF139:
 9189 04a9 67315F64 		.ascii	"g1_direction\000"
 9189      69726563 
 9189      74696F6E 
 9189      00
 9190              	.LASF14:
 9191 04b6 5F5F7763 		.ascii	"__wch\000"
 9191      6800
 9192              	.LASF91:
 9193 04bc 5F696F62 		.ascii	"_iobs\000"
 9193      7300
 9194              	.LASF253:
 9195 04c2 6164635F 		.ascii	"adc_flag\000"
 9195      666C6167 
 9195      00
 9196              	.LASF197:
 9197 04cb 64657369 		.ascii	"desired_distance\000"
 9197      7265645F 
 9197      64697374 
 9197      616E6365 
 9197      00
 9198              	.LASF56:
 9199 04dc 5F636C6F 		.ascii	"_close\000"
 9199      736500
 9200              	.LASF74:
 9201 04e3 5F5F7364 		.ascii	"__sdidinit\000"
 9201      6964696E 
 9201      697400
 9202              	.LASF217:
 9203 04ee 6D325F64 		.ascii	"m2_dist\000"
 9203      69737400 
 9204              	.LASF227:
 9205 04f6 72696768 		.ascii	"rightIsForward\000"
 9205      74497346 
 9205      6F727761 
 9205      726400
 9206              	.LASF214:
 9207 0505 73746F70 		.ascii	"stopWheels\000"
 9207      57686565 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 189


 9207      6C7300
 9208              	.LASF67:
 9209 0510 5F737464 		.ascii	"_stdin\000"
 9209      696E00
 9210              	.LASF100:
 9211 0517 5F67616D 		.ascii	"_gamma_signgam\000"
 9211      6D615F73 
 9211      69676E67 
 9211      616D00
 9212              	.LASF163:
 9213 0526 6D61726B 		.ascii	"markPointAsVisited\000"
 9213      506F696E 
 9213      74417356 
 9213      69736974 
 9213      656400
 9214              	.LASF6:
 9215 0539 6C6F6E67 		.ascii	"long long int\000"
 9215      206C6F6E 
 9215      6720696E 
 9215      7400
 9216              	.LASF136:
 9217 0547 67315F78 		.ascii	"g1_xpos\000"
 9217      706F7300 
 9218              	.LASF46:
 9219 054f 5F626173 		.ascii	"_base\000"
 9219      6500
 9220              	.LASF79:
 9221 0555 5F667265 		.ascii	"_freelist\000"
 9221      656C6973 
 9221      7400
 9222              	.LASF94:
 9223 055f 5F6D756C 		.ascii	"_mult\000"
 9223      7400
 9224              	.LASF21:
 9225 0565 5F5F554C 		.ascii	"__ULong\000"
 9225      6F6E6700 
 9226              	.LASF112:
 9227 056d 5F776372 		.ascii	"_wcrtomb_state\000"
 9227      746F6D62 
 9227      5F737461 
 9227      746500
 9228              	.LASF247:
 9229 057c 64697370 		.ascii	"displaystring\000"
 9229      6C617973 
 9229      7472696E 
 9229      6700
 9230              	.LASF166:
 9231 058a 73747261 		.ascii	"straight_count\000"
 9231      69676874 
 9231      5F636F75 
 9231      6E7400
 9232              	.LASF50:
 9233 0599 5F66696C 		.ascii	"_file\000"
 9233      6500
 9234              	.LASF208:
 9235 059f 75547572 		.ascii	"uTurn\000"
 9235      6E00
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 190


 9236              	.LASF175:
 9237 05a5 63686563 		.ascii	"checkPath\000"
 9237      6B506174 
 9237      6800
 9238              	.LASF204:
 9239 05af 64697374 		.ascii	"distance_to_turn\000"
 9239      616E6365 
 9239      5F746F5F 
 9239      7475726E 
 9239      00
 9240              	.LASF194:
 9241 05c0 676F5374 		.ascii	"goStraightForBlock\000"
 9241      72616967 
 9241      6874466F 
 9241      72426C6F 
 9241      636B00
 9242              	.LASF260:
 9243 05d3 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 9243      4320342E 
 9243      392E3320 
 9243      32303135 
 9243      30333033 
 9244 0606 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 9244      20726576 
 9244      6973696F 
 9244      6E203232 
 9244      31323230 
 9245 0639 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 9245      66756E63 
 9245      74696F6E 
 9245      2D736563 
 9245      74696F6E 
 9246              	.LASF142:
 9247 0661 67325F73 		.ascii	"g2_speed\000"
 9247      70656564 
 9247      00
 9248              	.LASF133:
 9249 066a 67305F79 		.ascii	"g0_ypos\000"
 9249      706F7300 
 9250              	.LASF171:
 9251 0672 636D645F 		.ascii	"cmd_length\000"
 9251      6C656E67 
 9251      746800
 9252              	.LASF75:
 9253 067d 5F5F636C 		.ascii	"__cleanup\000"
 9253      65616E75 
 9253      7000
 9254              	.LASF19:
 9255 0687 5F6D6273 		.ascii	"_mbstate_t\000"
 9255      74617465 
 9255      5F7400
 9256              	.LASF207:
 9257 0692 73686172 		.ascii	"sharpTurnRight\000"
 9257      70547572 
 9257      6E526967 
 9257      687400
 9258              	.LASF145:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 191


 9259 06a1 73697A65 		.ascii	"size\000"
 9259      00
 9260              	.LASF211:
 9261 06a6 6E65775F 		.ascii	"new_value\000"
 9261      76616C75 
 9261      6500
 9262              	.LASF231:
 9263 06b0 636F6D6D 		.ascii	"command\000"
 9263      616E6400 
 9264              	.LASF36:
 9265 06b8 5F5F746D 		.ascii	"__tm_isdst\000"
 9265      5F697364 
 9265      737400
 9266              	.LASF126:
 9267 06c3 64617461 		.ascii	"data_main\000"
 9267      5F6D6169 
 9267      6E00
 9268              	.LASF189:
 9269 06cd 67657456 		.ascii	"getValForChannel\000"
 9269      616C466F 
 9269      72436861 
 9269      6E6E656C 
 9269      00
 9270              	.LASF178:
 9271 06de 73746172 		.ascii	"start\000"
 9271      7400
 9272              	.LASF172:
 9273 06e4 64696666 		.ascii	"diffMod4\000"
 9273      4D6F6434 
 9273      00
 9274              	.LASF127:
 9275 06ed 72737369 		.ascii	"rssi\000"
 9275      00
 9276              	.LASF114:
 9277 06f2 5F685F65 		.ascii	"_h_errno\000"
 9277      72726E6F 
 9277      00
 9278              	.LASF135:
 9279 06fb 67305F64 		.ascii	"g0_direction\000"
 9279      69726563 
 9279      74696F6E 
 9279      00
 9280              	.LASF164:
 9281 0708 636F6E76 		.ascii	"convertCoordinatesToCommands\000"
 9281      65727443 
 9281      6F6F7264 
 9281      696E6174 
 9281      6573546F 
 9282              	.LASF188:
 9283 0725 6E756D5F 		.ascii	"num_coords\000"
 9283      636F6F72 
 9283      647300
 9284              	.LASF158:
 9285 0730 636F6D6D 		.ascii	"commands\000"
 9285      616E6473 
 9285      00
 9286              	.LASF32:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 192


 9287 0739 5F5F746D 		.ascii	"__tm_mon\000"
 9287      5F6D6F6E 
 9287      00
 9288              	.LASF187:
 9289 0742 64697265 		.ascii	"directions\000"
 9289      6374696F 
 9289      6E7300
 9290              	.LASF156:
 9291 074d 7072696E 		.ascii	"printPath\000"
 9291      74506174 
 9291      6800
 9292              	.LASF161:
 9293 0757 70617468 		.ascii	"path_length\000"
 9293      5F6C656E 
 9293      67746800 
 9294              	.LASF183:
 9295 0763 6D61696E 		.ascii	"main\000"
 9295      00
 9296              	.LASF54:
 9297 0768 5F777269 		.ascii	"_write\000"
 9297      746500
 9298              	.LASF240:
 9299 076f 666C6167 		.ascii	"flag_ts_speed\000"
 9299      5F74735F 
 9299      73706565 
 9299      6400
 9300              	.LASF245:
 9301 077d 64617461 		.ascii	"dataready_flag\000"
 9301      72656164 
 9301      795F666C 
 9301      616700
 9302              	.LASF42:
 9303 078c 5F617465 		.ascii	"_atexit\000"
 9303      78697400 
 9304              	.LASF63:
 9305 0794 5F6D6273 		.ascii	"_mbstate\000"
 9305      74617465 
 9305      00
 9306              	.LASF242:
 9307 079d 666C6167 		.ascii	"flag_rx\000"
 9307      5F727800 
 9308              	.LASF138:
 9309 07a5 67315F73 		.ascii	"g1_speed\000"
 9309      70656564 
 9309      00
 9310              	.LASF2:
 9311 07ae 73686F72 		.ascii	"short int\000"
 9311      7420696E 
 9311      7400
 9312              	.LASF258:
 9313 07b8 636F756E 		.ascii	"countM1\000"
 9313      744D3100 
 9314              	.LASF259:
 9315 07c0 636F756E 		.ascii	"countM2\000"
 9315      744D3200 
 9316              	.LASF202:
 9317 07c8 7475726E 		.ascii	"turnForDegrees\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 193


 9317      466F7244 
 9317      65677265 
 9317      657300
 9318              	.LASF4:
 9319 07d7 6C6F6E67 		.ascii	"long int\000"
 9319      20696E74 
 9319      00
 9320              	.LASF233:
 9321 07e0 49544D5F 		.ascii	"ITM_RxBuffer\000"
 9321      52784275 
 9321      66666572 
 9321      00
 9322              	.LASF165:
 9323 07ed 636F6E63 		.ascii	"concurrent_path\000"
 9323      75727265 
 9323      6E745F70 
 9323      61746800 
 9324              	.LASF177:
 9325 07fd 6C656E67 		.ascii	"length\000"
 9325      746800
 9326              	.LASF235:
 9327 0804 74735F75 		.ascii	"ts_update\000"
 9327      70646174 
 9327      6500
 9328              	.LASF86:
 9329 080e 5F5F7366 		.ascii	"__sf\000"
 9329      00
 9330              	.LASF24:
 9331 0813 5F736967 		.ascii	"_sign\000"
 9331      6E00
 9332              	.LASF73:
 9333 0819 5F637572 		.ascii	"_current_locale\000"
 9333      72656E74 
 9333      5F6C6F63 
 9333      616C6500 
 9334              	.LASF154:
 9335 0829 6973456D 		.ascii	"isEmpty\000"
 9335      70747900 
 9336              	.LASF141:
 9337 0831 67325F79 		.ascii	"g2_ypos\000"
 9337      706F7300 
 9338              	.LASF61:
 9339 0839 5F646174 		.ascii	"_data\000"
 9339      6100
 9340              	.LASF15:
 9341 083f 5F5F7763 		.ascii	"__wchb\000"
 9341      686200
 9342              	.LASF184:
 9343 0846 72696768 		.ascii	"right_wheel_count\000"
 9343      745F7768 
 9343      65656C5F 
 9343      636F756E 
 9343      7400
 9344              	.LASF33:
 9345 0858 5F5F746D 		.ascii	"__tm_year\000"
 9345      5F796561 
 9345      7200
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 194


 9346              	.LASF99:
 9347 0862 5F6C6F63 		.ascii	"_localtime_buf\000"
 9347      616C7469 
 9347      6D655F62 
 9347      756600
 9348              	.LASF117:
 9349 0871 5F756E75 		.ascii	"_unused\000"
 9349      73656400 
 9350              	.LASF151:
 9351 0879 736F7572 		.ascii	"source\000"
 9351      636500
 9352              	.LASF262:
 9353 0880 5C5C6669 		.ascii	"\\\\files.auckland.ac.nz\\myhome\\Desktop\\Flik\\CS"
 9353      6C65732E 
 9353      6175636B 
 9353      6C616E64 
 9353      2E61632E 
 9354 08ad 3330315F 		.ascii	"301_Class.cyprj.Archive01-20190825T234813Z-001\\CS3"
 9354      436C6173 
 9354      732E6379 
 9354      70726A2E 
 9354      41726368 
 9355 08df 30315F43 		.ascii	"01_Class.cyprj.Archive01\\CS301_Class.cydsn\000"
 9355      6C617373 
 9355      2E637970 
 9355      726A2E41 
 9355      72636869 
 9356              	.LASF80:
 9357 090a 5F637674 		.ascii	"_cvtlen\000"
 9357      6C656E00 
 9358              	.LASF23:
 9359 0912 5F6D6178 		.ascii	"_maxwds\000"
 9359      77647300 
 9360              	.LASF106:
 9361 091a 5F6C3634 		.ascii	"_l64a_buf\000"
 9361      615F6275 
 9361      6600
 9362              	.LASF72:
 9363 0924 5F637572 		.ascii	"_current_category\000"
 9363      72656E74 
 9363      5F636174 
 9363      65676F72 
 9363      7900
 9364              	.LASF137:
 9365 0936 67315F79 		.ascii	"g1_ypos\000"
 9365      706F7300 
 9366              	.LASF146:
 9367 093e 6973526F 		.ascii	"isRouteEqual\000"
 9367      75746545 
 9367      7175616C 
 9367      00
 9368              	.LASF215:
 9369 094b 67657444 		.ascii	"getDistance\000"
 9369      69737461 
 9369      6E636500 
 9370              	.LASF59:
 9371 0957 5F626C6B 		.ascii	"_blksize\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 195


 9371      73697A65 
 9371      00
 9372              	.LASF27:
 9373 0960 5F5F746D 		.ascii	"__tm\000"
 9373      00
 9374              	.LASF62:
 9375 0965 5F6C6F63 		.ascii	"_lock\000"
 9375      6B00
 9376              	.LASF16:
 9377 096b 73697A65 		.ascii	"sizetype\000"
 9377      74797065 
 9377      00
 9378              	.LASF223:
 9379 0974 64696666 		.ascii	"diff_count\000"
 9379      5F636F75 
 9379      6E7400
 9380              	.LASF244:
 9381 097f 666C6167 		.ascii	"flag_KB_string\000"
 9381      5F4B425F 
 9381      73747269 
 9381      6E6700
 9382              	.LASF5:
 9383 098e 6C6F6E67 		.ascii	"long unsigned int\000"
 9383      20756E73 
 9383      69676E65 
 9383      6420696E 
 9383      7400
 9384              	.LASF219:
 9385 09a0 70726576 		.ascii	"prevCount\000"
 9385      436F756E 
 9385      7400
 9386              	.LASF90:
 9387 09aa 5F6E696F 		.ascii	"_niobs\000"
 9387      627300
 9388              	.LASF13:
 9389 09b1 77696E74 		.ascii	"wint_t\000"
 9389      5F7400
 9390              	.LASF118:
 9391 09b8 696E7433 		.ascii	"int32_t\000"
 9391      325F7400 
 9392              	.LASF39:
 9393 09c0 5F64736F 		.ascii	"_dso_handle\000"
 9393      5F68616E 
 9393      646C6500 
 9394              	.LASF129:
 9395 09cc 726F626F 		.ascii	"robot_xpos\000"
 9395      745F7870 
 9395      6F7300
 9396              	.LASF249:
 9397 09d7 656E7472 		.ascii	"entry\000"
 9397      7900
 9398              	.LASF226:
 9399 09dd 6C656674 		.ascii	"leftIsForward\000"
 9399      4973466F 
 9399      72776172 
 9399      6400
 9400              	.LASF81:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 196


 9401 09eb 5F637674 		.ascii	"_cvtbuf\000"
 9401      62756600 
 9402              	.LASF1:
 9403 09f3 756E7369 		.ascii	"unsigned char\000"
 9403      676E6564 
 9403      20636861 
 9403      7200
 9404              	.LASF216:
 9405 0a01 6D315F64 		.ascii	"m1_dist\000"
 9405      69737400 
 9406              	.LASF155:
 9407 0a09 6973506F 		.ascii	"isPointOnPath\000"
 9407      696E744F 
 9407      6E506174 
 9407      6800
 9408              	.LASF248:
 9409 0a17 6C696E65 		.ascii	"line\000"
 9409      00
 9410              	.LASF159:
 9411 0a1c 7072696E 		.ascii	"printMap\000"
 9411      744D6170 
 9411      00
 9412              	.LASF167:
 9413 0a25 63757272 		.ascii	"current\000"
 9413      656E7400 
 9414              	.LASF108:
 9415 0a2d 5F676574 		.ascii	"_getdate_err\000"
 9415      64617465 
 9415      5F657272 
 9415      00
 9416              	.LASF257:
 9417 0a3a 74696D65 		.ascii	"timer_flag\000"
 9417      725F666C 
 9417      616700
 9418              	.LASF95:
 9419 0a45 5F616464 		.ascii	"_add\000"
 9419      00
 9420              	.LASF186:
 9421 0a4a 64697265 		.ascii	"direction_index\000"
 9421      6374696F 
 9421      6E5F696E 
 9421      64657800 
 9422              	.LASF169:
 9423 0a5a 63757272 		.ascii	"current_orientation\000"
 9423      656E745F 
 9423      6F726965 
 9423      6E746174 
 9423      696F6E00 
 9424              	.LASF234:
 9425 0a6e 74735F65 		.ascii	"ts_enc\000"
 9425      6E6300
 9426              	.LASF241:
 9427 0a75 666C6167 		.ascii	"flag_ts_display\000"
 9427      5F74735F 
 9427      64697370 
 9427      6C617900 
 9428              	.LASF45:
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 197


 9429 0a85 5F5F7362 		.ascii	"__sbuf\000"
 9429      756600
 9430              	.LASF182:
 9431 0a8c 4144435F 		.ascii	"ADC_ISR\000"
 9431      49535200 
 9432              	.LASF89:
 9433 0a94 5F676C75 		.ascii	"_glue\000"
 9433      6500
 9434              	.LASF85:
 9435 0a9a 5F5F7367 		.ascii	"__sglue\000"
 9435      6C756500 
 9436              	.LASF97:
 9437 0aa2 5F737472 		.ascii	"_strtok_last\000"
 9437      746F6B5F 
 9437      6C617374 
 9437      00
 9438              	.LASF104:
 9439 0aaf 5F6D6274 		.ascii	"_mbtowc_state\000"
 9439      6F77635F 
 9439      73746174 
 9439      6500
 9440              	.LASF134:
 9441 0abd 67305F73 		.ascii	"g0_speed\000"
 9441      70656564 
 9441      00
 9442              	.LASF38:
 9443 0ac6 5F666E61 		.ascii	"_fnargs\000"
 9443      72677300 
 9444              	.LASF0:
 9445 0ace 7369676E 		.ascii	"signed char\000"
 9445      65642063 
 9445      68617200 
 9446              	.LASF65:
 9447 0ada 5F726565 		.ascii	"_reent\000"
 9447      6E7400
 9448              	.LASF3:
 9449 0ae1 73686F72 		.ascii	"short unsigned int\000"
 9449      7420756E 
 9449      7369676E 
 9449      65642069 
 9449      6E7400
 9450              	.LASF222:
 9451 0af4 69734C65 		.ascii	"isLeftWheel\000"
 9451      66745768 
 9451      65656C00 
 9452              	.LASF131:
 9453 0b00 726F626F 		.ascii	"robot_orientation\000"
 9453      745F6F72 
 9453      69656E74 
 9453      6174696F 
 9453      6E00
 9454              	.LASF144:
 9455 0b12 706F696E 		.ascii	"point\000"
 9455      7400
 9456              	.LASF40:
 9457 0b18 5F666E74 		.ascii	"_fntypes\000"
 9457      79706573 
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 198


 9457      00
 9458              	.LASF47:
 9459 0b21 5F73697A 		.ascii	"_size\000"
 9459      6500
 9460              	.LASF125:
 9461 0b27 646F7562 		.ascii	"double\000"
 9461      6C6500
 9462              	.LASF132:
 9463 0b2e 67305F78 		.ascii	"g0_xpos\000"
 9463      706F7300 
 9464              	.LASF11:
 9465 0b36 5F6F6666 		.ascii	"_off_t\000"
 9465      5F7400
 9466              	.LASF58:
 9467 0b3d 5F6E6275 		.ascii	"_nbuf\000"
 9467      6600
 9468              	.LASF96:
 9469 0b43 5F756E75 		.ascii	"_unused_rand\000"
 9469      7365645F 
 9469      72616E64 
 9469      00
 9470              	.LASF229:
 9471 0b50 7072696E 		.ascii	"printCommandsUSB\000"
 9471      74436F6D 
 9471      6D616E64 
 9471      73555342 
 9471      00
 9472              	.LASF64:
 9473 0b61 5F666C61 		.ascii	"_flags2\000"
 9473      67733200 
 9474              	.LASF41:
 9475 0b69 5F69735F 		.ascii	"_is_cxa\000"
 9475      63786100 
 9476              	.LASF93:
 9477 0b71 5F736565 		.ascii	"_seed\000"
 9477      6400
 9478              	.LASF251:
 9479 0b77 73797374 		.ascii	"system_state\000"
 9479      656D5F73 
 9479      74617465 
 9479      00
 9480              	.LASF101:
 9481 0b84 5F72616E 		.ascii	"_rand_next\000"
 9481      645F6E65 
 9481      787400
 9482              	.LASF55:
 9483 0b8f 5F736565 		.ascii	"_seek\000"
 9483      6B00
 9484              	.LASF176:
 9485 0b95 6E65775F 		.ascii	"new_paths\000"
 9485      70617468 
 9485      7300
 9486              	.LASF69:
 9487 0b9f 5F737464 		.ascii	"_stderr\000"
 9487      65727200 
 9488              	.LASF116:
 9489 0ba7 5F6E6D61 		.ascii	"_nmalloc\000"
ARM GAS  C:\Users\keva419\AppData\Local\Temp\ccMDqr2b.s 			page 199


 9489      6C6C6F63 
 9489      00
 9490              	.LASF57:
 9491 0bb0 5F756275 		.ascii	"_ubuf\000"
 9491      6600
 9492              	.LASF261:
 9493 0bb6 2E5C6D61 		.ascii	".\\main.c\000"
 9493      696E2E63 
 9493      00
 9494              	.LASF195:
 9495 0bbf 64657369 		.ascii	"desired_blocks\000"
 9495      7265645F 
 9495      626C6F63 
 9495      6B7300
 9496              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
